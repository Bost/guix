# SOME DESCRIPTIVE TITLE
# Copyright (C) 2021 the authors of Guix (msgids) and the following authors (msgstr)
# This file is distributed under the same license as the guix manual package.
# Nicolo Balzarotti <nicolo@nixo.xyz>, 2021.
# Nathan <nathan95@live.it>, 2021, 2022.
# Fernandez Alonso Alberto Mario <albialonso7@icloud.com>, 2022.
# Giacomo Leidi <goodoldpaul@autistici.org>, 2023.
# Marco Rimoldi <marco.rimoldi@pm.me>, 2024.
# francesco p lovergine <frankie@fsfe.org>, 2024.
# Florian Pelz <pelzflorian@pelzflorian.de>, 2024, 2025.
# Salvatore Cocuzza <info@salvatorecocuzza.it>, 2025.
msgid ""
msgstr ""
"Project-Id-Version: guix manual checkout\n"
"Report-Msgid-Bugs-To: bug-guix@gnu.org\n"
"POT-Creation-Date: 2025-08-29 03:18+0000\n"
"PO-Revision-Date: 2025-08-25 16:36+0000\n"
"Last-Translator: pelzflorian <pelzflorian@noreply.codeberg.org>\n"
"Language-Team: Italian <https://translate.codeberg.org/projects/guix/documentation-manual/it/>\n"
"Language: it\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 5.12.2\n"

#. #-#-#-#-#  contributing.pot (guix manual checkout)  #-#-#-#-#
#. type: chapter
#. #-#-#-#-#  guix.pot (guix manual checkout)  #-#-#-#-#
#. type: menuentry
#: guix-git/doc/contributing.texi:1 guix-git/doc/contributing.texi:2
#: guix-git/doc/guix.texi:233
#, no-wrap
msgid "Contributing"
msgstr "Contribuire"

#. type: Plain text
#: guix-git/doc/contributing.texi:9
msgid "This project is a cooperative effort, and we need your help to make it grow! Please get in touch with us on @email{guix-devel@@gnu.org} and @code{#guix} on the Libera Chat IRC network.  We welcome ideas, bug reports, patches, and anything that may be helpful to the project.  We particularly welcome help on packaging (@pxref{Packaging Guidelines})."
msgstr "Questo progetto è frutto di un lavoro cooperativo, e abbiamo bisogno del tuo aiuto per farlo crescere! Per favore mettiti in contatto con noi attraverso @email{guix-devel@@gnu.org} e @code{#guix} sulla rete IRC di Libera Chat.  Accogliamo idee, segnalazioni di bug, patch, e qualsiasi cosa possa dare una mano progetto.  È benvenuto in particolare un aiuto nel creare pacchetti (@pxref{Packaging Guidelines})."

#. type: cindex
#: guix-git/doc/contributing.texi:10
#, no-wrap
msgid "code of conduct, of contributors"
msgstr "codice di condotta, dei contributori"

#. type: cindex
#: guix-git/doc/contributing.texi:11
#, no-wrap
msgid "contributor covenant"
msgstr "patto del collaboratore"

#. type: Plain text
#: guix-git/doc/contributing.texi:17
msgid "We want to provide a warm, friendly, and harassment-free environment, so that anyone can contribute to the best of their abilities.  To this end our project uses a ``Contributor Covenant'', which was adapted from @url{https://contributor-covenant.org/}.  You can find a local version in the @file{CODE-OF-CONDUCT} file in the source tree."
msgstr "Vogliamo fornire un ambiente aperto, amichevole e senza molestie, in modo che chiunque possa contribuire al meglio delle proprie capacità.  A questo scopo il nostro progetto usa un ``Patto del collaboratore'', che è stato adattato da @url{https://contributor-covenant.org/}.  Puoi trovare una versione locale nel file @file{CODE-OF-CONDUCT} nell'albero dei sorgenti."

#. type: Plain text
#: guix-git/doc/contributing.texi:21
msgid "Contributors are not required to use their legal name in patches and on-line communication; they can use any name or pseudonym of their choice."
msgstr "I contributori non sono tenuti a usare il loro nome legale nelle patch e nelle comunicazioni on-line; possono usare qualsiasi nome o alias di loro scelta."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:45
#: guix-git/doc/contributing.texi:46
#, no-wrap
msgid "Requirements"
msgstr "Requisiti"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Software needed to build and run Guix."
msgstr "Software necessari per assemblare ed eseguire Guix."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:133
#: guix-git/doc/contributing.texi:134
#, no-wrap
msgid "Building from Git"
msgstr "Costruire da Git"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "The latest and greatest."
msgstr "Il più recente e migliore."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:325
#: guix-git/doc/contributing.texi:326
#, no-wrap
msgid "Running the Test Suite"
msgstr "Eseguire la suite dei test"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Testing Guix."
msgstr "Provare Guix."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:436
#: guix-git/doc/contributing.texi:437
#, no-wrap
msgid "Running Guix Before It Is Installed"
msgstr "Eseguire Guix prima di installarlo"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Hacker tricks."
msgstr "Trucchi da hacker."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:526
#: guix-git/doc/contributing.texi:527
#, no-wrap
msgid "The Perfect Setup"
msgstr "L'impostazione perfetta"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "The right tools."
msgstr "Gli strumenti giusti."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:703
#: guix-git/doc/contributing.texi:704
#, no-wrap
msgid "Alternative Setups"
msgstr "Setup alternativi"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Other possible tools that do the job."
msgstr "Altri possibili strumenti che svolgono lo stesso lavoro."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:780
#: guix-git/doc/contributing.texi:781
#, no-wrap
msgid "Source Tree Structure"
msgstr "Struttura dell'albero dei sorgenti"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Source code guided tour."
msgstr "Tour guidato nel codice sorgente."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:1031
#: guix-git/doc/contributing.texi:1032
#, no-wrap
msgid "Packaging Guidelines"
msgstr "Linee-guida per pacchettizzare"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Growing the distribution."
msgstr "Gli strumenti giusti."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:1831
#: guix-git/doc/contributing.texi:1832
#, no-wrap
msgid "Coding Style"
msgstr "Stile del codice"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Hygiene of the contributor."
msgstr "Igiene del contributore."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:1938
#: guix-git/doc/contributing.texi:1939
#, no-wrap
msgid "Submitting Patches"
msgstr "Invia delle patches"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Share your work."
msgstr "Condividi il tuo lavoro."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:2345
#: guix-git/doc/contributing.texi:2346
#, no-wrap
msgid "Tracking Bugs and Changes"
msgstr "Tracciare bug e modifiche"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Keeping it all organized."
msgstr "Tenere il tutto organizzato."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:2778
#: guix-git/doc/contributing.texi:2779
#, no-wrap
msgid "Teams"
msgstr "Gruppi"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Coordinating efforts."
msgstr "Coordinare gli sforzi."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:2879
#: guix-git/doc/contributing.texi:2880
#, no-wrap
msgid "Making Decisions"
msgstr "Prendere decisioni"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Collectively choosing the way forward."
msgstr "Scegliere collettivamente la strada da seguire."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:2898
#: guix-git/doc/contributing.texi:2899
#, no-wrap
msgid "Commit Access"
msgstr "Acesso commit"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Pushing to the official repository."
msgstr "Pushing sul repository ufficiale."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:3142
#: guix-git/doc/contributing.texi:3143
#, no-wrap
msgid "Reviewing the Work of Others"
msgstr "Commentare il lavoro di altri"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Some guidelines for sharing reviews."
msgstr "Alcune linee-guida per condividere commenti."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:3245
#: guix-git/doc/contributing.texi:3246
#, no-wrap
msgid "Updating the Guix Package"
msgstr "Aggiornamento del pacchetto Guix"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Updating the Guix package definition."
msgstr "Aggiornamento della definizione del pacchetto Guix."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:3282
#: guix-git/doc/contributing.texi:3283
#, no-wrap
msgid "Deprecation Policy"
msgstr "logica di deprecazione"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Commitments and tools for deprecation."
msgstr "Impegni e strumenti per la deprecazione."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:3479
#: guix-git/doc/contributing.texi:3480
#, no-wrap
msgid "Writing Documentation"
msgstr "Scrivere documentazione"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Improving documentation in GNU Guix."
msgstr "Migliorare la documentazione di GNU Guix."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:3523
#: guix-git/doc/contributing.texi:3524
#, no-wrap
msgid "Translating Guix"
msgstr "Tradurre Guix"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Make Guix speak your native language."
msgstr "Fai in modo che Guix parli la tua lingua madre."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:3805
#: guix-git/doc/contributing.texi:3806
#, no-wrap
msgid "Contributing to Guix's Infrastructure"
msgstr "Contribuire all'infrastruttura di Guix"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Make Guix ecosystem work better."
msgstr "Migliorare il funzionamento dell'ecosistema Guix."

#. type: Plain text
#: guix-git/doc/contributing.texi:50
msgid "You can easily hack on Guix itself using Guix and Git, which we use for version control (@pxref{Building from Git})."
msgstr "Puoi facilmente hackerare su Guix stesso usando Guix e Git, che usiamo per il controllo di versione (@pxref{Building from Git})."

#. type: Plain text
#: guix-git/doc/contributing.texi:55
msgid "But when packaging Guix for foreign distros or when bootstrapping on systems without Guix, and if you decide to not just trust and install our readily made binary (@pxref{Binary Installation}), you can download a release version of our reproducible source tarball and read on."
msgstr "Ma quando si pacchettizza Guix per distribuzioni terze o quando si effettua il bootstrap su sistemi senza Guix, e se decidi di non fidarti e installare il nostro binario già pronto (@pxref{Binary Installation}), puoi scaricare una versione di rilascio del nostro tarball sorgente riproducibile e continuare a leggere."

#. type: Plain text
#: guix-git/doc/contributing.texi:60
msgid "This section lists requirements when building Guix from source.  The build procedure for Guix is the same as for other GNU software, and is not covered here.  Please see the files @file{README} and @file{INSTALL} in the Guix source tree for additional details."
msgstr "Questa sezione elenca i requisiti per costruire Guix dai sorgenti. La procedura di compilazione per Guix è la stessa di altri software GNU, e non è trattata qui. Per maggiori dettagli, fare riferimento ai file @file{README} e @file{INSTALL} nell'albero dei sorgenti di Guix."

#. type: cindex
#: guix-git/doc/contributing.texi:61
#, no-wrap
msgid "official website"
msgstr "sito web ufficiale"

#. type: Plain text
#: guix-git/doc/contributing.texi:64
msgid "GNU Guix is available for download from its website at @url{https://guix.gnu.org}."
msgstr "GNU Guix è disponibile per il download dal suo sito web a @url{https://guix.gnu.org}."

#. type: Plain text
#: guix-git/doc/contributing.texi:66
msgid "GNU Guix depends on the following packages:"
msgstr "GNU Guix dipende dai seguenti pacchetti:"

#. type: item
#: guix-git/doc/contributing.texi:68
#, no-wrap
msgid "@url{https://gnu.org/software/guile/, GNU Guile}, version 3.0.x,"
msgstr "@url{https://gnu.org/software/guile/, GNU Guile}, versione 3.0.x,"

#. type: itemize
#: guix-git/doc/contributing.texi:70
msgid "version 3.0.3 or later;"
msgstr "versione 3.0.3 o successiva;"

#. type: item
#: guix-git/doc/contributing.texi:70
#, no-wrap
msgid "@url{https://notabug.org/cwebber/guile-gcrypt, Guile-Gcrypt}, version"
msgstr "@url{https://notabug.org/cwebber/guile-gcrypt, Guile-Gcrypt}, versione"

#. type: itemize
#: guix-git/doc/contributing.texi:72
msgid "0.1.0 or later;"
msgstr "0.1.0 o successiva;"

#. type: itemize
#: guix-git/doc/contributing.texi:78
msgid "@uref{https://gitlab.com/gnutls/guile/, Guile-GnuTLS} (@pxref{Guile Preparations, how to install the GnuTLS bindings for Guile,, gnutls-guile, GnuTLS-Guile})@footnote{The Guile bindings to @uref{https://gnutls.org/, GnuTLS} were distributed as part of GnuTLS until version 3.7.8 included.};"
msgstr "@uref{https://gitlab.com/gnutls/guile/, Guile-GnuTLS} (@pxref{Guile Preparations, how to install the GnuTLS bindings for Guile,, gnutls-guile, GnuTLS-Guile})@footnote{I collegamenti Guile a @uref{https://gnutls.org/, GnuTLS} erano distribuiti come parte di GnuTLS fino alla versione 3.7.8 inclusa.};"

#. type: itemize
#: guix-git/doc/contributing.texi:81
msgid "@uref{https://notabug.org/guile-sqlite3/guile-sqlite3, Guile-SQLite3}, version 0.1.0 or later;"
msgstr "@uref{https://notabug.org/guile-sqlite3/guile-sqlite3, Guile-SQLite3}, versione 0.1.0 o successiva;"

#. type: item
#: guix-git/doc/contributing.texi:81
#, no-wrap
msgid "@uref{https://notabug.org/guile-zlib/guile-zlib, Guile-zlib},"
msgstr "@uref{https://notabug.org/guile-zlib/guile-zlib, Guile-zlib},"

#. type: itemize
#: guix-git/doc/contributing.texi:83
msgid "version 0.1.0 or later;"
msgstr "versione 0.1.0 o successiva;"

#. type: item
#: guix-git/doc/contributing.texi:83
#, no-wrap
msgid "@uref{https://notabug.org/guile-lzlib/guile-lzlib, Guile-lzlib};"
msgstr "@uref{https://notabug.org/guile-lzlib/guile-lzlib, Guile-lzlib};"

#. type: item
#: guix-git/doc/contributing.texi:84
#, no-wrap
msgid "@uref{https://www.nongnu.org/guile-avahi/, Guile-Avahi};"
msgstr "@uref{https://www.nongnu.org/guile-avahi/, Guile-Avahi};"

#. type: itemize
#: guix-git/doc/contributing.texi:88
msgid "@uref{https://gitlab.com/guile-git/guile-git, Guile-Git}, version 0.10.0 or later;"
msgstr "@uref{https://gitlab.com/guile-git/guile-git, Guile-Git}, versione 0.10.0 o successiva;"

#. type: item
#: guix-git/doc/contributing.texi:88
#, no-wrap
msgid "@uref{https://git-scm.com, Git} (yes, both!);"
msgstr "@uref{https://git-scm.com, Git} (sì, entrambi!);"

#. type: item
#: guix-git/doc/contributing.texi:89
#, no-wrap
msgid "@uref{https://github.com/aconchillo/guile-json, Guile-JSON}"
msgstr "@uref{https://github.com/aconchillo/guile-json, Guile-JSON}"

#. type: itemize
#: guix-git/doc/contributing.texi:91
msgid "4.3.0 or later;"
msgstr "4.3.0 o successiva;"

#. type: item
#: guix-git/doc/contributing.texi:91
#, no-wrap
msgid "@url{https://www.gnu.org/software/make/, GNU Make}."
msgstr "@url{https://www.gnu.org/software/make/, GNU Make}."

#. type: Plain text
#: guix-git/doc/contributing.texi:95
msgid "The following dependencies are optional:"
msgstr "Le seguenti dipendenze sono opzionali:"

#. type: itemize
#: guix-git/doc/contributing.texi:103
msgid "Support for build offloading (@pxref{Daemon Offload Setup}) and @command{guix copy} (@pxref{Invoking guix copy}) depends on @uref{https://github.com/artyom-poptsov/guile-ssh, Guile-SSH}, version 0.13.0 or later."
msgstr "Il supporto per il build offloading (@pxref{Daemon Offload Setup}) e @command{guix copy} (@pxref{Invoking guix copy}) dipende da @uref{https://github.com/artyom-poptsov/guile-ssh, Guile-SSH}, versione 0.13.0 o successiva."

#. type: itemize
#: guix-git/doc/contributing.texi:108
msgid "@uref{https://notabug.org/guile-zstd/guile-zstd, Guile-zstd}, for zstd compression and decompression in @command{guix publish} and for substitutes (@pxref{Invoking guix publish})."
msgstr "@uref{https://notabug.org/guile-zstd/guile-zstd, Guile-zstd}, per la compressione e decompressione zstd in @command{guix publish} e per i sostituti (@pxref{Invoking guix publish})."

#. type: itemize
#: guix-git/doc/contributing.texi:112
msgid "@uref{https://ngyro.com/software/guile-semver.html, Guile-Semver} for the @code{crate} importer (@pxref{Invoking guix import})."
msgstr "@uref{https://ngyro.com/software/guile-semver.html, Guile-Semver} per l'importatore @code{crate} (@pxref{Invoking guix import})."

#. type: itemize
#: guix-git/doc/contributing.texi:117
msgid "@uref{https://www.nongnu.org/guile-lib/doc/ref/htmlprag/, Guile-Lib} for the @code{go} importer (@pxref{Invoking guix import}) and for some of the ``updaters'' (@pxref{Invoking guix refresh})."
msgstr "@uref{https://www.nongnu.org/guile-lib/doc/ref/htmlprag/, Guile-Lib} per l'importatore @code{go} (@pxref{Invoking guix import}) e per alcuni degli ``aggiornatori'' (@pxref{Invoking guix refresh})."

#. type: itemize
#: guix-git/doc/contributing.texi:121
msgid "When @url{http://www.bzip.org, libbz2} is available, @command{guix-daemon} can use it to compress build logs."
msgstr "Quando @url{http://www.bzip.org, libbz2} è disponibile, @command{guix-daemon} può usarla per comprimere i log di compilazione."

#. type: Plain text
#: guix-git/doc/contributing.texi:125
msgid "Unless @option{--disable-daemon} was passed to @command{configure}, the following packages are also needed:"
msgstr "A meno che @option{--disable-daemon} non sia stato passato a @command{configure}, sono necessari anche i seguenti pacchetti:"

#. type: item
#: guix-git/doc/contributing.texi:127
#, no-wrap
msgid "@url{https://gnupg.org/, GNU libgcrypt};"
msgstr "@url{https://gnupg.org/, GNU libgcrypt};"

#. type: item
#: guix-git/doc/contributing.texi:128
#, no-wrap
msgid "@url{https://sqlite.org, SQLite 3};"
msgstr "@url{https://sqlite.org, SQLite 3};"

#. type: item
#: guix-git/doc/contributing.texi:129
#, no-wrap
msgid "@url{https://gcc.gnu.org, GCC's g++}, with support for the"
msgstr "@url{https://gcc.gnu.org, il g++ di GCC}, con supporto per lo"

#. type: itemize
#: guix-git/doc/contributing.texi:131
msgid "C++11 standard."
msgstr "standard C++11."

#. type: Plain text
#: guix-git/doc/contributing.texi:138
msgid "If you want to hack Guix itself, it is recommended to use the latest version from the Git repository:"
msgstr "Se vuoi modificare Guix stesso, è preferibile usare l'ultima versione presa dal repository Git:"

#. type: example
#: guix-git/doc/contributing.texi:141
#, no-wrap
msgid "git clone https://git.guix.gnu.org/guix.git\n"
msgstr "git clone https://git.guix.gnu.org/guix.git\n"

#. type: cindex
#: guix-git/doc/contributing.texi:143
#, no-wrap
msgid "authentication, of a Guix checkout"
msgstr "autenticazione, di un checkout Guix"

#. type: Plain text
#: guix-git/doc/contributing.texi:148
msgid "How do you ensure that you obtained a genuine copy of the repository? To do that, run @command{guix git authenticate}, passing it the commit and OpenPGP fingerprint of the @dfn{channel introduction} (@pxref{Invoking guix git authenticate}):"
msgstr "Come assicurarti di avere una copia genuina del repository? Per farlo, esegui @command{guix git authenticate}, passandogli il commit e l'impronta OpenPGP della @dfn{channel introduction} (@pxref{Invoking guix git authenticate}):"

#. type: example
#: guix-git/doc/contributing.texi:155
#, no-wrap
msgid ""
"git fetch origin keyring:keyring\n"
"guix git authenticate 9edb3f66fd807b096b48283debdcddccfea34bad \\\n"
"  \"BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\"\n"
msgstr ""
"git fetch origin keyring:keyring\n"
"guix git authenticate 9edb3f66fd807b096b48283debdcddccfea34bad \\\n"
"  \"BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\"\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:160
msgid "This command completes with exit code zero on success; it prints an error message and exits with a non-zero code otherwise."
msgstr "Questo comando termina con un codice di uscita zero in caso di successo; altrimenti, stampa un messaggio di errore ed esce con un codice diverso da zero."

#. type: Plain text
#: guix-git/doc/contributing.texi:167
msgid "As you can see, there is a chicken-and-egg problem: you first need to have Guix installed.  Typically you would install Guix System (@pxref{System Installation}) or Guix on top of another distro (@pxref{Binary Installation}); in either case, you would verify the OpenPGP signature on the installation medium.  This ``bootstraps'' the trust chain."
msgstr "Come si può vedere, c'è un problema dell'uovo e della gallina: è prima necessario avere Guix installato. Tipicamente, si installerebbe Guix System (@pxref{System Installation}) o Guix sopra un'altra distribuzione (@pxref{Binary Installation}); in entrambi i casi, si verificherebbe la firma OpenPGP sul supporto di installazione. Questo dà inizio alla catena di fiducia."

#. type: Plain text
#: guix-git/doc/contributing.texi:172
msgid "The easiest way to set up a development environment for Guix is, of course, by using Guix! The following command starts a new shell where all the dependencies and appropriate environment variables are set up to hack on Guix:"
msgstr "Il modo più semplice per impostare un ambiente di sviluppo per Guix è, naturalmente, usare Guix! Il seguente comando avvia una nuova shell dove tutte le dipendenze e le variabili d'ambiente appropriate sono impostate per hackerare su Guix:"

#. type: example
#: guix-git/doc/contributing.texi:175
#, no-wrap
msgid "guix shell -D guix -CPW\n"
msgstr "guix shell -D guix -CPW\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:178
msgid "or even, from within a Git worktree for Guix:"
msgstr "o anche, da un albero di lavoro Git per Guix:"

#. type: example
#: guix-git/doc/contributing.texi:181
#, no-wrap
msgid "guix shell -CPW\n"
msgstr "guix shell -CPW\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:186
msgid "If @option{-C} (short for @option{--container}) is not supported on your system, try @command{--pure} instead of @option{-CPW}.  @xref{Invoking guix shell}, for more information on that command."
msgstr "Se @option{-C} (abbreviazione di @option{--container}) non è supportato sul tuo sistema, prova @command{--pure} invece di @option{-CPW}. @xref{Invoking guix shell}, per maggiori informazioni su questo comando."

#. type: Plain text
#: guix-git/doc/contributing.texi:190
msgid "If you are unable to use Guix when building Guix from a checkout, the following are the required packages in addition to those mentioned in the installation instructions (@pxref{Requirements})."
msgstr "Se non sei in grado di usare Guix quando compili Guix da un checkout, i seguenti sono i pacchetti richiesti in aggiunta a quelli menzionati nelle istruzioni di installazione (@pxref{Requirements})."

#. type: item
#: guix-git/doc/contributing.texi:192
#, no-wrap
msgid "@url{https://gnu.org/software/autoconf/, GNU Autoconf};"
msgstr "@url{https://gnu.org/software/autoconf/, GNU Autoconf};"

#. type: item
#: guix-git/doc/contributing.texi:193
#, no-wrap
msgid "@url{https://gnu.org/software/automake/, GNU Automake};"
msgstr "@url{https://gnu.org/software/automake/, GNU Automake};"

#. type: item
#: guix-git/doc/contributing.texi:194
#, no-wrap
msgid "@url{https://gnu.org/software/gettext/, GNU Gettext};"
msgstr "@url{https://gnu.org/software/gettext/, GNU Gettext};"

#. type: item
#: guix-git/doc/contributing.texi:195
#, no-wrap
msgid "@url{https://gnu.org/software/texinfo/, GNU Texinfo};"
msgstr "@url{https://gnu.org/software/texinfo/, GNU Texinfo};"

#. type: item
#: guix-git/doc/contributing.texi:196
#, no-wrap
msgid "@url{https://www.graphviz.org/, Graphviz};"
msgstr "@url{https://www.graphviz.org/, Graphviz};"

#. type: item
#: guix-git/doc/contributing.texi:197
#, no-wrap
msgid "@url{https://www.gnu.org/software/help2man/, GNU Help2man (optional)}."
msgstr "@url{https://www.gnu.org/software/help2man/, GNU Help2man (opzionale)}."

#. type: Plain text
#: guix-git/doc/contributing.texi:202
msgid "On Guix, extra dependencies can be added by instead running @command{guix shell}:"
msgstr "Su Guix, dipendenze extra possono essere aggiunte eseguendo invece @command{guix shell}:"

#. type: example
#: guix-git/doc/contributing.texi:205
#, no-wrap
msgid "guix shell -D guix help2man git strace --pure\n"
msgstr "guix shell -D guix help2man git strace --pure\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:209
msgid "From there you can generate the build system infrastructure using Autoconf and Automake:"
msgstr "Da lì puoi generare l'infrastruttura del sistema di compilazione usando Autoconf e Automake:"

#. type: example
#: guix-git/doc/contributing.texi:212
#, no-wrap
msgid "./bootstrap\n"
msgstr "./bootstrap\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:215
msgid "If you get an error like this one:"
msgstr "Se ricevi un errore come questo:"

#. type: example
#: guix-git/doc/contributing.texi:218
#, no-wrap
msgid "configure.ac:46: error: possibly undefined macro: PKG_CHECK_MODULES\n"
msgstr "configure.ac:46: error: possibly undefined macro: PKG_CHECK_MODULES\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:227
msgid "it probably means that Autoconf couldn’t find @file{pkg.m4}, which is provided by pkg-config.  Make sure that @file{pkg.m4} is available.  The same holds for the @file{guile.m4} set of macros provided by Guile.  For instance, if you installed Automake in @file{/usr/local}, it wouldn’t look for @file{.m4} files in @file{/usr/share}.  In that case, you have to invoke the following command:"
msgstr "probabilmente significa che Autoconf non è riuscito a trovare @file{pkg.m4}, che è fornito da pkg-config. Assicurati che @file{pkg.m4} sia disponibile. Lo stesso vale per il set di macro @file{guile.m4} fornito da Guile. Ad esempio, se hai installato Automake in @file{/usr/local}, non cercherà i file @file{.m4} in @file{/usr/share}. In tal caso, devi invocare il seguente comando:"

#. type: example
#: guix-git/doc/contributing.texi:230
#, no-wrap
msgid "export ACLOCAL_PATH=/usr/share/aclocal\n"
msgstr "export ACLOCAL_PATH=/usr/share/aclocal\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:234
msgid "@xref{Macro Search Path,,, automake, The GNU Automake Manual}, for more information."
msgstr "@xref{Macro Search Path,,, automake, The GNU Automake Manual}, per maggiori informazioni."

#. type: cindex
#: guix-git/doc/contributing.texi:235
#, no-wrap
msgid "state directory"
msgstr "directory di stato"

#. type: cindex
#: guix-git/doc/contributing.texi:236
#, no-wrap
msgid "localstatedir"
msgstr "localstatedir"

#. type: cindex
#: guix-git/doc/contributing.texi:237
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "system configuration directory"
msgstr "Documentazione"

#. type: cindex
#: guix-git/doc/contributing.texi:238
#, no-wrap
msgid "sysconfdir"
msgstr "sysconfdir"

#. type: Plain text
#: guix-git/doc/contributing.texi:240
msgid "Then, run:"
msgstr "Quindi, esegui:"

#. type: example
#: guix-git/doc/contributing.texi:243
#, no-wrap
msgid "./configure\n"
msgstr "./configure\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:253
msgid "Optionally, @code{--localstatedir} and @code{--sysconfdir} can also be provided as arguments.  By default, @code{localstatedir} is @file{/var} (@pxref{The Store}, for information about this) and @code{sysconfdir} is @file{/etc}.  Note that you will probably not run @command{make install} at the end (you don't have to) but it's still important to pass the right @code{localstatedir} and @code{sysconfdir} values, which get recorded in the @code{(guix config)} Guile module."
msgstr "Opzionalmente, @code{--localstatedir} e @code{--sysconfdir} possono essere forniti come argomenti. Per impostazione predefinita, @code{localstatedir} è @file{/var} (@pxref{The Store}, per informazioni a riguardo) e @code{sysconfdir} è @file{/etc}. Nota che probabilmente non eseguirai @command{make install} alla fine (non è necessario), ma è comunque importante passare i valori corretti di @code{localstatedir} e @code{sysconfdir}, che vengono registrati nel modulo Guile @code{(guix config)}."

#. type: Plain text
#: guix-git/doc/contributing.texi:256
msgid "Finally, you can build Guix and, if you feel so inclined, run the tests (@pxref{Running the Test Suite}):"
msgstr "Infine, puoi costruire Guix e, se te la senti, eseguire i test (@pxref{Running the Test Suite}):"

#. type: example
#: guix-git/doc/contributing.texi:260
#, no-wrap
msgid ""
"make\n"
"make check\n"
msgstr ""
"make\n"
"make check\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:266
msgid "If anything fails, take a look at installation instructions (@pxref{Installation}) or send a message to the @email{guix-devel@@gnu.org, mailing list}."
msgstr "Se qualcosa va storto, dai un'occhiata alle istruzioni di installazione (@pxref{Installation}) o invia un messaggio alla @email{guix-devel@@gnu.org, mailing list}."

#. type: Plain text
#: guix-git/doc/contributing.texi:269
msgid "From there on, you can authenticate all the commits included in your checkout by running:"
msgstr "Da qui in poi, puoi autenticare tutti i commit inclusi nel tuo checkout eseguendo:"

#. type: example
#: guix-git/doc/contributing.texi:274
#, no-wrap
msgid ""
"guix git authenticate \\\n"
"  9edb3f66fd807b096b48283debdcddccfea34bad \\\n"
"  \"BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\"\n"
msgstr ""
"guix git authenticate \\\n"
"  9edb3f66fd807b096b48283debdcddccfea34bad \\\n"
"  \"BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\"\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:281
msgid "The first run takes a couple of minutes, but subsequent runs are faster.  On subsequent runs, you can run the command without any arguments since the @dfn{introduction} (the commit ID and OpenPGP fingerprints above)  will have been recorded@footnote{This requires a recent version of Guix, from May 2024 or more recent.}:"
msgstr "La prima esecuzione richiede un paio di minuti, ma le esecuzioni successive sono più veloci. Nelle esecuzioni successive, puoi eseguire il comando senza argomenti poiché l'@dfn{introduction} (l'ID del commit e le impronte OpenPGP sopra) sarà stata registrata@footnote{Questo richiede una versione recente di Guix, da maggio 2024 o successiva.}:"

#. type: example
#: guix-git/doc/contributing.texi:284 guix-git/doc/contributing.texi:3013
#, fuzzy, no-wrap
msgid "guix git authenticate\n"
msgstr "Documentazione"

#. type: Plain text
#: guix-git/doc/contributing.texi:291
msgid "When your configuration for your local Git repository doesn't match the default one, you can provide the reference for the @code{keyring} branch @i{via} the @option{-k} option.  The following example assumes that you have a Git remote called @samp{myremote} pointing to the official repository:"
msgstr "Quando la configurazione del tuo repository Git locale non corrisponde a quella predefinita, puoi fornire il riferimento per il ramo @code{keyring} @i{via} l'opzione @option{-k}. L'esempio seguente presume che tu abbia un remote Git chiamato @samp{myremote} che punta al repository ufficiale:"

#. type: example
#: guix-git/doc/contributing.texi:297
#, no-wrap
msgid ""
"guix git authenticate \\\n"
"  -k myremote/keyring \\\n"
"  9edb3f66fd807b096b48283debdcddccfea34bad \\\n"
"  \"BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\"\n"
msgstr ""
"guix git authenticate \\\n"
"  -k myremote/keyring \\\n"
"  9edb3f66fd807b096b48283debdcddccfea34bad \\\n"
"  \"BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\"\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:301
msgid "@xref{Invoking guix git authenticate}, for more information on this command."
msgstr "@xref{Invoking guix git authenticate}, per maggiori informazioni su questo comando."

#. type: quotation
#: guix-git/doc/contributing.texi:302 guix-git/doc/contributing.texi:1525
#: guix-git/doc/contributing.texi:2206 guix-git/doc/contributing.texi:2251
#: guix-git/doc/contributing.texi:2274 guix-git/doc/contributing.texi:2299
#: guix-git/doc/contributing.texi:2986 guix-git/doc/contributing.texi:3372
#: guix-git/doc/guix.texi:829 guix-git/doc/guix.texi:855
#: guix-git/doc/guix.texi:1345 guix-git/doc/guix.texi:1370
#: guix-git/doc/guix.texi:1443 guix-git/doc/guix.texi:1843
#: guix-git/doc/guix.texi:2067 guix-git/doc/guix.texi:2208
#: guix-git/doc/guix.texi:2396 guix-git/doc/guix.texi:2618
#: guix-git/doc/guix.texi:3915 guix-git/doc/guix.texi:4327
#: guix-git/doc/guix.texi:4847 guix-git/doc/guix.texi:4861
#: guix-git/doc/guix.texi:4944 guix-git/doc/guix.texi:4959
#: guix-git/doc/guix.texi:5022 guix-git/doc/guix.texi:5252
#: guix-git/doc/guix.texi:6166 guix-git/doc/guix.texi:6199
#: guix-git/doc/guix.texi:6831 guix-git/doc/guix.texi:7110
#: guix-git/doc/guix.texi:7244 guix-git/doc/guix.texi:7273
#: guix-git/doc/guix.texi:7314 guix-git/doc/guix.texi:7360
#: guix-git/doc/guix.texi:7367 guix-git/doc/guix.texi:7411
#: guix-git/doc/guix.texi:9062 guix-git/doc/guix.texi:11461
#: guix-git/doc/guix.texi:11610 guix-git/doc/guix.texi:11680
#: guix-git/doc/guix.texi:13665 guix-git/doc/guix.texi:13705
#: guix-git/doc/guix.texi:13807 guix-git/doc/guix.texi:13975
#: guix-git/doc/guix.texi:14082 guix-git/doc/guix.texi:14094
#: guix-git/doc/guix.texi:14997 guix-git/doc/guix.texi:17035
#: guix-git/doc/guix.texi:17566 guix-git/doc/guix.texi:17624
#: guix-git/doc/guix.texi:17657 guix-git/doc/guix.texi:17735
#: guix-git/doc/guix.texi:18136 guix-git/doc/guix.texi:19193
#: guix-git/doc/guix.texi:19764 guix-git/doc/guix.texi:20251
#: guix-git/doc/guix.texi:20361 guix-git/doc/guix.texi:20422
#: guix-git/doc/guix.texi:21324 guix-git/doc/guix.texi:23560
#: guix-git/doc/guix.texi:24824 guix-git/doc/guix.texi:25007
#: guix-git/doc/guix.texi:25068 guix-git/doc/guix.texi:25544
#: guix-git/doc/guix.texi:30766 guix-git/doc/guix.texi:32116
#: guix-git/doc/guix.texi:35638 guix-git/doc/guix.texi:35818
#: guix-git/doc/guix.texi:36607 guix-git/doc/guix.texi:39025
#: guix-git/doc/guix.texi:39036 guix-git/doc/guix.texi:39047
#: guix-git/doc/guix.texi:40258 guix-git/doc/guix.texi:40697
#: guix-git/doc/guix.texi:44415 guix-git/doc/guix.texi:46024
#: guix-git/doc/guix.texi:46652 guix-git/doc/guix.texi:46726
#: guix-git/doc/guix.texi:46768 guix-git/doc/guix.texi:47114
#: guix-git/doc/guix.texi:47297 guix-git/doc/guix.texi:47310
#: guix-git/doc/guix.texi:47478 guix-git/doc/guix.texi:47585
#: guix-git/doc/guix.texi:47631 guix-git/doc/guix.texi:47688
#: guix-git/doc/guix.texi:47715 guix-git/doc/guix.texi:48203
#: guix-git/doc/guix.texi:49768 guix-git/doc/guix.texi:49819
#: guix-git/doc/guix.texi:49875 guix-git/doc/guix.texi:49984
#: guix-git/doc/guix.texi:50644 guix-git/doc/guix.texi:52496
#: guix-git/doc/guix.texi:52542 guix-git/doc/guix.texi:52636
#: guix-git/doc/guix.texi:52701 guix-git/doc/guix.texi:53250
#: guix-git/doc/guix.texi:53294
#, no-wrap
msgid "Note"
msgstr "Nota"

#. type: quotation
#: guix-git/doc/contributing.texi:306
msgid "By default, hooks are installed such that @command{guix git authenticate} is invoked anytime you run @command{git pull} or @command{git push}."
msgstr "Per impostazione predefinita, gli hook sono installati in modo che @command{guix git authenticate} venga invocato ogni volta che esegui @command{git pull} o @command{git push}."

#. type: Plain text
#: guix-git/doc/contributing.texi:310
msgid "After updating the repository, @command{make} might fail with an error similar to the following example:"
msgstr "Dopo aver aggiornato il repository, @command{make} potrebbe fallire con un errore simile al seguente esempio:"

#. type: example
#: guix-git/doc/contributing.texi:314
#, no-wrap
msgid ""
"error: failed to load 'gnu/packages/linux.scm':\n"
"ice-9/eval.scm:293:34: In procedure abi-check: #<record-type <origin>>: record ABI mismatch; recompilation needed\n"
msgstr ""
"error: failed to load 'gnu/packages/linux.scm':\n"
"ice-9/eval.scm:293:34: In procedure abi-check: #<record-type <origin>>: record ABI mismatch; recompilation needed\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:320
msgid "This means that one of the record types that Guix defines (in this example, the @code{origin} record) has changed, and all of guix needs to be recompiled to take that change into account.  To do so, run @command{make clean-go} followed by @command{make}."
msgstr "Questo significa che uno dei tipi di record che Guix definisce (in questo esempio, il record @code{origin}) è cambiato, e tutto guix deve essere ricompilato per tenere conto di questa modifica. Per farlo, esegui @command{make clean-go} seguito da @command{make}."

#. type: Plain text
#: guix-git/doc/contributing.texi:324
msgid "Should @command{make} fail with an Automake error message after updating, you need to repeat the steps outlined in this section, commencing with @command{./bootstrap}."
msgstr "Se @command{make} fallisce con un messaggio di errore di Automake dopo un aggiornamento, è necessario ripetere i passaggi descritti in questa sezione, a partire da @command{./bootstrap}."

#. type: cindex
#: guix-git/doc/contributing.texi:328
#, no-wrap
msgid "test suite"
msgstr "suite di test"

#. type: Plain text
#: guix-git/doc/contributing.texi:334
msgid "After a successful @command{configure} and @code{make} run, it is a good idea to run the test suite.  It can help catch issues with the setup or environment, or bugs in Guix itself---and really, reporting test failures is a good way to help improve the software.  To run the test suite, type:"
msgstr "Dopo un'esecuzione di successo di @command{configure} e @code{make}, è una buona idea eseguire la suite di test. Può aiutare a individuare problemi con la configurazione o l'ambiente, o bug in Guix stesso --- e, in realtà, segnalare i fallimenti dei test è un buon modo per contribuire a migliorare il software. Per eseguire la suite di test, digita:"

#. type: example
#: guix-git/doc/contributing.texi:337
#, no-wrap
msgid "make check\n"
msgstr "make check\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:344
msgid "Test cases can run in parallel: you can use the @code{-j} option of GNU@tie{}make to speed things up.  The first run may take a few minutes on a recent machine; subsequent runs will be faster because the store that is created for test purposes will already have various things in cache."
msgstr "I casi di test possono essere eseguiti in parallelo: puoi usare l'opzione @code{-j} di GNU@tie{}make per velocizzare. La prima esecuzione potrebbe richiedere alcuni minuti su una macchina recente; le esecuzioni successive saranno più veloci perché lo store creato per i test avrà già diverse cose in cache."

#. type: Plain text
#: guix-git/doc/contributing.texi:347
msgid "It is also possible to run a subset of the tests by defining the @code{TESTS} makefile variable as in this example:"
msgstr "È anche possibile eseguire un sottoinsieme dei test definendo la variabile del makefile @code{TESTS} come in questo esempio:"

#. type: example
#: guix-git/doc/contributing.texi:350
#, no-wrap
msgid "make check TESTS=\"tests/store.scm tests/cpio.scm\"\n"
msgstr "make check TESTS=\"tests/store.scm tests/cpio.scm\"\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:355
msgid "By default, tests results are displayed at a file level.  In order to see the details of every individual test cases, it is possible to define the @code{SCM_LOG_DRIVER_FLAGS} makefile variable as in this example:"
msgstr "Per impostazione predefinita, i risultati dei test sono visualizzati a livello di file. Per vedere i dettagli di ogni singolo caso di test, è possibile definire la variabile del makefile @code{SCM_LOG_DRIVER_FLAGS} come in questo esempio:"

#. type: example
#: guix-git/doc/contributing.texi:358
#, no-wrap
msgid "make check TESTS=\"tests/base64.scm\" SCM_LOG_DRIVER_FLAGS=\"--brief=no\"\n"
msgstr "make check TESTS=\"tests/base64.scm\" SCM_LOG_DRIVER_FLAGS=\"--brief=no\"\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:366
msgid "The underlying SRFI 64 custom Automake test driver used for the 'check' test suite (located at @file{build-aux/test-driver.scm}) also allows selecting which test cases to run at a finer level, via its @option{--select} and @option{--exclude} options.  Here's an example, to run all the test cases from the @file{tests/packages.scm} test file whose names start with ``transaction-upgrade-entry'':"
msgstr "Il driver di test personalizzato Automake SRFI 64 sottostante, utilizzato per la suite di test 'check' (che si trova in @file{build-aux/test-driver.scm}), consente anche di selezionare quali casi di test eseguire a un livello più fine, tramite le sue opzioni @option{--select} e @option{--exclude}. Ecco un esempio per eseguire tutti i casi di test dal file di test @file{tests/packages.scm} i cui nomi iniziano con ``transaction-upgrade-entry'':"

#. type: example
#: guix-git/doc/contributing.texi:370
#, no-wrap
msgid ""
"export SCM_LOG_DRIVER_FLAGS=\"--select=^transaction-upgrade-entry\"\n"
"make check TESTS=\"tests/packages.scm\"\n"
msgstr ""
"export SCM_LOG_DRIVER_FLAGS=\"--select=^transaction-upgrade-entry\"\n"
"make check TESTS=\"tests/packages.scm\"\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:376
msgid "Those wishing to inspect the results of failed tests directly from the command line can add the @option{--errors-only=yes} option to the @code{SCM_LOG_DRIVER_FLAGS} makefile variable and set the @code{VERBOSE} Automake makefile variable, as in:"
msgstr "Coloro che desiderano ispezionare i risultati dei test falliti direttamente dalla riga di comando possono aggiungere l'opzione @option{--errors-only=yes} alla variabile del makefile @code{SCM_LOG_DRIVER_FLAGS} e impostare la variabile del makefile di Automake @code{VERBOSE}, come in:"

#. type: example
#: guix-git/doc/contributing.texi:379
#, no-wrap
msgid "make check SCM_LOG_DRIVER_FLAGS=\"--brief=no --errors-only=yes\" VERBOSE=1\n"
msgstr "make check SCM_LOG_DRIVER_FLAGS=\"--brief=no --errors-only=yes\" VERBOSE=1\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:384
msgid "The @option{--show-duration=yes} option can be used to print the duration of the individual test cases, when used in combination with @option{--brief=no}:"
msgstr "L'opzione @option{--show-duration=yes} può essere usata per stampare la durata dei singoli casi di test, se usata in combinazione con @option{--brief=no}:"

#. type: example
#: guix-git/doc/contributing.texi:387
#, no-wrap
msgid "make check SCM_LOG_DRIVER_FLAGS=\"--brief=no --show-duration=yes\"\n"
msgstr "make check SCM_LOG_DRIVER_FLAGS=\"--brief=no --show-duration=yes\"\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:391
msgid "@xref{Parallel Test Harness,,,automake,GNU Automake} for more information about the Automake Parallel Test Harness."
msgstr "@xref{Parallel Test Harness,,,automake,GNU Automake} per maggiori informazioni sull'Automake Parallel Test Harness."

#. type: Plain text
#: guix-git/doc/contributing.texi:396
msgid "Upon failure, please email @email{bug-guix@@gnu.org} and attach the @file{test-suite.log} file.  Please specify the Guix version being used as well as version numbers of the dependencies (@pxref{Requirements}) in your message."
msgstr "In caso di fallimento, invia un'email a @email{bug-guix@@gnu.org} e allega il file @file{test-suite.log}. Specifica nel tuo messaggio la versione di Guix utilizzata e i numeri di versione delle dipendenze (@pxref{Requirements})."

#. type: Plain text
#: guix-git/doc/contributing.texi:400
msgid "Guix also comes with a whole-system test suite that tests complete Guix System instances.  It can only run on systems where Guix is already installed, using:"
msgstr "Guix include anche una suite di test a livello di sistema che testa istanze complete di Guix System. Può essere eseguita solo su sistemi dove Guix è già installato, usando:"

#. type: example
#: guix-git/doc/contributing.texi:403
#, no-wrap
msgid "make check-system\n"
msgstr "make check-system\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:407
msgid "or, again, by defining @code{TESTS} to select a subset of tests to run:"
msgstr "o, di nuovo, definendo @code{TESTS} per selezionare un sottoinsieme di test da eseguire:"

#. type: example
#: guix-git/doc/contributing.texi:410
#, no-wrap
msgid "make check-system TESTS=\"basic mcron\"\n"
msgstr "make check-system TESTS=\"basic mcron\"\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:418
msgid "These system tests are defined in the @code{(gnu tests @dots{})} modules.  They work by running the operating systems under test with lightweight instrumentation in a virtual machine (VM).  They can be computationally intensive or rather cheap, depending on whether substitutes are available for their dependencies (@pxref{Substitutes}).  Some of them require a lot of storage space to hold VM images."
msgstr "Questi test di sistema sono definiti nei moduli @code{(gnu tests @dots{})}. Funzionano eseguendo i sistemi operativi in prova con una strumentazione leggera in una macchina virtuale (VM). Possono essere computazionalmente intensivi o piuttosto economici, a seconda della disponibilità di sostituti per le loro dipendenze (@pxref{Substitutes}). Alcuni di essi richiedono molto spazio di archiviazione per contenere le immagini della VM."

#. type: Plain text
#: guix-git/doc/contributing.texi:420
msgid "If you encounter an error like:"
msgstr "Se incontri un errore come:"

#. type: example
#: guix-git/doc/contributing.texi:426
#, no-wrap
msgid ""
"Compiling Scheme modules...\n"
"ice-9/eval.scm:142:16: In procedure compile-top-call:\n"
"error: all-system-tests: unbound variable\n"
"hint: Did you forget `(use-modules (gnu tests))'?\n"
msgstr ""
"Compiling Scheme modules...\n"
"ice-9/eval.scm:142:16: In procedure compile-top-call:\n"
"error: all-system-tests: unbound variable\n"
"hint: Did you forget `(use-modules (gnu tests))'?\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:432
msgid "there may be inconsistencies in the work tree from previous builds.  To resolve this, try running @command{make clean-go} followed by @command{make}."
msgstr "potrebbero esserci delle incongruenze nell'albero di lavoro dovute a compilazioni precedenti. Per risolvere, prova a eseguire @command{make clean-go} seguito da @command{make}."

#. type: Plain text
#: guix-git/doc/contributing.texi:435
msgid "Again in case of test failures, please send @email{bug-guix@@gnu.org} all the details."
msgstr "Ancora una volta, in caso di fallimento dei test, invia tutti i dettagli a @email{bug-guix@@gnu.org}."

#. type: Plain text
#: guix-git/doc/contributing.texi:443
msgid "In order to keep a sane working environment, you will find it useful to test the changes made in your local source tree checkout without actually installing them.  So that you can distinguish between your ``end-user'' hat and your ``motley'' costume."
msgstr "Per mantenere un ambiente di lavoro sano, troverai utile testare le modifiche apportate nel tuo checkout locale dell'albero dei sorgenti senza installarle effettivamente. Così puoi distinguere tra il tuo ruolo di ``utente finale'' e il tuo costume ``arlecchino''."

#. type: Plain text
#: guix-git/doc/contributing.texi:453
msgid "To that end, all the command-line tools can be used even if you have not run @code{make install}.  To do that, you first need to have an environment with all the dependencies available (@pxref{Building from Git}), and then simply prefix each command with @command{./pre-inst-env} (the @file{pre-inst-env} script lives in the top build tree of Guix; @pxref{Building from Git} to generate it).  As an example, here is how you would build the @code{hello} package as defined in your working tree (this assumes @command{guix-daemon} is already running on your system; it's OK if it's a different version):"
msgstr "A tal fine, tutti gli strumenti a riga di comando possono essere usati anche se non hai eseguito @code{make install}. Per farlo, devi prima avere un ambiente con tutte le dipendenze disponibili (@pxref{Building from Git}), e poi semplicemente anteporre a ogni comando @command{./pre-inst-env} (lo script @file{pre-inst-env} si trova nella directory di compilazione principale di Guix; @pxref{Building from Git} per generarlo). Ad esempio, ecco come costruiresti il pacchetto @code{hello} come definito nel tuo albero di lavoro (questo presume che @command{guix-daemon} sia già in esecuzione sul tuo sistema; non importa se è una versione diversa):"

#. type: example
#: guix-git/doc/contributing.texi:456
#, no-wrap
msgid "$ ./pre-inst-env guix build hello\n"
msgstr "$ ./pre-inst-env guix build hello\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:460
msgid "Similarly, an example for a Guile session using the Guix modules:"
msgstr "Allo stesso modo, un esempio per una sessione Guile che usa i moduli Guix:"

#. type: example
#: guix-git/doc/contributing.texi:463
#, no-wrap
msgid ""
"$ ./pre-inst-env guile -c '(use-modules (guix utils)) (pk (%current-system))'\n"
"\n"
msgstr ""
"$ ./pre-inst-env guile -c '(use-modules (guix utils)) (pk (%current-system))'\n"
"\n"

#. type: example
#: guix-git/doc/contributing.texi:465
#, no-wrap
msgid ";;; (\"x86_64-linux\")\n"
msgstr ";;; (\"x86_64-linux\")\n"

#. type: cindex
#: guix-git/doc/contributing.texi:468
#, no-wrap
msgid "REPL"
msgstr "REPL"

#. type: cindex
#: guix-git/doc/contributing.texi:469
#, no-wrap
msgid "read-eval-print loop"
msgstr "read-eval-print loop"

#. type: Plain text
#: guix-git/doc/contributing.texi:471
msgid "@dots{} and for a REPL (@pxref{Using Guix Interactively}):"
msgstr "@dots{} e per un REPL (@pxref{Using Guix Interactively}):"

#. type: example
#: guix-git/doc/contributing.texi:486
#, no-wrap
msgid ""
"$ ./pre-inst-env guile\n"
"scheme@@(guile-user)> ,use(guix)\n"
"scheme@@(guile-user)> ,use(gnu)\n"
"scheme@@(guile-user)> (define snakes\n"
"                       (fold-packages\n"
"                         (lambda (package lst)\n"
"                           (if (string-prefix? \"python\"\n"
"                                               (package-name package))\n"
"                               (cons package lst)\n"
"                               lst))\n"
"                         '()))\n"
"scheme@@(guile-user)> (length snakes)\n"
"$1 = 361\n"
msgstr ""
"$ ./pre-inst-env guile\n"
"scheme@@(guile-user)> ,use(guix)\n"
"scheme@@(guile-user)> ,use(gnu)\n"
"scheme@@(guile-user)> (define snakes\n"
"                       (fold-packages\n"
"                         (lambda (package lst)\n"
"                           (if (string-prefix? \"python\"\n"
"                                               (package-name package))\n"
"                               (cons package lst)\n"
"                               lst))\n"
"                         '()))\n"
"scheme@@(guile-user)> (length snakes)\n"
"$1 = 361\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:494
msgid "If you are hacking on the daemon and its supporting code or if @command{guix-daemon} is not already running on your system, you can launch it straight from the build tree@footnote{The @option{-E} flag to @command{sudo} guarantees that @code{GUILE_LOAD_PATH} is correctly set such that @command{guix-daemon} and the tools it uses can find the Guile modules they need.}:"
msgstr "Se stai hackerando il demone e il suo codice di supporto o se @command{guix-daemon} non è già in esecuzione sul tuo sistema, puoi lanciarlo direttamente dall'albero di compilazione@footnote{Il flag @option{-E} a @command{sudo} garantisce che @code{GUILE_LOAD_PATH} sia impostato correttamente in modo che @command{guix-daemon} e gli strumenti che usa possano trovare i moduli Guile di cui hanno bisogno.}:"

#. type: example
#: guix-git/doc/contributing.texi:497
#, no-wrap
msgid "$ sudo -E ./pre-inst-env guix-daemon --build-users-group=guixbuild\n"
msgstr "$ sudo -E ./pre-inst-env guix-daemon --build-users-group=guixbuild\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:501
msgid "The @command{pre-inst-env} script sets up all the environment variables necessary to support this, including @env{PATH} and @env{GUILE_LOAD_PATH}."
msgstr "Lo script @command{pre-inst-env} imposta tutte le variabili d'ambiente necessarie per supportare questo, incluse @env{PATH} e @env{GUILE_LOAD_PATH}."

#. type: Plain text
#: guix-git/doc/contributing.texi:506
msgid "Note that @command{./pre-inst-env guix pull} does @emph{not} upgrade the local source tree; it simply updates the @file{~/.config/guix/current} symlink (@pxref{Invoking guix pull}).  Run @command{git pull} instead if you want to upgrade your local source tree."
msgstr "Nota che @command{./pre-inst-env guix pull} @emph{not} aggiorna l'albero dei sorgenti locale; aggiorna semplicemente il collegamento simbolico @file{~/.config/guix/current} (@pxref{Invoking guix pull}). Esegui invece @command{git pull} se vuoi aggiornare il tuo albero dei sorgenti locale."

#. type: Plain text
#: guix-git/doc/contributing.texi:510
msgid "Sometimes, especially if you have recently updated your repository, running @command{./pre-inst-env} will print a message similar to the following example:"
msgstr "A volte, specialmente se hai aggiornato di recente il tuo repository, l'esecuzione di @command{./pre-inst-env} stamperà un messaggio simile al seguente esempio:"

#. type: example
#: guix-git/doc/contributing.texi:514
#, no-wrap
msgid ""
";;; note: source file /home/user/projects/guix/guix/progress.scm\n"
";;;       newer than compiled /home/user/projects/guix/guix/progress.go\n"
msgstr ""
";;; note: source file /home/user/projects/guix/guix/progress.scm\n"
";;;       newer than compiled /home/user/projects/guix/guix/progress.go\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:520
msgid "This is only a note and you can safely ignore it.  You can get rid of the message by running @command{make -j4}.  Until you do, Guile will run slightly slower because it will interpret the code instead of using prepared Guile object (@file{.go}) files."
msgstr "Questa è solo una nota e puoi tranquillamente ignorarla. Puoi eliminare il messaggio eseguendo @command{make -j4}. Finché non lo fai, Guile funzionerà leggermente più lentamente perché interpreterà il codice invece di usare i file oggetto Guile preparati (@file{.go})."

#. type: Plain text
#: guix-git/doc/contributing.texi:525
msgid "You can run @command{make} automatically as you work using @command{watchexec} from the @code{watchexec} package.  For example, to build again each time you update a package file, run @samp{watchexec -w gnu/packages -- make -j4}."
msgstr "Puoi eseguire @command{make} automaticamente mentre lavori usando @command{watchexec} dal pacchetto @code{watchexec}. Ad esempio, per ricostruire ogni volta che aggiorni un file di pacchetto, esegui @samp{watchexec -w gnu/packages -- make -j4}."

#. type: Plain text
#: guix-git/doc/contributing.texi:534
msgid "The Perfect Setup to hack on Guix is basically the perfect setup used for Guile hacking (@pxref{Using Guile in Emacs,,, guile, Guile Reference Manual}).  First, you need more than an editor, you need @url{https://www.gnu.org/software/emacs, Emacs}, empowered by the wonderful @url{https://nongnu.org/geiser/, Geiser}.  To set that up, run:"
msgstr "La Configurazione Perfetta per hackerare su Guix è fondamentalmente la configurazione perfetta usata per hackerare su Guile (@pxref{Using Guile in Emacs,,, guile, Guile Reference Manual}). Prima di tutto, non hai bisogno di un semplice editor, hai bisogno di @url{https://www.gnu.org/software/emacs, Emacs}, potenziato dal meraviglioso @url{https://nongnu.org/geiser/, Geiser}. Per configurarlo, esegui:"

#. type: example
#: guix-git/doc/contributing.texi:537
#, no-wrap
msgid "guix install emacs guile emacs-geiser emacs-geiser-guile\n"
msgstr "guix install emacs guile emacs-geiser emacs-geiser-guile\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:547
msgid "Geiser allows for interactive and incremental development from within Emacs: code compilation and evaluation from within buffers, access to on-line documentation (docstrings), context-sensitive completion, @kbd{M-.} to jump to an object definition, a REPL to try out your code, and more (@pxref{Introduction,,, geiser, Geiser User Manual}).  If you allow Emacs to load the @file{.dir-locals.el} file at the root of the project checkout, it will cause Geiser to automatically add the local Guix sources to the Guile load path."
msgstr "Geiser permette uno sviluppo interattivo e incrementale dall'interno di Emacs: compilazione e valutazione del codice dai buffer, accesso alla documentazione online (docstring), completamento contestuale, @kbd{M-.} per saltare alla definizione di un oggetto, un REPL per provare il tuo codice, e altro ancora (@pxref{Introduction,,, geiser, Geiser User Manual}). Se permetti a Emacs di caricare il file @file{.dir-locals.el} nella radice del checkout del progetto, Geiser aggiungerà automaticamente i sorgenti locali di Guix al percorso di caricamento di Guile."

#. type: Plain text
#: guix-git/doc/contributing.texi:554
msgid "To actually edit the code, Emacs already has a neat Scheme mode.  But in addition to that, you must not miss @url{https://www.emacswiki.org/emacs/ParEdit, Paredit}.  It provides facilities to directly operate on the syntax tree, such as raising an s-expression or wrapping it, swallowing or rejecting the following s-expression, etc."
msgstr "Per modificare effettivamente il codice, Emacs ha già una buona modalità Scheme. Ma in aggiunta a ciò, non puoi farti mancare @url{https://www.emacswiki.org/emacs/ParEdit, Paredit}. Fornisce funzionalità per operare direttamente sull'albero di sintassi, come elevare una s-expression o avvolgerla, inglobare o espellere la s-expression successiva, ecc."

#. type: cindex
#: guix-git/doc/contributing.texi:555
#, no-wrap
msgid "code snippets"
msgstr "frammenti di codice"

#. type: cindex
#: guix-git/doc/contributing.texi:556
#, no-wrap
msgid "templates"
msgstr "modelli"

#. type: cindex
#: guix-git/doc/contributing.texi:557
#, no-wrap
msgid "reducing boilerplate"
msgstr "ridurre il boilerplate"

#. type: Plain text
#: guix-git/doc/contributing.texi:567
msgid "We also provide templates for common git commit messages and package definitions in the @file{etc/snippets} directory.  These templates can be used to expand short trigger strings to interactive text snippets. If you use @url{https://joaotavora.github.io/yasnippet/, YASnippet}, you may want to add the @file{etc/snippets/yas} snippets directory to the @var{yas-snippet-dirs} variable.  If you use @url{https://github.com/minad/tempel/, Tempel}, you may want to add the @file{etc/snippets/tempel/*} path to the @var{tempel-path} variable in Emacs."
msgstr "Forniamo anche dei modelli per i messaggi di commit git comuni e per le definizioni di pacchetto nella directory @file{etc/snippets}. Questi modelli possono essere usati per espandere brevi stringhe di attivazione in frammenti di testo interattivi. Se usi @url{https://joaotavora.github.io/yasnippet/, YASnippet}, potresti voler aggiungere la directory dei frammenti @file{etc/snippets/yas} alla variabile @var{yas-snippet-dirs}. Se usi @url{https://github.com/minad/tempel/, Tempel}, potresti voler aggiungere il percorso @file{etc/snippets/tempel/*} alla variabile @var{tempel-path} in Emacs."

#. type: lisp
#: guix-git/doc/contributing.texi:579
#, no-wrap
msgid ""
";; @r{Assuming the Guix checkout is in ~/src/guix.}\n"
";; @r{Yasnippet configuration}\n"
"(with-eval-after-load 'yasnippet\n"
"  (add-to-list 'yas-snippet-dirs \"~/src/guix/etc/snippets/yas\"))\n"
";; @r{Tempel configuration}\n"
"(with-eval-after-load 'tempel\n"
"   ;; Ensure tempel-path is a list -- it may also be a string.\n"
"   (unless (listp 'tempel-path)\n"
"     (setq tempel-path (list tempel-path)))\n"
"   (add-to-list 'tempel-path \"~/src/guix/etc/snippets/tempel/*\"))\n"
msgstr ""
";; @r{Assumendo che il checkout di Guix sia in ~/src/guix.}\n"
";; @r{Configurazione di Yasnippet}\n"
"(with-eval-after-load 'yasnippet\n"
"  (add-to-list 'yas-snippet-dirs \"~/src/guix/etc/snippets/yas\"))\n"
";; @r{Configurazione di Tempel}\n"
"(with-eval-after-load 'tempel\n"
"   ;; Assicura che tempel-path sia una lista -- potrebbe anche essere una stringa.\n"
"   (unless (listp 'tempel-path)\n"
"     (setq tempel-path (list tempel-path)))\n"
"   (add-to-list 'tempel-path \"~/src/guix/etc/snippets/tempel/*\"))\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:587
msgid "The commit message snippets depend on @url{https://magit.vc/, Magit} to display staged files.  When editing a commit message type @code{add} followed by @kbd{TAB} to insert a commit message template for adding a package; type @code{update} followed by @kbd{TAB} to insert a template for updating a package; type @code{https} followed by @kbd{TAB} to insert a template for changing the home page URI of a package to HTTPS."
msgstr "I frammenti di messaggio di commit dipendono da @url{https://magit.vc/, Magit} per visualizzare i file in staging. Quando modifichi un messaggio di commit, digita @code{add} seguito da @kbd{TAB} per inserire un modello di messaggio di commit per l'aggiunta di un pacchetto; digita @code{update} seguito da @kbd{TAB} per inserire un modello per l'aggiornamento di un pacchetto; digita @code{https} seguito da @kbd{TAB} per inserire un modello per cambiare l'URI della pagina iniziale di un pacchetto a HTTPS."

#. type: Plain text
#: guix-git/doc/contributing.texi:593
msgid "The main snippet for @code{scheme-mode} is triggered by typing @code{package...} followed by @kbd{TAB}.  This snippet also inserts the trigger string @code{origin...}, which can be expanded further.  The @code{origin} snippet in turn may insert other trigger strings ending on @code{...}, which also can be expanded further."
msgstr "Lo snippet principale per @code{scheme-mode} viene attivato digitando @code{package...} seguito da @kbd{TAB}. Questo snippet inserisce anche la stringa di attivazione @code{origin...}, che può essere espansa ulteriormente. Lo snippet @code{origin} a sua volta può inserire altre stringhe di attivazione che terminano con @code{...}, che possono essere anch'esse espanse."

#. type: cindex
#: guix-git/doc/contributing.texi:594
#, no-wrap
msgid "insert or update copyright"
msgstr "inserire o aggiornare copyright"

#. type: code{#1}
#: guix-git/doc/contributing.texi:595
#, no-wrap
msgid "M-x guix-copyright"
msgstr "M-x guix-copyright"

#. type: code{#1}
#: guix-git/doc/contributing.texi:596
#, no-wrap
msgid "M-x copyright-update"
msgstr "M-x copyright-update"

#. type: Plain text
#: guix-git/doc/contributing.texi:600
msgid "We additionally provide insertion and automatic update of a copyright in @file{etc/copyright.el}.  You may want to set your full name, mail, and load a file."
msgstr "Forniamo inoltre l'inserimento e l'aggiornamento automatico del copyright in @file{etc/copyright.el}. Potrebbe essere necessario impostare il proprio nome completo, l'email e caricare un file."

#. type: lisp
#: guix-git/doc/contributing.texi:606
#, no-wrap
msgid ""
"(setq user-full-name \"Alice Doe\")\n"
"(setq user-mail-address \"alice@@mail.org\")\n"
";; @r{Assuming the Guix checkout is in ~/src/guix.}\n"
"(load-file \"~/src/guix/etc/copyright.el\")\n"
msgstr ""
"(setq user-full-name \"Alice Doe\")\n"
"(setq user-mail-address \"alice@@mail.org\")\n"
";; @r{Assumendo che il checkout di Guix sia in ~/src/guix.}\n"
"(load-file \"~/src/guix/etc/copyright.el\")\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:609
msgid "To insert a copyright at the current line invoke @code{M-x guix-copyright}."
msgstr "Per inserire un copyright alla riga corrente, invoca @code{M-x guix-copyright}."

#. type: Plain text
#: guix-git/doc/contributing.texi:611
msgid "To update a copyright you need to specify a @code{copyright-names-regexp}."
msgstr "Per aggiornare un copyright, è necessario specificare un @code{copyright-names-regexp}."

#. type: lisp
#: guix-git/doc/contributing.texi:615
#, no-wrap
msgid ""
"(setq copyright-names-regexp\n"
"      (format \"%s <%s>\" user-full-name user-mail-address))\n"
msgstr ""
"(setq copyright-names-regexp\n"
"      (format \"%s <%s>\" user-full-name user-mail-address))\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:621
msgid "You can check if your copyright is up to date by evaluating @code{M-x copyright-update}.  If you want to do it automatically after each buffer save then add @code{(add-hook 'after-save-hook 'copyright-update)} in Emacs."
msgstr "Puoi verificare se il tuo copyright è aggiornato valutando @code{M-x copyright-update}. Se vuoi farlo automaticamente dopo ogni salvataggio del buffer, aggiungi @code{(add-hook 'after-save-hook 'copyright-update)} in Emacs."

#. type: subsection
#: guix-git/doc/contributing.texi:622 guix-git/doc/contributing.texi:623
#, no-wrap
msgid "Viewing Bugs within Emacs"
msgstr "Visualizzare i bug all'interno di Emacs"

#. type: Plain text
#: guix-git/doc/contributing.texi:633
msgid "Emacs has a nice minor mode called @code{bug-reference}, which, when combined with @samp{emacs-debbugs} (the Emacs package), can be used to open links such as @samp{<https://bugs.gnu.org/58697>} or @samp{<https://issues.guix.gnu.org/58697>} as bug report buffers.  From there you can easily consult the email thread via the Gnus interface, reply or modify the bug status, all without leaving the comfort of Emacs! Below is a sample configuration to add to your @file{~/.emacs} configuration file:"
msgstr "Emacs ha una bella modalità minore chiamata @code{bug-reference}, che, se combinata con @samp{emacs-debbugs} (il pacchetto Emacs), può essere usata per aprire link come @samp{<https://bugs.gnu.org/58697>} o @samp{<https://issues.guix.gnu.org/58697>} come buffer di segnalazione di bug. Da lì puoi consultare facilmente il thread email tramite l'interfaccia Gnus, rispondere o modificare lo stato del bug, tutto senza lasciare la comodità di Emacs! Sotto c'è un esempio di configurazione da aggiungere al tuo file di configurazione @file{~/.emacs}:"

#. type: lisp
#: guix-git/doc/contributing.texi:642
#, no-wrap
msgid ""
";;; Bug references.\n"
"(require 'bug-reference)\n"
"(add-hook 'prog-mode-hook #'bug-reference-prog-mode)\n"
"(add-hook 'gnus-mode-hook #'bug-reference-mode)\n"
"(add-hook 'erc-mode-hook #'bug-reference-mode)\n"
"(add-hook 'gnus-summary-mode-hook #'bug-reference-mode)\n"
"(add-hook 'gnus-article-mode-hook #'bug-reference-mode)\n"
"\n"
msgstr ""
";;; Riferimenti ai bug.\n"
"(require 'bug-reference)\n"
"(add-hook 'prog-mode-hook #'bug-reference-prog-mode)\n"
"(add-hook 'gnus-mode-hook #'bug-reference-mode)\n"
"(add-hook 'erc-mode-hook #'bug-reference-mode)\n"
"(add-hook 'gnus-summary-mode-hook #'bug-reference-mode)\n"
"(add-hook 'gnus-article-mode-hook #'bug-reference-mode)\n"
"\n"

#. type: lisp
#: guix-git/doc/contributing.texi:674
#, no-wrap
msgid ""
";;; This extends the default expression (the top-most, first expression\n"
";;; provided to 'or') to also match URLs such as\n"
";;; <https://issues.guix.gnu.org/58697> or <https://bugs.gnu.org/58697>.\n"
";;; It is also extended to detect \"Fixes: #NNNNN\" git trailers.\n"
"(setq bug-reference-bug-regexp\n"
"      (rx (group (or (seq word-boundary\n"
"                          (or (seq (char \"Bb\") \"ug\"\n"
"                                   (zero-or-one \" \")\n"
"                                   (zero-or-one \"#\"))\n"
"                              (seq (char \"Pp\") \"atch\"\n"
"                                   (zero-or-one \" \")\n"
"                                   \"#\")\n"
"                              (seq (char \"Ff\") \"ixes\"\n"
"                                   (zero-or-one \":\")\n"
"                                   (zero-or-one \" \") \"#\")\n"
"                              (seq \"RFE\"\n"
"                                   (zero-or-one \" \") \"#\")\n"
"                              (seq \"PR \"\n"
"                                   (one-or-more (char \"a-z+-\")) \"/\"))\n"
"                          (group (one-or-more (char \"0-9\"))\n"
"                                 (zero-or-one\n"
"                                  (seq \"#\" (one-or-more\n"
"                                            (char \"0-9\"))))))\n"
"                     (seq (? \"<\") \"https://bugs.gnu.org/\"\n"
"                          (group-n 2 (one-or-more (char \"0-9\")))\n"
"                          (? \">\"))\n"
"                     (seq (? \"<\") \"https://issues.guix.gnu.org/\"\n"
"                          (? \"issue/\")\n"
"                          (group-n 2 (one-or-more (char \"0-9\")))\n"
"                          (? \">\"))))))\n"
"(setq bug-reference-url-format \"https://issues.guix.gnu.org/%s\")\n"
"\n"
msgstr ""
";;; Questo estende l'espressione predefinita (la prima espressione in alto,\n"
";;; fornita a 'or') per corrispondere anche a URL come\n"
";;; <https://issues.guix.gnu.org/58697> o <https://bugs.gnu.org/58697>.\n"
";;; È anche estesa per rilevare i trailer git \"Fixes: #NNNNN\".\n"
"(setq bug-reference-bug-regexp\n"
"      (rx (group (or (seq word-boundary\n"
"                          (or (seq (char \"Bb\") \"ug\"\n"
"                                   (zero-or-one \" \")\n"
"                                   (zero-or-one \"#\"))\n"
"                              (seq (char \"Pp\") \"atch\"\n"
"                                   (zero-or-one \" \")\n"
"                                   \"#\")\n"
"                              (seq (char \"Ff\") \"ixes\"\n"
"                                   (zero-or-one \":\")\n"
"                                   (zero-or-one \" \") \"#\")\n"
"                              (seq \"RFE\"\n"
"                                   (zero-or-one \" \") \"#\")\n"
"                              (seq \"PR \"\n"
"                                   (one-or-more (char \"a-z+-\")) \"/\"))\n"
"                          (group (one-or-more (char \"0-9\"))\n"
"                                 (zero-or-one\n"
"                                  (seq \"#\" (one-or-more\n"
"                                            (char \"0-9\"))))))\n"
"                     (seq (? \"<\") \"https://bugs.gnu.org/\"\n"
"                          (group-n 2 (one-or-more (char \"0-9\")))\n"
"                          (? \">\"))\n"
"                     (seq (? \"<\") \"https://issues.guix.gnu.org/\"\n"
"                          (? \"issue/\")\n"
"                          (group-n 2 (one-or-more (char \"0-9\")))\n"
"                          (? \">\"))))))\n"
"(setq bug-reference-url-format \"https://issues.guix.gnu.org/%s\")\n"
"\n"

#. type: lisp
#: guix-git/doc/contributing.texi:679
#, no-wrap
msgid ""
"(require 'debbugs)\n"
"(require 'debbugs-browse)\n"
"(add-hook 'bug-reference-mode-hook #'debbugs-browse-mode)\n"
"(add-hook 'bug-reference-prog-mode-hook #'debbugs-browse-mode)\n"
"\n"
msgstr ""
"(require 'debbugs)\n"
"(require 'debbugs-browse)\n"
"(add-hook 'bug-reference-mode-hook #'debbugs-browse-mode)\n"
"(add-hook 'bug-reference-prog-mode-hook #'debbugs-browse-mode)\n"
"\n"

#. type: lisp
#: guix-git/doc/contributing.texi:690
#, no-wrap
msgid ""
";; The following allows Emacs Debbugs user to open the issue directly within\n"
";; Emacs.\n"
"(setq debbugs-browse-url-regexp\n"
"      (rx line-start\n"
"          \"http\" (zero-or-one \"s\") \"://\"\n"
"          (or \"debbugs\" \"issues.guix\" \"bugs\")\n"
"          \".gnu.org\" (one-or-more \"/\")\n"
"          (group (zero-or-one \"cgi/bugreport.cgi?bug=\"))\n"
"          (group-n 3 (one-or-more digit))\n"
"          line-end))\n"
"\n"
msgstr ""
";; Quanto segue permette all'utente di Emacs Debbugs di aprire il problema direttamente\n"
";; all'interno di Emacs.\n"
"(setq debbugs-browse-url-regexp\n"
"      (rx line-start\n"
"          \"http\" (zero-or-one \"s\") \"://\"\n"
"          (or \"debbugs\" \"issues.guix\" \"bugs\")\n"
"          \".gnu.org\" (one-or-more \"/\")\n"
"          (group (zero-or-one \"cgi/bugreport.cgi?bug=\"))\n"
"          (group-n 3 (one-or-more digit))\n"
"          line-end))\n"
"\n"

#. type: lisp
#: guix-git/doc/contributing.texi:693
#, no-wrap
msgid ""
";; Change the default when run as 'M-x debbugs-gnu'.\n"
"(setq debbugs-gnu-default-packages '(\"guix\" \"guix-patches\"))\n"
"\n"
msgstr ""
";; Cambia il valore predefinito quando eseguito come 'M-x debbugs-gnu'.\n"
"(setq debbugs-gnu-default-packages '(\"guix\" \"guix-patches\"))\n"
"\n"

#. type: lisp
#: guix-git/doc/contributing.texi:697
#, no-wrap
msgid ""
";; Show feature requests.\n"
"(setq debbugs-gnu-default-severities\n"
" '(\"serious\" \"important\" \"normal\" \"minor\" \"wishlist\"))\n"
msgstr ""
";; Mostra le richieste di funzionalità.\n"
"(setq debbugs-gnu-default-severities\n"
" '(\"serious\" \"important\" \"normal\" \"minor\" \"wishlist\"))\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:702
msgid "For more information, refer to @ref{Bug Reference,,, emacs, The GNU Emacs Manual} and @ref{Minor Mode,,, debbugs-ug, The Debbugs User Guide}."
msgstr "Per maggiori informazioni, fare riferimento a @ref{Bug Reference,,, emacs, The GNU Emacs Manual} e @ref{Minor Mode,,, debbugs-ug, The Debbugs User Guide}."

#. type: Plain text
#: guix-git/doc/contributing.texi:709
msgid "Alternative setups than Emacs may let you work on Guix with a similar development experience and they might work better with the tools you currently use or help you make the transition to Emacs."
msgstr "Configurazioni alternative a Emacs possono permetterti di lavorare su Guix con un'esperienza di sviluppo simile e potrebbero funzionare meglio con gli strumenti che usi attualmente o aiutarti a passare a Emacs."

#. type: Plain text
#: guix-git/doc/contributing.texi:715
msgid "The options listed below only provide the alternatives to the Emacs based setup, which is the most widely used in the Guix community.  If you want to really understand how the perfect setup for Guix development is supposed to work, we encourage you to read the section before this regardless of the editor you choose to use."
msgstr "Le opzioni elencate di seguito forniscono solo le alternative alla configurazione basata su Emacs, che è la più usata nella comunità di Guix. Se vuoi capire veramente come dovrebbe funzionare la configurazione perfetta per lo sviluppo di Guix, ti incoraggiamo a leggere la sezione precedente, indipendentemente dall'editor che scegli di usare."

#. type: subsection
#: guix-git/doc/contributing.texi:719 guix-git/doc/contributing.texi:721
#: guix-git/doc/contributing.texi:722
#, no-wrap
msgid "Guile Studio"
msgstr "Guile Studio"

#. type: menuentry
#: guix-git/doc/contributing.texi:719
msgid "First step in your transition to Emacs."
msgstr "Primo passo nella tua transizione a Emacs."

#. type: subsection
#: guix-git/doc/contributing.texi:719 guix-git/doc/contributing.texi:734
#: guix-git/doc/contributing.texi:735
#, no-wrap
msgid "Vim and NeoVim"
msgstr "Vim e NeoVim"

#. type: menuentry
#: guix-git/doc/contributing.texi:719
msgid "When you are evil to the root."
msgstr "Quando sei malvagio fino al midollo."

#. type: Plain text
#: guix-git/doc/contributing.texi:727
msgid "Guile Studio is a pre-configured Emacs with mostly everything you need to start hacking in Guile. If you are not familiar with Emacs it makes the transition easier for you."
msgstr "Guile Studio è un Emacs pre-configurato con quasi tutto ciò di cui hai bisogno per iniziare a hackerare in Guile. Se non hai familiarità con Emacs, rende la transizione più facile per te."

#. type: example
#: guix-git/doc/contributing.texi:730
#, no-wrap
msgid "guix install guile-studio\n"
msgstr "guix install guile-studio\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:733
msgid "Guile Studio comes with Geiser preinstalled and prepared for action."
msgstr "Guile Studio viene fornito con Geiser preinstallato e pronto all'azione."

#. type: Plain text
#: guix-git/doc/contributing.texi:740
msgid "Vim (and NeoVim) are also packaged in Guix, just in case you decided to go for the evil path."
msgstr "Vim (e NeoVim) sono anche pacchettizzati in Guix, nel caso tu abbia deciso di percorrere il sentiero del male."

#. type: example
#: guix-git/doc/contributing.texi:743
#, no-wrap
msgid "guix install vim\n"
msgstr "guix install vim\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:751
msgid "If you want to enjoy a similar development experience to that in the perfect setup, you should install several plugins to configure the editor. Vim (and NeoVim) have the equivalent to Paredit, @uref{https://www.vim.org/scripts/script.php?script_id=3998, @code{paredit.vim}}, that will help you with the structural editing of Scheme files (the support for very large files is not great, though)."
msgstr "Se vuoi godere di un'esperienza di sviluppo simile a quella della configurazione perfetta, dovresti installare diversi plugin per configurare l'editor. Vim (e NeoVim) hanno l'equivalente di Paredit, @uref{https://www.vim.org/scripts/script.php?script_id=3998, @code{paredit.vim}}, che ti aiuterà con la modifica strutturale dei file Scheme (il supporto per file molto grandi non è eccezionale, però)."

#. type: example
#: guix-git/doc/contributing.texi:754
#, no-wrap
msgid "guix install vim-paredit\n"
msgstr "guix install vim-paredit\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:758
msgid "We also recommend that you run @code{:set autoindent} so that your code is automatically indented as you type."
msgstr "Raccomandiamo anche di eseguire @code{:set autoindent} in modo che il tuo codice venga indentato automaticamente mentre scrivi."

#. type: Plain text
#: guix-git/doc/contributing.texi:762
msgid "For the interaction with Git, @uref{https://www.vim.org/scripts/script.php?script_id=2975, @code{fugitive.vim}} is the most commonly used plugin:"
msgstr "Per l'interazione con Git, @uref{https://www.vim.org/scripts/script.php?script_id=2975, @code{fugitive.vim}} è il plugin più comunemente usato:"

#. type: example
#: guix-git/doc/contributing.texi:765
#, no-wrap
msgid "guix install vim-fugitive\n"
msgstr "guix install vim-fugitive\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:770
msgid "And of course if you want to interact with Guix directly from inside of vim, using the built-in terminal emulator, we have our very own @code{guix.vim} package!"
msgstr "E ovviamente se vuoi interagire con Guix direttamente dall'interno di vim, usando l'emulatore di terminale integrato, abbiamo il nostro pacchetto @code{guix.vim}!"

#. type: example
#: guix-git/doc/contributing.texi:773
#, no-wrap
msgid "guix install vim-guix-vim\n"
msgstr "guix install vim-guix-vim\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:778
msgid "In NeoVim you can even make a similar setup to Geiser using @url{https://conjure.fun/, Conjure} that lets you connect to a running Guile process and inject your code there live (sadly it's not packaged in Guix yet)."
msgstr "In NeoVim puoi persino creare una configurazione simile a Geiser usando @url{https://conjure.fun/, Conjure} che ti permette di connetterti a un processo Guile in esecuzione e di iniettare il tuo codice lì in tempo reale (purtroppo non è ancora pacchettizzato in Guix)."

#. type: cindex
#: guix-git/doc/contributing.texi:783
#, no-wrap
msgid "structure, of the source tree"
msgstr "struttura, dell'albero dei sorgenti"

#. type: Plain text
#: guix-git/doc/contributing.texi:787
msgid "If you're willing to contribute to Guix beyond packages, or if you'd like to learn how it all fits together, this section provides a guided tour in the code base that you may find useful."
msgstr "Se sei disposto a contribuire a Guix oltre ai pacchetti, o se vuoi imparare come tutto si incastra, questa sezione fornisce una visita guidata alla base di codice che potresti trovare utile."

#. type: Plain text
#: guix-git/doc/contributing.texi:791
msgid "Overall, the Guix source tree contains almost exclusively Guile @dfn{modules}, each of which can be seen as an independent library (@pxref{Modules,,, guile, GNU Guile Reference Manual})."
msgstr "In generale, l'albero dei sorgenti di Guix contiene quasi esclusivamente @dfn{modules} Guile, ognuno dei quali può essere visto come una libreria indipendente (@pxref{Modules,,, guile, GNU Guile Reference Manual})."

#. type: Plain text
#: guix-git/doc/contributing.texi:796
msgid "The following table gives an overview of the main directories and what they contain.  Remember that in Guile, each module name is derived from its file name---e.g., the module in file @file{guix/packages.scm} is called @code{(guix packages)}."
msgstr "La seguente tabella offre una panoramica delle directory principali e del loro contenuto. Ricorda che in Guile, ogni nome di modulo deriva dal nome del suo file --- ad esempio, il modulo nel file @file{guix/packages.scm} si chiama @code{(guix packages)}."

#. type: item
#: guix-git/doc/contributing.texi:798 guix-git/doc/contributing.texi:3600
#: guix-git/doc/guix.texi:11639
#, no-wrap
msgid "guix"
msgstr "guix"

#. type: table
#: guix-git/doc/contributing.texi:802
msgid "This is the location of core Guix mechanisms.  To illustrate what is meant by ``core'', here are a few examples, starting from low-level tools and going towards higher-level tools:"
msgstr "Questa è la posizione dei meccanismi principali di Guix. Per illustrare cosa si intende per ``core'', ecco alcuni esempi, partendo dagli strumenti a basso livello e procedendo verso quelli di livello superiore:"

#. type: item
#: guix-git/doc/contributing.texi:804
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "(guix store)"
msgstr "Filesystem"

#. type: table
#: guix-git/doc/contributing.texi:806
msgid "Connecting to and interacting with the build daemon (@pxref{The Store})."
msgstr "Connessione e interazione con il demone di compilazione (@pxref{The Store})."

#. type: item
#: guix-git/doc/contributing.texi:806
#, fuzzy, no-wrap
#| msgid "derivation"
msgid "(guix derivations)"
msgstr "derivazione"

#. type: table
#: guix-git/doc/contributing.texi:808
msgid "Creating derivations (@pxref{Derivations})."
msgstr "Creazione di derivazioni (@pxref{Derivations})."

#. type: item
#: guix-git/doc/contributing.texi:808
#, no-wrap
msgid "(guix gexps)"
msgstr "(guix gexps)"

#. type: table
#: guix-git/doc/contributing.texi:810
msgid "Writing G-expressions (@pxref{G-Expressions})."
msgstr "Scrittura di G-expressions (@pxref{G-Expressions})."

#. type: item
#: guix-git/doc/contributing.texi:810
#, fuzzy, no-wrap
#| msgid "package"
msgid "(guix packages)"
msgstr "pacchetto"

#. type: table
#: guix-git/doc/contributing.texi:812
msgid "Defining packages and origins (@pxref{package Reference})."
msgstr "Definizione di pacchetti e origini (@pxref{package Reference})."

#. type: item
#: guix-git/doc/contributing.texi:812
#, no-wrap
msgid "(guix download)"
msgstr "(guix download)"

#. type: itemx
#: guix-git/doc/contributing.texi:813
#, no-wrap
msgid "(guix git-download)"
msgstr "(guix git-download)"

#. type: table
#: guix-git/doc/contributing.texi:816
msgid "The @code{url-fetch} and @code{git-fetch} origin download methods (@pxref{origin Reference})."
msgstr "I metodi di download dell'origine @code{url-fetch} e @code{git-fetch} (@pxref{origin Reference})."

#. type: item
#: guix-git/doc/contributing.texi:816
#, no-wrap
msgid "(guix swh)"
msgstr "(guix swh)"

#. type: table
#: guix-git/doc/contributing.texi:819
msgid "Fetching source code from the @uref{https://archive.softwareheritage.org,Software Heritage archive}."
msgstr "Recupero del codice sorgente dall'archivio @uref{https://archive.softwareheritage.org,Software Heritage}."

#. type: item
#: guix-git/doc/contributing.texi:819
#, no-wrap
msgid "(guix search-paths)"
msgstr "(guix search-paths)"

#. type: table
#: guix-git/doc/contributing.texi:821
msgid "Implementing search paths (@pxref{Search Paths})."
msgstr "Implementazione dei percorsi di ricerca (@pxref{Search Paths})."

#. type: item
#: guix-git/doc/contributing.texi:821
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "(guix build-system)"
msgstr "Filesystem"

#. type: table
#: guix-git/doc/contributing.texi:823
msgid "The build system interface (@pxref{Build Systems})."
msgstr "L'interfaccia del sistema di compilazione (@pxref{Build Systems})."

#. type: item
#: guix-git/doc/contributing.texi:823
#, fuzzy, no-wrap
#| msgid "profile"
msgid "(guix profiles)"
msgstr "profilo"

#. type: table
#: guix-git/doc/contributing.texi:825
msgid "Implementing profiles."
msgstr "Implementazione dei profili."

#. type: cindex
#: guix-git/doc/contributing.texi:827
#, no-wrap
msgid "build system, directory structure"
msgstr "sistema di compilazione, struttura della directory"

#. type: item
#: guix-git/doc/contributing.texi:828
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "guix/build-system"
msgstr "Filesystem"

#. type: table
#: guix-git/doc/contributing.texi:831
msgid "This directory contains specific build system implementations (@pxref{Build Systems}), such as:"
msgstr "Questa directory contiene implementazioni specifiche del sistema di compilazione (@pxref{Build Systems}), come:"

#. type: item
#: guix-git/doc/contributing.texi:833
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "(guix build-system gnu)"
msgstr "Filesystem"

#. type: table
#: guix-git/doc/contributing.texi:835
#, fuzzy
#| msgid "File Systems"
msgid "the GNU build system;"
msgstr "Filesystem"

#. type: item
#: guix-git/doc/contributing.texi:835
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "(guix build-system cmake)"
msgstr "Filesystem"

#. type: table
#: guix-git/doc/contributing.texi:837
#, fuzzy
#| msgid "File Systems"
msgid "the CMake build system;"
msgstr "Filesystem"

#. type: item
#: guix-git/doc/contributing.texi:837
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "(guix build-system pyproject)"
msgstr "Filesystem"

#. type: table
#: guix-git/doc/contributing.texi:839
msgid "The Python ``pyproject'' build system."
msgstr "Il sistema di compilazione ``pyproject'' di Python."

#. type: item
#: guix-git/doc/contributing.texi:841
#, no-wrap
msgid "guix/build"
msgstr "guix/build"

#. type: table
#: guix-git/doc/contributing.texi:846
msgid "This contains code generally used on the ``build side'' (@pxref{G-Expressions, strata of code}).  This includes code used to build packages or other operating system components, as well as utilities:"
msgstr "Contiene codice generalmente usato sul ``lato build'' (@pxref{G-Expressions, strata of code}). Questo include codice usato per costruire pacchetti o altri componenti del sistema operativo, così come utility:"

#. type: item
#: guix-git/doc/contributing.texi:848
#, no-wrap
msgid "(guix build utils)"
msgstr "(guix build utils)"

#. type: table
#: guix-git/doc/contributing.texi:850
msgid "Utilities for package definitions and more (@pxref{Build Utilities})."
msgstr "Utility per le definizioni di pacchetti e altro (@pxref{Build Utilities})."

#. type: item
#: guix-git/doc/contributing.texi:850
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "(guix build gnu-build-system)"
msgstr "Filesystem"

#. type: itemx
#: guix-git/doc/contributing.texi:851
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "(guix build cmake-build-system)"
msgstr "Filesystem"

#. type: itemx
#: guix-git/doc/contributing.texi:852
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "(guix build pyproject-build-system)"
msgstr "Filesystem"

#. type: table
#: guix-git/doc/contributing.texi:855
msgid "Implementation of build systems, and in particular definition of their build phases (@pxref{Build Phases})."
msgstr "Implementazione dei sistemi di compilazione, e in particolare la definizione delle loro fasi di compilazione (@pxref{Build Phases})."

#. type: item
#: guix-git/doc/contributing.texi:855
#, no-wrap
msgid "(guix build syscalls)"
msgstr "(guix build syscalls)"

#. type: table
#: guix-git/doc/contributing.texi:857
msgid "Interface to the C library and to Linux system calls."
msgstr "Interfaccia alla libreria C e alle chiamate di sistema Linux."

#. type: cindex
#: guix-git/doc/contributing.texi:859
#, no-wrap
msgid "command-line tools, as Guile modules"
msgstr "strumenti a riga di comando, come moduli Guile"

#. type: cindex
#: guix-git/doc/contributing.texi:860
#, fuzzy, no-wrap
#| msgid "Modules"
msgid "command modules"
msgstr "Moduli"

#. type: item
#: guix-git/doc/contributing.texi:861
#, no-wrap
msgid "guix/scripts"
msgstr "guix/scripts"

#. type: table
#: guix-git/doc/contributing.texi:866
msgid "This contains modules corresponding to @command{guix} sub-commands.  For example, the @code{(guix scripts shell)} module exports the @code{guix-shell} procedure, which directly corresponds to the @command{guix shell} command (@pxref{Invoking guix shell})."
msgstr "Contiene moduli corrispondenti ai sotto-comandi di @command{guix}. Ad esempio, il modulo @code{(guix scripts shell)} esporta la procedura @code{guix-shell}, che corrisponde direttamente al comando @command{guix shell} (@pxref{Invoking guix shell})."

#. type: cindex
#: guix-git/doc/contributing.texi:867
#, fuzzy, no-wrap
#| msgid "Modules"
msgid "importer modules"
msgstr "Moduli"

#. type: item
#: guix-git/doc/contributing.texi:868
#, no-wrap
msgid "guix/import"
msgstr "guix/import"

#. type: table
#: guix-git/doc/contributing.texi:873
msgid "This contains supporting code for the importers and updaters (@pxref{Invoking guix import}, and @pxref{Invoking guix refresh}).  For example, @code{(guix import pypi)} defines the interface to PyPI, which is used by the @command{guix import pypi} command."
msgstr "Contiene codice di supporto per gli importatori e gli aggiornatori (@pxref{Invoking guix import}, e @pxref{Invoking guix refresh}). Ad esempio, @code{(guix import pypi)} definisce l'interfaccia a PyPI, che è usata dal comando @command{guix import pypi}."

#. type: Plain text
#: guix-git/doc/contributing.texi:888
msgid "The directories we have seen so far all live under @file{guix/}.  The other important place is the @file{gnu/} directory, which contains primarily package definitions as well as libraries and tools for Guix System (@pxref{System Configuration}) and Guix Home (@pxref{Home Configuration}), all of which build upon functionality provided by @code{(guix @dots{})} modules@footnote{For this reason, @code{(guix @dots{})} modules must generally not depend on @code{(gnu @dots{})} modules, with notable exceptions: @code{(guix build-system @dots{})} modules may look up packages at run time---e.g., @code{(guix build-system cmake)} needs to access the @code{cmake} variable at run time---, @code{(guix scripts @dots{})} often rely on @code{(gnu @dots{})} modules, and the same goes for some of the @code{(guix import @dots{})} modules.}."
msgstr "Le directory che abbiamo visto finora si trovano tutte sotto @file{guix/}. L'altro posto importante è la directory @file{gnu/}, che contiene principalmente definizioni di pacchetti, nonché librerie e strumenti per Guix System (@pxref{System Configuration}) e Guix Home (@pxref{Home Configuration}), tutti basati su funzionalità fornite dai moduli @code{(guix @dots{})}@footnote{Per questo motivo, i moduli @code{(guix @dots{})} non devono generalmente dipendere dai moduli @code{(gnu @dots{})}, con alcune eccezioni notevoli: i moduli @code{(guix build-system @dots{})} possono cercare pacchetti a runtime---ad esempio, @code{(guix build-system cmake)} deve accedere alla variabile @code{cmake} a runtime---, i moduli @code{(guix scripts @dots{})} si basano spesso sui moduli @code{(gnu @dots{})}, e lo stesso vale per alcuni dei moduli @code{(guix import @dots{})}.}."

#. type: cindex
#: guix-git/doc/contributing.texi:890
#, no-wrap
msgid "package modules"
msgstr "moduli di pacchetti"

#. type: item
#: guix-git/doc/contributing.texi:891
#, fuzzy, no-wrap
#| msgid "package"
msgid "gnu/packages"
msgstr "pacchetto"

#. type: table
#: guix-git/doc/contributing.texi:895
msgid "This is by far the most crowded directory of the source tree: it contains @dfn{package modules} that export package definitions (@pxref{Package Modules}).  A few examples:"
msgstr "Questa è di gran lunga la directory più affollata dell'albero dei sorgenti: contiene @dfn{moduli di pacchetti} che esportano definizioni di pacchetti (@pxref{Package Modules}). Alcuni esempi:"

#. type: item
#: guix-git/doc/contributing.texi:897
#, no-wrap
msgid "(gnu packages base)"
msgstr "(gnu packages base)"

#. type: table
#: guix-git/doc/contributing.texi:900
msgid "Module providing ``base'' packages: @code{glibc}, @code{coreutils}, @code{grep}, etc."
msgstr "Modulo che fornisce i pacchetti di ``base'': @code{glibc}, @code{coreutils}, @code{grep}, ecc."

#. type: item
#: guix-git/doc/contributing.texi:900
#, no-wrap
msgid "(gnu packages guile)"
msgstr "(gnu packages guile)"

#. type: table
#: guix-git/doc/contributing.texi:902
msgid "Guile and core Guile packages."
msgstr "Guile e pacchetti Guile principali."

#. type: item
#: guix-git/doc/contributing.texi:902
#, no-wrap
msgid "(gnu packages linux)"
msgstr "(gnu packages linux)"

#. type: table
#: guix-git/doc/contributing.texi:904
msgid "The Linux-libre kernel and related packages."
msgstr "Il kernel Linux-libre e i pacchetti correlati."

#. type: item
#: guix-git/doc/contributing.texi:904
#, no-wrap
msgid "(gnu packages python)"
msgstr "(gnu packages python)"

#. type: table
#: guix-git/doc/contributing.texi:906
msgid "Python and core Python packages."
msgstr "Python e pacchetti Python principali."

#. type: item
#: guix-git/doc/contributing.texi:906
#, no-wrap
msgid "(gnu packages python-xyz)"
msgstr "(gnu packages python-xyz)"

#. type: table
#: guix-git/doc/contributing.texi:908
msgid "Miscellaneous Python packages (we were not very creative)."
msgstr "Pacchetti Python vari (non siamo stati molto creativi)."

#. type: table
#: guix-git/doc/contributing.texi:913
msgid "In any case, you can jump to a package definition using @command{guix edit} (@pxref{Invoking guix edit}) and view its location with @command{guix show} (@pxref{Invoking guix package})."
msgstr "In ogni caso, puoi saltare alla definizione di un pacchetto usando @command{guix edit} (@pxref{Invoking guix edit}) e visualizzare la sua posizione con @command{guix show} (@pxref{Invoking guix package})."

#. type: findex
#: guix-git/doc/contributing.texi:914
#, fuzzy, no-wrap
#| msgid "Submitting Patches"
msgid "search-patches"
msgstr "Invia delle Patches"

#. type: item
#: guix-git/doc/contributing.texi:915
#, no-wrap
msgid "gnu/packages/patches"
msgstr "gnu/packages/patches"

#. type: table
#: guix-git/doc/contributing.texi:918
msgid "This directory contains patches applied against packages and obtained using the @code{search-patches} procedure."
msgstr "Questa directory contiene le patch applicate ai pacchetti e ottenute usando la procedura @code{search-patches}."

#. type: item
#: guix-git/doc/contributing.texi:919
#, fuzzy, no-wrap
#| msgid "Services"
msgid "gnu/services"
msgstr "Servizi"

#. type: table
#: guix-git/doc/contributing.texi:923
msgid "This contains service definitions, primarily for Guix System (@pxref{Services}) but some of them are adapted and reused for Guix Home as we will see below.  Examples:"
msgstr "Contiene definizioni di servizi, principalmente per Guix System (@pxref{Services}) ma alcuni di essi sono adattati e riutilizzati per Guix Home, come vedremo più avanti. Esempi:"

#. type: item
#: guix-git/doc/contributing.texi:925
#, fuzzy, no-wrap
#| msgid "Services"
msgid "(gnu services)"
msgstr "Servizi"

#. type: table
#: guix-git/doc/contributing.texi:928
msgid "The service framework itself, which defines the service and service type data types (@pxref{Service Composition})."
msgstr "Il framework dei servizi stesso, che definisce i tipi di dati di servizio e di tipo di servizio (@pxref{Service Composition})."

#. type: item
#: guix-git/doc/contributing.texi:928
#, no-wrap
msgid "(gnu services base)"
msgstr "(gnu services base)"

#. type: table
#: guix-git/doc/contributing.texi:930
msgid "``Base'' services (@pxref{Base Services})."
msgstr "Servizi di ``base'' (@pxref{Base Services})."

#. type: item
#: guix-git/doc/contributing.texi:930
#, fuzzy, no-wrap
#| msgid "Services"
msgid "(gnu services desktop)"
msgstr "Servizi"

#. type: table
#: guix-git/doc/contributing.texi:932
#, fuzzy
#| msgid "Services"
msgid "``Desktop'' services (@pxref{Desktop Services})."
msgstr "Servizi"

#. type: item
#: guix-git/doc/contributing.texi:932
#, no-wrap
msgid "(gnu services shepherd)"
msgstr "(gnu services shepherd)"

#. type: table
#: guix-git/doc/contributing.texi:934
msgid "Support for Shepherd services (@pxref{Shepherd Services})."
msgstr "Supporto per i servizi Shepherd (@pxref{Shepherd Services})."

#. type: table
#: guix-git/doc/contributing.texi:939
msgid "You can jump to a service definition using @command{guix system edit} and view its location with @command{guix system search} (@pxref{Invoking guix system})."
msgstr "Puoi saltare alla definizione di un servizio usando @command{guix system edit} e visualizzare la sua posizione con @command{guix system search} (@pxref{Invoking guix system})."

#. type: item
#: guix-git/doc/contributing.texi:940
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "gnu/system"
msgstr "Filesystem"

#. type: table
#: guix-git/doc/contributing.texi:942
msgid "These are core Guix System modules, such as:"
msgstr "Questi sono i moduli principali di Guix System, come:"

#. type: item
#: guix-git/doc/contributing.texi:944
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "(gnu system)"
msgstr "Filesystem"

#. type: table
#: guix-git/doc/contributing.texi:946
msgid "Defines @code{operating-system} (@pxref{operating-system Reference})."
msgstr "Definisce @code{operating-system} (@pxref{operating-system Reference})."

#. type: item
#: guix-git/doc/contributing.texi:946
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "(gnu system file-systems)"
msgstr "Filesystem"

#. type: table
#: guix-git/doc/contributing.texi:948
msgid "Defines @code{file-system} (@pxref{File Systems})."
msgstr "Definisce @code{file-system} (@pxref{File Systems})."

#. type: item
#: guix-git/doc/contributing.texi:948
#, no-wrap
msgid "(gnu system mapped-devices)"
msgstr "(gnu system mapped-devices)"

#. type: table
#: guix-git/doc/contributing.texi:950
msgid "Defines @code{mapped-device} (@pxref{Mapped Devices})."
msgstr "Definisce @code{mapped-device} (@pxref{Mapped Devices})."

#. type: item
#: guix-git/doc/contributing.texi:952
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "gnu/build"
msgstr "Filesystem"

#. type: table
#: guix-git/doc/contributing.texi:956
msgid "These are modules that are either used on the ``build side'' when building operating systems or packages, or at run time by operating systems."
msgstr "Questi sono moduli usati sul ``lato build'' quando si costruiscono sistemi operativi o pacchetti, o a runtime dai sistemi operativi."

#. type: item
#: guix-git/doc/contributing.texi:958
#, no-wrap
msgid "(gnu build accounts)"
msgstr "(gnu build accounts)"

#. type: table
#: guix-git/doc/contributing.texi:961
msgid "Creating @file{/etc/passwd}, @file{/etc/shadow}, etc. (@pxref{User Accounts})."
msgstr "Creazione di @file{/etc/passwd}, @file{/etc/shadow}, ecc. (@pxref{User Accounts})."

#. type: item
#: guix-git/doc/contributing.texi:961
#, no-wrap
msgid "(gnu build activation)"
msgstr "(gnu build activation)"

#. type: table
#: guix-git/doc/contributing.texi:963
msgid "Activating an operating system at boot time or reconfiguration time."
msgstr "Attivazione di un sistema operativo all'avvio o durante la riconfigurazione."

#. type: item
#: guix-git/doc/contributing.texi:963
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "(gnu build file-systems)"
msgstr "Filesystem"

#. type: table
#: guix-git/doc/contributing.texi:965
msgid "Searching, checking, and mounting file systems."
msgstr "Ricerca, controllo e montaggio dei file system."

#. type: item
#: guix-git/doc/contributing.texi:965
#, no-wrap
msgid "(gnu build linux-boot)"
msgstr "(gnu build linux-boot)"

#. type: itemx
#: guix-git/doc/contributing.texi:966
#, no-wrap
msgid "(gnu build hurd-boot)"
msgstr "(gnu build hurd-boot)"

#. type: table
#: guix-git/doc/contributing.texi:968
msgid "Booting GNU/Linux and GNU/Hurd operating systems."
msgstr "Avvio dei sistemi operativi GNU/Linux e GNU/Hurd."

#. type: item
#: guix-git/doc/contributing.texi:968
#, no-wrap
msgid "(gnu build linux-initrd)"
msgstr "(gnu build linux-initrd)"

#. type: table
#: guix-git/doc/contributing.texi:970
msgid "Creating a Linux initial RAM disk (@pxref{Initial RAM Disk})."
msgstr "Creazione di un disco RAM iniziale di Linux (@pxref{Initial RAM Disk})."

#. type: item
#: guix-git/doc/contributing.texi:972
#, no-wrap
msgid "gnu/home"
msgstr "gnu/home"

#. type: table
#: guix-git/doc/contributing.texi:975
msgid "This contains all things Guix Home (@pxref{Home Configuration}); examples:"
msgstr "Contiene tutto ciò che riguarda Guix Home (@pxref{Home Configuration}); esempi:"

#. type: item
#: guix-git/doc/contributing.texi:977
#, fuzzy, no-wrap
#| msgid "Services"
msgid "(gnu home services)"
msgstr "Servizi"

#. type: table
#: guix-git/doc/contributing.texi:979
#, fuzzy
#| msgid "Services"
msgid "Core services such as @code{home-files-service-type}."
msgstr "Servizi"

#. type: item
#: guix-git/doc/contributing.texi:979
#, fuzzy, no-wrap
#| msgid "Services"
msgid "(gnu home services ssh)"
msgstr "Servizi"

#. type: table
#: guix-git/doc/contributing.texi:981
msgid "SSH-related services (@pxref{Secure Shell})."
msgstr "Servizi relativi a SSH (@pxref{Secure Shell})."

#. type: item
#: guix-git/doc/contributing.texi:983
#, no-wrap
msgid "gnu/installer"
msgstr "gnu/installer"

#. type: table
#: guix-git/doc/contributing.texi:986
msgid "This contains the text-mode graphical system installer (@pxref{Guided Graphical Installation})."
msgstr "Contiene l'installatore di sistema grafico in modalità testo (@pxref{Guided Graphical Installation})."

#. type: item
#: guix-git/doc/contributing.texi:987
#, no-wrap
msgid "gnu/machine"
msgstr "gnu/machine"

#. type: table
#: guix-git/doc/contributing.texi:990
msgid "These are the @dfn{machine abstractions} used by @command{guix deploy} (@pxref{Invoking guix deploy})."
msgstr "Queste sono le @dfn{astrazioni di macchina} usate da @command{guix deploy} (@pxref{Invoking guix deploy})."

#. type: item
#: guix-git/doc/contributing.texi:991
#, no-wrap
msgid "gnu/tests"
msgstr "gnu/tests"

#. type: table
#: guix-git/doc/contributing.texi:994
msgid "This contains system tests---tests that spawn virtual machines to check that system services work as expected (@pxref{Running the Test Suite})."
msgstr "Contiene i test di sistema --- test che avviano macchine virtuali per verificare che i servizi di sistema funzionino come previsto (@pxref{Running the Test Suite})."

#. type: Plain text
#: guix-git/doc/contributing.texi:998
msgid "Last, there's also a few directories that contain files that are @emph{not} Guile modules:"
msgstr "Infine, ci sono anche alcune directory che contengono file che @emph{not} sono moduli Guile:"

#. type: item
#: guix-git/doc/contributing.texi:1000
#, no-wrap
msgid "nix"
msgstr "nix"

#. type: table
#: guix-git/doc/contributing.texi:1003
msgid "This is the C++ implementation of @command{guix-daemon}, inherited from Nix (@pxref{Invoking guix-daemon})."
msgstr "Questa è l'implementazione C++ di @command{guix-daemon}, ereditata da Nix (@pxref{Invoking guix-daemon})."

#. type: item
#: guix-git/doc/contributing.texi:1004
#, no-wrap
msgid "tests"
msgstr "tests"

#. type: table
#: guix-git/doc/contributing.texi:1008
msgid "These are unit tests, each file corresponding more or less to one module, in particular @code{(guix @dots{})} modules (@pxref{Running the Test Suite})."
msgstr "Questi sono i test unitari, ogni file corrisponde più o meno a un modulo, in particolare ai moduli @code{(guix @dots{})} (@pxref{Running the Test Suite})."

#. type: item
#: guix-git/doc/contributing.texi:1009
#, no-wrap
msgid "doc"
msgstr "doc"

#. type: table
#: guix-git/doc/contributing.texi:1013
msgid "This is the documentation in the form of Texinfo files: this manual and the Cookbook.  @xref{Writing a Texinfo File,,, texinfo, GNU Texinfo}, for information on Texinfo markup language."
msgstr "Questa è la documentazione in forma di file Texinfo: questo manuale e il Cookbook. @xref{Writing a Texinfo File,,, texinfo, GNU Texinfo}, per informazioni sul linguaggio di markup Texinfo."

#. type: item
#: guix-git/doc/contributing.texi:1014
#, no-wrap
msgid "po"
msgstr "po"

#. type: table
#: guix-git/doc/contributing.texi:1019
msgid "This is the location of translations of Guix itself, of package synopses and descriptions, of the manual, and of the cookbook.  Note that @file{.po} files that live here are pulled directly from Weblate (@pxref{Translating Guix})."
msgstr "Questa è la posizione delle traduzioni di Guix stesso, delle sinossi e descrizioni dei pacchetti, del manuale e del cookbook. Nota che i file @file{.po} che si trovano qui sono prelevati direttamente da Weblate (@pxref{Translating Guix})."

#. type: item
#: guix-git/doc/contributing.texi:1020
#, no-wrap
msgid "etc"
msgstr "etc"

#. type: table
#: guix-git/doc/contributing.texi:1023
msgid "Miscellaneous files: shell completions, support for systemd and other init systems, Git hooks, etc."
msgstr "File vari: completamenti della shell, supporto per systemd e altri sistemi di init, hook di Git, ecc."

#. type: Plain text
#: guix-git/doc/contributing.texi:1030
msgid "With all this, a fair chunk of your operating system is at your fingertips! Beyond @command{grep} and @command{git grep}, @pxref{The Perfect Setup} on how to navigate code from your editor, and @pxref{Using Guix Interactively} for information on how to use Scheme modules interactively.  Enjoy!"
msgstr "Con tutto questo, una buona parte del tuo sistema operativo è a portata di mano! Oltre a @command{grep} e @command{git grep}, @pxref{The Perfect Setup} su come navigare nel codice dal tuo editor, e @pxref{Using Guix Interactively} per informazioni su come usare i moduli Scheme in modo interattivo. Divertiti!"

#. type: cindex
#: guix-git/doc/contributing.texi:1034
#, no-wrap
msgid "packages, creating"
msgstr "pacchetti, creazione"

#. type: Plain text
#: guix-git/doc/contributing.texi:1038
msgid "The GNU distribution is nascent and may well lack some of your favorite packages.  This section describes how you can help make the distribution grow."
msgstr "La distribuzione GNU è nascente e potrebbe mancare di alcuni dei tuoi pacchetti preferiti. Questa sezione descrive come puoi contribuire a far crescere la distribuzione."

#. type: Plain text
#: guix-git/doc/contributing.texi:1046
msgid "Free software packages are usually distributed in the form of @dfn{source code tarballs}---typically @file{tar.gz} files that contain all the source files.  Adding a package to the distribution means essentially two things: adding a @dfn{recipe} that describes how to build the package, including a list of other packages required to build it, and adding @dfn{package metadata} along with that recipe, such as a description and licensing information."
msgstr "I pacchetti di software libero sono solitamente distribuiti sotto forma di @dfn{tarball di codice sorgente}---tipicamente file @file{tar.gz} che contengono tutti i file sorgente. Aggiungere un pacchetto alla distribuzione significa essenzialmente due cose: aggiungere una @dfn{recipe} che descrive come costruire il pacchetto, inclusa una lista di altri pacchetti richiesti per costruirlo, e aggiungere @dfn{metadati del pacchetto} insieme a quella ricetta, come una descrizione e informazioni sulla licenza."

#. type: Plain text
#: guix-git/doc/contributing.texi:1055
msgid "In Guix all this information is embodied in @dfn{package definitions}.  Package definitions provide a high-level view of the package.  They are written using the syntax of the Scheme programming language; in fact, for each package we define a variable bound to the package definition, and export that variable from a module (@pxref{Package Modules}).  However, in-depth Scheme knowledge is @emph{not} a prerequisite for creating packages.  For more information on package definitions, @pxref{Defining Packages}."
msgstr "In Guix tutte queste informazioni sono incarnate nelle @dfn{definizioni di pacchetto}. Le definizioni di pacchetto forniscono una visione di alto livello del pacchetto. Sono scritte usando la sintassi del linguaggio di programmazione Scheme; infatti, per ogni pacchetto definiamo una variabile associata alla definizione del pacchetto, e esportiamo quella variabile da un modulo (@pxref{Package Modules}). Tuttavia, una conoscenza approfondita di Scheme @emph{non} è un prerequisito per creare pacchetti. Per maggiori informazioni sulle definizioni di pacchetto, @pxref{Defining Packages}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1061
msgid "Once a package definition is in place, stored in a file in the Guix source tree, it can be tested using the @command{guix build} command (@pxref{Invoking guix build}).  For example, assuming the new package is called @code{gnew}, you may run this command from the Guix build tree (@pxref{Running Guix Before It Is Installed}):"
msgstr "Una volta che una definizione di pacchetto è al suo posto, salvata in un file nell'albero dei sorgenti di Guix, può essere testata usando il comando @command{guix build} (@pxref{Invoking guix build}). Ad esempio, assumendo che il nuovo pacchetto si chiami @code{gnew}, puoi eseguire questo comando dall'albero di compilazione di Guix (@pxref{Running Guix Before It Is Installed}):"

#. type: example
#: guix-git/doc/contributing.texi:1064
#, no-wrap
msgid "./pre-inst-env guix build gnew --keep-failed\n"
msgstr "./pre-inst-env guix build gnew --keep-failed\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:1070
msgid "Using @code{--keep-failed} makes it easier to debug build failures since it provides access to the failed build tree.  Another useful command-line option when debugging is @code{--log-file}, to access the build log."
msgstr "L'uso di @code{--keep-failed} rende più facile il debug dei fallimenti di compilazione poiché fornisce accesso all'albero di compilazione fallito. Un'altra opzione utile della riga di comando durante il debug è @code{--log-file}, per accedere al log di compilazione."

#. type: Plain text
#: guix-git/doc/contributing.texi:1075
msgid "If the package is unknown to the @command{guix} command, it may be that the source file contains a syntax error, or lacks a @code{define-public} clause to export the package variable.  To figure it out, you may load the module from Guile to get more information about the actual error:"
msgstr "Se il pacchetto è sconosciuto al comando @command{guix}, potrebbe essere che il file sorgente contenga un errore di sintassi, o manchi una clausola @code{define-public} per esportare la variabile del pacchetto. Per capirlo, puoi caricare il modulo da Guile per ottenere maggiori informazioni sull'errore effettivo:"

#. type: example
#: guix-git/doc/contributing.texi:1078
#, no-wrap
msgid "./pre-inst-env guile -c '(use-modules (gnu packages gnew))'\n"
msgstr "./pre-inst-env guile -c '(use-modules (gnu packages gnew))'\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:1085
msgid "Once your package builds correctly, please send us a patch (@pxref{Submitting Patches}).  Well, if you need help, we will be happy to help you too.  Once the patch is committed in the Guix repository, the new package automatically gets built on the supported platforms by @url{https://@value{SUBSTITUTE-SERVER-1}, our continuous integration system}."
msgstr "Una volta che il tuo pacchetto si compila correttamente, inviaci una patch (@pxref{Submitting Patches}). Beh, se hai bisogno di aiuto, saremo felici di aiutarti anche noi. Una volta che la patch è stata committata nel repository di Guix, il nuovo pacchetto viene automaticamente costruito sulle piattaforme supportate da @url{https://@value{SUBSTITUTE-SERVER-1}, il nostro sistema di integrazione continua}."

#. type: cindex
#: guix-git/doc/contributing.texi:1086
#, no-wrap
msgid "substituter"
msgstr "sostituto"

#. type: Plain text
#: guix-git/doc/contributing.texi:1093
msgid "Users can obtain the new package definition simply by running @command{guix pull} (@pxref{Invoking guix pull}).  When @code{@value{SUBSTITUTE-SERVER-1}} is done building the package, installing the package automatically downloads binaries from there (@pxref{Substitutes}).  The only place where human intervention is needed is to review and apply the patch."
msgstr "Gli utenti possono ottenere la nuova definizione di pacchetto semplicemente eseguendo @command{guix pull} (@pxref{Invoking guix pull}). Quando @code{@value{SUBSTITUTE-SERVER-1}} ha finito di costruire il pacchetto, l'installazione del pacchetto scarica automaticamente i binari da lì (@pxref{Substitutes}). L'unico punto in cui è necessario l'intervento umano è per la revisione e l'applicazione della patch."

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1112
#: guix-git/doc/contributing.texi:1113
#, no-wrap
msgid "Software Freedom"
msgstr "Libertà del software"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "What may go into the distribution."
msgstr "Cosa può essere incluso nella distribuzione."

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1140
#: guix-git/doc/contributing.texi:1141
#, no-wrap
msgid "Package Naming"
msgstr "Denominazione dei pacchetti"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "What's in a name?"
msgstr "Cosa c'è in un nome?"

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1173
#: guix-git/doc/contributing.texi:1174
#, no-wrap
msgid "Version Numbers"
msgstr "Numeri di versione"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "When the name is not enough."
msgstr "Quando il nome non basta."

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1280
#: guix-git/doc/contributing.texi:1281
#, no-wrap
msgid "Synopses and Descriptions"
msgstr "Sinossi e descrizioni"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "Helping users find the right package."
msgstr "Aiutare gli utenti a trovare il pacchetto giusto."

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1359
#: guix-git/doc/contributing.texi:1360
#, no-wrap
msgid "Snippets versus Phases"
msgstr "Snippet contro fasi"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "Whether to use a snippet, or a build phase."
msgstr "Se usare uno snippet o una fase di compilazione."

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1374
#: guix-git/doc/contributing.texi:1375
#, no-wrap
msgid "Cyclic Module Dependencies"
msgstr "Dipendenze cicliche tra moduli"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "Going full circle."
msgstr "Chiudere il cerchio."

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1429
#: guix-git/doc/contributing.texi:1430
#, fuzzy, no-wrap
#| msgid "Bulk updates"
msgid "Bulk Updates"
msgstr "Aggiornamenti massivi"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
#, fuzzy
#| msgid "This Little Maneuver's Gonna Cost Us 51 Years"
msgid "This Little Maneuver's Gonna Cost Us 51 Years."
msgstr "Questa piccola manovra ci costerà 51 anni"

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1463
#: guix-git/doc/contributing.texi:1464 guix-git/doc/guix.texi:2048
#, no-wrap
msgid "Emacs Packages"
msgstr "Pacchetti Emacs"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "Your Elisp fix."
msgstr "La tua dose di Elisp."

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1503
#: guix-git/doc/contributing.texi:1504
#, no-wrap
msgid "Python Modules"
msgstr "Moduli Python"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "A touch of British comedy."
msgstr "Un tocco di commedia britannica."

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1598
#: guix-git/doc/contributing.texi:1599
#, no-wrap
msgid "Perl Modules"
msgstr "Moduli Perl"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "Little pearls."
msgstr "Piccole perle."

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1614
#: guix-git/doc/contributing.texi:1615
#, no-wrap
msgid "Java Packages"
msgstr "Pacchetti Java"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "Coffee break."
msgstr "Pausa caffè."

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1634
#: guix-git/doc/contributing.texi:1635
#, no-wrap
msgid "Rust Crates"
msgstr "Crate Rust"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "Beware of oxidation."
msgstr "Attenzione all'ossidazione."

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1712
#: guix-git/doc/contributing.texi:1713
#, no-wrap
msgid "Elm Packages"
msgstr "Pacchetti Elm"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "Trees of browser code"
msgstr "Alberi di codice per browser"

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1793
#: guix-git/doc/contributing.texi:1794
#, no-wrap
msgid "Fonts"
msgstr "Font"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "Fond of fonts."
msgstr "Amante dei font."

#. type: cindex
#: guix-git/doc/contributing.texi:1116
#, no-wrap
msgid "free software"
msgstr "software libero"

#. type: Plain text
#: guix-git/doc/contributing.texi:1124
msgid "The GNU operating system has been developed so that users can have freedom in their computing.  GNU is @dfn{free software}, meaning that users have the @url{https://www.gnu.org/philosophy/free-sw.html,four essential freedoms}: to run the program, to study and change the program in source code form, to redistribute exact copies, and to distribute modified versions.  Packages found in the GNU distribution provide only software that conveys these four freedoms."
msgstr "Il sistema operativo GNU è stato sviluppato affinché gli utenti possano avere libertà nella loro informatica. GNU è @dfn{software libero}, il che significa che gli utenti hanno le @url{https://www.gnu.org/philosophy/free-sw.html, quattro libertà essenziali}: eseguire il programma, studiare e modificare il programma in forma di codice sorgente, ridistribuire copie esatte e distribuire versioni modificate. I pacchetti trovati nella distribuzione GNU forniscono solo software che trasmette queste quattro libertà."

#. type: Plain text
#: guix-git/doc/contributing.texi:1130
msgid "In addition, the GNU distribution follow the @url{https://www.gnu.org/distros/free-system-distribution-guidelines.html,free software distribution guidelines}.  Among other things, these guidelines reject non-free firmware, recommendations of non-free software, and discuss ways to deal with trademarks and patents."
msgstr "Inoltre, la distribuzione GNU segue le @url{https://www.gnu.org/distros/free-system-distribution-guidelines.html, linee guida per la distribuzione di software libero}. Tra le altre cose, queste linee guida rifiutano il firmware non libero, le raccomandazioni di software non libero, e discutono i modi per affrontare i marchi e i brevetti."

#. type: Plain text
#: guix-git/doc/contributing.texi:1138
msgid "Some otherwise free upstream package sources contain a small and optional subset that violates the above guidelines, for instance because this subset is itself non-free code.  When that happens, the offending items are removed with appropriate patches or code snippets in the @code{origin} form of the package (@pxref{Defining Packages}).  This way, @code{guix build --source} returns the ``freed'' source rather than the unmodified upstream source."
msgstr "Alcuni pacchetti sorgente upstream, altrimenti liberi, contengono un piccolo sottoinsieme opzionale che viola le linee guida sopra menzionate, ad esempio perché questo sottoinsieme è esso stesso codice non libero. Quando ciò accade, gli elementi problematici vengono rimossi con patch o frammenti di codice appropriati nel modulo @code{origin} del pacchetto (@pxref{Defining Packages}). In questo modo, @code{guix build --source} restituisce il codice sorgente ``liberato'' piuttosto che il codice sorgente upstream non modificato."

#. type: cindex
#: guix-git/doc/contributing.texi:1143
#, no-wrap
msgid "package name"
msgstr "nome del pacchetto"

#. type: Plain text
#: guix-git/doc/contributing.texi:1151
msgid "A package actually has two names associated with it.  First, there is the name of the @emph{Scheme variable}, the one following @code{define-public}.  By this name, the package can be made known in the Scheme code, for instance as input to another package.  Second, there is the string in the @code{name} field of a package definition.  This name is used by package management commands such as @command{guix package} and @command{guix build}."
msgstr "Un pacchetto ha in realtà due nomi associati. Innanzitutto, c'è il nome della @emph{variabile Scheme}, quella che segue @code{define-public}. Con questo nome, il pacchetto può essere reso noto nel codice Scheme, ad esempio come input per un altro pacchetto. In secondo luogo, c'è la stringa nel campo @code{name} di una definizione di pacchetto. Questo nome è usato dai comandi di gestione dei pacchetti come @command{guix package} e @command{guix build}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1156
msgid "Both are usually the same and correspond to the lowercase conversion of the project name chosen upstream, with underscores replaced with hyphens.  For instance, GNUnet is available as @code{gnunet}, and SDL_net as @code{sdl-net}."
msgstr "Entrambi sono di solito uguali e corrispondono alla conversione in minuscolo del nome del progetto scelto upstream, con i trattini bassi sostituiti da trattini. Ad esempio, GNUnet è disponibile come @code{gnunet}, e SDL_net come @code{sdl-net}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1164
msgid "A noteworthy exception to this rule is when the project name is only a single character, or if an older maintained project with the same name already exists---regardless of whether it has already been packaged for Guix.  Use common sense to make such names unambiguous and meaningful.  For example, Guix's package for the shell called ``s'' upstream is @code{s-shell} and @emph{not} @code{s}.  Feel free to ask your fellow hackers for inspiration."
msgstr "Un'eccezione degna di nota a questa regola è quando il nome del progetto è un singolo carattere, o se esiste già un progetto più vecchio mantenuto con lo stesso nome --- indipendentemente dal fatto che sia già stato pacchettizzato per Guix. Usa il buon senso per rendere tali nomi non ambigui e significativi. Ad esempio, il pacchetto di Guix per la shell chiamata ``s'' upstream è @code{s-shell} e @emph{not} @code{s}. Sentiti libero di chiedere ispirazione ai tuoi compagni hacker."

#. type: Plain text
#: guix-git/doc/contributing.texi:1169
msgid "We do not add @code{lib} prefixes for library packages, unless these are already part of the official project name.  But @pxref{Python Modules} and @ref{Perl Modules} for special rules concerning modules for the Python and Perl languages."
msgstr "Non aggiungiamo prefissi @code{lib} per i pacchetti di librerie, a meno che non facciano già parte del nome ufficiale del progetto. Ma vedi @pxref{Python Modules} e @ref{Perl Modules} per le regole speciali riguardanti i moduli per i linguaggi Python e Perl."

#. type: Plain text
#: guix-git/doc/contributing.texi:1171
msgid "Font package names are handled differently, @pxref{Fonts}."
msgstr "I nomi dei pacchetti di font sono gestiti in modo diverso, @pxref{Fonts}."

#. type: cindex
#: guix-git/doc/contributing.texi:1176
#, no-wrap
msgid "package version"
msgstr "versione del pacchetto"

#. type: Plain text
#: guix-git/doc/contributing.texi:1185
msgid "We usually package only the latest version of a given free software project.  But sometimes, for instance for incompatible library versions, two (or more) versions of the same package are needed.  These require different Scheme variable names.  We use the name as defined in @ref{Package Naming} for the most recent version; previous versions use the same name, suffixed by @code{-} and the smallest prefix of the version number that may distinguish the two versions."
msgstr "Di solito pacchettizziamo solo l'ultima versione di un dato progetto di software libero. Ma a volte, ad esempio per versioni di librerie incompatibili, sono necessarie due (o più) versioni dello stesso pacchetto. Queste richiedono nomi di variabili Scheme diversi. Usiamo il nome come definito in @ref{Package Naming} per la versione più recente; le versioni precedenti usano lo stesso nome, con suffisso @code{-} e il più piccolo prefisso del numero di versione che può distinguere le due versioni."

#. type: Plain text
#: guix-git/doc/contributing.texi:1188
msgid "The name inside the package definition is the same for all versions of a package and does not contain any version number."
msgstr "Il nome all'interno della definizione del pacchetto è lo stesso per tutte le versioni di un pacchetto e non contiene alcun numero di versione."

#. type: Plain text
#: guix-git/doc/contributing.texi:1190
msgid "For instance, the versions 2.24.20 and 3.9.12 of GTK+ may be packaged as follows:"
msgstr "Ad esempio, le versioni 2.24.20 e 3.9.12 di GTK+ possono essere pacchettizzate come segue:"

#. type: lisp
#: guix-git/doc/contributing.texi:1202
#, no-wrap
msgid ""
"(define-public gtk+\n"
"  (package\n"
"    (name \"gtk+\")\n"
"    (version \"3.9.12\")\n"
"    ...))\n"
"(define-public gtk+-2\n"
"  (package\n"
"    (name \"gtk+\")\n"
"    (version \"2.24.20\")\n"
"    ...))\n"
msgstr ""
"(define-public gtk+\n"
"  (package\n"
"    (name \"gtk+\")\n"
"    (version \"3.9.12\")\n"
"    ...))\n"
"(define-public gtk+-2\n"
"  (package\n"
"    (name \"gtk+\")\n"
"    (version \"2.24.20\")\n"
"    ...))\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:1204
msgid "If we also wanted GTK+ 3.8.2, this would be packaged as"
msgstr "Se volessimo anche GTK+ 3.8.2, sarebbe pacchettizzato come"

#. type: lisp
#: guix-git/doc/contributing.texi:1210
#, no-wrap
msgid ""
"(define-public gtk+-3.8\n"
"  (package\n"
"    (name \"gtk+\")\n"
"    (version \"3.8.2\")\n"
"    ...))\n"
msgstr ""
"(define-public gtk+-3.8\n"
"  (package\n"
"    (name \"gtk+\")\n"
"    (version \"3.8.2\")\n"
"    ...))\n"

#. type: cindex
#: guix-git/doc/contributing.texi:1214
#, no-wrap
msgid "version number, for VCS snapshots"
msgstr "numero di versione, per le istantanee VCS"

#. type: Plain text
#: guix-git/doc/contributing.texi:1220
msgid "Occasionally, we package snapshots of upstream's version control system (VCS) instead of formal releases.  This should remain exceptional, because it is up to upstream developers to clarify what the stable release is.  Yet, it is sometimes necessary.  So, what should we put in the @code{version} field?"
msgstr "Occasionalmente, pacchettizziamo istantanee del sistema di controllo di versione (VCS) di upstream invece di rilasci formali. Questo dovrebbe rimanere un'eccezione, perché spetta agli sviluppatori upstream chiarire qual è la versione stabile. Tuttavia, a volte è necessario. Quindi, cosa dovremmo mettere nel campo @code{version}?"

#. type: Plain text
#: guix-git/doc/contributing.texi:1228
msgid "Clearly, we need to make the commit identifier of the VCS snapshot visible in the version string, but we also need to make sure that the version string is monotonically increasing so that @command{guix package --upgrade} can determine which version is newer.  Since commit identifiers, notably with Git, are not monotonically increasing, we add a revision number that we increase each time we upgrade to a newer snapshot.  The resulting version string looks like this:"
msgstr "Chiaramente, dobbiamo rendere visibile l'identificatore del commit della istantanea VCS nella stringa di versione, ma dobbiamo anche assicurarci che la stringa di versione sia monotonicamente crescente in modo che @command{guix package --upgrade} possa determinare quale versione è più recente. Poiché gli identificatori di commit, in particolare con Git, non sono monotonicamente crescenti, aggiungiamo un numero di revisione che incrementiamo ogni volta che aggiorniamo a una nuova istantanea. La stringa di versione risultante assomiglia a questa:"

#. type: example
#: guix-git/doc/contributing.texi:1237
#, no-wrap
msgid ""
"2.0.11-3.cabba9e\n"
"  ^    ^    ^\n"
"  |    |    `-- upstream commit ID\n"
"  |    |\n"
"  |    `--- Guix package revision\n"
"  |\n"
"latest upstream version\n"
msgstr ""
"2.0.11-3.cabba9e\n"
"  ^    ^    ^\n"
"  |    |    `-- ID commit upstream\n"
"  |    |\n"
"  |    `--- Revisione pacchetto Guix\n"
"  |\n"
"ultima versione upstream\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:1247
msgid "It is a good idea to strip commit identifiers in the @code{version} field to, say, 7 digits.  It avoids an aesthetic annoyance (assuming aesthetics have a role to play here) as well as problems related to OS limits such as the maximum shebang length (127 bytes for the Linux kernel).  There are helper functions for doing this for packages using @code{git-fetch} or @code{hg-fetch} (see below).  It is best to use the full commit identifiers in @code{origin}s, though, to avoid ambiguities.  A typical package definition may look like this:"
msgstr "È una buona idea troncare gli identificatori di commit nel campo @code{version} a, diciamo, 7 cifre. Questo evita un fastidio estetico (supponendo che l'estetica abbia un ruolo qui) così come problemi legati ai limiti del SO come la lunghezza massima dello shebang (127 byte per il kernel Linux). Ci sono funzioni di aiuto per fare questo per i pacchetti che usano @code{git-fetch} o @code{hg-fetch} (vedi sotto). È meglio usare gli identificatori di commit completi negli @code{origin}, però, per evitare ambiguità. Una definizione di pacchetto tipica potrebbe assomigliare a questa:"

#. type: lisp
#: guix-git/doc/contributing.texi:1264
#, no-wrap
msgid ""
"(define my-package\n"
"  (let ((commit \"c3f29bc928d5900971f65965feaae59e1272a3f7\")\n"
"        (revision \"1\"))          ;Guix package revision\n"
"    (package\n"
"      (version (git-version \"0.9\" revision commit))\n"
"      (source (origin\n"
"                (method git-fetch)\n"
"                (uri (git-reference\n"
"                      (url \"git://example.org/my-package.git\")\n"
"                      (commit commit)))\n"
"                (sha256 (base32 \"1mbikn@dots{}\"))\n"
"                (file-name (git-file-name name version))))\n"
"      ;; @dots{}\n"
"      )))\n"
msgstr ""
"(define my-package\n"
"  (let ((commit \"c3f29bc928d5900971f65965feaae59e1272a3f7\")\n"
"        (revision \"1\"))          ;Revisione pacchetto Guix\n"
"    (package\n"
"      (version (git-version \"0.9\" revision commit))\n"
"      (source (origin\n"
"                (method git-fetch)\n"
"                (uri (git-reference\n"
"                      (url \"git://example.org/my-package.git\")\n"
"                      (commit commit)))\n"
"                (sha256 (base32 \"1mbikn@dots{}\"))\n"
"                (file-name (git-file-name name version))))\n"
"      ;; @dots{}\n"
"      )))\n"

#. type: deffn
#: guix-git/doc/contributing.texi:1266
#, no-wrap
msgid "{Procedure} git-version @var{VERSION} @var{REVISION} @var{COMMIT}"
msgstr "{Procedure} git-version @var{VERSION} @var{REVISION} @var{COMMIT}"

#. type: deffn
#: guix-git/doc/contributing.texi:1268
msgid "Return the version string for packages using @code{git-fetch}."
msgstr "Restituisce la stringa di versione per i pacchetti che usano @code{git-fetch}."

#. type: lisp
#: guix-git/doc/contributing.texi:1272
#, no-wrap
msgid ""
"(git-version \"0.2.3\" \"0\" \"93818c936ee7e2f1ba1b315578bde363a7d43d05\")\n"
"@result{} \"0.2.3-0.93818c9\"\n"
msgstr ""
"(git-version \"0.2.3\" \"0\" \"93818c936ee7e2f1ba1b315578bde363a7d43d05\")\n"
"@result{} \"0.2.3-0.93818c9\"\n"

#. type: deffn
#: guix-git/doc/contributing.texi:1275
#, no-wrap
msgid "{Procedure} hg-version @var{VERSION} @var{REVISION} @var{CHANGESET}"
msgstr "{Procedure} hg-version @var{VERSION} @var{REVISION} @var{CHANGESET}"

#. type: deffn
#: guix-git/doc/contributing.texi:1278
msgid "Return the version string for packages using @code{hg-fetch}.  It works in the same way as @code{git-version}."
msgstr "Restituisce la stringa di versione per i pacchetti che usano @code{hg-fetch}. Funziona allo stesso modo di @code{git-version}."

#. type: cindex
#: guix-git/doc/contributing.texi:1283
#, no-wrap
msgid "package description"
msgstr "descrizione del pacchetto"

#. type: cindex
#: guix-git/doc/contributing.texi:1284
#, no-wrap
msgid "package synopsis"
msgstr "sinossi del pacchetto"

#. type: Plain text
#: guix-git/doc/contributing.texi:1291
msgid "As we have seen before, each package in GNU@tie{}Guix includes a synopsis and a description (@pxref{Defining Packages}).  Synopses and descriptions are important: They are what @command{guix package --search} searches, and a crucial piece of information to help users determine whether a given package suits their needs.  Consequently, packagers should pay attention to what goes into them."
msgstr "Come abbiamo visto prima, ogni pacchetto in GNU@tie{}Guix include una sinossi e una descrizione (@pxref{Defining Packages}). Sinossi e descrizioni sono importanti: sono ciò che @command{guix package --search} cerca, e un pezzo di informazione cruciale per aiutare gli utenti a determinare se un dato pacchetto soddisfa le loro esigenze. Di conseguenza, i pacchettizzatori dovrebbero prestare attenzione a ciò che vi inseriscono."

#. type: Plain text
#: guix-git/doc/contributing.texi:1299
msgid "Synopses must start with a capital letter and must not end with a period.  They must not start with ``a'' or ``the'', which usually does not bring anything; for instance, prefer ``File-frobbing tool'' over ``A tool that frobs files''.  The synopsis should say what the package is---e.g., ``Core GNU utilities (file, text, shell)''---or what it is used for---e.g., the synopsis for GNU@tie{}grep is ``Print lines matching a pattern''."
msgstr "Le sinossi devono iniziare con una lettera maiuscola e non devono terminare con un punto. Non devono iniziare con articoli, che di solito non aggiungono nulla; ad esempio, preferire ``Strumento per manipolare file'' a ``Uno strumento che manipola file''. La sinossi dovrebbe dire cosa è il pacchetto --- ad esempio, ``Utilità GNU di base (file, testo, shell)'' --- o a cosa serve --- ad esempio, la sinossi per GNU@tie{}grep è ``Stampa le righe che corrispondono a un modello''."

#. type: Plain text
#: guix-git/doc/contributing.texi:1309
msgid "Keep in mind that the synopsis must be meaningful for a very wide audience.  For example, ``Manipulate alignments in the SAM format'' might make sense for a seasoned bioinformatics researcher, but might be fairly unhelpful or even misleading to a non-specialized audience.  It is a good idea to come up with a synopsis that gives an idea of the application domain of the package.  In this example, this might give something like ``Manipulate nucleotide sequence alignments'', which hopefully gives the user a better idea of whether this is what they are looking for."
msgstr "Tieni presente che la sinossi deve essere significativa per un pubblico molto ampio. Ad esempio, ``Manipola allineamenti in formato SAM'' potrebbe avere senso per un ricercatore esperto di bioinformatica, ma potrebbe essere poco utile o addirittura fuorviante per un pubblico non specializzato. È una buona idea creare una sinossi che dia un'idea del dominio di applicazione del pacchetto. In questo esempio, si potrebbe ottenere qualcosa come ``Manipola allineamenti di sequenze nucleotidiche'', che si spera dia all'utente un'idea migliore se è quello che sta cercando."

#. type: Plain text
#: guix-git/doc/contributing.texi:1317
msgid "Descriptions should take between five and ten lines.  Use full sentences, and avoid using acronyms without first introducing them.  Please avoid marketing phrases such as ``world-leading'', ``industrial-strength'', and ``next-generation'', and avoid superlatives like ``the most advanced''---they are not helpful to users looking for a package and may even sound suspicious.  Instead, try to be factual, mentioning use cases and features."
msgstr "Le descrizioni dovrebbero essere lunghe tra le cinque e le dieci righe. Usa frasi complete ed evita di usare acronimi senza averli prima introdotti. Evita frasi di marketing come ``leader mondiale'', ``di forza industriale'' e ``di nuova generazione'', ed evita superlativi come ``il più avanzato'' --- non sono utili agli utenti che cercano un pacchetto e possono persino suonare sospetti. Invece, cerca di essere fattuale, menzionando casi d'uso e funzionalità."

#. type: cindex
#: guix-git/doc/contributing.texi:1318
#, no-wrap
msgid "Texinfo markup, in package descriptions"
msgstr "Markup Texinfo, nelle descrizioni dei pacchetti"

#. type: Plain text
#: guix-git/doc/contributing.texi:1327
msgid "Descriptions can include Texinfo markup, which is useful to introduce ornaments such as @code{@@code} or @code{@@dfn}, bullet lists, or hyperlinks (@pxref{Overview,,, texinfo, GNU Texinfo}).  However you should be careful when using some characters for example @samp{@@} and curly braces which are the basic special characters in Texinfo (@pxref{Special Characters,,, texinfo, GNU Texinfo}).  User interfaces such as @command{guix show} take care of rendering it appropriately."
msgstr "Le descrizioni possono includere il markup Texinfo, che è utile per introdurre ornamenti come @code{@@code} o @code{@@dfn}, elenchi puntati o collegamenti ipertestuali (@pxref{Overview,,, texinfo, GNU Texinfo}). Tuttavia, dovresti fare attenzione quando usi alcuni caratteri, ad esempio @samp{@@} e le parentesi graffe, che sono i caratteri speciali di base in Texinfo (@pxref{Special Characters,,, texinfo, GNU Texinfo}). Le interfacce utente come @command{guix show} si occupano di renderlo in modo appropriato."

#. type: Plain text
#: guix-git/doc/contributing.texi:1333
msgid "Synopses and descriptions are translated by volunteers @uref{https://translate.codeberg.org/projects/guix/packages, at Weblate} so that as many users as possible can read them in their native language.  User interfaces search them and display them in the language specified by the current locale."
msgstr "Sinossi e descrizioni sono tradotte da volontari su @uref{https://translate.codeberg.org/projects/guix/packages, Weblate} in modo che il maggior numero possibile di utenti possa leggerle nella propria lingua madre. Le interfacce utente le cercano e le visualizzano nella lingua specificata dalla localizzazione corrente."

#. type: Plain text
#: guix-git/doc/contributing.texi:1338
msgid "To allow @command{xgettext} to extract them as translatable strings, synopses and descriptions @emph{must be literal strings}.  This means that you cannot use @code{string-append} or @code{format} to construct these strings:"
msgstr "Per permettere a @command{xgettext} di estrarle come stringhe traducibili, le sinossi e le descrizioni @emph{devono essere stringhe letterali}. Questo significa che non puoi usare @code{string-append} o @code{format} per costruire queste stringhe:"

#. type: lisp
#: guix-git/doc/contributing.texi:1344
#, no-wrap
msgid ""
"(package\n"
"  ;; @dots{}\n"
"  (synopsis \"This is translatable\")\n"
"  (description (string-append \"This is \" \"*not*\" \" translatable.\")))\n"
msgstr ""
"(package\n"
"  ;; @dots{}\n"
"  (synopsis \"Questo è traducibile\")\n"
"  (description (string-append \"Questo \" \"*non*\" \" è traducibile.\")))\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:1352
msgid "Translation is a lot of work so, as a packager, please pay even more attention to your synopses and descriptions as every change may entail additional work for translators.  In order to help them, it is possible to make recommendations or instructions visible to them by inserting special comments like this (@pxref{xgettext Invocation,,, gettext, GNU Gettext}):"
msgstr "La traduzione è un lavoro impegnativo, quindi, come pacchettizzatore, ti preghiamo di prestare ancora più attenzione alle tue sinossi e descrizioni, poiché ogni modifica può comportare un lavoro aggiuntivo per i traduttori. Per aiutarli, è possibile rendere visibili raccomandazioni o istruzioni inserendo commenti speciali come questo (@pxref{xgettext Invocation,,, gettext, GNU Gettext}):"

#. type: lisp
#: guix-git/doc/contributing.texi:1357
#, no-wrap
msgid ""
";; TRANSLATORS: \"X11 resize-and-rotate\" should not be translated.\n"
"(description \"ARandR is designed to provide a simple visual front end\n"
"for the X11 resize-and-rotate (RandR) extension. @dots{}\")\n"
msgstr ""
";; TRANSLATORS: \"X11 resize-and-rotate\" non deve essere tradotto.\n"
"(description \"ARandR è progettato per fornire un semplice front-end visivo per l'estensione X11 resize-and-rotate (RandR). @dots{}\")\n"

#. type: cindex
#: guix-git/doc/contributing.texi:1362
#, no-wrap
msgid "snippets, when to use"
msgstr "snippet, quando usarli"

#. type: Plain text
#: guix-git/doc/contributing.texi:1373
msgid "The boundary between using an origin snippet versus a build phase to modify the sources of a package can be elusive.  Origin snippets are typically used to remove unwanted files such as bundled libraries, nonfree sources, or to apply simple substitutions.  The source derived from an origin should produce a source that can be used to build the package on any system that the upstream package supports (i.e., act as the corresponding source).  In particular, origin snippets must not embed store items in the sources; such patching should rather be done using build phases.  Refer to the @code{origin} record documentation for more information (@pxref{origin Reference})."
msgstr "Il confine tra l'uso di uno snippet di origine e una fase di compilazione per modificare i sorgenti di un pacchetto può essere sfuggente. Gli snippet di origine sono tipicamente usati per rimuovere file indesiderati come librerie incluse, sorgenti non liberi o per applicare semplici sostituzioni. Il sorgente derivato da un'origine dovrebbe produrre un sorgente che può essere usato per costruire il pacchetto su qualsiasi sistema supportato dal pacchetto upstream (cioè, agire come sorgente corrispondente). In particolare, gli snippet di origine non devono incorporare elementi dello store nei sorgenti; tale patching dovrebbe essere fatto usando le fasi di compilazione. Fai riferimento alla documentazione del record @code{origin} per maggiori informazioni (@pxref{origin Reference})."

#. type: Plain text
#: guix-git/doc/contributing.texi:1381
msgid "While there cannot be circular dependencies between packages, Guile's lax module loading mechanism allows circular dependencies between Guile modules, which doesn't cause problems as long as the following conditions are followed for two modules part of a dependency cycle:"
msgstr "Sebbene non possano esserci dipendenze circolari tra i pacchetti, il meccanismo di caricamento dei moduli di Guile, meno rigido, permette dipendenze circolari tra i moduli Guile, il che non causa problemi finché le seguenti condizioni sono rispettate per due moduli che fanno parte di un ciclo di dipendenze:"

#. type: cindex
#: guix-git/doc/contributing.texi:1382
#, no-wrap
msgid "rules to cope with circular module dependencies"
msgstr "regole per gestire le dipendenze circolari tra moduli"

#. type: enumerate
#: guix-git/doc/contributing.texi:1386
msgid "Macros are not shared between the co-dependent modules"
msgstr "Le macro non sono condivise tra i moduli co-dipendenti"

#. type: enumerate
#: guix-git/doc/contributing.texi:1390
msgid "Top-level variables are only referenced in delayed (@i{thunked}) package fields: @code{arguments}, @code{native-inputs}, @code{inputs}, @code{propagated-inputs} or @code{replacement}"
msgstr "Le variabili di primo livello sono referenziate solo nei campi di pacchetto ritardati (@i{thunked}): @code{arguments}, @code{native-inputs}, @code{inputs}, @code{propagated-inputs} o @code{replacement}"

#. type: enumerate
#: guix-git/doc/contributing.texi:1393
msgid "Procedures referencing top-level variables from another module are not called at the top level of a module themselves."
msgstr "Le procedure che referenziano variabili di primo livello di un altro modulo non sono chiamate esse stesse a livello di primo livello di un modulo."

#. type: Plain text
#: guix-git/doc/contributing.texi:1399
msgid "Straying away from the above rules may work while there are no dependency cycles between modules, but given such cycles are confusing and difficult to troubleshoot, it is best to follow the rules to avoid introducing problems down the line."
msgstr "Deviare dalle regole sopra indicate può funzionare finché non ci sono cicli di dipendenza tra i moduli, ma dato che tali cicli sono confusi e difficili da risolvere, è meglio seguire le regole per evitare di introdurre problemi in futuro."

#. type: Plain text
#: guix-git/doc/contributing.texi:1402
msgid "Here is a common trap to avoid:"
msgstr "Ecco una trappola comune da evitare:"

#. type: lisp
#: guix-git/doc/contributing.texi:1408
#, no-wrap
msgid ""
"(define-public avr-binutils\n"
"  (package\n"
"    (inherit (cross-binutils \"avr\"))\n"
"    (name \"avr-binutils\")))\n"
msgstr ""
"(define-public avr-binutils\n"
"  (package\n"
"    (inherit (cross-binutils \"avr\"))\n"
"    (name \"avr-binutils\")))\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:1417
msgid "In the above example, the @code{avr-binutils} package was defined in the module @code{(gnu packages avr)}, and the @code{cross-binutils} procedure in @code{(gnu packages cross-base)}.  Because the @code{inherit} field is not delayed (thunked), it is evaluated at the top level at load time, which is problematic in the presence of module dependency cycles.  This could be resolved by turning the package into a procedure instead, like:"
msgstr "Nell'esempio sopra, il pacchetto @code{avr-binutils} è stato definito nel modulo @code{(gnu packages avr)}, e la procedura @code{cross-binutils} in @code{(gnu packages cross-base)}. Poiché il campo @code{inherit} non è ritardato (thunked), viene valutato a livello di primo livello al momento del caricamento, il che è problematico in presenza di cicli di dipendenza tra i moduli. Questo potrebbe essere risolto trasformando il pacchetto in una procedura, come:"

#. type: lisp
#: guix-git/doc/contributing.texi:1423
#, no-wrap
msgid ""
"(define (make-avr-binutils)\n"
"  (package\n"
"    (inherit (cross-binutils \"avr\"))\n"
"    (name \"avr-binutils\")))\n"
msgstr ""
"(define (make-avr-binutils)\n"
"  (package\n"
"    (inherit (cross-binutils \"avr\"))\n"
"    (name \"avr-binutils\")))\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:1428
msgid "Care would need to be taken to ensure the above procedure is only ever used in a package delayed fields or within another procedure also not called at the top level."
msgstr "Bisognerebbe fare attenzione per assicurarsi che la procedura sopra descritta venga usata solo nei campi ritardati di un pacchetto o all'interno di un'altra procedura che non venga anch'essa chiamata al livello più alto."

#. type: cindex
#: guix-git/doc/contributing.texi:1432
#, fuzzy, no-wrap
#| msgid "Packaging Guidelines"
msgid "packaging, maintenance"
msgstr "Linee-guida per pacchettizzare"

#. type: Plain text
#: guix-git/doc/contributing.texi:1439
#, fuzzy
#| msgid "Sometimes you may need to update a monotonic collection of grouped packages, in particular module e.g. @code{(gnu packages astronomy)} - it would require refreshing package versions, creating commits following guidelines and test them. Let's say there are 200+ packages which have fresh versions, you may deal with that task by applying the following technique."
msgid "Sometimes you may need to update a monotonic collection of grouped packages, in a particular module---e.g., @code{(gnu packages astronomy)}.  Doing so requires refreshing package versions, creating commits following guidelines and testing them.  Let's say there are 200+ packages with fresh versions, you may deal with this task by applying the following technique."
msgstr "A volte potrebbe essere necessario aggiornare una raccolta monotona di pacchetti raggruppati, in particolare un modulo, ad esempio @code{(gnu packages astronomy)} - questo richiederebbe l'aggiornamento delle versioni dei pacchetti, la creazione di commit che seguano le linee guida e il loro test. Diciamo che ci sono più di 200 pacchetti con versioni nuove, è possibile affrontare questo compito applicando la seguente tecnica."

#. type: Plain text
#: guix-git/doc/contributing.texi:1442
#, fuzzy
#| msgid "Enter a development shell in your local Guix checkout, assuming you already run @code{bootstrap} and @code{configer}:"
msgid "Enter a development shell in your local Guix checkout, assuming you already ran @code{bootstrap} and @code{configure}:"
msgstr "Entra in una shell di sviluppo nel tuo checkout locale di Guix, supponendo che tu abbia già eseguito @code{bootstrap} e @code{configer}:"

#. type: example
#: guix-git/doc/contributing.texi:1448
#, fuzzy, no-wrap
#| msgid ""
#| "~$ guix shell --development guix\n"
#| "[env: /gnu/store/lzxbi1ps43msyw7m5wblziy8mj6hw5kw-profile]\n"
#| "> ./pre-inst-env guix refresh --select=module:astronomy --update\n"
#| "> ./pre-inst-env etc/commiter.scm\n"
msgid ""
"~$ guix shell --development guix\n"
"[env: /gnu/store/@dots{}-profile]\n"
"> ./pre-inst-env guix refresh --select=module:astronomy --update\n"
"> ./pre-inst-env etc/committer.scm\n"
msgstr ""
"~$ guix shell --development guix\n"
"[env: /gnu/store/lzxbi1ps43msyw7m5wblziy8mj6hw5kw-profile]\n"
"> ./pre-inst-env guix refresh --select=module:astronomy --update\n"
"> ./pre-inst-env etc/commiter.scm\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:1455
#, fuzzy
#| msgid "The first command will update all packages in @code{(gnu packages astronomy)} to the latest versions and write changes back to the file.  The second will invoke @code{etc/commiter.scm} script, a helper script aiming exactly for larger scale updates; it will identify each package diff and create corresponding commits with correct style."
msgid "The first command updates all packages in @code{(gnu packages astronomy)} to the latest versions and writes changes back to the file.  The second invokes @code{etc/committer.scm} script, a helper script for larger scale updates; it identifies each package diff and creates corresponding commits with the correct style."
msgstr "Il primo comando aggiornerà tutti i pacchetti in @code{(gnu packages astronomy)} alle versioni più recenti e scriverà le modifiche nel file. Il secondo invocherà lo script @code{etc/commiter.scm}, uno script di aiuto pensato proprio per aggiornamenti su larga scala; identificherà ogni differenza di pacchetto e creerà i commit corrispondenti con lo stile corretto."

#. type: Plain text
#: guix-git/doc/contributing.texi:1458
#, fuzzy
#| msgid "If your machine is powerful enough you may check that the whole collection has no regression and still can be built successfully:"
msgid "If your machine is powerful enough, you may check that the whole collection has no regressions and can still be built successfully:"
msgstr "Se la tua macchina è abbastanza potente, puoi verificare che l'intera collezione non abbia regressioni e possa ancora essere compilata con successo:"

#. type: example
#: guix-git/doc/contributing.texi:1461
#, fuzzy, no-wrap
#| msgid ""
#| "[env: /gnu/store/lzxbi1ps43msyw7m5wblziy8mj6hw5kw-profile]\n"
#| "> ./pre-inst-env guix build $(./pre-inst-env guix package -A | awk '/astronomy.scm/@{print $1\"@@\"$2@}')\n"
msgid ""
"[env: /gnu/store/@dots{}-profile]\n"
"> ./pre-inst-env guix build $(./pre-inst-env guix package -A | awk '/astronomy.scm/@{print $1\"@@\"$2@}')\n"
msgstr ""
"[env: /gnu/store/lzxbi1ps43msyw7m5wblziy8mj6hw5kw-profile]\n"
"> ./pre-inst-env guix build $(./pre-inst-env guix package -A | awk '/astronomy.scm/@{print $1\"@@\"$2@}')\n"

#. type: cindex
#: guix-git/doc/contributing.texi:1466
#, no-wrap
msgid "emacs, packaging"
msgstr "emacs, pacchettizzazione"

#. type: cindex
#: guix-git/doc/contributing.texi:1467
#, no-wrap
msgid "elisp, packaging"
msgstr "elisp, pacchettizzazione"

#. type: Plain text
#: guix-git/doc/contributing.texi:1479
msgid "Emacs packages should preferably use the Emacs build system (@pxref{emacs-build-system}), for uniformity and the benefits provided by its build phases, such as the auto-generation of the autoloads file and the byte compilation of the sources.  Because there is no standardized way to run a test suite for Emacs packages, tests are disabled by default.  When a test suite is available, it should be enabled by setting the @code{#:tests?} argument to @code{#true}.  By default, the command to run the test is @command{make check}, but any command can be specified via the @code{#:test-command} argument.  The @code{#:test-command} argument expects a list containing a command and its arguments, to be invoked during the @code{check} phase."
msgstr "I pacchetti Emacs dovrebbero preferibilmente usare il sistema di compilazione Emacs (@pxref{emacs-build-system}), per uniformità e per i benefici forniti dalle sue fasi di compilazione, come la generazione automatica del file di autoload e la compilazione in bytecode dei sorgenti. Poiché non esiste un modo standardizzato per eseguire una suite di test per i pacchetti Emacs, i test sono disabilitati per impostazione predefinita. Quando una suite di test è disponibile, dovrebbe essere abilitata impostando l'argomento @code{#:tests?} a @code{#true}. Per impostazione predefinita, il comando per eseguire il test è @command{make check}, ma qualsiasi comando può essere specificato tramite l'argomento @code{#:test-command}. L'argomento @code{#:test-command} si aspetta una lista contenente un comando e i suoi argomenti, da invocare durante la fase @code{check}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1484
msgid "The Elisp dependencies of Emacs packages are typically provided as @code{propagated-inputs} when required at run time.  As for other packages, build or test dependencies should be specified as @code{native-inputs}."
msgstr "Le dipendenze Elisp dei pacchetti Emacs sono tipicamente fornite come @code{propagated-inputs} quando richieste a runtime. Come per altri pacchetti, le dipendenze di compilazione o di test dovrebbero essere specificate come @code{native-inputs}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1493
msgid "Emacs packages sometimes depend on resources directories that should be installed along the Elisp files.  The @code{#:include} argument can be used for that purpose, by specifying a list of regexps to match.  The best practice when using the @code{#:include} argument is to extend rather than override its default value (accessible via the @code{%default-include} variable).  As an example, a yasnippet extension package typically include a @file{snippets} directory, which could be copied to the installation directory using:"
msgstr "I pacchetti Emacs a volte dipendono da directory di risorse che dovrebbero essere installate insieme ai file Elisp. L'argomento @code{#:include} può essere usato a questo scopo, specificando una lista di espressioni regolari da corrispondere. La buona pratica quando si usa l'argomento @code{#:include} è di estendere piuttosto che sovrascrivere il suo valore predefinito (accessibile tramite la variabile @code{%default-include}). Ad esempio, un pacchetto di estensione yasnippet include tipicamente una directory @file{snippets}, che potrebbe essere copiata nella directory di installazione usando:"

#. type: lisp
#: guix-git/doc/contributing.texi:1496
#, no-wrap
msgid "#:include (cons \"^snippets/\" %default-include)\n"
msgstr "#:include (cons \"^snippets/\" %default-include)\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:1502
msgid "When encountering problems, it is wise to check for the presence of the @code{Package-Requires} extension header in the package main source file, and whether any dependencies and their versions listed therein are satisfied."
msgstr "Quando si incontrano problemi, è saggio verificare la presenza dell'header dell'estensione @code{Package-Requires} nel file sorgente principale del pacchetto, e se tutte le dipendenze e le loro versioni elencate lì sono soddisfatte."

#. type: cindex
#: guix-git/doc/contributing.texi:1506
#, no-wrap
msgid "python"
msgstr "python"

#. type: Plain text
#: guix-git/doc/contributing.texi:1512
msgid "We currently package Python 2 and Python 3, under the Scheme variable names @code{python-2} and @code{python} as explained in @ref{Version Numbers}.  To avoid confusion and naming clashes with other programming languages, it seems desirable that the name of a package for a Python module contains the word @code{python}."
msgstr "Attualmente pacchettizziamo Python 2 e Python 3, con i nomi di variabile Scheme @code{python-2} e @code{python} come spiegato in @ref{Version Numbers}. Per evitare confusione e conflitti di nomi con altri linguaggi di programmazione, sembra desiderabile che il nome di un pacchetto per un modulo Python contenga la parola @code{python}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1518
msgid "Some modules are compatible with only one version of Python, others with both.  If the package Foo is compiled with Python 3, we name it @code{python-foo}.  If it is compiled with Python 2, we name it @code{python2-foo}.  Python 2 packages are being removed from the distribution; please do no not submit any new Python 2 packages."
msgstr "Alcuni moduli sono compatibili solo con una versione di Python, altri con entrambe. Se il pacchetto Foo è compilato con Python 3, lo chiamiamo @code{python-foo}. Se è compilato con Python 2, lo chiamiamo @code{python2-foo}. I pacchetti Python 2 vengono rimossi dalla distribuzione; per favore non inviare nuovi pacchetti Python 2."

#. type: Plain text
#: guix-git/doc/contributing.texi:1524
msgid "If a project already contains the word @code{python}, we drop this; for instance, the module python-dateutil is packaged under the names @code{python-dateutil} and @code{python2-dateutil}.  If the project name starts with @code{py} (e.g.@: @code{pytz}), we keep it and prefix it as described above."
msgstr "Se un progetto contiene già la parola @code{python}, la omettiamo; ad esempio, il modulo python-dateutil è pacchettizzato con i nomi @code{python-dateutil} e @code{python2-dateutil}. Se il nome del progetto inizia con @code{py} (es: @code{pytz}), lo manteniamo e lo prefissiamo come descritto sopra."

#. type: quotation
#: guix-git/doc/contributing.texi:1538
msgid "Currently there are two different build systems for Python packages in Guix: @var{python-build-system} and @var{pyproject-build-system}.  For the longest time, Python packages were built from an informally specified @file{setup.py} file.  That worked amazingly well, considering Python's success, but was difficult to build tooling around.  As a result, a host of alternative build systems emerged and the community eventually settled on a @url{https://peps.python.org/pep-0517/, formal standard} for specifying build requirements.  @var{pyproject-build-system} is Guix's implementation of this standard.  It is considered ``experimental'' in that it does not yet support all the various PEP-517 @emph{build backends}, but you are encouraged to try it for new Python packages and report any problems.  It will eventually be deprecated and merged into @var{python-build-system}."
msgstr "Attualmente ci sono due diversi sistemi di compilazione per i pacchetti Python in Guix: @var{python-build-system} e @var{pyproject-build-system}. Per molto tempo, i pacchetti Python venivano costruiti da un file @file{setup.py} specificato informalmente. Questo ha funzionato sorprendentemente bene, considerando il successo di Python, ma era difficile costruire strumenti attorno ad esso. Di conseguenza, sono emersi una serie di sistemi di compilazione alternativi e la comunità alla fine si è stabilizzata su uno @url{https://peps.python.org/pep-0517/, standard formale} per specificare i requisiti di compilazione. @var{pyproject-build-system} è l'implementazione di Guix di questo standard. È considerato ``sperimentale'' in quanto non supporta ancora tutti i vari @emph{backend di compilazione} PEP-517, ma sei incoraggiato a provarlo per nuovi pacchetti Python e a segnalare eventuali problemi. Alla fine verrà deprecato e fuso in @var{python-build-system}."

#. type: subsubsection
#: guix-git/doc/contributing.texi:1540
#, no-wrap
msgid "Specifying Dependencies"
msgstr "Specifica delle dipendenze"

#. type: cindex
#: guix-git/doc/contributing.texi:1541
#, no-wrap
msgid "inputs, for Python packages"
msgstr "input, per i pacchetti Python"

#. type: Plain text
#: guix-git/doc/contributing.texi:1548
msgid "Dependency information for Python packages is usually available in the package source tree, with varying degrees of accuracy: in the @file{pyproject.toml} file, the @file{setup.py} file, in @file{requirements.txt}, or in @file{tox.ini} (the latter mostly for test dependencies)."
msgstr "Le informazioni sulle dipendenze per i pacchetti Python sono di solito disponibili nell'albero dei sorgenti del pacchetto, con vari gradi di precisione: nel file @file{pyproject.toml}, nel file @file{setup.py}, in @file{requirements.txt}, o in @file{tox.ini} (quest'ultimo principalmente per le dipendenze di test)."

#. type: Plain text
#: guix-git/doc/contributing.texi:1554
msgid "Your mission, when writing a recipe for a Python package, is to map these dependencies to the appropriate type of ``input'' (@pxref{package Reference, inputs}).  Although the @code{pypi} importer normally does a good job (@pxref{Invoking guix import}), you may want to check the following check list to determine which dependency goes where."
msgstr "La tua missione, quando scrivi una ricetta per un pacchetto Python, è di mappare queste dipendenze al tipo appropriato di ``input'' (@pxref{package Reference, inputs}). Sebbene l'importatore @code{pypi} faccia normalmente un buon lavoro (@pxref{Invoking guix import}), potresti voler controllare la seguente lista di controllo per determinare quale dipendenza va dove."

#. type: itemize
#: guix-git/doc/contributing.texi:1561
msgid "We currently package Python with @code{setuptools} and @code{pip} installed per default.  This is about to change, and users are encouraged to use @code{python-toolchain} if they want a build environment for Python."
msgstr "Attualmente pacchettizziamo Python con @code{setuptools} e @code{pip} installati per impostazione predefinita. Questo sta per cambiare, e gli utenti sono incoraggiati a usare @code{python-toolchain} se desiderano un ambiente di compilazione per Python."

#. type: itemize
#: guix-git/doc/contributing.texi:1564
msgid "@command{guix lint} will warn if @code{setuptools} or @code{pip} are added as native-inputs because they are generally not necessary."
msgstr "@command{guix lint} avvertirà se @code{setuptools} o @code{pip} vengono aggiunti come native-inputs perché generalmente non sono necessari."

#. type: itemize
#: guix-git/doc/contributing.texi:1570
msgid "Python dependencies required at run time go into @code{propagated-inputs}.  They are typically defined with the @code{install_requires} keyword in @file{setup.py}, or in the @file{requirements.txt} file."
msgstr "Le dipendenze Python richieste a runtime vanno in @code{propagated-inputs}. Sono tipicamente definite con la parola chiave @code{install_requires} in @file{setup.py}, o nel file @file{requirements.txt}."

#. type: itemize
#: guix-git/doc/contributing.texi:1579
msgid "Python packages required only at build time---e.g., those listed under @code{build-system.requires} in @file{pyproject.toml} or with the @code{setup_requires} keyword in @file{setup.py}---or dependencies only for testing---e.g., those in @code{tests_require} or @file{tox.ini}---go into @code{native-inputs}.  The rationale is that (1) they do not need to be propagated because they are not needed at run time, and (2) in a cross-compilation context, it's the ``native'' input that we'd want."
msgstr "I pacchetti Python richiesti solo in fase di compilazione --- ad esempio, quelli elencati sotto @code{build-system.requires} in @file{pyproject.toml} o con la parola chiave @code{setup_requires} in @file{setup.py} --- o le dipendenze solo per i test --- ad esempio, quelle in @code{tests_require} o @file{tox.ini} --- vanno in @code{native-inputs}. La logica è che (1) non hanno bisogno di essere propagate perché non sono necessarie a runtime, e (2) in un contesto di compilazione incrociata, è l'input ``nativo'' che vorremmo."

#. type: itemize
#: guix-git/doc/contributing.texi:1583
msgid "Examples are the @code{pytest}, @code{mock}, and @code{nose} test frameworks.  Of course if any of these packages is also required at run-time, it needs to go to @code{propagated-inputs}."
msgstr "Esempi sono i framework di test @code{pytest}, @code{mock} e @code{nose}. Naturalmente, se uno di questi pacchetti è richiesto anche a runtime, deve andare in @code{propagated-inputs}."

#. type: itemize
#: guix-git/doc/contributing.texi:1588
msgid "Anything that does not fall in the previous categories goes to @code{inputs}, for example programs or C libraries required for building Python packages containing C extensions."
msgstr "Tutto ciò che non rientra nelle categorie precedenti va in @code{inputs}, ad esempio programmi o librerie C richiesti per la compilazione di pacchetti Python contenenti estensioni C."

#. type: itemize
#: guix-git/doc/contributing.texi:1594
msgid "If a Python package has optional dependencies (@code{extras_require}), it is up to you to decide whether to add them or not, based on their usefulness/overhead ratio (@pxref{Submitting Patches, @command{guix size}})."
msgstr "Se un pacchetto Python ha dipendenze opzionali (@code{extras_require}), sta a te decidere se aggiungerle o meno, in base al loro rapporto utilità/sovraccarico (@pxref{Submitting Patches, @command{guix size}})."

#. type: cindex
#: guix-git/doc/contributing.texi:1601
#, no-wrap
msgid "perl"
msgstr "perl"

#. type: Plain text
#: guix-git/doc/contributing.texi:1612
msgid "Perl programs standing for themselves are named as any other package, using the lowercase upstream name.  For Perl packages containing a single class, we use the lowercase class name, replace all occurrences of @code{::} by dashes and prepend the prefix @code{perl-}.  So the class @code{XML::Parser} becomes @code{perl-xml-parser}.  Modules containing several classes keep their lowercase upstream name and are also prepended by @code{perl-}.  Such modules tend to have the word @code{perl} somewhere in their name, which gets dropped in favor of the prefix.  For instance, @code{libwww-perl} becomes @code{perl-libwww}."
msgstr "I programmi Perl autonomi sono nominati come qualsiasi altro pacchetto, usando il nome upstream in minuscolo. Per i pacchetti Perl che contengono una singola classe, usiamo il nome della classe in minuscolo, sostituiamo tutte le occorrenze di @code{::} con trattini e anteponiamo il prefisso @code{perl-}. Così la classe @code{XML::Parser} diventa @code{perl-xml-parser}. I moduli che contengono diverse classi mantengono il loro nome upstream in minuscolo e sono anch'essi preceduti da @code{perl-}. Tali moduli tendono ad avere la parola @code{perl} da qualche parte nel loro nome, che viene omessa in favore del prefisso. Ad esempio, @code{libwww-perl} diventa @code{perl-libwww}."

#. type: cindex
#: guix-git/doc/contributing.texi:1617
#, no-wrap
msgid "java"
msgstr "java"

#. type: Plain text
#: guix-git/doc/contributing.texi:1620
msgid "Java programs standing for themselves are named as any other package, using the lowercase upstream name."
msgstr "I programmi Java autonomi sono nominati come qualsiasi altro pacchetto, usando il nome upstream in minuscolo."

#. type: Plain text
#: guix-git/doc/contributing.texi:1626
msgid "To avoid confusion and naming clashes with other programming languages, it is desirable that the name of a package for a Java package is prefixed with @code{java-}.  If a project already contains the word @code{java}, we drop this; for instance, the package @code{ngsjava} is packaged under the name @code{java-ngs}."
msgstr "Per evitare confusione e conflitti di nomi con altri linguaggi di programmazione, è desiderabile che il nome di un pacchetto per un pacchetto Java sia preceduto dal prefisso @code{java-}. Se un progetto contiene già la parola @code{java}, la omettiamo; ad esempio, il pacchetto @code{ngsjava} è pacchettizzato con il nome @code{java-ngs}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1632
msgid "For Java packages containing a single class or a small class hierarchy, we use the lowercase class name, replace all occurrences of @code{.} by dashes and prepend the prefix @code{java-}.  So the class @code{apache.commons.cli} becomes package @code{java-apache-commons-cli}."
msgstr "Per i pacchetti Java che contengono una singola classe o una piccola gerarchia di classi, usiamo il nome della classe in minuscolo, sostituiamo tutte le occorrenze di @code{.} con trattini e anteponiamo il prefisso @code{java-}. Così la classe @code{apache.commons.cli} diventa il pacchetto @code{java-apache-commons-cli}."

#. type: cindex
#: guix-git/doc/contributing.texi:1637
#, no-wrap
msgid "rust"
msgstr "rust"

#. type: Plain text
#: guix-git/doc/contributing.texi:1642
msgid "Rust applications (binary crates) and libraries (library crates) are packaged separately.  We put our main efforts into applications and only package libraries as sources, utilizing automation with a manual focus on unbundling vendored dependencies."
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:1649
msgid "Rust applications are treated like any other package and named using the lowercase upstream name.  When using the Cargo build system (@pxref{Build Systems, @code{cargo-build-system}}), Rust applications should have the @code{#:install-source?} parameter set to @code{#f}, as this parameter only makes sense for libraries.  When the package source is a Cargo workspace, @code{#:cargo-install-paths} must be set to enable relevant support."
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:1651
msgid "Rust libraries are hidden from the user interface and managed in two modules:"
msgstr ""

#. type: item
#: guix-git/doc/contributing.texi:1653
#, fuzzy, no-wrap
#| msgid "(gnu packages base)"
msgid "(gnu packages rust-crates)"
msgstr "(gnu packages base)"

#. type: table
#: guix-git/doc/contributing.texi:1656
#, fuzzy
#| msgid "@uref{https://ngyro.com/software/guile-semver.html, Guile-Semver} for the @code{crate} importer (@pxref{Invoking guix import})."
msgid "Source definitions imported from Rust packages' @file{Cargo.lock} via the @code{crate} importer (@pxref{Invoking guix import})."
msgstr "@uref{https://ngyro.com/software/guile-semver.html, Guile-Semver} per l'importatore @code{crate} (@pxref{Invoking guix import})."

#. type: table
#: guix-git/doc/contributing.texi:1659
msgid "Imported definitions must be checked and have vendored dependencies unbundled before being contributed to Guix."
msgstr ""

#. type: item
#: guix-git/doc/contributing.texi:1660
#, fuzzy, no-wrap
#| msgid "(gnu packages base)"
msgid "(gnu packages rust-sources)"
msgstr "(gnu packages base)"

#. type: table
#: guix-git/doc/contributing.texi:1663
msgid "More complex definitions that need to be full packages.  This includes Rust libraries requiring external inputs to unbundle and Cargo workspaces."
msgstr ""

#. type: table
#: guix-git/doc/contributing.texi:1666
msgid "These libraries should have the @code{#:skip-build?} parameter set to @code{#t}.  For Cargo workspaces, @code{#:cargo-package-crates} must be set."
msgstr ""

#. type: table
#: guix-git/doc/contributing.texi:1669
msgid "Since they are added manually, they follow the usual naming convention for Guix packages (@pxref{Package Naming}), with a @code{rust-} prefix."
msgstr ""

#. type: table
#: guix-git/doc/contributing.texi:1675
#, fuzzy
#| msgid "In the rust ecosystem it is common for multiple incompatible versions of a package to be used at any given time, so all package definitions should have a versioned suffix.  The versioned suffix is the left-most non-zero digit (and any leading zeros, of course).  This follows the ``caret'' version scheme intended by Cargo.  Examples@: @code{rust-clap-2}, @code{rust-rand-0.6}."
msgid "In the Rust community it is common for multiple incompatible versions of a package to be used at any given time, so all libraries should have a versioned suffix.  The versioned suffix is the left-most non-zero digit (and any leading zeros, of course).  This follows the ``caret'' version scheme intended by Cargo.  Examples@: @code{rust-clap-2}, @code{rust-rand-0.6}."
msgstr "Nell'ecosistema Rust è comune che più versioni incompatibili di un pacchetto siano in uso in un dato momento, quindi tutte le definizioni di pacchetto dovrebbero avere un suffisso versionato. Il suffisso versionato è la cifra diversa da zero più a sinistra (e qualsiasi zero iniziale, ovviamente). Questo segue lo schema di versione ``caret'' inteso da Cargo. Esempi: @code{rust-clap-2}, @code{rust-rand-0.6}."

#. type: table
#: guix-git/doc/contributing.texi:1680
msgid "In practice we often package development snapshots of Rust libraries and can't simply identify them by version.  In this case, the complete version information can be turned into a version string via @code{git-version}, for example @code{rust-pipewire-0.8.0.fd3d8f7} and @code{rust-pubgrub-0.3.0.b70cf70}."
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:1684
msgid "To avoid merge conflicts with changes from multiple branches, these two modules are maintained by the Rust team (@pxref{Teams})."
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:1688
msgid "Rust libraries are not referenced directly.  @code{(guix build-sytem cargo)} provides a @code{cargo-inputs} procedure to lookup input lists generated by the lockfile importer."
msgstr ""

#. type: cindex
#: guix-git/doc/contributing.texi:1689
#, fuzzy, no-wrap
#| msgid "inputs"
msgid "cargo inputs"
msgstr "inputs"

#. type: findex
#: guix-git/doc/contributing.texi:1690
#, no-wrap
msgid "define-cargo-inputs"
msgstr ""

#. type: findex
#: guix-git/doc/contributing.texi:1691
#, no-wrap
msgid "lookup-cargo-inputs"
msgstr ""

#. type: deffn
#: guix-git/doc/contributing.texi:1692
#, no-wrap
msgid "{Procedure} cargo-inputs name [#:module '(gnu packages rust-crates)]"
msgstr ""

#. type: deffn
#: guix-git/doc/contributing.texi:1695
msgid "Lookup Cargo inputs for @var{name} in @var{module}, return an empty list if unavailable."
msgstr ""

#. type: deffn
#: guix-git/doc/contributing.texi:1698
msgid "@var{name} must be consistent with the one used in lockfile importer invocation, usually matching the variable name of the package:"
msgstr ""

#. type: example
#: guix-git/doc/contributing.texi:1701
#, no-wrap
msgid "$ guix import -i @file{gnu/packages/rust-crates.scm} crate -f @file{/path/to/Cargo.lock} @var{name}\n"
msgstr ""

#. type: deffn
#: guix-git/doc/contributing.texi:1706
msgid "@var{module} must export a public interface @code{lookup-cargo-inputs}, a template is available in the @file{etc/teams/rust} directory of Guix source tree."
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:1710
msgid "@xref{Packaging Rust Crates,,, guix-cookbook, GNU Guix Cookbook}, for packaging workflow."
msgstr ""

#. type: cindex
#: guix-git/doc/contributing.texi:1715
#, no-wrap
msgid "Elm"
msgstr "Elm"

#. type: Plain text
#: guix-git/doc/contributing.texi:1718
msgid "Elm applications can be named like other software: their names need not mention Elm."
msgstr "Le applicazioni Elm possono essere nominate come altri software: i loro nomi non devono necessariamente menzionare Elm."

#. type: Plain text
#: guix-git/doc/contributing.texi:1724
msgid "Packages in the Elm sense (see @code{elm-build-system} under @ref{Build Systems}) are required use names of the format @var{author}@code{/}@var{project}, where both the @var{author} and the @var{project} may contain hyphens internally, and the @var{author} sometimes contains uppercase letters."
msgstr "I pacchetti in senso Elm (vedi @code{elm-build-system} in @ref{Build Systems}) devono usare nomi nel formato @var{autore}@code{/}@var{progetto}, dove sia l'@var{autore} che il @var{progetto} possono contenere trattini al loro interno, e l'@var{author} a volte contiene lettere maiuscole."

#. type: Plain text
#: guix-git/doc/contributing.texi:1728
msgid "To form the Guix package name from the upstream name, we follow a convention similar to Python packages (@pxref{Python Modules}), adding an @code{elm-} prefix unless the name would already begin with @code{elm-}."
msgstr "Per formare il nome del pacchetto Guix dal nome upstream, seguiamo una convenzione simile a quella dei pacchetti Python (@pxref{Python Modules}), aggiungendo un prefisso @code{elm-} a meno che il nome non inizi già con @code{elm-}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1735
msgid "In many cases we can reconstruct an Elm package's upstream name heuristically, but, since conversion to a Guix-style name involves a loss of information, this is not always possible.  Care should be taken to add the @code{'upstream-name} property when necessary so that @samp{guix import elm} will work correctly (@pxref{Invoking guix import}). The most notable scenarios when explicitly specifying the upstream name is necessary are:"
msgstr "In molti casi possiamo ricostruire euristicamente il nome upstream di un pacchetto Elm, ma, poiché la conversione a un nome in stile Guix comporta una perdita di informazioni, questo non è sempre possibile. Bisogna fare attenzione ad aggiungere la proprietà @code{'upstream-name} quando necessario, in modo che @samp{guix import elm} funzioni correttamente (@pxref{Invoking guix import}). Gli scenari più notevoli in cui è necessario specificare esplicitamente il nome upstream sono:"

#. type: enumerate
#: guix-git/doc/contributing.texi:1740
msgid "When the @var{author} is @code{elm} and the @var{project} contains one or more hyphens, as with @code{elm/virtual-dom}; and"
msgstr "Quando l'@var{author} è @code{elm} e il @var{progetto} contiene uno o più trattini, come con @code{elm/virtual-dom}; e"

#. type: enumerate
#: guix-git/doc/contributing.texi:1747
msgid "When the @var{author} contains hyphens or uppercase letters, as with @code{Elm-Canvas/raster-shapes}---unless the @var{author} is @code{elm-explorations}, which is handled as a special case, so packages like @code{elm-explorations/markdown} do @emph{not} need to use the @code{'upstream-name} property."
msgstr "Quando l'@var{author} contiene trattini o lettere maiuscole, come con @code{Elm-Canvas/raster-shapes} --- a meno che l'@var{autore} non sia @code{elm-explorations}, che è gestito come un caso speciale, quindi pacchetti come @code{elm-explorations/markdown} @emph{non} hanno bisogno di usare la proprietà @code{'upstream-name}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1751
msgid "The module @code{(guix build-system elm)} provides the following utilities for working with names and related conventions:"
msgstr "Il modulo @code{(guix build-system elm)} fornisce le seguenti utilità per lavorare con i nomi e le convenzioni correlate:"

#. type: deffn
#: guix-git/doc/contributing.texi:1752
#, no-wrap
msgid "{Procedure} elm-package-origin @var{elm-name} @var{version} @"
msgstr "{Procedure} elm-package-origin @var{elm-name} @var{version} @"

#. type: deffn
#: guix-git/doc/contributing.texi:1757
msgid "@var{hash} Returns a Git origin using the repository naming and tagging regime required for a published Elm package with the upstream name @var{elm-name} at version @var{version} with sha256 checksum @var{hash}."
msgstr "@var{hash} Restituisce un'origine Git usando il regime di denominazione e tagging del repository richiesto per un pacchetto Elm pubblicato con il nome upstream @var{elm-name} alla versione @var{version} con checksum sha256 @var{hash}."

#. type: deffn
#: guix-git/doc/contributing.texi:1759 guix-git/doc/guix.texi:40554
#: guix-git/doc/guix.texi:45596
msgid "For example:"
msgstr "Per esempio:"

#. type: lisp
#: guix-git/doc/contributing.texi:1769
#, no-wrap
msgid ""
"(package\n"
"  (name \"elm-html\")\n"
"  (version \"1.0.0\")\n"
"  (source\n"
"   (elm-package-origin\n"
"    \"elm/html\"\n"
"    version\n"
"    (base32 \"15k1679ja57vvlpinpv06znmrxy09lbhzfkzdc89i01qa8c4gb4a\")))\n"
"  ...)\n"
msgstr ""
"(package\n"
"  (name \"elm-html\")\n"
"  (version \"1.0.0\")\n"
"  (source\n"
"   (elm-package-origin\n"
"    \"elm/html\"\n"
"    version\n"
"    (base32 \"15k1679ja57vvlpinpv06znmrxy09lbhzfkzdc89i01qa8c4gb4a\")))\n"
"  ...)\n"

#. type: deffn
#: guix-git/doc/contributing.texi:1772
#, no-wrap
msgid "{Procedure} elm->package-name @var{elm-name}"
msgstr "{Procedure} elm->package-name @var{elm-name}"

#. type: deffn
#: guix-git/doc/contributing.texi:1775
msgid "Returns the Guix-style package name for an Elm package with upstream name @var{elm-name}."
msgstr "Restituisce il nome del pacchetto in stile Guix per un pacchetto Elm con nome upstream @var{elm-name}."

#. type: deffn
#: guix-git/doc/contributing.texi:1778
msgid "Note that there is more than one possible @var{elm-name} for which @code{elm->package-name} will produce a given result."
msgstr "Nota che c'è più di un possibile @var{elm-name} per cui @code{elm->package-name} produrrà un dato risultato."

#. type: deffn
#: guix-git/doc/contributing.texi:1780
#, no-wrap
msgid "{Procedure} guix-package->elm-name @var{package}"
msgstr "{Procedure} guix-package->elm-name @var{package}"

#. type: deffn
#: guix-git/doc/contributing.texi:1784
msgid "Given an Elm @var{package}, returns the possibly-inferred upstream name, or @code{#f} the upstream name is not specified via the @code{'upstream-name} property and can not be inferred by @code{infer-elm-package-name}."
msgstr "Dato un @var{package} Elm, restituisce il nome upstream possibilmente inferito, o @code{#f} se il nome upstream non è specificato tramite la proprietà @code{'upstream-name} e non può essere inferito da @code{infer-elm-package-name}."

#. type: deffn
#: guix-git/doc/contributing.texi:1786
#, no-wrap
msgid "{Procedure} infer-elm-package-name @var{guix-name}"
msgstr "{Procedure} infer-elm-package-name @var{guix-name}"

#. type: deffn
#: guix-git/doc/contributing.texi:1791
msgid "Given the @var{guix-name} of an Elm package, returns the inferred upstream name, or @code{#f} if the upstream name can't be inferred.  If the result is not @code{#f}, supplying it to @code{elm->package-name} would produce @var{guix-name}."
msgstr "Dato il @var{guix-name} di un pacchetto Elm, restituisce il nome upstream inferito, o @code{#f} se il nome upstream non può essere inferito. Se il risultato non è @code{#f}, fornendolo a @code{elm->package-name} si otterrebbe @var{guix-name}."

#. type: cindex
#: guix-git/doc/contributing.texi:1796 guix-git/doc/guix.texi:1983
#, no-wrap
msgid "fonts"
msgstr "font"

#. type: Plain text
#: guix-git/doc/contributing.texi:1802
msgid "For fonts that are in general not installed by a user for typesetting purposes, or that are distributed as part of a larger software package, we rely on the general packaging rules for software; for instance, this applies to the fonts delivered as part of the X.Org system or fonts that are part of TeX Live."
msgstr "Per i font che in generale non sono installati da un utente per scopi di composizione tipografica, o che sono distribuiti come parte di un pacchetto software più grande, ci basiamo sulle regole generali di pacchettizzazione per il software; ad esempio, questo si applica ai font forniti come parte del sistema X.Org o ai font che fanno parte di TeX Live."

#. type: Plain text
#: guix-git/doc/contributing.texi:1806
msgid "To make it easier for a user to search for fonts, names for other packages containing only fonts are constructed as follows, independently of the upstream package name."
msgstr "Per facilitare la ricerca dei font da parte dell'utente, i nomi degli altri pacchetti che contengono solo font sono costruiti come segue, indipendentemente dal nome del pacchetto upstream."

#. type: Plain text
#: guix-git/doc/contributing.texi:1814
msgid "The name of a package containing only one font family starts with @code{font-}; it is followed by the foundry name and a dash @code{-} if the foundry is known, and the font family name, in which spaces are replaced by dashes (and as usual, all upper case letters are transformed to lower case).  For example, the Gentium font family by SIL is packaged under the name @code{font-sil-gentium}."
msgstr "Il nome di un pacchetto che contiene una sola famiglia di font inizia con @code{font-}; è seguito dal nome della fonderia e da un trattino @code{-} se la fonderia è nota, e dal nome della famiglia di font, in cui gli spazi sono sostituiti da trattini (e come al solito, tutte le lettere maiuscole sono trasformate in minuscole). Ad esempio, la famiglia di font Gentium di SIL è pacchettizzata con il nome @code{font-sil-gentium}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1823
msgid "For a package containing several font families, the name of the collection is used in the place of the font family name.  For instance, the Liberation fonts consist of three families, Liberation Sans, Liberation Serif and Liberation Mono.  These could be packaged separately under the names @code{font-liberation-sans} and so on; but as they are distributed together under a common name, we prefer to package them together as @code{font-liberation}."
msgstr "Per un pacchetto che contiene diverse famiglie di font, il nome della collezione viene usato al posto del nome della famiglia di font. Ad esempio, i font Liberation consistono di tre famiglie, Liberation Sans, Liberation Serif e Liberation Mono. Questi potrebbero essere pacchettizzati separatamente con i nomi @code{font-liberation-sans} e così via; ma poiché sono distribuiti insieme sotto un nome comune, preferiamo pacchettizzarli insieme come @code{font-liberation}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1829
msgid "In the case where several formats of the same font family or font collection are packaged separately, a short form of the format, prepended by a dash, is added to the package name.  We use @code{-ttf} for TrueType fonts, @code{-otf} for OpenType fonts and @code{-type1} for PostScript Type 1 fonts."
msgstr "Nel caso in cui diversi formati della stessa famiglia di font o collezione di font siano pacchettizzati separatamente, una forma breve del formato, preceduta da un trattino, viene aggiunta al nome del pacchetto. Usiamo @code{-ttf} per i font TrueType, @code{-otf} per i font OpenType e @code{-type1} per i font PostScript Type 1."

#. type: Plain text
#: guix-git/doc/contributing.texi:1837
msgid "In general our code follows the GNU Coding Standards (@pxref{Top,,, standards, GNU Coding Standards}).  However, they do not say much about Scheme, so here are some additional rules."
msgstr "In generale il nostro codice segue gli standard di codifica GNU (@pxref{Top,,, standards, GNU Coding Standards}). Tuttavia, non dicono molto su Scheme, quindi ecco alcune regole aggiuntive."

#. type: subsection
#: guix-git/doc/contributing.texi:1843 guix-git/doc/contributing.texi:1845
#: guix-git/doc/contributing.texi:1846
#, no-wrap
msgid "Programming Paradigm"
msgstr "Paradigma di programmazione"

#. type: menuentry
#: guix-git/doc/contributing.texi:1843
msgid "How to compose your elements."
msgstr "Come comporre i tuoi elementi."

#. type: subsection
#: guix-git/doc/contributing.texi:1843 guix-git/doc/contributing.texi:1852
#: guix-git/doc/contributing.texi:1853
#, no-wrap
msgid "Modules"
msgstr "Moduli"

#. type: menuentry
#: guix-git/doc/contributing.texi:1843
msgid "Where to store your code?"
msgstr "Dove conservare il tuo codice?"

#. type: subsection
#: guix-git/doc/contributing.texi:1843 guix-git/doc/contributing.texi:1868
#: guix-git/doc/contributing.texi:1869
#, no-wrap
msgid "Data Types and Pattern Matching"
msgstr "Tipi di dati e pattern matching"

#. type: menuentry
#: guix-git/doc/contributing.texi:1843
msgid "Implementing data structures."
msgstr "Implementazione di strutture dati."

#. type: subsection
#: guix-git/doc/contributing.texi:1843 guix-git/doc/contributing.texi:1899
#: guix-git/doc/contributing.texi:1900
#, no-wrap
msgid "Formatting Code"
msgstr "Formattazione del codice"

#. type: menuentry
#: guix-git/doc/contributing.texi:1843
msgid "Writing conventions."
msgstr "Convenzioni di scrittura."

#. type: Plain text
#: guix-git/doc/contributing.texi:1851
msgid "Scheme code in Guix is written in a purely functional style.  One exception is code that involves input/output, and procedures that implement low-level concepts, such as the @code{memoize} procedure."
msgstr "Il codice Scheme in Guix è scritto in uno stile puramente funzionale. Un'eccezione è il codice che coinvolge l'input/output e le procedure che implementano concetti a basso livello, come la procedura @code{memoize}."

#. type: cindex
#: guix-git/doc/contributing.texi:1854
#, no-wrap
msgid "build-side modules"
msgstr "moduli lato-build"

#. type: cindex
#: guix-git/doc/contributing.texi:1855
#, no-wrap
msgid "host-side modules"
msgstr "moduli lato-host"

#. type: Plain text
#: guix-git/doc/contributing.texi:1864
msgid "Guile modules that are meant to be used on the builder side must live in the @code{(guix build @dots{})} name space.  They must not refer to other Guix or GNU modules.  However, it is OK for a ``host-side'' module to use a build-side module.  As an example, the @code{(guix search-paths)} module should not be imported and used by a package since it isn't meant to be used as a ``build-side'' module.  It would also couple the module with the package's dependency graph, which is undesirable."
msgstr "I moduli Guile destinati a essere usati sul lato del costruttore devono vivere nello spazio dei nomi @code{(guix build @dots{})}. Non devono fare riferimento ad altri moduli Guix o GNU. Tuttavia, è accettabile che un modulo ``lato-host'' usi un modulo lato-build. Ad esempio, il modulo @code{(guix search-paths)} non dovrebbe essere importato e usato da un pacchetto poiché non è destinato a essere usato come un modulo ``lato-build''. Ciò accoppierebbe anche il modulo con il grafo delle dipendenze del pacchetto, il che è indesiderabile."

#. type: Plain text
#: guix-git/doc/contributing.texi:1867
msgid "Modules that deal with the broader GNU system should be in the @code{(gnu @dots{})} name space rather than @code{(guix @dots{})}."
msgstr "I moduli che si occupano del sistema GNU più ampio dovrebbero trovarsi nello spazio dei nomi @code{(gnu @dots{})} piuttosto che in @code{(guix @dots{})}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1876
msgid "The tendency in classical Lisp is to use lists to represent everything, and then to browse them ``by hand'' using @code{car}, @code{cdr}, @code{cadr}, and co.  There are several problems with that style, notably the fact that it is hard to read, error-prone, and a hindrance to proper type error reports."
msgstr "La tendenza nel Lisp classico è di usare le liste per rappresentare tutto, e poi di sfogliarle ``a mano'' usando @code{car}, @code{cdr}, @code{cadr} e co. Ci sono diversi problemi con questo stile, in particolare il fatto che è difficile da leggere, incline a errori e un ostacolo a corrette segnalazioni di errore di tipo."

#. type: findex
#: guix-git/doc/contributing.texi:1877
#, no-wrap
msgid "define-record-type*"
msgstr "define-record-type*"

#. type: findex
#: guix-git/doc/contributing.texi:1878
#, no-wrap
msgid "match-record"
msgstr "match-record"

#. type: cindex
#: guix-git/doc/contributing.texi:1879
#, no-wrap
msgid "pattern matching"
msgstr "pattern matching"

#. type: Plain text
#: guix-git/doc/contributing.texi:1887
msgid "Guix code should define appropriate data types (for instance, using @code{define-record-type*}) rather than abuse lists.  In addition, it should use pattern matching, via Guile’s @code{(ice-9 match)} module, especially when matching lists (@pxref{Pattern Matching,,, guile, GNU Guile Reference Manual}); pattern matching for records is better done using @code{match-record} from @code{(guix records)}, which, unlike @code{match}, verifies field names at macro-expansion time."
msgstr "Il codice Guix dovrebbe definire tipi di dati appropriati (ad esempio, usando @code{define-record-type*}) piuttosto che abusare delle liste. Inoltre, dovrebbe usare il pattern matching, tramite il modulo @code{(ice-9 match)} di Guile, specialmente quando si abbinano le liste (@pxref{Pattern Matching,,, guile, GNU Guile Reference Manual}); il pattern matching per i record è meglio farlo usando @code{match-record} da @code{(guix records)}, che, a differenza di @code{match}, verifica i nomi dei campi al momento dell'espansione della macro."

#. type: Plain text
#: guix-git/doc/contributing.texi:1898
msgid "When defining a new record type, keep the @dfn{record type descriptor} (RTD) private (@pxref{Records,,, guile, GNU Guile Reference Manual}, for more on records and RTDs).  As an example, the @code{(guix packages)} module defines @code{<package>} as the RTD for package records but it does not export it; instead, it exports a type predicate, a constructor, and field accessors.  Exporting RTDs would make it harder to change the application binary interface (because code in other modules might be matching fields by position) and would make it trivial for users to forge records of that type, bypassing any checks we may have in the official constructor (such as ``field sanitizers'')."
msgstr "Quando si definisce un nuovo tipo di record, mantenere privato il @dfn{descrittore di tipo di record} (RTD) (@pxref{Records,,, guile, GNU Guile Reference Manual}, per maggiori informazioni sui record e sugli RTD). Ad esempio, il modulo @code{(guix packages)} definisce @code{<package>} come RTD per i record di pacchetto, ma non lo esporta; invece, esporta un predicato di tipo, un costruttore e degli accessor ai campi. L'esportazione degli RTD renderebbe più difficile cambiare l'interfaccia binaria dell'applicazione (perché il codice in altri moduli potrebbe abbinare i campi per posizione) e renderebbe banale per gli utenti forgiare record di quel tipo, bypassando qualsiasi controllo che potremmo avere nel costruttore ufficiale (come i ``sanitizer di campo'')."

#. type: cindex
#: guix-git/doc/contributing.texi:1902
#, no-wrap
msgid "formatting code"
msgstr "formattazione del codice"

#. type: cindex
#: guix-git/doc/contributing.texi:1903
#, no-wrap
msgid "coding style"
msgstr "stile di codifica"

#. type: Plain text
#: guix-git/doc/contributing.texi:1910
msgid "When writing Scheme code, we follow common wisdom among Scheme programmers.  In general, we follow the @url{https://mumble.net/~campbell/scheme/style.txt, Riastradh's Lisp Style Rules}.  This document happens to describe the conventions mostly used in Guile’s code too.  It is very thoughtful and well written, so please do read it."
msgstr "Quando scriviamo codice Scheme, seguiamo la saggezza comune tra i programmatori Scheme. In generale, seguiamo le @url{https://mumble.net/~campbell/scheme/style.txt, Regole di stile Lisp di Riastradh}. Questo documento descrive anche le convenzioni più usate nel codice di Guile. È molto ben ponderato e ben scritto, quindi vi preghiamo di leggerlo."

#. type: Plain text
#: guix-git/doc/contributing.texi:1917
msgid "Some special forms introduced in Guix, such as the @code{substitute*} macro, have special indentation rules.  These are defined in the @file{.dir-locals.el} file, which Emacs automatically uses.  Also note that Emacs-Guix provides @code{guix-devel-mode} mode that indents and highlights Guix code properly (@pxref{Development,,, emacs-guix, The Emacs-Guix Reference Manual})."
msgstr "Alcune forme speciali introdotte in Guix, come la macro @code{substitute*}, hanno regole di indentazione speciali. Queste sono definite nel file @file{.dir-locals.el}, che Emacs usa automaticamente. Nota anche che Emacs-Guix fornisce la modalità @code{guix-devel-mode} che indenta ed evidenzia il codice Guix correttamente (@pxref{Development,,, emacs-guix, The Emacs-Guix Reference Manual})."

#. type: cindex
#: guix-git/doc/contributing.texi:1918
#, no-wrap
msgid "indentation, of code"
msgstr "indentazione, del codice"

#. type: cindex
#: guix-git/doc/contributing.texi:1919
#, no-wrap
msgid "formatting, of code"
msgstr "formattazione, del codice"

#. type: Plain text
#: guix-git/doc/contributing.texi:1922
msgid "If you do not use Emacs, please make sure your editor knows these rules.  To automatically indent a package definition, you can also run:"
msgstr "Se non usi Emacs, assicurati che il tuo editor conosca queste regole. Per indentare automaticamente una definizione di pacchetto, puoi anche eseguire:"

#. type: example
#: guix-git/doc/contributing.texi:1925
#, no-wrap
msgid "./pre-inst-env guix style @var{package}\n"
msgstr "./pre-inst-env guix style @var{package}\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:1929
msgid "@xref{Invoking guix style}, for more information."
msgstr "@xref{Invoking guix style}, per maggiori informazioni."

#. type: Plain text
#: guix-git/doc/contributing.texi:1933
msgid "We require all top-level procedures to carry a docstring.  This requirement can be relaxed for simple private procedures in the @code{(guix build @dots{})} name space, though."
msgstr "Richiediamo che tutte le procedure di primo livello abbiano una docstring. Questo requisito può essere rilassato per semplici procedure private nello spazio dei nomi @code{(guix build @dots{})}, però."

#. type: Plain text
#: guix-git/doc/contributing.texi:1936
msgid "Procedures should not have more than four positional parameters.  Use keyword parameters for procedures that take more than four parameters."
msgstr "Le procedure non dovrebbero avere più di quattro parametri posizionali. Usa parametri con parola chiave per le procedure che accettano più di quattro parametri."

#. type: Plain text
#: guix-git/doc/contributing.texi:1944
msgid "Development is done using the Git distributed version control system.  Thus, access to the repository is not strictly necessary.  We welcome contributions in one of the following forms:"
msgstr "Lo sviluppo avviene utilizzando il sistema di controllo versione distribuito Git. Pertanto, l'accesso al repository non è strettamente necessario. Accettiamo contributi in una delle seguenti forme:"

#. type: cindex
#: guix-git/doc/contributing.texi:1947
#, no-wrap
msgid "pull request, for contributions"
msgstr "pull request, per i contributi"

#. type: itemize
#: guix-git/doc/contributing.texi:1951
msgid "As a @dfn{pull request} (PR) at @url{https://codeberg.org/guix/guix/pulls/}.  This is now the preferred form."
msgstr "Come @dfn{pull request} (PR) su @url{https://codeberg.org/guix/guix/pulls/}. Questa è ora la forma preferita."

#. type: itemize
#: guix-git/doc/contributing.texi:1960
msgid "Until December 31st, 2025@footnote{This date is the result of a decision made collectively in @uref{https://codeberg.org/guix/guix-consensus-documents/src/branch/main/002-codeberg.md, Guix Consensus Document 002} in May 2025.}, you may also send patches as produced by @code{git format-patch} to the @email{guix-patches@@gnu.org} mailing list (@pxref{Submitting patches to a project,,, git, Git User Manual})."
msgstr "Fino al 31 dicembre 2025@footnote{Questa data è il risultato di una decisione presa collettivamente nel @uref{https://codeberg.org/guix/guix-consensus-documents/src/branch/main/002-codeberg.md, Documento di Consenso Guix 002} a maggio 2025.}, puoi anche inviare patch prodotte da @code{git format-patch} alla mailing list @email{guix-patches@@gnu.org} (@pxref{Submitting patches to a project,,, git, Git User Manual})."

#. type: itemize
#: guix-git/doc/contributing.texi:1967
msgid "This mailing list is backed by a Debbugs instance, which allows us to keep track of submissions (@pxref{Tracking Bugs and Changes}).  Each message sent to that mailing list gets a new tracking number assigned; people can then follow up on the submission by sending email to @code{@var{ISSUE_NUMBER}@@debbugs.gnu.org}, where @var{ISSUE_NUMBER} is the tracking number (@pxref{Sending a Patch Series})."
msgstr "Questa mailing list è supportata da un'istanza di Debbugs, che ci permette di tenere traccia delle sottomissioni (@pxref{Tracking Bugs and Changes}). Ogni messaggio inviato a quella mailing list riceve un nuovo numero di tracciamento; le persone possono quindi seguire la sottomissione inviando un'email a @code{@var{ISSUE_NUMBER}@@debbugs.gnu.org}, dove @var{ISSUE_NUMBER} è il numero di tracciamento (@pxref{Sending a Patch Series})."

#. type: Plain text
#: guix-git/doc/contributing.texi:1973
msgid "Either way, contributors are encouraged to take a moment to set some Git repository options (@pxref{Configuring Git}) first, which can improve the readability of patches.  Seasoned Guix developers may also want to look at the section on commit access (@pxref{Commit Access})."
msgstr "In entrambi i casi, i contributori sono incoraggiati a dedicare un momento per impostare alcune opzioni del repository Git (@pxref{Configuring Git}) prima, il che può migliorare la leggibilità delle patch. Gli sviluppatori esperti di Guix potrebbero anche voler dare un'occhiata alla sezione sull'accesso ai commit (@pxref{Commit Access})."

#. type: Plain text
#: guix-git/doc/contributing.texi:1977
msgid "Please write commit logs in the ChangeLog format (@pxref{Change Logs,,, standards, GNU Coding Standards}); you can check the commit history for examples."
msgstr "Per favore, scrivi i log dei commit nel formato ChangeLog (@pxref{Change Logs,,, standards, GNU Coding Standards}); puoi controllare la cronologia dei commit per degli esempi."

#. type: Plain text
#: guix-git/doc/contributing.texi:1987
msgid "You can help make the review process more efficient, and increase the chance that your patch will be reviewed quickly, by describing the context of your patch and the impact you expect it to have.  For example, if your patch is fixing something that is broken, describe the problem and how your patch fixes it.  Tell us how you have tested your patch.  Will users of the code changed by your patch have to adjust their workflow at all? If so, tell us how.  In general, try to imagine what questions a reviewer will ask, and answer those questions in advance."
msgstr "Puoi contribuire a rendere il processo di revisione più efficiente e aumentare le possibilità che la tua patch venga revisionata rapidamente, descrivendo il contesto della tua patch e l'impatto che ti aspetti che abbia. Ad esempio, se la tua patch corregge qualcosa che non funziona, descrivi il problema e come la tua patch lo risolve. Dicci come hai testato la tua patch. Gli utenti del codice modificato dalla tua patch dovranno adeguare in qualche modo il loro flusso di lavoro? Se sì, dicci come. In generale, cerca di immaginare quali domande porrà un revisore e rispondi a quelle domande in anticipo."

#. type: Plain text
#: guix-git/doc/contributing.texi:1990
msgid "Before submitting a patch that adds or modifies a package definition, please run through this check list:"
msgstr "Prima di inviare una patch che aggiunge o modifica una definizione di pacchetto, per favore segui questa lista di controllo:"

#. type: enumerate
#: guix-git/doc/contributing.texi:1997
msgid "If the authors of the packaged software provide a cryptographic signature for the release tarball, make an effort to verify the authenticity of the archive.  For a detached GPG signature file this would be done with the @code{gpg --verify} command."
msgstr "Se gli autori del software pacchettizzato forniscono una firma crittografica per il tarball di rilascio, fai uno sforzo per verificare l'autenticità dell'archivio. Per un file di firma GPG distaccato, questo verrebbe fatto con il comando @code{gpg --verify}."

#. type: enumerate
#: guix-git/doc/contributing.texi:2001
msgid "Take some time to provide an adequate synopsis and description for the package.  @xref{Synopses and Descriptions}, for some guidelines."
msgstr "Prenditi del tempo per fornire una sinossi e una descrizione adeguate per il pacchetto. @xref{Synopses and Descriptions}, per alcune linee guida."

#. type: enumerate
#: guix-git/doc/contributing.texi:2006
msgid "Run @command{guix lint @var{package}}, where @var{package} is the name of the new or modified package, and fix any errors it reports (@pxref{Invoking guix lint})."
msgstr "Esegui @command{guix lint @var{package}}, dove @var{package} è il nome del pacchetto nuovo o modificato, e correggi eventuali errori segnalati (@pxref{Invoking guix lint})."

#. type: enumerate
#: guix-git/doc/contributing.texi:2010
msgid "Run @command{guix style @var{package}} to format the new package definition according to the project's conventions (@pxref{Invoking guix style})."
msgstr "Esegui @command{guix style @var{package}} per formattare la nuova definizione di pacchetto secondo le convenzioni del progetto (@pxref{Invoking guix style})."

#. type: enumerate
#: guix-git/doc/contributing.texi:2016
msgid "Make sure the package builds on your platform, using @command{guix build @var{package}}.  Also build at least its direct dependents with @command{guix build --dependents=1 @var{package}} (@pxref{build-dependents, @command{guix build}})."
msgstr "Assicurati che il pacchetto si compili sulla tua piattaforma, usando @command{guix build @var{package}}. Compila anche almeno i suoi dipendenti diretti con @command{guix build --dependents=1 @var{package}} (@pxref{build-dependents, @command{guix build}})."

#. type: enumerate
#: guix-git/doc/contributing.texi:2024
msgid "We recommend you also try building the package on other supported platforms.  As you may not have access to actual hardware platforms, we recommend using the @code{qemu-binfmt-service-type} to emulate them.  In order to enable it, add the @code{virtualization} service module and the following service to the list of services in your @code{operating-system} configuration:"
msgstr "Ti consigliamo di provare a costruire il pacchetto anche su altre piattaforme supportate. Poiché potresti non avere accesso a piattaforme hardware reali, ti consigliamo di usare il @code{qemu-binfmt-service-type} per emularle. Per abilitarlo, aggiungi il modulo di servizio @code{virtualization} e il seguente servizio alla lista dei servizi nella tua configurazione @code{operating-system}:"

#. type: lisp
#: guix-git/doc/contributing.texi:2029
#, no-wrap
msgid ""
"(service qemu-binfmt-service-type\n"
" (qemu-binfmt-configuration\n"
"   (platforms (lookup-qemu-platforms \"arm\" \"aarch64\"))))\n"
msgstr ""
"(service qemu-binfmt-service-type\n"
" (qemu-binfmt-configuration\n"
"   (platforms (lookup-qemu-platforms \"arm\" \"aarch64\"))))\n"

#. type: enumerate
#: guix-git/doc/contributing.texi:2032
msgid "Then reconfigure your system."
msgstr "Quindi, riconfigura il tuo sistema."

#. type: enumerate
#: guix-git/doc/contributing.texi:2037
msgid "You can then build packages for different platforms by specifying the @code{--system} option.  For example, to build the \"hello\" package for the armhf or aarch64 architectures, you would run the following commands, respectively:"
msgstr "Puoi quindi costruire pacchetti per diverse piattaforme specificando l'opzione @code{--system}. Ad esempio, per costruire il pacchetto \"hello\" per le architetture armhf o aarch64, dovresti eseguire i seguenti comandi, rispettivamente:"

#. type: example
#: guix-git/doc/contributing.texi:2040
#, no-wrap
msgid ""
"guix build --system=armhf-linux --rounds=2 hello\n"
"guix build --system=aarch64-linux --rounds=2 hello\n"
msgstr ""
"guix build --system=armhf-linux --rounds=2 hello\n"
"guix build --system=aarch64-linux --rounds=2 hello\n"

#. type: cindex
#: guix-git/doc/contributing.texi:2043
#, no-wrap
msgid "bundling"
msgstr "raggruppamento"

#. type: enumerate
#: guix-git/doc/contributing.texi:2046
msgid "Make sure the package does not use bundled copies of software already available as separate packages."
msgstr "Assicurati che il pacchetto non usi copie raggruppate di software già disponibili come pacchetti separati."

#. type: enumerate
#: guix-git/doc/contributing.texi:2055
msgid "Sometimes, packages include copies of the source code of their dependencies as a convenience for users.  However, as a distribution, we want to make sure that such packages end up using the copy we already have in the distribution, if there is one.  This improves resource usage (the dependency is built and stored only once), and allows the distribution to make transverse changes such as applying security updates for a given software package in a single place and have them affect the whole system---something that bundled copies prevent."
msgstr "A volte, i pacchetti includono copie del codice sorgente delle loro dipendenze per comodità degli utenti. Tuttavia, come distribuzione, vogliamo assicurarci che tali pacchetti finiscano per usare la copia che abbiamo già nella distribuzione, se ce n'è una. Questo migliora l'uso delle risorse (la dipendenza viene costruita e archiviata solo una volta), e permette alla distribuzione di apportare modifiche trasversali come l'applicazione di aggiornamenti di sicurezza per un dato pacchetto software in un unico posto e far sì che influenzino l'intero sistema --- qualcosa che le copie incluse impediscono."

#. type: enumerate
#: guix-git/doc/contributing.texi:2064
msgid "Take a look at the profile reported by @command{guix size} (@pxref{Invoking guix size}).  This will allow you to notice references to other packages unwillingly retained.  It may also help determine whether to split the package (@pxref{Packages with Multiple Outputs}), and which optional dependencies should be used.  In particular, avoid adding @code{texlive} as a dependency: because of its extreme size, use @code{texlive-local-tree} procedure instead."
msgstr "Dai un'occhiata al profilo riportato da @command{guix size} (@pxref{Invoking guix size}). Questo ti permetterà di notare riferimenti a altri pacchetti trattenuti involontariamente. Può anche aiutare a determinare se dividere il pacchetto (@pxref{Packages with Multiple Outputs}), e quali dipendenze opzionali dovrebbero essere usate. In particolare, evita di aggiungere @code{texlive} come dipendenza: a causa delle sue dimensioni estreme, usa invece la procedura @code{texlive-local-tree}."

#. type: enumerate
#: guix-git/doc/contributing.texi:2069
msgid "Check that dependent packages (if applicable) are not affected by the change; @command{guix refresh --list-dependent @var{package}} will help you do that (@pxref{Invoking guix refresh})."
msgstr "Verifica che i pacchetti dipendenti (se applicabile) non siano influenzati dalla modifica; @command{guix refresh --list-dependent @var{package}} ti aiuterà a farlo (@pxref{Invoking guix refresh})."

#. type: cindex
#: guix-git/doc/contributing.texi:2071
#, no-wrap
msgid "determinism, of build processes"
msgstr "determinismo, dei processi di compilazione"

#. type: cindex
#: guix-git/doc/contributing.texi:2072
#, no-wrap
msgid "reproducible builds, checking"
msgstr "build riproducibili, controllo"

#. type: enumerate
#: guix-git/doc/contributing.texi:2076
msgid "Check whether the package's build process is deterministic.  This typically means checking whether an independent build of the package yields the exact same result that you obtained, bit for bit."
msgstr "Verifica se il processo di compilazione del pacchetto è deterministico. Questo significa tipicamente verificare se una compilazione indipendente del pacchetto produce lo stesso identico risultato che hai ottenuto, bit per bit."

#. type: enumerate
#: guix-git/doc/contributing.texi:2079
msgid "A simple way to do that is by building the same package several times in a row on your machine (@pxref{Invoking guix build}):"
msgstr "Un modo semplice per farlo è costruire lo stesso pacchetto più volte di seguito sulla tua macchina (@pxref{Invoking guix build}):"

#. type: example
#: guix-git/doc/contributing.texi:2082
#, no-wrap
msgid "guix build --rounds=2 my-package\n"
msgstr "guix build --rounds=2 mio-pacchetto\n"

#. type: enumerate
#: guix-git/doc/contributing.texi:2086
msgid "This is enough to catch a class of common non-determinism issues, such as timestamps or randomly-generated output in the build result."
msgstr "Questo è sufficiente per catturare una classe di problemi comuni di non determinismo, come timestamp o output generato casualmente nel risultato della compilazione."

#. type: enumerate
#: guix-git/doc/contributing.texi:2096
msgid "Another option is to use @command{guix challenge} (@pxref{Invoking guix challenge}).  You may run it once the package has been committed and built by @code{@value{SUBSTITUTE-SERVER-1}} to check whether it obtains the same result as you did.  Better yet: Find another machine that can build it and run @command{guix publish}.  Since the remote build machine is likely different from yours, this can catch non-determinism issues related to the hardware---e.g., use of different instruction set extensions---or to the operating system kernel---e.g., reliance on @code{uname} or @file{/proc} files."
msgstr "Un'altra opzione è usare @command{guix challenge} (@pxref{Invoking guix challenge}). Puoi eseguirlo una volta che il pacchetto è stato committato e compilato da @code{@value{SUBSTITUTE-SERVER-1}} per verificare se ottiene lo stesso risultato che hai ottenuto tu. Ancora meglio: trova un'altra macchina che possa compilarlo ed esegui @command{guix publish}. Poiché la macchina di compilazione remota è probabilmente diversa dalla tua, questo può rilevare problemi di non-determinismo legati all'hardware --- ad esempio, l'uso di diverse estensioni del set di istruzioni --- o al kernel del sistema operativo --- ad esempio, la dipendenza da @code{uname} o dai file di @file{/proc}."

#. type: enumerate
#: guix-git/doc/contributing.texi:2102
msgid "When writing documentation, please use gender-neutral wording when referring to people, such as @uref{https://en.wikipedia.org/wiki/Singular_they, singular ``they''@comma{} ``their''@comma{} ``them''}, and so forth."
msgstr "Quando scrivi la documentazione, per favore usa un linguaggio neutro dal punto di vista del genere quando ti riferisci a persone, come @uref{https://en.wikipedia.org/wiki/Singular_they, il ``loro'' singolare}, ecc."

#. type: enumerate
#: guix-git/doc/contributing.texi:2106
msgid "Verify that your patch contains only one set of related changes.  Bundling unrelated changes together makes reviewing harder and slower."
msgstr "Verifica che la tua patch contenga solo un insieme di modifiche correlate. Raggruppare modifiche non correlate rende la revisione più difficile e lenta."

#. type: enumerate
#: guix-git/doc/contributing.texi:2109
msgid "Examples of unrelated changes include the addition of several packages, or a package update along with fixes to that package."
msgstr "Esempi di modifiche non correlate includono l'aggiunta di diversi pacchetti, o un aggiornamento di un pacchetto insieme a correzioni per quel pacchetto."

#. type: enumerate
#: guix-git/doc/contributing.texi:2114
msgid "Please follow our code formatting rules, possibly running @command{guix style} script to do that automatically for you (@pxref{Formatting Code})."
msgstr "Per favore, segui le nostre regole di formattazione del codice, eventualmente eseguendo lo script @command{guix style} per farlo automaticamente per te (@pxref{Formatting Code})."

#. type: enumerate
#: guix-git/doc/contributing.texi:2122
msgid "When possible, use mirrors in the source URL (@pxref{Invoking guix download}).  Use reliable URLs, not generated ones.  For instance, GitHub archives are not necessarily identical from one generation to the next, so in this case it's often better to clone the repository.  Don't use the @code{name} field in the URL: it is not very useful and if the name changes, the URL will probably be wrong."
msgstr "Quando possibile, usa i mirror nell'URL sorgente (@pxref{Invoking guix download}). Usa URL affidabili, non generati. Ad esempio, gli archivi di GitHub non sono necessariamente identici da una generazione all'altra, quindi in questo caso è spesso meglio clonare il repository. Non usare il campo @code{name} nell'URL: non è molto utile e se il nome cambia, l'URL sarà probabilmente sbagliato."

#. type: enumerate
#: guix-git/doc/contributing.texi:2126
msgid "Check if Guix builds (@pxref{Building from Git}) and address the warnings, especially those about use of undefined symbols."
msgstr "Controlla se Guix si compila (@pxref{Building from Git}) e risolvi gli avvisi, specialmente quelli sull'uso di simboli non definiti."

#. type: enumerate
#: guix-git/doc/contributing.texi:2130
msgid "Make sure your changes do not break Guix and simulate a @command{guix pull} with:"
msgstr "Assicurati che le tue modifiche non rompano Guix e simula un @command{guix pull} con:"

#. type: example
#: guix-git/doc/contributing.texi:2132
#, no-wrap
msgid "guix pull --url=/path/to/your/checkout --profile=/tmp/guix.master --disable-authentication\n"
msgstr "guix pull --url=/percorso/del/tuo/checkout --profile=/tmp/guix.master --disable-authentication\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2140
msgid "When posting a patch to the mailing list, use @samp{[PATCH] @dots{}} as a subject, if your patch is to be applied on a branch other than @code{master}, say @code{core-updates}, specify it in the subject like @samp{[PATCH core-updates] @dots{}}."
msgstr "Quando invii una patch alla mailing list, usa @samp{[PATCH] @dots{}} come oggetto. Se la tua patch deve essere applicata a un ramo diverso da @code{master}, ad esempio @code{core-updates}, specifica questo nell'oggetto come @samp{[PATCH core-updates] @dots{}}."

#. type: Plain text
#: guix-git/doc/contributing.texi:2147
msgid "You may use your email client, the @command{git send-email} command (@pxref{Sending a Patch Series}) or the @command{mumi send-email} command (@pxref{Debbugs User Interfaces}).  We prefer to get patches in plain text messages, either inline or as MIME attachments.  You are advised to pay attention if your email client changes anything like line breaks or indentation which could potentially break the patches."
msgstr "Puoi usare il tuo client email, il comando @command{git send-email} (@pxref{Sending a Patch Series}) o il comando @command{mumi send-email} (@pxref{Debbugs User Interfaces}). Preferiamo ricevere le patch in messaggi di testo puro, in linea o come allegati MIME. Ti consigliamo di prestare attenzione se il tuo client email modifica qualcosa come interruzioni di riga o rientri che potrebbero potenzialmente danneggiare le patch."

#. type: Plain text
#: guix-git/doc/contributing.texi:2152
msgid "Expect some delay when you submit your very first patch to @email{guix-patches@@gnu.org}. You have to wait until you get an acknowledgement with the assigned tracking number. Future acknowledgements should not be delayed."
msgstr "Prevedi un certo ritardo quando invii la tua prima patch a @email{guix-patches@@gnu.org}. Devi attendere fino a ricevere un riconoscimento con il numero di tracciamento assegnato. I riconoscimenti futuri non dovrebbero subire ritardi."

#. type: Plain text
#: guix-git/doc/contributing.texi:2155
msgid "When a bug is resolved, please close the thread by sending an email to @email{@var{ISSUE_NUMBER}-done@@debbugs.gnu.org}."
msgstr "Quando un bug viene risolto, chiudi la discussione inviando un'email a @email{@var{ISSUE_NUMBER}-done@@debbugs.gnu.org}."

#. type: subsection
#: guix-git/doc/contributing.texi:2159 guix-git/doc/contributing.texi:2161
#: guix-git/doc/contributing.texi:2162
#, no-wrap
msgid "Configuring Git"
msgstr "Configurazione di Git"

#. type: subsection
#: guix-git/doc/contributing.texi:2159 guix-git/doc/contributing.texi:2185
#: guix-git/doc/contributing.texi:2186
#, no-wrap
msgid "Sending a Patch Series"
msgstr "Invio di una Serie di Patch"

#. type: cindex
#: guix-git/doc/contributing.texi:2163
#, no-wrap
msgid "git configuration"
msgstr "configurazione di git"

#. type: code{#1}
#: guix-git/doc/contributing.texi:2164 guix-git/doc/contributing.texi:2189
#, no-wrap
msgid "git format-patch"
msgstr "git format-patch"

#. type: code{#1}
#: guix-git/doc/contributing.texi:2165 guix-git/doc/contributing.texi:2188
#, no-wrap
msgid "git send-email"
msgstr "git send-email"

#. type: Plain text
#: guix-git/doc/contributing.texi:2173
msgid "If you have not done so already, you may wish to set a name and email that will be associated with your commits (@pxref{telling git your name, , Telling Git your name, git, Git User Manual}).  If you wish to use a different name or email just for commits in this repository, you can use @command{git config --local}, or edit @file{.git/config} in the repository instead of @file{~/.gitconfig}."
msgstr "Se non l'hai già fatto, potresti voler impostare un nome e un'email che saranno associati ai tuoi commit (@pxref{telling git your name, , Telling Git your name, git, Manuale Utente di Git}). Se desideri usare un nome o un'email diversi solo per i commit in questo repository, puoi usare @command{git config --local}, o modificare @file{.git/config} nel repository invece di @file{~/.gitconfig}."

#. type: cindex
#: guix-git/doc/contributing.texi:2174
#, no-wrap
msgid "commit-msg hook"
msgstr "hook commit-msg"

#. type: Plain text
#: guix-git/doc/contributing.texi:2184
msgid "Other important Git configuration will automatically be configured when building the project (@pxref{Building from Git}).  A @file{.git/hooks/commit-msg} hook will be installed that embeds @samp{Change-Id} Git @emph{trailers} in your commit messages for traceability purposes.  It is important to preserve these when editing your commit messages, particularly if a first version of your proposed changes was already submitted for review.  If you have a @file{commit-msg} hook of your own you would like to use with Guix, you can place it under the @file{.git/hooks/commit-msg.d/} directory."
msgstr "Altre configurazioni importanti di Git verranno configurate automaticamente durante la compilazione del progetto (@pxref{Building from Git}). Verrà installato un hook @file{.git/hooks/commit-msg} che incorpora @emph{trailer} @samp{Change-Id} di Git nei messaggi di commit per scopi di tracciabilità. È importante preservare questi elementi durante la modifica dei messaggi di commit, specialmente se una prima versione delle modifiche proposte è già stata inviata per la revisione. Se hai un tuo hook @file{commit-msg} che desideri usare con Guix, puoi posizionarlo nella directory @file{.git/hooks/commit-msg.d/}."

#. type: cindex
#: guix-git/doc/contributing.texi:2187
#, no-wrap
msgid "patch series"
msgstr "serie di patch"

#. type: quotation
#: guix-git/doc/contributing.texi:2191 guix-git/doc/contributing.texi:2489
#: guix-git/doc/guix.texi:1058 guix-git/doc/guix.texi:1099
#: guix-git/doc/guix.texi:1699 guix-git/doc/guix.texi:5834
#: guix-git/doc/guix.texi:7281 guix-git/doc/guix.texi:7321
#: guix-git/doc/guix.texi:7349 guix-git/doc/guix.texi:13844
#: guix-git/doc/guix.texi:18106 guix-git/doc/guix.texi:20320
#: guix-git/doc/guix.texi:21580 guix-git/doc/guix.texi:22576
#: guix-git/doc/guix.texi:22584 guix-git/doc/guix.texi:27713
#: guix-git/doc/guix.texi:27720 guix-git/doc/guix.texi:36963
#: guix-git/doc/guix.texi:40307 guix-git/doc/guix.texi:43040
#: guix-git/doc/guix.texi:43047 guix-git/doc/guix.texi:43054
#: guix-git/doc/guix.texi:43867 guix-git/doc/guix.texi:45809
#, no-wrap
msgid "Warning"
msgstr "Avviso"

#. type: quotation
#: guix-git/doc/contributing.texi:2196
msgid "This section is about contributing code by sending patches by email.  This option is supported until December 31st, 2025, but we recommend getting familiar with the @dfn{pull request} workflow, which will become the norm after that date.  @xref{Submitting Patches}, for more info."
msgstr "Questa sezione riguarda il contributo al codice inviando patch via email. Questa opzione è supportata fino al 31 dicembre 2025, ma raccomandiamo di familiarizzare con il flusso di lavoro delle @dfn{pull request}, che diventerà la norma dopo quella data. @xref{Submitting Patches}, per maggiori informazioni."

#. type: anchor{#1}
#: guix-git/doc/contributing.texi:2198 guix-git/doc/contributing.texi:2205
#, fuzzy, no-wrap
#| msgid "Submitting Patches"
msgid "Single Patches"
msgstr "Invia delle Patches"

#. type: Plain text
#: guix-git/doc/contributing.texi:2205
msgid "The @command{git send-email} command is the best way to send both single patches and patch series (@pxref{Multiple Patches}) to the Guix mailing list.  Sending patches as email attachments may make them difficult to review in some mail clients, and @command{git diff} does not store commit metadata."
msgstr "Il comando @command{git send-email} è il modo migliore per inviare sia patch singole che serie di patch (@pxref{Multiple Patches}) alla mailing list di Guix. L'invio di patch come allegati email potrebbe renderle difficili da revisionare in alcuni client di posta, e @command{git diff} non memorizza i metadati dei commit."

#. type: quotation
#: guix-git/doc/contributing.texi:2209
msgid "The @command{git send-email} command is provided by the @code{send-email} output of the @code{git} package, i.e. @code{git:send-email}."
msgstr "Il comando @command{git send-email} è fornito dall'output @code{send-email} del pacchetto @code{git}, cioè @code{git:send-email}."

#. type: Plain text
#: guix-git/doc/contributing.texi:2216
msgid "The following command will create a patch email from the latest commit, open it in your @var{EDITOR} or @var{VISUAL} for editing, and send it to the Guix mailing list to be reviewed and merged.  Assuming you have already configured Git according to @xref{Configuring Git}, you can simply use:"
msgstr "Il comando seguente creerà un'email di patch dall'ultimo commit, la aprirà nel tuo @var{EDITOR} o @var{VISUAL} per la modifica e la invierà alla mailing list di Guix per essere revisionata e unita. Supponendo che tu abbia già configurato Git secondo @xref{Configuring Git}, puoi semplicemente usare:"

#. type: example
#: guix-git/doc/contributing.texi:2219
#, no-wrap
msgid "$ git send-email --annotate -1\n"
msgstr "$ git send-email --annotate -1\n"

#. type: quotation
#: guix-git/doc/contributing.texi:2221 guix-git/doc/guix.texi:10895
#: guix-git/doc/guix.texi:21377 guix-git/doc/guix.texi:21385
#: guix-git/doc/guix.texi:37677
#, no-wrap
msgid "Tip"
msgstr "Suggerimento:"

#. type: quotation
#: guix-git/doc/contributing.texi:2227
msgid "To add a prefix to the subject of your patch, you may use the @option{--subject-prefix} option.  The Guix project uses this to specify that the patch is intended for a branch or repository other than the @code{master} branch of @url{https://codeberg.org/guix/guix.git}."
msgstr "Per aggiungere un prefisso all'oggetto della tua patch, puoi usare l'opzione @option{--subject-prefix}. Il progetto Guix usa questo per specificare che la patch è destinata a un ramo o repository diverso dal ramo @code{master} di @url{https://codeberg.org/guix/guix.git}."

#. type: example
#: guix-git/doc/contributing.texi:2230
#, no-wrap
msgid "git send-email --annotate --subject-prefix='PATCH core-updates' -1\n"
msgstr "git send-email --annotate --subject-prefix='PATCH core-updates' -1\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2237
msgid "The patch email contains a three-dash separator line after the commit message.  You may ``annotate'' the patch with explanatory text by adding it under this line.  If you do not wish to annotate the email, you may drop the @option{--annotate} option."
msgstr "L'email della patch contiene una linea separatrice di tre trattini dopo il messaggio di commit. Puoi ``annotare'' la patch con testo esplicativo aggiungendolo sotto questa linea. Se non desideri annotare l'email, puoi omettere l'opzione @option{--annotate}."

#. type: Plain text
#: guix-git/doc/contributing.texi:2244
msgid "If you need to send a revised patch, don't resend it like this or send a ``fix'' patch to be applied on top of the last one; instead, use @command{git commit --amend} or @url{https://git-rebase.io, @command{git rebase}} to modify the commit, and use the @email{@var{ISSUE_NUMBER}@@debbugs.gnu.org} address and the @option{-v} flag with @command{git send-email}."
msgstr "Se devi inviare una patch rivista, non reinviarla così o inviare una patch ``fix'' da applicare sopra l'ultima; invece, usa @command{git commit --amend} o @url{https://git-rebase.io, @command{git rebase}} per modificare il commit, e usa l'indirizzo @email{@var{ISSUE_NUMBER}@@debbugs.gnu.org} e il flag @option{-v} con @command{git send-email}."

#. type: example
#: guix-git/doc/contributing.texi:2249
#, no-wrap
msgid ""
"$ git commit --amend\n"
"$ git send-email --annotate -v@var{REVISION} \\\n"
"      --to=@var{ISSUE_NUMBER}@@debbugs.gnu.org -1\n"
msgstr ""
"$ git commit --amend\n"
"$ git send-email --annotate -v@var{REVISION} \\\n"
"      --to=@var{ISSUE_NUMBER}@@debbugs.gnu.org -1\n"

#. type: quotation
#: guix-git/doc/contributing.texi:2255
msgid "Due to an apparent bug in @command{git send-email}, @option{-v @var{REVISION}} (with the space) will not work; you @emph{must} use @option{-v@var{REVISION}}."
msgstr "A causa di un apparente bug in @command{git send-email}, @option{-v @var{REVISION}} (con lo spazio) non funzionerà; @emph{devi} usare @option{-v@var{REVISION}}."

#. type: Plain text
#: guix-git/doc/contributing.texi:2261
msgid "You can find out @var{ISSUE_NUMBER} either by searching on the mumi interface at @url{https://issues.guix.gnu.org} for the name of your patch or reading the acknowledgement email sent automatically by Debbugs in reply to incoming bugs and patches, which contains the bug number."
msgstr "Puoi scoprire @var{ISSUE_NUMBER} cercando l'interfaccia mumi su @url{https://issues.guix.gnu.org} per il nome della tua patch o leggendo l'email di conferma inviata automaticamente da Debbugs in risposta a bug e patch in arrivo, che contiene il numero del bug."

#. type: anchor{#1}
#: guix-git/doc/contributing.texi:2262 guix-git/doc/contributing.texi:2264
#, no-wrap
msgid "Notifying Teams"
msgstr "Notifica ai Team"

#. type: cindex
#: guix-git/doc/contributing.texi:2264 guix-git/doc/contributing.texi:2780
#, no-wrap
msgid "teams"
msgstr "team"

#. type: Plain text
#: guix-git/doc/contributing.texi:2273
msgid "If your git checkout has been correctly configured (@pxref{Configuring Git}), the @command{git send-email} command will automatically notify the appropriate team members, based on the scope of your changes.  This relies on the @file{etc/teams.scm} script, which can also be invoked manually if you do not use the preferred @command{git send-email} command to submit patches.  To list the available actions of the script, you can invoke it via the @command{etc/teams.scm help} command.  For more information regarding teams, @pxref{Teams}."
msgstr "Se il tuo checkout git è stato configurato correttamente (@pxref{Configuring Git}), il comando @command{git send-email} notificherà automaticamente i membri del team appropriati, in base all'ambito delle tue modifiche. Questo si basa sullo script @file{etc/teams.scm}, che può essere invocato manualmente se non usi il comando preferito @command{git send-email} per inviare patch. Per elencare le azioni disponibili dello script, puoi invocarlo tramite il comando @command{etc/teams.scm help}. Per ulteriori informazioni sui team, @pxref{Teams}."

#. type: quotation
#: guix-git/doc/contributing.texi:2277
msgid "On foreign distros, you might have to use @command{./pre-inst-env git send-email} for @file{etc/teams.scm} to work."
msgstr "Su distribuzioni esterne, potresti dover usare @command{./pre-inst-env git send-email} per far funzionare @file{etc/teams.scm}."

#. type: anchor{#1}
#: guix-git/doc/contributing.texi:2279 guix-git/doc/contributing.texi:2281
#, fuzzy, no-wrap
#| msgid "Submitting Patches"
msgid "Multiple Patches"
msgstr "Invia delle Patches"

#. type: cindex
#: guix-git/doc/contributing.texi:2281
#, no-wrap
msgid "cover letter"
msgstr "lettera di accompagnamento"

#. type: Plain text
#: guix-git/doc/contributing.texi:2287
msgid "While @command{git send-email} alone will suffice for a single patch, an unfortunate flaw in Debbugs means you need to be more careful when sending multiple patches: if you send them all to the @email{guix-patches@@gnu.org} address, a new issue will be created for each patch!"
msgstr "Mentre @command{git send-email} da solo è sufficiente per una patch singola, un difetto sfortunato in Debbugs significa che devi essere più attento quando invii più patch: se le invii tutte all'indirizzo @email{guix-patches@@gnu.org}, verrà creato un nuovo issue per ogni patch!"

#. type: Plain text
#: guix-git/doc/contributing.texi:2293
msgid "When sending a series of patches, it's best to send a Git ``cover letter'' first, to give reviewers an overview of the patch series.  We can create a directory called @file{outgoing} containing both our patch series and a cover letter called @file{0000-cover-letter.patch} with @command{git format-patch}."
msgstr "Quando invii una serie di patch, è meglio inviare prima una ``lettera di accompagnamento'' di Git, per dare ai revisori una panoramica della serie di patch. Possiamo creare una directory chiamata @file{outgoing} contenente sia la nostra serie di patch che una lettera di accompagnamento chiamata @file{0000-cover-letter.patch} con @command{git format-patch}."

#. type: example
#: guix-git/doc/contributing.texi:2297
#, no-wrap
msgid ""
"$ git format-patch -@var{NUMBER_COMMITS} -o outgoing \\\n"
"      --cover-letter\n"
msgstr ""
"$ git format-patch -@var{NUMBER_COMMITS} -o outgoing \\\n"
"      --cover-letter\n"

#. type: quotation
#: guix-git/doc/contributing.texi:2304
msgid "@code{git format-patch} accepts a wide range of @uref{https://git-scm.com/docs/gitrevisions, revision range} specifiers.  For example, if you are working in a branch, you could select all commits in your branch starting at @code{master}."
msgstr "@code{git format-patch} accetta una vasta gamma di specificatori di @uref{https://git-scm.com/docs/gitrevisions, intervallo di revisione}. Ad esempio, se stai lavorando in un ramo, potresti selezionare tutti i commit nel tuo ramo a partire da @code{master}."

#. type: example
#: guix-git/doc/contributing.texi:2308
#, no-wrap
msgid ""
"$ git format-patch master..@var{MY_BRANCH} -o outgoing \\\n"
"      --cover-letter\n"
msgstr ""
"$ git format-patch master..@var{MY_BRANCH} -o outgoing \\\n"
"      --cover-letter\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2314
msgid "We can now send @emph{just} the cover letter to the @email{guix-patches@@gnu.org} address, which will create an issue that we can send the rest of the patches to."
msgstr "Ora possiamo inviare @emph{solo} la lettera di accompagnamento all'indirizzo @email{guix-patches@@gnu.org}, che creerà un issue a cui possiamo inviare il resto delle patch."

#. type: example
#: guix-git/doc/contributing.texi:2318
#, no-wrap
msgid ""
"$ git send-email outgoing/0000-cover-letter.patch --annotate\n"
"$ rm outgoing/0000-cover-letter.patch # we don't want to resend it!\n"
msgstr ""
"$ git send-email outgoing/0000-cover-letter.patch --annotate\n"
"$ rm outgoing/0000-cover-letter.patch # non vogliamo reinviarla!\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2323
msgid "Ensure you edit the email to add an appropriate subject line and blurb before sending it.  Note the automatically generated shortlog and diffstat below the blurb."
msgstr "Assicurati di modificare l'email per aggiungere un oggetto appropriato e una breve descrizione prima di inviarla. Nota il shortlog e il diffstat generati automaticamente sotto la descrizione."

#. type: Plain text
#: guix-git/doc/contributing.texi:2326
msgid "Once the Debbugs mailer has replied to your cover letter email, you can send the actual patches to the newly-created issue address."
msgstr "Dopo che il mailer Debbugs ha risposto alla tua email di lettera di accompagnamento, puoi inviare le patch effettive al nuovo indirizzo issue creato."

#. type: example
#: guix-git/doc/contributing.texi:2330
#, no-wrap
msgid ""
"$ git send-email outgoing/*.patch --to=@var{ISSUE_NUMBER}@@debbugs.gnu.org\n"
"$ rm -rf outgoing # we don't need these anymore\n"
msgstr ""
"$ git send-email outgoing/*.patch --to=@var{ISSUE_NUMBER}@@debbugs.gnu.org\n"
"$ rm -rf outgoing # non ci servono più\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2335
msgid "Thankfully, this @command{git format-patch} dance is not necessary to send an amended patch series, since an issue already exists for the patchset."
msgstr "Fortunatamente, questa danza di @command{git format-patch} non è necessaria per inviare una serie di patch modificata, poiché esiste già un issue per il set di patch."

#. type: example
#: guix-git/doc/contributing.texi:2339
#, no-wrap
msgid ""
"$ git send-email -@var{NUMBER_COMMITS} -v@var{REVISION} \\\n"
"      --to=@var{ISSUE_NUMBER}@@debbugs.gnu.org\n"
msgstr ""
"$ git send-email -@var{NUMBER_COMMITS} -v@var{REVISION} \\\n"
"      --to=@var{ISSUE_NUMBER}@@debbugs.gnu.org\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2344
msgid "If need be, you may use @option{--cover-letter --annotate} to send another cover letter, e.g. for explaining what's changed since the last revision, and why these changes are necessary."
msgstr "Se necessario, puoi usare @option{--cover-letter --annotate} per inviare un'altra lettera di accompagnamento, ad esempio per spiegare cosa è cambiato dall'ultima revisione e perché questi cambiamenti sono necessari."

#. type: Plain text
#: guix-git/doc/contributing.texi:2350
msgid "This section describes how the Guix project tracks its bug reports, patch submissions and topic branches."
msgstr "Questa sezione descrive come il progetto Guix tiene traccia dei report di bug, delle sottomissioni di patch e dei rami tematici."

#. type: subsection
#: guix-git/doc/contributing.texi:2357 guix-git/doc/contributing.texi:2359
#: guix-git/doc/contributing.texi:2360
#, no-wrap
msgid "The Issue Tracker"
msgstr "Il Tracker degli Issue"

#. type: menuentry
#: guix-git/doc/contributing.texi:2357
msgid "The official bug and patch tracker."
msgstr "Il tracker ufficiale di bug e patch."

#. type: subsection
#: guix-git/doc/contributing.texi:2357 guix-git/doc/contributing.texi:2381
#: guix-git/doc/contributing.texi:2382
#, no-wrap
msgid "Managing Patches and Branches"
msgstr "Gestione di Patch e Rami"

#. type: menuentry
#: guix-git/doc/contributing.texi:2357
msgid "How changes to Guix are managed."
msgstr "Come vengono gestite le modifiche a Guix."

#. type: subsection
#: guix-git/doc/contributing.texi:2357 guix-git/doc/contributing.texi:2486
#: guix-git/doc/contributing.texi:2487
#, no-wrap
msgid "Debbugs User Interfaces"
msgstr "Interfacce Utente di Debbugs"

#. type: menuentry
#: guix-git/doc/contributing.texi:2357
msgid "Ways to interact with Debbugs."
msgstr "Modi per interagire con Debbugs."

#. type: subsection
#: guix-git/doc/contributing.texi:2357 guix-git/doc/contributing.texi:2684
#: guix-git/doc/contributing.texi:2685
#, no-wrap
msgid "Debbugs Usertags"
msgstr "Usertags di Debbugs"

#. type: menuentry
#: guix-git/doc/contributing.texi:2357
msgid "Tag reports with custom labels."
msgstr "Etichettare i report con etichette personalizzate."

#. type: subsection
#: guix-git/doc/contributing.texi:2357 guix-git/doc/contributing.texi:2741
#: guix-git/doc/contributing.texi:2742
#, no-wrap
msgid "Cuirass Build Notifications"
msgstr "Notifiche di Build di Cuirass"

#. type: menuentry
#: guix-git/doc/contributing.texi:2357
msgid "Be alerted of any breakage via RSS feeds."
msgstr "Essere avvisati di qualsiasi interruzione tramite feed RSS."

#. type: cindex
#: guix-git/doc/contributing.texi:2362
#, no-wrap
msgid "bug reports, tracking"
msgstr "report di bug, tracciamento"

#. type: cindex
#: guix-git/doc/contributing.texi:2363
#, no-wrap
msgid "patch submissions, tracking"
msgstr "sottomissioni di patch, tracciamento"

#. type: cindex
#: guix-git/doc/contributing.texi:2364
#, no-wrap
msgid "issue tracking"
msgstr "tracciamento degli issue"

#. type: cindex
#: guix-git/doc/contributing.texi:2365
#, no-wrap
msgid "Debbugs, issue tracking system"
msgstr "Debbugs, sistema di tracciamento degli issue"

#. type: Plain text
#: guix-git/doc/contributing.texi:2369
msgid "Bug reports (@dfn{issues}) and patch submissions (@dfn{pull requests})  are currently tracked at the @uref{https://codeberg.org/guix/guix, project's home at Codeberg}."
msgstr "Le segnalazioni di bug (@dfn{issues}) e l'invio di patch (@dfn{pull request}) sono attualmente tracciate sulla @uref{https://codeberg.org/guix/guix, pagina del progetto su Codeberg}."

#. type: Plain text
#: guix-git/doc/contributing.texi:2380
msgid "Before May 25th, 2025, bug reports and patches were exclusively tracked using the Debbugs instance at @uref{https://bugs.gnu.org}; it may still be used for these purposes until December 31st, 2025, after which Codeberg will become the sole option to report new bugs and propose new changes@footnote{Check out @uref{https://codeberg.org/guix/guix-consensus-documents/src/branch/main/002-codeberg.md, Guix Consensus Document 002} for details on this decision.}.  With Debbugs, bug reports are sent by email to @email{bug-guix@@gnu.org} and patches are sent to @email{guix-patches@@gnu.org} (@pxref{Submitting Patches})."
msgstr "Prima del 25 maggio 2025, le segnalazioni di bug e le patch erano tracciate esclusivamente utilizzando l'istanza Debbugs su @uref{https://bugs.gnu.org}; potrà ancora essere utilizzata per questi scopi fino al 31 dicembre 2025, dopodiché Codeberg diventerà l'unica opzione per segnalare nuovi bug e proporre nuove modifiche@footnote{Consulta il @uref{https://codeberg.org/guix/guix-consensus-documents/src/branch/main/002-codeberg.md, Documento di Consenso Guix 002} per i dettagli su questa decisione.}. Con Debbugs, le segnalazioni di bug vengono inviate via email a @email{bug-guix@@gnu.org} e le patch a @email{guix-patches@@gnu.org} (@pxref{Submitting Patches})."

#. type: cindex
#: guix-git/doc/contributing.texi:2383
#, no-wrap
msgid "branching strategy"
msgstr "strategia di branching"

#. type: cindex
#: guix-git/doc/contributing.texi:2384
#, no-wrap
msgid "rebuild scheduling strategy"
msgstr "strategia di pianificazione delle ricostruzioni"

#. type: Plain text
#: guix-git/doc/contributing.texi:2393
msgid "Submitted patches are picked up and tested by the quality assurance service; the result of that testing eventually shows up on the dashboard at @indicateurl{https://qa.guix.gnu.org/issue/@var{ISSUE_NUMBER}}, where @var{ISSUE_NUMBER} is the number assigned by the issue tracker, currently Debbugs (work is in progress to support Codeberg pull requests).  Leave time for a review, without committing anything."
msgstr "Le patch inviate vengono raccolte e testate dal servizio di assicurazione qualità; il risultato di questi test appare infine sulla dashboard all'indirizzo @indicateurl{https://qa.guix.gnu.org/issue/@var{ISSUE_NUMBER}}, dove @var{ISSUE_NUMBER} è il numero assegnato dal sistema di tracciamento dei problemi, attualmente Debbugs (è in corso il lavoro per supportare le pull request di Codeberg). Lascia tempo per una revisione, senza fare commit di nulla."

#. type: Plain text
#: guix-git/doc/contributing.texi:2399
msgid "As an exception, some changes considered ``trivial'' or ``obvious'' may be pushed directly to the @code{master} branch.  This includes changes to fix typos and reverting commits that caused immediate problems.  This is subject to being adjusted, allowing individuals to commit directly on non-controversial changes on parts they’re familiar with."
msgstr "Come eccezione, alcune modifiche considerate ``banali'' o ``ovvie'' possono essere inviate direttamente al ramo @code{master}. Questo include modifiche per correggere refusi e revert di commit che hanno causato problemi immediati. Questo è soggetto a modifiche, consentendo agli individui di effettuare commit direttamente su modifiche non controverse in parti con cui hanno familiarità."

#. type: Plain text
#: guix-git/doc/contributing.texi:2407
msgid "Changes which affect more than 300 dependent packages (@pxref{Invoking guix refresh}) should first be pushed to a topic branch other than @code{master}; the set of changes should be consistent---e.g., ``GNOME update'', ``NumPy update'', etc.  This allows for testing: the branch will automatically show up at @indicateurl{https://qa.guix.gnu.org/branch/@var{branch}}, with an indication of its build status on various platforms."
msgstr "Le modifiche che interessano più di 300 pacchetti dipendenti (@pxref{Invoking guix refresh}) dovrebbero prima essere inviate a un ramo tematico diverso da @code{master}; l'insieme delle modifiche dovrebbe essere coerente---ad esempio, ``Aggiornamento GNOME'', ``Aggiornamento NumPy'', ecc. Ciò consente di testare: il ramo apparirà automaticamente su @indicateurl{https://qa.guix.gnu.org/branch/@var{branch}}, con un'indicazione del suo stato di build su varie piattaforme."

#. type: cindex
#: guix-git/doc/contributing.texi:2408
#, no-wrap
msgid "feature branches, coordination"
msgstr "rami di funzionalità, coordinamento"

#. type: Plain text
#: guix-git/doc/contributing.texi:2413
msgid "To help coordinate the merging of branches, you must create a new guix-patches issue each time you create a branch (@pxref{The Issue Tracker}).  The title of the issue requesting to merge a branch should have the following format:"
msgstr "Per aiutare a coordinare la fusione dei rami, devi creare un nuovo issue guix-patches ogni volta che crei un ramo (@pxref{The Issue Tracker}). Il titolo dell'issue che richiede di unire un ramo dovrebbe avere il seguente formato:"

#. type: cindex
#: guix-git/doc/contributing.texi:2414
#, no-wrap
msgid "merge requests, template"
msgstr "richieste di merge, modello"

#. type: example
#: guix-git/doc/contributing.texi:2417
#, no-wrap
msgid "Request for merging \"@var{name}\" branch\n"
msgstr "Richiesta di unione del ramo \"@var{name}\"\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2422
msgid "The @url{https://qa.guix.gnu.org/, QA infrastructure} recognizes such issues and lists the merge requests on its main page.  The following points apply to managing these branches:"
msgstr "L'infrastruttura QA @url{https://qa.guix.gnu.org/} riconosce tali issue ed elenca le richieste di merge nella sua pagina principale. I seguenti punti si applicano alla gestione di questi rami:"

#. type: enumerate
#: guix-git/doc/contributing.texi:2428
msgid "The commits on the branch should be a combination of the patches relevant to the branch.  Patches not related to the topic of the branch should go elsewhere."
msgstr "I commit sul ramo dovrebbero essere una combinazione delle patch rilevanti per il ramo. Le patch non correlate all'argomento del ramo dovrebbero andare altrove."

#. type: enumerate
#: guix-git/doc/contributing.texi:2433
msgid "Any changes that can be made on the master branch, should be made on the master branch.  If a commit can be split to apply part of the changes on master, this is good to do."
msgstr "Qualsiasi modifica che può essere fatta sul ramo master, dovrebbe essere fatta sul ramo master. Se un commit può essere suddiviso per applicare parte delle modifiche su master, è bene farlo."

#. type: enumerate
#: guix-git/doc/contributing.texi:2437
msgid "It should be possible to re-create the branch by starting from master and applying the relevant patches."
msgstr "Dovrebbe essere possibile ricreare il ramo partendo da master e applicando le patch rilevanti."

#. type: enumerate
#: guix-git/doc/contributing.texi:2441
msgid "Avoid merging master in to the branch.  Prefer rebasing or re-creating the branch on top of an updated master revision."
msgstr "Evita di unire master nel ramo. Preferisci il rebasing o la ricreazione del ramo sopra una revisione master aggiornata."

#. type: enumerate
#: guix-git/doc/contributing.texi:2446
msgid "Minimise the changes on master that are missing on the branch prior to merging the branch in to master.  This means that the state of the branch better reflects the state of master should the branch be merged."
msgstr "Minimizza le modifiche su master che mancano sul ramo prima di unire il ramo in master. Ciò significa che lo stato del ramo riflette meglio lo stato di master nel caso in cui il ramo venga unito."

#. type: enumerate
#: guix-git/doc/contributing.texi:2451
msgid "If you don't have commit access, create the ``Request for merging'' issue and request that someone creates the branch.  Include a list of issues/patches to include on the branch."
msgstr "Se non hai accesso in commit, crea l'issue ``Richiesta di unione'' e richiedi che qualcuno crei il ramo. Includi un elenco di issue/patch da includere nel ramo."

#. type: Plain text
#: guix-git/doc/contributing.texi:2465
msgid "Normally branches will be merged in a ``first come, first merged'' manner, tracked through the guix-patches issues.  If you agree on a different order with those involved, you can track this by updating which issues block@footnote{You can mark an issue as blocked by another by emailing @email{control@@debbugs.gnu.org} with the following line in the body of the email: @code{block XXXXX by YYYYY}.  Where @code{XXXXX} is the number for the blocked issue, and @code{YYYYY} is the number for the issue blocking it.} which other issues.  Therefore, to know which branch is at the front of the queue, look for the oldest issue, or the issue that isn't @dfn{blocked} by any other branch merges.  An ordered list of branches with the open issues is available at @url{https://qa.guix.gnu.org}."
msgstr "Normalmente i rami vengono uniti in modo ``primo arrivato, primo unito'', tracciato attraverso gli issue guix-patches. Se concordi un ordine diverso con i coinvolti, puoi tracciarlo aggiornando quali issue bloccano@footnote{Puoi contrassegnare un issue come bloccato da un altro inviando un'email a @email{control@@debbugs.gnu.org} con la seguente riga nel corpo dell'email: @code{block XXXXX by YYYYY}. Dove @code{XXXXX} è il numero dell'issue bloccato e @code{YYYYY} è il numero dell'issue che lo blocca.} quali altri issue. Pertanto, per sapere quale ramo è in testa alla coda, cerca l'issue più vecchio o l'issue che non è @dfn{bloccato} da nessun altro merge di ramo. Un elenco ordinato dei rami con gli issue aperti è disponibile su @url{https://qa.guix.gnu.org}."

#. type: Plain text
#: guix-git/doc/contributing.texi:2471
msgid "Once a branch is at the front of the queue, wait until sufficient time has passed for the build farms to have processed the changes, and for the necessary testing to have happened.  For example, you can check @indicateurl{https://qa.guix.gnu.org/branch/@var{branch}} to see information on some builds and substitute availability."
msgstr "Una volta che un ramo è in testa alla coda, attendi che sia passato tempo sufficiente affinché le build farm elaborino le modifiche e siano stati effettuati i test necessari. Ad esempio, puoi controllare @indicateurl{https://qa.guix.gnu.org/branch/@var{branch}} per vedere informazioni su alcune build e sulla disponibilità di sostituti."

#. type: Plain text
#: guix-git/doc/contributing.texi:2474
msgid "Once the branch has been merged, the issue should be closed and the branch deleted."
msgstr "Una volta che il ramo è stato unito, l'issue dovrebbe essere chiuso e il ramo eliminato."

#. type: cindex
#: guix-git/doc/contributing.texi:2475
#, no-wrap
msgid "work-in-progress branches, wip"
msgstr "rami work-in-progress, wip"

#. type: cindex
#: guix-git/doc/contributing.texi:2476
#, no-wrap
msgid "wip branches"
msgstr "rami wip"

#. type: Plain text
#: guix-git/doc/contributing.texi:2485
msgid "Sometimes, a branch may be a work in progress, for example for larger efforts such as updating the GNOME desktop.  In these cases, the branch name should reflect this by having the @samp{wip-} prefix.  The QA infrastructure will avoid building work-in-progress branches, so that the available resources can be better focused on building the branches that are ready to be merged.  When the branch is no longer a work in progress, it should be renamed, with the @samp{wip-} prefix removed, and only then should the merge requests be created, as documented earlier."
msgstr "A volte, un ramo potrebbe essere un lavoro in corso, ad esempio per sforzi maggiori come l'aggiornamento del desktop GNOME. In questi casi, il nome del ramo dovrebbe rifletterlo con il prefisso @samp{wip-}. L'infrastruttura QA eviterà di costruire rami work-in-progress, in modo che le risorse disponibili possano essere meglio concentrate sulla costruzione dei rami pronti per essere uniti. Quando il ramo non è più un lavoro in corso, dovrebbe essere rinominato, rimuovendo il prefisso @samp{wip-}, e solo allora dovrebbero essere create le richieste di merge, come documentato in precedenza."

#. type: quotation
#: guix-git/doc/contributing.texi:2496
msgid "This section is about bug reports and patches sent by email to @uref{https://issues.guix.gnu.org, Debbugs}.  This option is supported until December 31st, 2025, after which @uref{https://codeberg.org/guix/guix, Codeberg} will be the only interface for submitting bug reports and changes.  @xref{Submitting Patches}, for more info."
msgstr "Questa sezione riguarda le segnalazioni di bug e le patch inviate via email a @uref{https://issues.guix.gnu.org, Debbugs}. Questa opzione è supportata fino al 31 dicembre 2025, dopodiché @uref{https://codeberg.org/guix/guix, Codeberg} diventerà l'unica interfaccia per inviare segnalazioni di bug e modifiche. @xref{Submitting Patches}, per maggiori informazioni."

#. type: subsubsection
#: guix-git/doc/contributing.texi:2498
#, no-wrap
msgid "Web interface"
msgstr "Interfaccia web"

#. type: cindex
#: guix-git/doc/contributing.texi:2500
#, no-wrap
msgid "mumi, web interface for issues"
msgstr "mumi, interfaccia web per gli issue"

#. type: Plain text
#: guix-git/doc/contributing.texi:2503
msgid "A web interface (actually @emph{two} web interfaces!) are available to browse issues:"
msgstr "Un'interfaccia web (in realtà @emph{due} interfacce web!) è disponibile per sfogliare gli issue:"

#. type: itemize
#: guix-git/doc/contributing.texi:2512
msgid "@url{https://issues.guix.gnu.org} provides a pleasant interface powered by mumi@footnote{Mumi is a nice piece of software written in Guile, and you can help! See @url{https://codeberg.org/guix/mumi}.} to browse bug reports and patches, and to participate in discussions; mumi also has a command-line interface as we will see below;"
msgstr "@url{https://issues.guix.gnu.org} fornisce un'interfaccia piacevole alimentata da mumi@footnote{Mumi è un bel software scritto in Guile, e puoi aiutare! Vedi @url{https://codeberg.org/guix/mumi}.} per sfogliare report di bug e patch e partecipare alle discussioni; mumi ha anche un'interfaccia a riga di comando come vedremo sotto;"

#. type: itemize
#: guix-git/doc/contributing.texi:2514
msgid "@url{https://bugs.gnu.org/guix} lists bug reports;"
msgstr "@url{https://bugs.gnu.org/guix} elenca i report di bug;"

#. type: itemize
#: guix-git/doc/contributing.texi:2516
msgid "@url{https://bugs.gnu.org/guix-patches} lists patch submissions."
msgstr "@url{https://bugs.gnu.org/guix-patches} elenca le sottomissioni di patch."

#. type: Plain text
#: guix-git/doc/contributing.texi:2521
msgid "To view discussions related to issue number @var{n}, go to @indicateurl{https://issues.guix.gnu.org/@var{n}} or @indicateurl{https://bugs.gnu.org/@var{n}}."
msgstr "Per visualizzare le discussioni relative all'issue numero @var{n}, vai su @indicateurl{https://issues.guix.gnu.org/@var{n}} o @indicateurl{https://bugs.gnu.org/@var{n}}."

#. type: subsubsection
#: guix-git/doc/contributing.texi:2522
#, no-wrap
msgid "Command-Line Interface"
msgstr "Interfaccia a Righe di Comando"

#. type: cindex
#: guix-git/doc/contributing.texi:2524
#, no-wrap
msgid "mumi command-line interface"
msgstr "interfaccia a riga di comando di mumi"

#. type: cindex
#: guix-git/doc/contributing.texi:2525
#, no-wrap
msgid "mumi am"
msgstr "mumi am"

#. type: cindex
#: guix-git/doc/contributing.texi:2526
#, no-wrap
msgid "mumi compose"
msgstr "mumi compose"

#. type: cindex
#: guix-git/doc/contributing.texi:2527
#, no-wrap
msgid "mumi send-email"
msgstr "mumi send-email"

#. type: cindex
#: guix-git/doc/contributing.texi:2528
#, no-wrap
msgid "mumi www"
msgstr "mumi www"

#. type: Plain text
#: guix-git/doc/contributing.texi:2533
msgid "Mumi also comes with a command-line interface that can be used to search existing issues, open new issues, compose replies, apply and send patches.  You do not need to use Emacs to use the mumi command-line client.  You interact with it only on the command-line."
msgstr "Mumi include anche un'interfaccia a riga di comando che può essere usata per cercare issue esistenti, aprire nuovi issue, comporre risposte, applicare e inviare patch. Non è necessario usare Emacs per usare il client a riga di comando di mumi. Interagisci con esso solo dalla riga di comando."

#. type: Plain text
#: guix-git/doc/contributing.texi:2537
msgid "To use the mumi command-line interface, navigate to a local clone of the Guix git repository, and drop into a shell with mumi, git and git:send-email installed."
msgstr "Per usare l'interfaccia a riga di comando di mumi, naviga in una copia locale del repository git di Guix ed entra in una shell con mumi, git e git:send-email installati."

#. type: example
#: guix-git/doc/contributing.texi:2541
#, no-wrap
msgid ""
"$ cd guix\n"
"~/guix$ guix shell mumi git git:send-email\n"
msgstr ""
"$ cd guix\n"
"~/guix$ guix shell mumi git git:send-email\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2544
msgid "To search for issues, say all open issues about \"zig\", run"
msgstr "Per cercare issue, ad esempio tutti gli issue aperti su \"zig\", esegui"

#. type: example
#: guix-git/doc/contributing.texi:2547
#, no-wrap
msgid ""
"~/guix [env]$ mumi search zig is:open\n"
"\n"
msgstr ""
"~/guix [env]$ mumi search zig is:open\n"
"\n"

#. type: example
#: guix-git/doc/contributing.texi:2558
#, no-wrap
msgid ""
"#60889 Add zig-build-system\n"
"opened on 17 Jan 17:37 Z by Ekaitz Zarraga\n"
"#61036 [PATCH 0/3] Update zig to 0.10.1\n"
"opened on 24 Jan 09:42 Z by Efraim Flashner\n"
"#39136 [PATCH] gnu: services: Add endlessh.\n"
"opened on 14 Jan 2020 21:21 by Nicol? Balzarotti\n"
"#60424 [PATCH] gnu: Add python-online-judge-tools\n"
"opened on 30 Dec 2022 07:03 by gemmaro\n"
"#45601 [PATCH 0/6] vlang 0.2 update\n"
"opened on  1 Jan 2021 19:23 by Ryan Prior\n"
msgstr ""
"#60889 Add zig-build-system\n"
"opened on 17 Jan 17:37 Z by Ekaitz Zarraga\n"
"#61036 [PATCH 0/3] Update zig to 0.10.1\n"
"opened on 24 Jan 09:42 Z by Efraim Flashner\n"
"#39136 [PATCH] gnu: services: Add endlessh.\n"
"opened on 14 Jan 2020 21:21 by Nicol? Balzarotti\n"
"#60424 [PATCH] gnu: Add python-online-judge-tools\n"
"opened on 30 Dec 2022 07:03 by gemmaro\n"
"#45601 [PATCH 0/6] vlang 0.2 update\n"
"opened on  1 Jan 2021 19:23 by Ryan Prior\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2561
msgid "Pick an issue and make it the \"current\" issue."
msgstr "Scegli un issue e rendilo l'issue \"corrente\"."

#. type: example
#: guix-git/doc/contributing.texi:2564
#, no-wrap
msgid ""
"~/guix [env]$ mumi current 61036\n"
"\n"
msgstr ""
"~/guix [env]$ mumi current 61036\n"
"\n"

#. type: example
#: guix-git/doc/contributing.texi:2567
#, no-wrap
msgid ""
"#61036 [PATCH 0/3] Update zig to 0.10.1\n"
"opened on 24 Jan 09:42 Z by Efraim Flashner\n"
msgstr ""
"#61036 [PATCH 0/3] Update zig to 0.10.1\n"
"opened on 24 Jan 09:42 Z by Efraim Flashner\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2572
msgid "Once an issue is the current issue, you can open the issue in a web browser, compose replies, apply patches, send patches, etc. with short succinct commands."
msgstr "Una volta che un issue è l'issue corrente, puoi aprirlo in un browser web, comporre risposte, applicare patch, inviare patch, ecc. con comandi brevi e succinti."

#. type: Plain text
#: guix-git/doc/contributing.texi:2574
msgid "Open the issue in your web browser using"
msgstr "Apri l'issue nel tuo browser web usando"

#. type: example
#: guix-git/doc/contributing.texi:2577
#, no-wrap
msgid "~/guix [env]$ mumi www\n"
msgstr "~/guix [env]$ mumi www\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2580
msgid "Compose a reply using"
msgstr "Componi una risposta usando"

#. type: example
#: guix-git/doc/contributing.texi:2583
#, no-wrap
msgid "~/guix [env]$ mumi compose\n"
msgstr "~/guix [env]$ mumi compose\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2586
msgid "Compose a reply and close the issue using"
msgstr "Componi una risposta e chiudi l'issue usando"

#. type: example
#: guix-git/doc/contributing.texi:2589
#, no-wrap
msgid "~/guix [env]$ mumi compose --close\n"
msgstr "~/guix [env]$ mumi compose --close\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2594
msgid "@command{mumi compose} opens your mail client by passing @samp{mailto:} URIs to @command{xdg-open}.  So, you need to have @command{xdg-open} set up to open your mail client correctly."
msgstr "@command{mumi compose} apre il tuo client di posta passando URI @samp{mailto:} a @command{xdg-open}. Quindi, devi avere @command{xdg-open} configurato per aprire correttamente il tuo client di posta."

#. type: Plain text
#: guix-git/doc/contributing.texi:2596
msgid "Apply the latest patchset from the issue using"
msgstr "Applica l'ultimo set di patch dall'issue usando"

#. type: example
#: guix-git/doc/contributing.texi:2599
#, no-wrap
msgid "~/guix [env]$ mumi am\n"
msgstr "~/guix [env]$ mumi am\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2602
msgid "You may also apply a patchset of a specific version (say, v3) using"
msgstr "Puoi anche applicare un set di patch di una versione specifica (ad esempio, v3) usando"

#. type: example
#: guix-git/doc/contributing.texi:2605
#, no-wrap
msgid "~/guix [env]$ mumi am v3\n"
msgstr "~/guix [env]$ mumi am v3\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2610
msgid "Or, you may apply a patch from a specific e-mail message.  For example, to apply the patch from the 4th message (message index starts from 0), run"
msgstr "Oppure, puoi applicare una patch da un messaggio email specifico. Ad esempio, per applicare la patch dal 4° messaggio (l'indice del messaggio inizia da 0), esegui"

#. type: example
#: guix-git/doc/contributing.texi:2613
#, no-wrap
msgid "~/guix [env]$ mumi am @@4\n"
msgstr "~/guix [env]$ mumi am @@4\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2618
msgid "@command{mumi am} is a wrapper around @command{git am}.  You can pass @command{git am} arguments to it after a @samp{--}.  For example, to add a Signed-off-by trailer, run"
msgstr "@command{mumi am} è un wrapper attorno a @command{git am}. Puoi passare argomenti di @command{git am} dopo un @samp{--}. Ad esempio, per aggiungere un trailer Signed-off-by, esegui"

#. type: example
#: guix-git/doc/contributing.texi:2621
#, no-wrap
msgid "~/guix [env]$ mumi am -- -s\n"
msgstr "~/guix [env]$ mumi am -- -s\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2624
msgid "Create and send patches to the issue using"
msgstr "Crea e invia patch all'issue usando"

#. type: example
#: guix-git/doc/contributing.texi:2628
#, no-wrap
msgid ""
"~/guix [env]$ git format-patch origin/master\n"
"~/guix [env]$ mumi send-email foo.patch bar.patch\n"
msgstr ""
"~/guix [env]$ git format-patch origin/master\n"
"~/guix [env]$ mumi send-email foo.patch bar.patch\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2633
msgid "Note that you do not have to pass in @samp{--to} or @samp{--cc} arguments to @command{git format-patch}.  @command{mumi send-email} will put them in correctly when sending the patches."
msgstr "Nota che non devi passare argomenti @samp{--to} o @samp{--cc} a @command{git format-patch}. @command{mumi send-email} li inserirà correttamente quando invia le patch."

#. type: Plain text
#: guix-git/doc/contributing.texi:2635
msgid "To open a new issue, run"
msgstr "Per aprire un nuovo issue, esegui"

#. type: example
#: guix-git/doc/contributing.texi:2638
#, no-wrap
msgid "~/guix [env]$ mumi new\n"
msgstr "~/guix [env]$ mumi new\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2642
msgid "and send an email (using @command{mumi compose}) or patches (using @command{mumi send-email})."
msgstr "e invia un'email (usando @command{mumi compose}) o patch (usando @command{mumi send-email})."

#. type: Plain text
#: guix-git/doc/contributing.texi:2648
msgid "@command{mumi send-email} is really a wrapper around @command{git send-email} that automates away all the nitty-gritty of sending patches.  It uses the current issue state to automatically figure out the correct @samp{To} address to send to, other participants to @samp{Cc}, headers to add, etc."
msgstr "@command{mumi send-email} è in realtà un wrapper attorno a @command{git send-email} che automatizza tutti i dettagli tecnici dell'invio di patch. Usa lo stato corrente dell'issue per capire automaticamente il corretto indirizzo @samp{To} a cui inviare, altri partecipanti a @samp{Cc}, intestazioni da aggiungere, ecc."

#. type: Plain text
#: guix-git/doc/contributing.texi:2656
msgid "Also note that, unlike @command{git send-email}, @command{mumi send-email} works perfectly well with single and multiple patches alike.  It automates away the debbugs dance of sending the first patch, waiting for a response from debbugs and sending the remaining patches.  It does so by sending the first patch, polling the server for a response, and then sending the remaining patches.  This polling can unfortunately take a few minutes.  So, please be patient."
msgstr "Nota inoltre che, a differenza di @command{git send-email}, @command{mumi send-email} funziona perfettamente sia con patch singole che multiple. Automatizza la danza di debbugs di inviare la prima patch, attendere una risposta da debbugs e inviare le patch rimanenti. Lo fa inviando la prima patch, interrogando il server per una risposta e poi inviando le patch rimanenti. Sfortunatamente, questo polling può richiedere alcuni minuti. Quindi, per favore sii paziente."

#. type: subsubsection
#: guix-git/doc/contributing.texi:2657
#, no-wrap
msgid "Emacs Interface"
msgstr "Interfaccia Emacs"

#. type: Plain text
#: guix-git/doc/contributing.texi:2661
msgid "If you use Emacs, you may find it more convenient to interact with issues using @file{debbugs.el}, which you can install with:"
msgstr "Se usi Emacs, potresti trovarlo più conveniente per interagire con gli issue usando @file{debbugs.el}, che puoi installare con:"

#. type: example
#: guix-git/doc/contributing.texi:2664
#, no-wrap
msgid "guix install emacs-debbugs\n"
msgstr "guix install emacs-debbugs\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2667
msgid "For example, to list all open issues on @code{guix-patches}, hit:"
msgstr "Ad esempio, per elencare tutti gli issue aperti su @code{guix-patches}, premi:"

#. type: example
#: guix-git/doc/contributing.texi:2670
#, no-wrap
msgid "@kbd{C-u} @kbd{M-x} debbugs-gnu @kbd{RET} @kbd{RET} guix-patches @kbd{RET} n y\n"
msgstr "@kbd{C-u} @kbd{M-x} debbugs-gnu @kbd{RET} @kbd{RET} guix-patches @kbd{RET} n y\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2677
msgid "For a more convenient (shorter) way to access both the bugs and patches submissions, you may want to configure the @code{debbugs-gnu-default-packages} and @code{debbugs-gnu-default-severities} Emacs variables (@pxref{Viewing Bugs within Emacs})."
msgstr "Per un modo più conveniente (più breve) per accedere sia ai bug che alle sottomissioni di patch, potresti voler configurare le variabili Emacs @code{debbugs-gnu-default-packages} e @code{debbugs-gnu-default-severities} (@pxref{Viewing Bugs within Emacs})."

#. type: Plain text
#: guix-git/doc/contributing.texi:2680
msgid "To search for bugs, @samp{@kbd{M-x} debbugs-gnu-guix-search} can be used."
msgstr "Per cercare bug, può essere usato @samp{@kbd{M-x} debbugs-gnu-guix-search}."

#. type: Plain text
#: guix-git/doc/contributing.texi:2683
msgid "@xref{Top,,, debbugs-ug, Debbugs User Guide}, for more information on this nifty tool!"
msgstr "@xref{Top,,, debbugs-ug, Debbugs User Guide}, per maggiori informazioni su questo utile strumento!"

#. type: cindex
#: guix-git/doc/contributing.texi:2687
#, no-wrap
msgid "usertags, for debbugs"
msgstr "usertags, per debbugs"

#. type: cindex
#: guix-git/doc/contributing.texi:2688
#, no-wrap
msgid "Debbugs usertags"
msgstr "Usertags di Debbugs"

#. type: Plain text
#: guix-git/doc/contributing.texi:2699
msgid "Debbugs provides a feature called @dfn{usertags} that allows any user to tag any bug with an arbitrary label.  Bugs can be searched by usertag, so this is a handy way to organize bugs@footnote{The list of usertags is public information, and anyone can modify any user's list of usertags, so keep that in mind if you choose to use this feature.}.  If you use Emacs Debbugs, the entry-point to consult existing usertags is the @samp{C-u M-x debbugs-gnu-usertags} procedure.  To set a usertag, press @samp{C} while consulting a bug within the *Guix-Patches* buffer opened with @samp{C-u M-x debbugs-gnu-bugs} buffer, then select @code{usertag} and follow the instructions."
msgstr "Debbugs fornisce una funzionalità chiamata @dfn{usertags} che permette a qualsiasi utente di etichettare qualsiasi bug con un'etichetta arbitraria. I bug possono essere cercati per usertag, quindi questo è un modo pratico per organizzare i bug@footnote{L'elenco degli usertags è informazione pubblica, e chiunque può modificare l'elenco degli usertags di qualsiasi utente, quindi tienilo a mente se scegli di usare questa funzionalità.}. Se usi Debbugs in Emacs, il punto di ingresso per consultare gli usertags esistenti è la procedura @samp{C-u M-x debbugs-gnu-usertags}. Per impostare un usertag, premi @samp{C} durante la consultazione di un bug nel buffer *Guix-Patches* aperto con il buffer @samp{C-u M-x debbugs-gnu-bugs}, quindi seleziona @code{usertag} e segui le istruzioni."

#. type: Plain text
#: guix-git/doc/contributing.texi:2705
msgid "For example, to view all the bug reports (or patches, in the case of @code{guix-patches}) tagged with the usertag @code{powerpc64le-linux} for the user @code{guix}, open a URL like the following in a web browser: @url{https://debbugs.gnu.org/cgi-bin/pkgreport.cgi?tag=powerpc64le-linux;users=guix}."
msgstr "Ad esempio, per visualizzare tutti i report di bug (o patch, nel caso di @code{guix-patches}) etichettati con l'usertag @code{powerpc64le-linux} per l'utente @code{guix}, apri un URL come il seguente in un browser web: @url{https://debbugs.gnu.org/cgi-bin/pkgreport.cgi?tag=powerpc64le-linux;users=guix}."

#. type: Plain text
#: guix-git/doc/contributing.texi:2709
msgid "For more information on how to use usertags, please refer to the documentation for Debbugs or the documentation for whatever tool you use to interact with Debbugs."
msgstr "Per ulteriori informazioni su come usare gli usertags, consulta la documentazione di Debbugs o la documentazione dello strumento che usi per interagire con Debbugs."

#. type: Plain text
#: guix-git/doc/contributing.texi:2714
msgid "In Guix, we are experimenting with usertags to keep track of architecture-specific issues, as well as reviewed ones.  To facilitate collaboration, all our usertags are associated with the single user @code{guix}.  The following usertags currently exist for that user:"
msgstr "In Guix, stiamo sperimentando gli usertags per tenere traccia di issue specifici dell'architettura, nonché di quelli revisionati. Per facilitare la collaborazione, tutti i nostri usertags sono associati all'unico utente @code{guix}. I seguenti usertags esistono attualmente per quell'utente:"

#. #-#-#-#-#  contributing.pot (guix manual checkout)  #-#-#-#-#
#. type: item
#. #-#-#-#-#  guix.pot (guix manual checkout)  #-#-#-#-#
#. type: defvar
#: guix-git/doc/contributing.texi:2717 guix-git/doc/guix.texi:676
#: guix-git/doc/guix.texi:53618
#, no-wrap
msgid "powerpc64le-linux"
msgstr "powerpc64le-linux"

#. type: table
#: guix-git/doc/contributing.texi:2725
msgid "The purpose of this usertag is to make it easy to find the issues that matter most for the @code{powerpc64le-linux} system type.  Please assign this usertag to bugs or patches that affect @code{powerpc64le-linux} but not other system types.  In addition, you may use it to identify issues that for some reason are particularly important for the @code{powerpc64le-linux} system type, even if the issue affects other system types, too."
msgstr "Lo scopo di questo usertag è facilitare la ricerca degli issue più importanti per il tipo di sistema @code{powerpc64le-linux}. Assegna questo usertag a bug o patch che influenzano @code{powerpc64le-linux} ma non altri tipi di sistema. Inoltre, puoi usarlo per identificare issue che per qualche ragione sono particolarmente importanti per il tipo di sistema @code{powerpc64le-linux}, anche se l'issue influisce anche su altri tipi di sistema."

#. #-#-#-#-#  contributing.pot (guix manual checkout)  #-#-#-#-#
#. type: item
#. #-#-#-#-#  guix.pot (guix manual checkout)  #-#-#-#-#
#. type: cindex
#: guix-git/doc/contributing.texi:2726 guix-git/doc/guix.texi:3194
#: guix-git/doc/guix.texi:5146
#, no-wrap
msgid "reproducibility"
msgstr "riproducibilità"

#. type: table
#: guix-git/doc/contributing.texi:2730
msgid "For issues related to reproducibility.  For example, it would be appropriate to assign this usertag to a bug report for a package that fails to build reproducibly."
msgstr "Per issue relativi alla riproducibilità. Ad esempio, sarebbe appropriato assegnare questo usertag a un report di bug per un pacchetto che non viene costruito in modo riproducibile."

#. type: item
#: guix-git/doc/contributing.texi:2731
#, no-wrap
msgid "reviewed-looks-good"
msgstr "reviewed-looks-good"

#. type: table
#: guix-git/doc/contributing.texi:2733
msgid "You have reviewed the series and it looks good to you (LGTM)."
msgstr "Hai revisionato la serie e ti sembra buona (LGTM)."

#. type: Plain text
#: guix-git/doc/contributing.texi:2740
msgid "If you're a committer and you want to add a usertag, just start using it with the @code{guix} user.  If the usertag proves useful to you, consider updating this section of the manual so that others will know what your usertag means."
msgstr "Se sei un committer e vuoi aggiungere un usertag, inizia semplicemente a usarlo con l'utente @code{guix}. Se l'usertag si rivela utile, considera di aggiornare questa sezione del manuale in modo che altri sappiano cosa significa il tuo usertag."

#. type: cindex
#: guix-git/doc/contributing.texi:2744
#, no-wrap
msgid "build event notifications, RSS feed"
msgstr "notifiche di eventi di build, feed RSS"

#. type: cindex
#: guix-git/doc/contributing.texi:2745
#, no-wrap
msgid "notifications, build events"
msgstr "notifiche, eventi di build"

#. type: Plain text
#: guix-git/doc/contributing.texi:2754
msgid "Cuirass includes @acronym{RSS, Really Simple Syndication} feeds as one of its features (@pxref{Notifications,,,cuirass}).  Since @url{https://ci.guix.gnu.org/, Berlin} runs an instance of Cuirass, this feature can be used to keep track of recently broken or fixed packages caused by changes pushed to the Guix git repository.  Any RSS client can be used.  A good one, included with Emacs, is @xref{Gnus,,,gnus}.  To register the feed, copy its URL, then from the main Gnus buffer, @samp{*Group*}, do the following:"
msgstr "Cuirass include feed @acronym{RSS, Really Simple Syndication} come una delle sue funzionalità (@pxref{Notifications,,,cuirass}). Poiché @url{https://ci.guix.gnu.org/, Berlin} esegue un'istanza di Cuirass, questa funzionalità può essere usata per tenere traccia dei pacchetti recentemente rotti o riparati causati da modifiche inviate al repository git di Guix. Qualsiasi client RSS può essere usato. Uno buono, incluso in Emacs, è @xref{Gnus,,,gnus}. Per registrare il feed, copia il suo URL, quindi dal buffer principale di Gnus, @samp{*Group*}, fai quanto segue:"

#. type: cindex
#: guix-git/doc/contributing.texi:2755
#, no-wrap
msgid "Gnus, configuration to read CI RSS feeds"
msgstr "Gnus, configurazione per leggere i feed RSS CI"

#. type: cindex
#: guix-git/doc/contributing.texi:2756
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "RSS feeds, Gnus configuration"
msgstr "Documentazione"

#. type: example
#: guix-git/doc/contributing.texi:2760
#, no-wrap
msgid ""
"@kbd{G R} https://ci.guix.gnu.org/events/rss/?specification=master RET\n"
"Guix CI - master RET Build events for specification master. RET\n"
msgstr ""
"@kbd{G R} https://ci.guix.gnu.org/events/rss/?specification=master INVIO\n"
"Guix CI - master INVIO Build events for specification master. INVIO\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2767
msgid "Then, back at the @samp{*Group*} buffer, press @kbd{s} to save the newly added RSS group.  As for any other Gnus group, you can update its content by pressing the @kbd{g} key.  You should now receive notifications that read like:"
msgstr "Quindi, tornando al buffer @samp{*Group*}, premi @kbd{s} per salvare il gruppo RSS appena aggiunto. Come per qualsiasi altro gruppo Gnus, puoi aggiornare il suo contenuto premendo il tasto @kbd{g}. Dovresti ora ricevere notifiche che recitano così:"

#. type: example
#: guix-git/doc/contributing.texi:2772
#, no-wrap
msgid ""
" . [ ?: Cuirass ] Build tree-sitter-meson.aarch64-linux on master is fixed.\n"
" . [ ?: Cuirass ] Build rust-pbkdf2.aarch64-linux on master is fixed.\n"
" . [ ?: Cuirass ] Build rust-pbkdf2.x86_64-linux on master is fixed.\n"
msgstr ""
" . [ ?: Cuirass ] Build tree-sitter-meson.aarch64-linux on master is fixed.\n"
" . [ ?: Cuirass ] Build rust-pbkdf2.aarch64-linux on master is fixed.\n"
" . [ ?: Cuirass ] Build rust-pbkdf2.x86_64-linux on master is fixed.\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2777
msgid "where each RSS entry contains a link to the Cuirass build details page of the associated build."
msgstr "dove ogni voce RSS contiene un collegamento alla pagina dei dettagli della build di Cuirass per la build associata."

#. type: Plain text
#: guix-git/doc/contributing.texi:2791
msgid "To organize work on Guix, including but not just development efforts, the project has a set of @dfn{teams}.  Each team has its own focus and interests and is the primary contact point for questions and contributions in those areas.  A team's primary mission is to coordinate and review the work of individuals in its scope (@pxref{Reviewing the Work of Others}); it can make decisions within its scope, in agreement with other teams whenever there is overlap or a close connection, and in accordance with other project rules such as seeking consensus (@pxref{Making Decisions})."
msgstr "Per organizzare il lavoro su Guix, inclusi ma non solo gli sforzi di sviluppo, il progetto ha un insieme di @dfn{team}. Ogni team ha il proprio focus e interessi ed è il punto di contatto principale per domande e contributi in quelle aree. La missione principale di un team è coordinare e revisionare il lavoro degli individui nel suo ambito (@pxref{Reviewing the Work of Others}); può prendere decisioni nel suo ambito, in accordo con altri team ogni volta che c'è sovrapposizione o una stretta connessione, e in conformità con altre regole del progetto come la ricerca del consenso (@pxref{Making Decisions})."

#. type: Plain text
#: guix-git/doc/contributing.texi:2805
msgid "As an example, the Python team is responsible for core Python packaging matters; it can decide to upgrade core Python packages in a dedicated @code{python-team} branch, in collaboration with any team whose scope is directly dependent on Python---e.g., the Science team---and following branching rules (@pxref{Managing Patches and Branches}).  The Documentation team helps review changes to the documentation and can initiate overarching documentation changes.  The Translations team organizes translation of Guix and its manual and coordinates efforts in that area.  The Core team is responsible for the development of core functionality and interfaces of Guix; because of its central nature, some of its work may require soliciting input from the community at large and seeking consensus before enacting decisions that would affect the entire community."
msgstr "Ad esempio, il team Python è responsabile delle questioni fondamentali di packaging Python; può decidere di aggiornare i pacchetti Python di base in un ramo dedicato @code{python-team}, in collaborazione con qualsiasi team il cui ambito dipende direttamente da Python---ad esempio, il team Scientifico---e seguendo le regole di branching (@pxref{Managing Patches and Branches}). Il team Documentazione aiuta a revisionare le modifiche alla documentazione e può avviare modifiche documentali generali. Il team Traduzioni organizza la traduzione di Guix e del suo manuale e coordina gli sforzi in quell'area. Il team Core è responsabile dello sviluppo delle funzionalità fondamentali e delle interfacce di Guix; a causa della sua natura centrale, parte del suo lavoro potrebbe richiedere la richiesta di input dalla comunità in generale e la ricerca del consenso prima di emanare decisioni che influenzerebbero l'intera comunità."

#. type: Plain text
#: guix-git/doc/contributing.texi:2809
msgid "Teams are defined in the @file{etc/teams.scm} file in the Guix repository.  The scope of each team is defined, when applicable, as a set of files or as a regular expression matching file names."
msgstr "I team sono definiti nel file @file{etc/teams.scm} nel repository di Guix. L'ambito di ogni team è definito, quando applicabile, come un insieme di file o come un'espressione regolare che corrisponde ai nomi dei file."

#. type: cindex
#: guix-git/doc/contributing.texi:2810
#, no-wrap
msgid "team membership"
msgstr "appartenenza al team"

#. type: Plain text
#: guix-git/doc/contributing.texi:2817
msgid "Anyone with interest in a team's domain and willing to contribute to its work can apply to become a member by contacting current members by email; commit access is not a precondition.  Membership is formalized by adding the person's name and email address to @file{etc/teams.scm}.  Members who have not been participating in the team's work for one year or more may be removed; they are free to reapply for membership later."
msgstr "Chiunque sia interessato al dominio di un team e disposto a contribuire al suo lavoro può candidarsi per diventare membro contattando i membri attuali via email; l'accesso in commit non è un prerequisito. L'appartenenza è formalizzata aggiungendo il nome e l'indirizzo email della persona a @file{etc/teams.scm}. I membri che non hanno partecipato al lavoro del team per un anno o più possono essere rimossi; sono liberi di ricandidarsi per l'appartenenza in seguito."

#. type: cindex
#: guix-git/doc/contributing.texi:2818
#, fuzzy, no-wrap
#| msgid "derivation"
msgid "team creation"
msgstr "derivazione"

#. type: Plain text
#: guix-git/doc/contributing.texi:2824
msgid "One or more people may propose the creation of a new team by reaching out to the community by email at @email{guix-devel@@gnu.org}, clarifying the intended scope and purpose.  When consensus is reached on the creation of this team, someone with commit access formalizes its creation by adding it and its initial members to @file{etc/teams.scm}."
msgstr "Una o più persone possono proporre la creazione di un nuovo team contattando la comunità via email a @email{guix-devel@@gnu.org}, chiarendo l'ambito e lo scopo previsti. Quando si raggiunge il consenso sulla creazione di questo team, qualcuno con accesso in commit formalizza la sua creazione aggiungendo esso e i suoi membri iniziali a @file{etc/teams.scm}."

#. type: Plain text
#: guix-git/doc/contributing.texi:2826
msgid "To list existing teams, run the following command from a Guix checkout:"
msgstr "Per elencare i team esistenti, esegui il seguente comando da un checkout di Guix:"

#. type: example
#: guix-git/doc/contributing.texi:2835
#, no-wrap
msgid ""
"$ ./etc/teams.scm list-teams\n"
"id: mentors\n"
"name: Mentors\n"
"description: A group of mentors who chaperone contributions by newcomers.\n"
"members:\n"
"+ Charlie Smith <charlie@@example.org>\n"
"@dots{}\n"
msgstr ""
"$ ./etc/teams.scm list-teams\n"
"id: mentors\n"
"name: Mentors\n"
"description: Un gruppo di mentori che accompagnano i contributi dei nuovi arrivati.\n"
"members:\n"
"+ Charlie Smith <charlie@@example.org>\n"
"@dots{}\n"

#. type: cindex
#: guix-git/doc/contributing.texi:2837
#, no-wrap
msgid "mentoring"
msgstr "mentoring"

#. type: Plain text
#: guix-git/doc/contributing.texi:2840
msgid "You can run the following command to have the Mentors team put in CC of a patch series:"
msgstr "Puoi eseguire il seguente comando per includere il team Mentori in CC di una serie di patch:"

#. type: example
#: guix-git/doc/contributing.texi:2844
#, no-wrap
msgid ""
"$ git send-email --to=@var{ISSUE_NUMBER}@@debbugs.gnu.org \\\n"
"  --header-cmd='etc/teams.scm cc-mentors-header-cmd' *.patch\n"
msgstr ""
"$ git send-email --to=@var{ISSUE_NUMBER}@@debbugs.gnu.org \\\n"
"  --header-cmd='etc/teams.scm cc-mentors-header-cmd' *.patch\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2849
msgid "The appropriate team or teams can also be inferred from the modified files.  For instance, if you want to send the two latest commits of the current Git repository to review, you can run:"
msgstr "Il team o i team appropriati possono anche essere dedotti dai file modificati. Ad esempio, se vuoi inviare gli ultimi due commit del repository Git corrente per la revisione, puoi eseguire:"

#. type: example
#: guix-git/doc/contributing.texi:2853
#, no-wrap
msgid ""
"$ guix shell -D guix\n"
"[env]$ git send-email --to=@var{ISSUE_NUMBER}@@debbugs.gnu.org -2\n"
msgstr ""
"$ guix shell -D guix\n"
"[env]$ git send-email --to=@var{ISSUE_NUMBER}@@debbugs.gnu.org -2\n"

#. type: cindex
#: guix-git/doc/contributing.texi:2855
#, no-wrap
msgid "teams, on Codeberg"
msgstr "team, su Codeberg"

#. type: Plain text
#: guix-git/doc/contributing.texi:2859
msgid "To generate a @file{CODEOWNERS} file, which Forgejo---the software behind Codeberg---uses to determine which team or person should review changes to a given set of files, run:"
msgstr "Per generare un file @file{CODEOWNERS}, che Forgejo - il software dietro Codeberg - utilizza per determinare quale team o persona dovrebbe revisionare le modifiche a un determinato insieme di file, esegui:"

#. type: example
#: guix-git/doc/contributing.texi:2862
#, no-wrap
msgid "./etc/teams.scm codeowners > CODEOWNERS\n"
msgstr "./etc/teams.scm codeowners > CODEOWNERS\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2870
msgid "Teams defined in @file{etc/teams.scm} are reflected @uref{https://codeberg.org/guix/guix, on Codeberg}; the ``Owners'' team on Codeberg, whose members have administration privileges over @uref{https://codeberg.org/guix, the entire ``organization''}, is the only one missing from this file.  To synchronize team changes with Codeberg, a member of the ``Owners'' team can run:"
msgstr "I team definiti in @file{etc/teams.scm} sono riflessi su @uref{https://codeberg.org/guix/guix, Codeberg}; il team ``Owners'' su Codeberg, i cui membri hanno privilegi di amministrazione sull'intera ``organizzazione'' (@uref{https://codeberg.org/guix, intera 'organizzazione'}), è l'unico mancante da questo file. Per sincronizzare le modifiche dei team con Codeberg, un membro del team ``Owners'' può eseguire:"

#. type: example
#: guix-git/doc/contributing.texi:2873
#, no-wrap
msgid "./etc/teams.scm sync-codeberg-teams @var{token}\n"
msgstr "./etc/teams.scm sync-codeberg-teams @var{token}\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2878
msgid "... where @var{token} is a token created on the Codeberg interface granting access to the relevant settings."
msgstr "... dove @var{token} è un token creato sull'interfaccia di Codeberg che concede l'accesso alle impostazioni pertinenti."

#. type: cindex
#: guix-git/doc/contributing.texi:2882
#, no-wrap
msgid "decision making"
msgstr "presa di decisioni"

#. type: cindex
#: guix-git/doc/contributing.texi:2883
#, no-wrap
msgid "consensus seeking"
msgstr "ricerca del consenso"

#. type: Plain text
#: guix-git/doc/contributing.texi:2890
msgid "It is expected from all contributors, and even more so from committers, to help build consensus and make decisions based on consensus.  By using consensus, we are committed to finding solutions that everyone can live with.  It implies that no decision is made against significant concerns and these concerns are actively resolved with proposals that work for everyone."
msgstr "È previsto da tutti i contributori, e ancor più dai committer, aiutare a costruire il consenso e prendere decisioni basate sul consenso. Usando il consenso, ci impegniamo a trovare soluzioni con cui tutti possano convivere. Ciò implica che nessuna decisione è presa contro preoccupazioni significative e queste preoccupazioni sono attivamente risolte con proposte che funzionano per tutti."

#. type: Plain text
#: guix-git/doc/contributing.texi:2897
msgid "A contributor (who may or may not have commit access) wishing to block a proposal bears a special responsibility for finding alternatives, proposing ideas/code or explain the rationale for the status quo to resolve the deadlock.  To learn what consensus decision making means and understand its finer details, you are encouraged to read @url{https://www.seedsforchange.org.uk/consensus}."
msgstr "Un contributore (che potrebbe o meno avere accesso in commit) che desidera bloccare una proposta ha una responsabilità speciale nel trovare alternative, proporre idee/codice o spiegare la logica dello status quo per risolvere l'impasse. Per imparare cosa significa la presa di decisioni per consenso e capirne i dettagli più fini, ti incoraggiamo a leggere @url{https://www.seedsforchange.org.uk/consensus}."

#. type: cindex
#: guix-git/doc/contributing.texi:2901
#, no-wrap
msgid "commit access, for developers"
msgstr "accesso in commit, per sviluppatori"

#. type: Plain text
#: guix-git/doc/contributing.texi:2912
msgid "Everyone can contribute to Guix without having commit access (@pxref{Submitting Patches}).  However, for frequent contributors, having write access to the repository can be convenient.  As a rule of thumb, a contributor should have accumulated fifty (50) reviewed commits to be considered as a committer and have sustained their activity in the project for at least 6 months.  This ensures enough interactions with the contributor, which is essential for mentoring and assessing whether they are ready to become a committer.  Commit access should not be thought of as a ``badge of honor'' but rather as a responsibility a contributor is willing to take to help the project."
msgstr "Chiunque può contribuire a Guix senza avere accesso in commit (@pxref{Submitting Patches}). Tuttavia, per i contributori frequenti, avere accesso in scrittura al repository può essere conveniente. Come regola generale, un contributore dovrebbe aver accumulato cinquanta (50) commit revisionati per essere considerato un committer e aver mantenuto la sua attività nel progetto per almeno 6 mesi. Ciò garantisce abbastanza interazioni con il contributore, che è essenziale per il mentoring e la valutazione se è pronto a diventare un committer. L'accesso in commit non dovrebbe essere pensato come un ``distintivo d'onore'' ma piuttosto come una responsabilità che un contributore è disposto ad assumersi per aiutare il progetto."

#. type: Plain text
#: guix-git/doc/contributing.texi:2917
msgid "Committers are in a position where they enact technical decisions.  Such decisions must be made by @emph{actively building consensus} among interested parties and stakeholders.  @xref{Making Decisions}, for more on that."
msgstr "I committer sono in una posizione in cui emanano decisioni tecniche. Tali decisioni devono essere prese @emph{costruendo attivamente il consenso} tra le parti interessate e gli stakeholder. @xref{Making Decisions}, per maggiori informazioni su questo."

#. type: Plain text
#: guix-git/doc/contributing.texi:2921
msgid "The following sections explain how to get commit access, how to be ready to push commits, and the policies and community expectations for commits pushed upstream."
msgstr "Le sezioni seguenti spiegano come ottenere l'accesso in commit, come essere pronti a inviare commit e le politiche e le aspettative della comunità per i commit inviati upstream."

#. type: subsection
#: guix-git/doc/contributing.texi:2922
#, no-wrap
msgid "Applying for Commit Access"
msgstr "Richiesta di Accesso in Commit"

#. type: Plain text
#: guix-git/doc/contributing.texi:2926
msgid "When you deem it necessary, consider applying for commit access by following these steps:"
msgstr "Quando lo ritieni necessario, considera di richiedere l'accesso in commit seguendo questi passaggi:"

#. type: enumerate
#: guix-git/doc/contributing.texi:2935
msgid "Find three committers who would vouch for you.  You can view the list of committers at @url{https://codeberg.org/guix/guix/settings/collaboration}.  Each of them should email a statement to @email{guix-maintainers@@gnu.org} (a private alias for the collective of maintainers), signed with their OpenPGP key."
msgstr "Trova tre committer che possano garantire per te. Puoi visualizzare l'elenco dei committer su @url{https://codeberg.org/guix/guix/settings/collaboration}. Ciascuno di loro dovrebbe inviare una dichiarazione a @email{guix-maintainers@@gnu.org} (un alias privato per il collettivo dei maintainer), firmata con la loro chiave OpenPGP."

#. type: enumerate
#: guix-git/doc/contributing.texi:2941
msgid "Committers are expected to have had some interactions with you as a contributor and to be able to judge whether you are sufficiently familiar with the project's practices.  It is @emph{not} a judgment on the value of your work, so a refusal should rather be interpreted as ``let's try again later''."
msgstr "Si prevede che i committer abbiano avuto alcune interazioni con te come contributore e siano in grado di giudicare se sei sufficientemente familiare con le pratiche del progetto. Non è un giudizio sul valore del tuo lavoro, quindi un rifiuto dovrebbe piuttosto essere interpretato come ``riproviamo più tardi''."

#. type: enumerate
#: guix-git/doc/contributing.texi:2948
msgid "Send @email{guix-maintainers@@gnu.org} a message stating your intent, listing the three committers who support your application, signed with the OpenPGP key you will use to sign commits, and giving its fingerprint (see below).  See @uref{https://emailselfdefense.fsf.org/en/}, for an introduction to public-key cryptography with GnuPG."
msgstr "Invia a @email{guix-maintainers@@gnu.org} un messaggio che dichiara la tua intenzione, elencando i tre committer che supportano la tua candidatura, firmato con la chiave OpenPGP che userai per firmare i commit e fornendo la sua impronta digitale (vedi sotto). Vedi @uref{https://emailselfdefense.fsf.org/en/}, per un'introduzione alla crittografia a chiave pubblica con GnuPG."

#. type: enumerate
#: guix-git/doc/contributing.texi:2954
msgid "Set up GnuPG such that it never uses the SHA1 hash algorithm for digital signatures, which is known to be unsafe since 2019, for instance by adding the following line to @file{~/.gnupg/gpg.conf} (@pxref{GPG Esoteric Options,,, gnupg, The GNU Privacy Guard Manual}):"
msgstr "Configura GnuPG in modo che non usi mai l'algoritmo di hash SHA1 per le firme digitali, che è noto per essere insicuro dal 2019, ad esempio aggiungendo la seguente riga a @file{~/.gnupg/gpg.conf} (@pxref{GPG Esoteric Options,,, gnupg, The GNU Privacy Guard Manual}):"

#. type: example
#: guix-git/doc/contributing.texi:2957
#, no-wrap
msgid "digest-algo sha512\n"
msgstr "digest-algo sha512\n"

#. type: enumerate
#: guix-git/doc/contributing.texi:2962
msgid "Maintainers ultimately decide whether to grant you commit access, usually following your referrals' recommendation."
msgstr "I maintainer decidono in ultima istanza se concederti l'accesso in commit, di solito seguendo la raccomandazione dei tuoi referenti."

#. type: cindex
#: guix-git/doc/contributing.texi:2964
#, no-wrap
msgid "OpenPGP, signed commits"
msgstr "OpenPGP, commit firmati"

#. type: enumerate
#: guix-git/doc/contributing.texi:2969
msgid "If and once you've been given access, please send a message to @email{guix-devel@@gnu.org} to say so, again signed with the OpenPGP key you will use to sign commits (do that before pushing your first commit).  That way, everyone can notice and ensure you control that OpenPGP key."
msgstr "Se e una volta che ti è stato concesso l'accesso, invia un messaggio a @email{guix-devel@@gnu.org} per dirlo, di nuovo firmato con la chiave OpenPGP che userai per firmare i commit (fallo prima di inviare il tuo primo commit). In questo modo, tutti possono notare e assicurarsi che tu controlli quella chiave OpenPGP."

#. type: quotation
#: guix-git/doc/contributing.texi:2970 guix-git/doc/guix.texi:732
#: guix-git/doc/guix.texi:764 guix-git/doc/guix.texi:23222
#: guix-git/doc/guix.texi:38228 guix-git/doc/guix.texi:39263
#, no-wrap
msgid "Important"
msgstr "Importante"

#. type: quotation
#: guix-git/doc/contributing.texi:2972
msgid "Before you can push for the first time, maintainers must:"
msgstr "Prima che tu possa inviare per la prima volta, i maintainer devono:"

#. type: enumerate
#: guix-git/doc/contributing.texi:2976
msgid "add your OpenPGP key to the @code{keyring} branch;"
msgstr "aggiungere la tua chiave OpenPGP al ramo @code{keyring};"

#. type: enumerate
#: guix-git/doc/contributing.texi:2979
msgid "add your OpenPGP fingerprint to the @file{.guix-authorizations} file of the branch(es) you will commit to."
msgstr "aggiungere la tua impronta digitale OpenPGP al file @file{.guix-authorizations} del/dei ramo/i in cui effettuerai commit."

#. type: enumerate
#: guix-git/doc/contributing.texi:2984
msgid "Make sure to read the rest of this section and... profit!"
msgstr "Assicurati di leggere il resto di questa sezione e... buon profitto!"

#. type: quotation
#: guix-git/doc/contributing.texi:2990
msgid "Maintainers are happy to give commit access to people who have been contributing for some time and have a track record---don't be shy and don't underestimate your work!"
msgstr "I maintainer sono felici di dare accesso in commit a persone che hanno contribuito per un po' di tempo e hanno un track record---non essere timido e non sottovalutare il tuo lavoro!"

#. type: quotation
#: guix-git/doc/contributing.texi:2994
msgid "However, note that the project is working towards a more automated patch review and merging system, which, as a consequence, may lead us to have fewer people with commit access to the main repository.  Stay tuned!"
msgstr "Tuttavia, nota che il progetto sta lavorando verso un sistema più automatizzato di revisione e unione delle patch, che, di conseguenza, potrebbe portarci ad avere meno persone con accesso in commit al repository principale. Rimani sintonizzato!"

#. type: Plain text
#: guix-git/doc/contributing.texi:3001
msgid "All commits that are pushed to the central repository on Codeberg must be signed with an OpenPGP key, and the public key should be uploaded to your user account on Codeberg and to public key servers, such as @code{keys.openpgp.org}.  To configure Git to automatically sign commits, run:"
msgstr "Tutti i commit inviati al repository centrale su Codeberg devono essere firmati con una chiave OpenPGP e la chiave pubblica dovrebbe essere caricata sul tuo account utente su Codeberg e su server di chiavi pubblici, come @code{keys.openpgp.org}. Per configurare Git per firmare automaticamente i commit, esegui:"

#. type: example
#: guix-git/doc/contributing.texi:3004
#, no-wrap
msgid ""
"git config commit.gpgsign true\n"
"\n"
msgstr ""
"git config commit.gpgsign true\n"
"\n"

#. type: example
#: guix-git/doc/contributing.texi:3007
#, no-wrap
msgid ""
"# Substitute the fingerprint of your public PGP key.\n"
"git config user.signingkey CABBA6EA1DC0FF33\n"
msgstr ""
"# Sostituisci l'impronta digitale della tua chiave PGP pubblica.\n"
"git config user.signingkey CABBA6EA1DC0FF33\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:3010
msgid "To check that commits are signed with correct key, use:"
msgstr "Per verificare che i commit siano firmati con la chiave corretta, usa:"

#. type: Plain text
#: guix-git/doc/contributing.texi:3017
msgid "@xref{Building from Git} for running the first authentication of a Guix checkout."
msgstr "@xref{Building from Git} per eseguire la prima autenticazione di un checkout di Guix."

#. type: Plain text
#: guix-git/doc/contributing.texi:3021
msgid "To avoid accidentally pushing unsigned or signed with the wrong key commits to Codeberg, make sure to configure Git according to @xref{Configuring Git}."
msgstr "Per evitare di inviare accidentalmente commit non firmati o firmati con la chiave sbagliata a Codeberg, assicurati di configurare Git secondo @xref{Configuring Git}."

#. type: subsection
#: guix-git/doc/contributing.texi:3022
#, no-wrap
msgid "Commit Policy"
msgstr "Politica dei Commit"

#. type: Plain text
#: guix-git/doc/contributing.texi:3027
msgid "If you get commit access, please make sure to follow the policy below (discussions of the policy can take place on @email{guix-devel@@gnu.org})."
msgstr "Se ottieni l'accesso in commit, assicurati di seguire la politica seguente (le discussioni sulla politica possono aver luogo su @email{guix-devel@@gnu.org})."

#. type: Plain text
#: guix-git/doc/contributing.texi:3031
msgid "Ensure you're aware of how the changes should be handled (@pxref{Managing Patches and Branches}) prior to being pushed to the repository, especially for the @code{master} branch."
msgstr "Assicurati di essere consapevole di come le modifiche dovrebbero essere gestite (@pxref{Managing Patches and Branches}) prima di essere inviate al repository, specialmente per il ramo @code{master}."

#. type: Plain text
#: guix-git/doc/contributing.texi:3038
msgid "If you're committing and pushing your own changes, try and wait at least one week (two weeks for more significant changes, up to one month for changes such as removing a package---@pxref{package-removal-policy, Package Removal}) after you send them for review.  After this, if no one else is available to review them and if you're confident about the changes, it's OK to commit."
msgstr "Se stai effettuando commit e inviando le tue modifiche, cerca di attendere almeno una settimana (due settimane per modifiche più significative, fino a un mese per modifiche come la rimozione di un pacchetto---@pxref{package-removal-policy, Package Removal}) dopo averle inviate per la revisione. Dopo ciò, se nessun altro è disponibile per revisionarle e sei sicuro delle modifiche, va bene effettuare il commit."

#. type: Plain text
#: guix-git/doc/contributing.texi:3043
msgid "When pushing a commit on behalf of somebody else, please add a @code{Signed-off-by} line at the end of the commit log message---e.g., with @command{git am --signoff}.  This improves tracking of who did what."
msgstr "Quando invii un commit per conto di qualcun altro, aggiungi una linea @code{Signed-off-by} alla fine del messaggio di log del commit---ad esempio, con @command{git am --signoff}. Ciò migliora il tracciamento di chi ha fatto cosa."

#. type: Plain text
#: guix-git/doc/contributing.texi:3047
msgid "When adding channel news entries (@pxref{Channels, Writing Channel News}), make sure they are well-formed by running the following command right before pushing:"
msgstr "Quando aggiungi voci di notizie dei canali (@pxref{Channels, Writing Channel News}), assicurati che siano ben formate eseguendo il seguente comando appena prima di inviare:"

#. type: example
#: guix-git/doc/contributing.texi:3050
#, no-wrap
msgid "make check-channel-news\n"
msgstr "make check-channel-news\n"

#. type: subsection
#: guix-git/doc/contributing.texi:3052
#, no-wrap
msgid "Addressing Issues"
msgstr "Affrontare i Problemi"

#. type: Plain text
#: guix-git/doc/contributing.texi:3063
msgid "Peer review (@pxref{Submitting Patches}) and tools such as @command{guix lint} (@pxref{Invoking guix lint}) and the test suite (@pxref{Running the Test Suite}) should catch issues before they are pushed.  Yet, commits that ``break'' functionality might occasionally go through.  When that happens, there are two priorities: mitigating the impact, and understanding what happened to reduce the chance of similar incidents in the future.  The responsibility for both these things primarily lies with those involved, but like everything this is a group effort."
msgstr "La revisione tra pari (@pxref{Submitting Patches}) e strumenti come @command{guix lint} (@pxref{Invoking guix lint}) e la suite di test (@pxref{Running the Test Suite}) dovrebbero rilevare i problemi prima che siano inviati. Tuttavia, commit che ``rompono'' funzionalità potrebbero occasionalmente passare. Quando ciò accade, ci sono due priorità: mitigare l'impatto e capire cosa è successo per ridurre la possibilità di incidenti simili in futuro. La responsabilità per entrambe queste cose ricade principalmente su quelli coinvolti, ma come tutto questo è uno sforzo di gruppo."

#. type: Plain text
#: guix-git/doc/contributing.texi:3068
msgid "Some issues can directly affect all users---for instance because they make @command{guix pull} fail or break core functionality, because they break major packages (at build time or run time), or because they introduce known security vulnerabilities."
msgstr "Alcuni problemi possono influenzare direttamente tutti gli utenti---ad esempio perché fanno fallire @command{guix pull} o rompono funzionalità fondamentali, perché rompono pacchetti principali (al momento della build o dell'esecuzione), o perché introducono vulnerabilità di sicurezza note."

#. type: cindex
#: guix-git/doc/contributing.texi:3069
#, no-wrap
msgid "reverting commits"
msgstr "revert dei commit"

#. type: Plain text
#: guix-git/doc/contributing.texi:3075
msgid "The people involved in authoring, reviewing, and pushing such commit(s) should be at the forefront to mitigate their impact in a timely fashion: by pushing a followup commit to fix it (if possible), or by reverting it to leave time to come up with a proper fix, and by communicating with other developers about the problem."
msgstr "Le persone coinvolte nella creazione, revisione e invio di tali commit dovrebbero essere in prima linea per mitigare il loro impatto in modo tempestivo: inviando un commit di followup per risolverlo (se possibile), o revertendolo per lasciare tempo per trovare una soluzione corretta, e comunicando con altri sviluppatori sul problema."

#. type: Plain text
#: guix-git/doc/contributing.texi:3081
msgid "If these persons are unavailable to address the issue in time, other committers are entitled to revert the commit(s), explaining in the commit log and on the mailing list what the problem was, with the goal of leaving time to the original committer, reviewer(s), and author(s)  to propose a way forward."
msgstr "Se queste persone non sono disponibili per affrontare il problema in tempo, altri committer hanno il diritto di revertare i commit, spiegando nel log del commit e nella mailing list qual era il problema, con l'obiettivo di lasciare tempo al committer originale, ai revisori e agli autori di proporre una via da seguire."

#. type: Plain text
#: guix-git/doc/contributing.texi:3090
msgid "Once the problem has been dealt with, it is the responsibility of those involved to make sure the situation is understood.  If you are working to understand what happened, focus on gathering information and avoid assigning any blame.  Do ask those involved to describe what happened, do not ask them to explain the situation---this would implicitly blame them, which is unhelpful.  Accountability comes from a consensus about the problem, learning from it and improving processes so that it's less likely to reoccur."
msgstr "Una volta affrontato il problema, è responsabilità di quelli coinvolti assicurarsi che la situazione sia compresa. Se stai lavorando per capire cosa è successo, concentrati sulla raccolta di informazioni ed evita di assegnare colpe. Chiedi a quelli coinvolti di descrivere cosa è successo, non chiedere loro di spiegare la situazione---questo implicherebbe implicitamente incolparli, il che non è utile. La responsabilità deriva da un consenso sul problema, imparare da esso e migliorare i processi in modo che sia meno probabile che si ripeta."

#. type: subsubsection
#: guix-git/doc/contributing.texi:3091
#, no-wrap
msgid "Reverting commits"
msgstr "Revert dei commit"

#. type: Plain text
#: guix-git/doc/contributing.texi:3096
msgid "Like normal commits, the commit message should state why the changes are being made, which in this case would be why the commits are being reverted."
msgstr "Come i commit normali, il messaggio di commit dovrebbe dichiarare perché le modifiche vengono apportate, che in questo caso sarebbe perché i commit vengono revertati."

#. type: Plain text
#: guix-git/doc/contributing.texi:3104
msgid "If the changes are being reverted because they led to excessive number of packages being affected, then a decision should be made whether to allow the build farms to build the changes, or whether to avoid this. For the bordeaux build farm, commits can be ignored by adding them to the @code{ignore-commits} list in the @code{build-from-guix-data-service} record, found in the bayfront machine configuration."
msgstr "Se le modifiche vengono revertate perché hanno portato a un numero eccessivo di pacchetti interessati, allora dovrebbe essere presa una decisione se permettere alle build farm di costruire le modifiche o se evitarlo. Per la build farm di bordeaux, i commit possono essere ignorati aggiungendoli alla lista @code{ignore-commits} nel record @code{build-from-guix-data-service}, trovato nella configurazione della macchina bayfront."

#. type: subsection
#: guix-git/doc/contributing.texi:3105
#, no-wrap
msgid "Commit Revocation"
msgstr "Revoca dei Commit"

#. type: Plain text
#: guix-git/doc/contributing.texi:3112
msgid "In order to reduce the possibility of mistakes, committers will have their Codeberg account removed from the Guix Codeberg project and their key removed from @file{.guix-authorizations} after 12 months of inactivity; they can ask to regain commit access by emailing the maintainers, without going through the vouching process."
msgstr "Per ridurre la possibilità di errori, i committer avranno il loro account Codeberg rimosso dal progetto Guix Codeberg e la loro chiave rimossa da @file{.guix-authorizations} dopo 12 mesi di inattività; possono richiedere di riottenere l'accesso in commit inviando un'email ai maintainer, senza passare attraverso il processo di garanzia."

#. type: Plain text
#: guix-git/doc/contributing.texi:3122
msgid "Maintainers@footnote{See @uref{https://guix.gnu.org/en/about} for the current list of maintainers.  You can email them privately at @email{guix-maintainers@@gnu.org}.} may also revoke an individual's commit rights, as a last resort, if cooperation with the rest of the community has caused too much friction---even within the bounds of the project's code of conduct (@pxref{Contributing}).  They would only do so after public or private discussion with the individual and a clear notice.  Examples of behavior that hinders cooperation and could lead to such a decision include:"
msgstr "I maintainer@footnote{Vedi @uref{https://guix.gnu.org/en/about} per l'elenco attuale dei maintainer. Puoi inviare loro email privatamente a @email{guix-maintainers@@gnu.org}.} possono anche revocare i diritti di commit di un individuo, come ultima risorsa, se la cooperazione con il resto della comunità ha causato troppa attrito---anche entro i limiti del codice di condotta del progetto (@pxref{Contributing}). Lo farebbero solo dopo una discussione pubblica o privata con l'individuo e un chiaro preavviso. Esempi di comportamento che ostacola la cooperazione e potrebbe portare a una tale decisione includono:"

#. type: item
#: guix-git/doc/contributing.texi:3124
#, no-wrap
msgid "repeated violation of the commit policy stated above;"
msgstr "violazione ripetuta della politica dei commit sopra indicata;"

#. type: item
#: guix-git/doc/contributing.texi:3125
#, no-wrap
msgid "repeated failure to take peer criticism into account;"
msgstr "mancato ripetuto di tenere conto delle critiche dei pari;"

#. type: item
#: guix-git/doc/contributing.texi:3126
#, no-wrap
msgid "breaching trust through a series of grave incidents."
msgstr "violazione della fiducia attraverso una serie di incidenti gravi."

#. type: Plain text
#: guix-git/doc/contributing.texi:3133
msgid "When maintainers resort to such a decision, they notify developers on @email{guix-devel@@gnu.org}; inquiries may be sent to @email{guix-maintainers@@gnu.org}.  Depending on the situation, the individual may still be welcome to contribute."
msgstr "Quando i maintainer ricorrono a una tale decisione, notificano gli sviluppatori su @email{guix-devel@@gnu.org}; le richieste possono essere inviate a @email{guix-maintainers@@gnu.org}. A seconda della situazione, l'individuo potrebbe ancora essere il benvenuto a contribuire."

#. type: subsection
#: guix-git/doc/contributing.texi:3134
#, no-wrap
msgid "Helping Out"
msgstr "Dare una Mano"

#. type: Plain text
#: guix-git/doc/contributing.texi:3141
msgid "One last thing: the project keeps moving forward because committers not only push their own awesome changes, but also offer some of their time @emph{reviewing} and pushing other people's changes.  As a committer, you're welcome to use your expertise and commit rights to help other contributors, too!"
msgstr "Un'ultima cosa: il progetto continua ad avanzare perché i committer non solo inviare le loro fantastiche modifiche, ma offrono anche parte del loro tempo a @emph{revisionare} e inviare le modifiche di altre persone. Come committer, sei il benvenuto a usare la tua esperienza e i tuoi diritti di commit per aiutare anche altri contributori!"

#. type: Plain text
#: guix-git/doc/contributing.texi:3157
msgid "Perhaps the biggest action you can do to help GNU Guix grow as a project is to review the work contributed by others.  You do not need to be a committer to do so; applying, reading the source, building, linting and running other people's series and sharing your comments about your experience will give some confidence to committers.  You must ensure the check list found in the @ref{Submitting Patches} section has been correctly followed.  A reviewed patch series should give the best chances for the proposed change to be merged faster, so if a change you would like to see merged hasn't yet been reviewed, this is the most appropriate thing to do! If you would like to review changes in a specific area and to receive notifications for incoming patches relevant to that domain, consider joining the relevant team(s) (@pxref{Teams})."
msgstr "Forse l'azione più grande che puoi fare per aiutare GNU Guix a crescere come progetto è revisionare il lavoro contribuito da altri. Non devi essere un committer per farlo; applicare, leggere il sorgente, costruire, lintare ed eseguire le serie di altre persone e condividere i tuoi commenti sulla tua esperienza darà una certa fiducia ai committer. Devi assicurarti che la lista di controllo trovata nella sezione @ref{Submitting Patches} sia stata seguita correttamente. Una serie di patch revisionata dovrebbe dare le migliori possibilità affinché la modifica proposta sia unita più velocemente, quindi se una modifica che vorresti vedere unita non è ancora stata revisionata, questa è la cosa più appropriata da fare! Se desideri revisionare modifiche in un'area specifica e ricevere notifiche per patch in arrivo rilevanti per quel dominio, considera di unirti ai team pertinenti (@pxref{Teams})."

#. type: cindex
#: guix-git/doc/contributing.texi:3158
#, no-wrap
msgid "reviewing, guidelines"
msgstr "revisione, linee guida"

#. type: Plain text
#: guix-git/doc/contributing.texi:3163
msgid "Review comments should be unambiguous; be as clear and explicit as you can about what you think should be changed, ensuring the author can take action on it.  Please try to keep the following guidelines in mind during review:"
msgstr "I commenti di revisione dovrebbero essere inequivocabili; sii il più chiaro ed esplicito possibile su cosa pensi debba essere cambiato, assicurandoti che l'autore possa agire su di esso. Per favore cerca di tenere a mente le seguenti linee guida durante la revisione:"

#. type: enumerate
#: guix-git/doc/contributing.texi:3169
msgid "@emph{Be clear and explicit about changes you are suggesting}, ensuring the author can take action on it.  In particular, it is a good idea to explicitly ask for new revisions when you want it."
msgstr "@emph{Sii chiaro ed esplicito riguardo alle modifiche che stai suggerendo}, assicurandoti che l'autore possa agire su di esse. In particolare, è una buona idea chiedere esplicitamente nuove revisioni quando le vuoi."

#. type: enumerate
#: guix-git/doc/contributing.texi:3177
msgid "@emph{Remain focused: do not change the scope of the work being reviewed.} For example, if the contribution touches code that follows a pattern deemed unwieldy, it would be unfair to ask the submitter to fix all occurrences of that pattern in the code; to put it simply, if a problem unrelated to the patch at hand was already there, do not ask the submitter to fix it."
msgstr "@emph{Rimani concentrato: non cambiare l'ambito del lavoro in revisione.} Ad esempio, se il contributo tocca codice che segue uno schema ritenuto ingombrante, sarebbe ingiusto chiedere al mittente di correggere tutte le occorrenze di quello schema nel codice; per dirla semplicemente, se un problema non correlato alla patch in questione era già presente, non chiedere al mittente di risolverlo."

#. type: enumerate
#: guix-git/doc/contributing.texi:3184
msgid "@emph{Ensure progress.} As they respond to review, submitters may submit new revisions of their changes; avoid requesting changes that you did not request in the previous round of comments.  Overall, the submitter should get a clear sense of progress; the number of items open for discussion should clearly decrease over time."
msgstr "@emph{Assicura il progresso.} Mentre rispondono alla revisione, i mittenti potrebbero inviare nuove revisioni delle loro modifiche; evita di richiedere modifiche che non hai richiesto nel round precedente di commenti. In generale, il mittente dovrebbe avere una chiara sensazione di progresso; il numero di elementi aperti per la discussione dovrebbe chiaramente diminuire nel tempo."

#. type: enumerate
#: guix-git/doc/contributing.texi:3191
msgid "@emph{Aim for finalization.} Reviewing code is time-consuming.  Your goal as a reviewer is to put the process on a clear path towards integration, possibly with agreed-upon changes, or rejection, with a clear and mutually-understood reasoning.  Avoid leaving the review process in a lingering state with no clear way out."
msgstr "@emph{Mira alla finalizzazione.} Revisionare il codice richiede tempo. Il tuo obiettivo come revisore è mettere il processo su un percorso chiaro verso l'integrazione, possibilmente con modifiche concordate, o il rifiuto, con una motivazione chiara e compresa reciprocamente. Evita di lasciare il processo di revisione in uno stato prolungato senza una via d'uscita chiara."

#. type: enumerate
#: guix-git/doc/contributing.texi:3205
msgid "@emph{Review is a discussion.} The submitter's and reviewer's views on how to achieve a particular change may not always be aligned.  To lead the discussion, remain focused, ensure progress and aim for finalization, spending time proportional to the stakes@footnote{The tendency to discuss minute details at length is often referred to as ``bikeshedding'', where much time is spent discussing each one's preference for the color of the shed at the expense of progress made on the project to keep bikes dry.}.  As a reviewer, try hard to explain the rationale for suggestions you make, and to understand and take into account the submitter's motivation for doing things in a certain way.  In other words, build consensus with everyone involved (@pxref{Making Decisions})."
msgstr "@emph{La revisione è una discussione.} Le opinioni del mittente e del revisore su come ottenere un particolare cambiamento potrebbero non essere sempre allineate. Per guidare la discussione, rimani concentrato, assicura il progresso e mira alla finalizzazione, spendendo tempo proporzionale alla post@footnote{La tendenza a discutere a lungo di dettagli minuti è spesso chiamata ``bikeshedding'', dove si passa molto tempo a discutere la preferenza di ognuno per il colore del capanno a scapito del progresso fatto sul progetto per tenere le bici asciutte.}. Come revisore, sforzati di spiegare la logica dei suggerimenti che fai e di capire e tenere conto della motivazione del mittente nel fare le cose in un certo modo. In altre parole, costruisci consenso con tutti i coinvolti (@pxref{Making Decisions})."

#. type: Plain text
#: guix-git/doc/contributing.texi:3211
msgid "When you deem the proposed change adequate and ready for inclusion in Guix, you can explicitly say so for pull requests on Codeberg, for example by selecting ``Approve changes'' in the ``Finish review'' dialog of the web interface."
msgstr "Quando ritieni che la modifica proposta sia adeguata e pronta per l'inclusione in Guix, puoi dirlo esplicitamente per le pull request su Codeberg, ad esempio selezionando ``Approva modifiche'' nella finestra di dialogo ``Termina revisione'' dell'interfaccia web."

#. type: cindex
#: guix-git/doc/contributing.texi:3212
#, no-wrap
msgid "LGTM, Looks Good To Me"
msgstr "LGTM, Looks Good To Me"

#. type: cindex
#: guix-git/doc/contributing.texi:3213
#, no-wrap
msgid "review tags"
msgstr "tag di revisione"

#. type: cindex
#: guix-git/doc/contributing.texi:3214
#, no-wrap
msgid "Reviewed-by, git trailer"
msgstr "Reviewed-by, trailer git"

#. type: Plain text
#: guix-git/doc/contributing.texi:3224
msgid "The following well understood/codified @samp{Reviewed-by:@tie{}Your@tie{}Name@tie{}<your-email@@example.com>} @footnote{The @samp{Reviewed-by} Git trailer is used by other projects such as Linux, and is understood by third-party tools such as the @samp{b4 am} sub-command, which is able to retrieve the complete submission email thread from a public-inbox instance and add the Git trailers found in replies to the commit patches.} line should be used to sign off as a reviewer, meaning you have reviewed the change and that it looks good to you:"
msgstr "La seguente riga @samp{Reviewed-by:@tie{}Tuo@tie{}Nome@tie{}<tua-email@@example.com>} ben compresa/codificata@footnote{Il trailer Git @samp{Reviewed-by} è usato da altri progetti come Linux, ed è compreso da strumenti di terze parti come il sottocomando @samp{b4 am}, che è in grado di recuperare l'intero thread di email di sottomissione da un'istanza public-inbox e aggiungere i trailer Git trovati nelle risposte alle patch dei commit.} dovrebbe essere usata per firmare come revisore, il che significa che hai revisionato la modifica e che per te va bene:"

#. type: itemize
#: guix-git/doc/contributing.texi:3233
msgid "If the @emph{whole} series (containing multiple commits) looks good to you, reply with @samp{Reviewed-by:@tie{}Your@tie{}Name@tie{}<your-email@@example.com>} to the cover page if it has one, or to the last patch of the series otherwise, adding another @samp{(for the whole series)} comment on the line below to explicit this fact."
msgstr "Se l'@emph{intera} serie (contenente più commit) ti sembra buona, rispondi con @samp{Reviewed-by:@tie{}Tuo@tie{}Nome@tie{}<tua-email@@example.com>} alla pagina di copertina se ce n'è una, o all'ultima patch della serie altrimenti, aggiungendo un altro commento @samp{(for the whole series)} sulla riga sotto per esplicitare questo fatto."

#. type: itemize
#: guix-git/doc/contributing.texi:3239
msgid "If you instead want to mark a @emph{single commit} as reviewed (but not the whole series), simply reply with @samp{Reviewed-by:@tie{}Your@tie{}Name@tie{}<your-email@@example.com>} to that commit message."
msgstr "Se invece vuoi contrassegnare un @emph{single commit} come revisionato (ma non l'intera serie), rispondi semplicemente con @samp{Reviewed-by:@tie{}Tuo@tie{}Nome@tie{}<tua-email@@example.com>} a quel messaggio di commit."

#. type: Plain text
#: guix-git/doc/contributing.texi:3244
msgid "If you are not a committer, you can help others find a @emph{series} you have reviewed more easily by adding a @code{reviewed-looks-good} usertag for the @code{guix} user (@pxref{Debbugs Usertags})."
msgstr "Se non sei un committer, puoi aiutare altri a trovare una @emph{serie} che hai revisionato più facilmente aggiungendo un usertag @code{reviewed-looks-good} per l'utente @code{guix} (@pxref{Debbugs Usertags})."

#. type: cindex
#: guix-git/doc/contributing.texi:3248
#, no-wrap
msgid "update-guix-package, updating the guix package"
msgstr "update-guix-package, aggiornamento del pacchetto guix"

#. type: Plain text
#: guix-git/doc/contributing.texi:3254
msgid "It is sometimes desirable to update the @code{guix} package itself (the package defined in @code{(gnu packages package-management)}), for example to make new daemon features available for use by the @code{guix-service-type} service type.  In order to simplify this task, the following command can be used:"
msgstr "A volte è desiderabile aggiornare il pacchetto @code{guix} stesso (il pacchetto definito in @code{(gnu packages package-management)}), ad esempio per rendere disponibili nuove funzionalità del demone per l'uso da parte del tipo di servizio @code{guix-service-type}. Per semplificare questo compito, può essere usato il seguente comando:"

#. type: example
#: guix-git/doc/contributing.texi:3257
#, no-wrap
msgid "make update-guix-package\n"
msgstr "make update-guix-package\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:3264
msgid "The @code{update-guix-package} make target will use the last known @emph{commit} corresponding to @code{HEAD} in your Guix checkout, compute the hash of the Guix sources corresponding to that commit and update the @code{commit}, @code{revision} and hash of the @code{guix} package definition."
msgstr "L'obiettivo make @code{update-guix-package} userà l'ultimo @emph{commit} noto corrispondente a @code{HEAD} nel tuo checkout di Guix, calcolerà l'hash delle sorgenti di Guix corrispondenti a quel commit e aggiornerà il @code{commit}, @code{revision} e l'hash della definizione del pacchetto @code{guix}."

#. type: Plain text
#: guix-git/doc/contributing.texi:3268
msgid "To validate that the updated @code{guix} package hashes are correct and that it can be built successfully, the following command can be run from the directory of your Guix checkout:"
msgstr "Per convalidare che gli hash aggiornati del pacchetto @code{guix} siano corretti e che possa essere costruito con successo, il seguente comando può essere eseguito dalla directory del tuo checkout di Guix:"

#. type: example
#: guix-git/doc/contributing.texi:3271
#, no-wrap
msgid "./pre-inst-env guix build guix\n"
msgstr "./pre-inst-env guix build guix\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:3276
msgid "To guard against accidentally updating the @code{guix} package to a commit that others can't refer to, a check is made that the commit used has already been pushed to the Codeberg-hosted Guix Git repository."
msgstr "Per evitare di aggiornare accidentalmente il pacchetto @code{guix} a un commit a cui altri non possono fare riferimento, viene effettuato un controllo che il commit utilizzato sia già stato inviato al repository Git di Guix ospitato su Codeberg."

#. type: Plain text
#: guix-git/doc/contributing.texi:3281
msgid "This check can be disabled, @emph{at your own peril}, by setting the @code{GUIX_ALLOW_ME_TO_USE_PRIVATE_COMMIT} environment variable.  When this variable is set, the updated package source is also added to the store.  This is used as part of the release process of Guix."
msgstr "Questo controllo può essere disabilitato, @emph{a tuo rischio e pericolo}, impostando la variabile d'ambiente @code{GUIX_ALLOW_ME_TO_USE_PRIVATE_COMMIT}. Quando questa variabile è impostata, la sorgente del pacchetto aggiornato viene anche aggiunta allo store. Questo è usato come parte del processo di rilascio di Guix."

#. type: cindex
#: guix-git/doc/contributing.texi:3285
#, no-wrap
msgid "deprecation policy"
msgstr "politica di deprecazione"

#. type: Plain text
#: guix-git/doc/contributing.texi:3295
msgid "As any lively project with a broad scope, Guix changes all the time and at all levels.  Because it's user-extensible and programmable, incompatible changes can directly impact users and make their life harder.  It is thus important to reduce user-visible incompatible changes to a minimum and, when such changes are deemed necessary, to clearly communicate them through a @dfn{deprecation period} so everyone can adapt with minimum hassle.  This section defines the project's commitments for smooth deprecation and describes procedures and mechanisms to honor them."
msgstr "Come qualsiasi progetto vivace con un ampio ambito, Guix cambia continuamente e a tutti i livelli. Poiché è estendibile dall'utente e programmabile, cambiamenti incompatibili possono influenzare direttamente gli utenti e rendere loro la vita più difficile. È quindi importante ridurre al minimo i cambiamenti incompatibili visibili all'utente e, quando tali cambiamenti sono ritenuti necessari, comunicarli chiaramente attraverso un @dfn{periodo di deprecazione} in modo che tutti possano adattarsi con il minimo disagio. Questa sezione definisce gli impegni del progetto per una deprecazione fluida e descrive procedure e meccanismi per rispettarli."

#. type: Plain text
#: guix-git/doc/contributing.texi:3298
msgid "There are several ways to use Guix; how to handle deprecation will depend on each use case.  Those can be roughly categorized like this:"
msgstr "Ci sono diversi modi per usare Guix; come gestire la deprecazione dipenderà:"

#. type: itemize
#: guix-git/doc/contributing.texi:3302
msgid "package management exclusively through the command line;"
msgstr "gestione dei pacchetti esclusivamente tramite riga di comando;"

#. type: itemize
#: guix-git/doc/contributing.texi:3305
msgid "advanced package management using the manifest and package interfaces;"
msgstr "gestione avanzata dei pacchetti utilizzando le interfacce manifest e pacchetto;"

#. type: itemize
#: guix-git/doc/contributing.texi:3309
msgid "Home and System management, using the @code{operating-system} and/or @code{home-environment} interfaces together with the service interfaces;"
msgstr "gestione di Home e System, utilizzando le interfacce @code{operating-system} e/o @code{home-environment} insieme alle interfacce dei servizi;"

#. type: itemize
#: guix-git/doc/contributing.texi:3313
msgid "development or use of external tools that use programming interfaces such as the @code{(guix ...)} modules."
msgstr "sviluppo o utilizzo di strumenti esterni che utilizzano interfacce di programmazione come i moduli @code{(guix ...)}."

#. type: Plain text
#: guix-git/doc/contributing.texi:3319
msgid "These use cases form a spectrum with varying degrees of coupling---from ``distant'' to tightly coupled.  Based on this insight, we define the following @dfn{deprecation policies} that we consider suitable for each of these levels."
msgstr "Questi casi d'uso formano uno spettro con vari gradi di accoppiamento—da ``distante'' a strettamente accoppiato. Basandoci su questa osservazione, definiamo le seguenti @dfn{politiche di deprecazione} che riteniamo adatte per ciascuno di questi livelli."

#. type: item
#: guix-git/doc/contributing.texi:3321
#, fuzzy, no-wrap
#| msgid "Modules"
msgid "Command-line tools"
msgstr "Moduli"

#. type: table
#: guix-git/doc/contributing.texi:3326
msgid "Guix sub-commands should be thought of as remaining available ``forever''.  Once a Guix sub-command is to be removed, it should be deprecated first, and then remain available for @b{at least one year} after the first release that deprecated it."
msgstr "I sottocomandi di Guix dovrebbero essere considerati disponibili ``per sempre''. Una volta che un sottocomando di Guix deve essere rimosso, dovrebbe prima essere deprecato, quindi rimanere disponibile per @b{almeno un anno} dopo la prima versione che lo ha deprecato."

#. type: table
#: guix-git/doc/contributing.texi:3336
msgid "Deprecation should first be announced in the manual and as an entry in @file{etc/news.scm}; additional communication such as a blog post explaining the rationale is welcome.  Months before the scheduled removal date, the command should print a warning explaining how to migrate.  An example of this is the replacement of @command{guix environment} by @command{guix shell}, started in October 2021@footnote{For more details on the @command{guix shell} transition, see @uref{https://guix.gnu.org/en/blog/2021/from-guix-environment-to-guix-shell/}.}."
msgstr "La deprecazione dovrebbe essere prima annunciata nel manuale e come voce in @file{etc/news.scm}; sono benvenute comunicazioni aggiuntive come un post su blog che spieghi la motivazione. Mesi prima della data di rimozione pianificata, il comando dovrebbe stampare un avviso che spiega come migrare. Un esempio di ciò è la sostituzione di @command{guix environment} con @command{guix shell}, iniziata nell'ottobre 2021@footnote{Per maggiori dettagli sulla transizione di @command{guix shell}, vedere @uref{https://guix.gnu.org/en/blog/2021/from-guix-environment-to-guix-shell/}.}."

#. type: table
#: guix-git/doc/contributing.texi:3339
msgid "Because of the broad impact of such a change, we recommend conducting a user survey before enacting a plan."
msgstr "A causa del vasto impatto di tale cambiamento, raccomandiamo di condurre un sondaggio utente prima di attuare un piano."

#. type: cindex
#: guix-git/doc/contributing.texi:3340
#, no-wrap
msgid "package deprecation"
msgstr "deprecazione dei pacchetti"

#. type: item
#: guix-git/doc/contributing.texi:3341
#, no-wrap
msgid "Package name changes"
msgstr "Cambiamenti di nome dei pacchetti"

#. type: table
#: guix-git/doc/contributing.texi:3346
msgid "When a package name changes, it must remain available under its old name for @b{at least one year}.  For example, @code{go-ipfs} was renamed to @code{kubo} following a decision made upstream; to communicate the name change to users, the package module provided this definition:"
msgstr "Quando il nome di un pacchetto cambia, deve rimanere disponibile con il suo vecchio nome per @b{almeno un anno}. Ad esempio, @code{go-ipfs} è stato rinominato in @code{kubo} a seguito di una decisione upstream; per comunicare il cambio di nome agli utenti, il modulo del pacchetto ha fornito questa definizione:"

#. type: findex
#: guix-git/doc/contributing.texi:3347
#, no-wrap
msgid "deprecated-package"
msgstr "deprecated-package"

#. type: lisp
#: guix-git/doc/contributing.texi:3351
#, no-wrap
msgid ""
"(define-public go-ipfs\n"
"  (deprecated-package \"go-ipfs\" kubo))\n"
msgstr ""
"(define-public go-ipfs\n"
"  (deprecated-package \"go-ipfs\" kubo))\n"

#. type: table
#: guix-git/doc/contributing.texi:3355
msgid "That way, someone running @command{guix install go-ipfs} or similar sees a deprecation warning mentioning the new name."
msgstr "In questo modo, qualcuno che esegue @command{guix install go-ipfs} o simili vede un avviso di deprecazione che menziona il nuovo nome."

#. type: cindex
#: guix-git/doc/contributing.texi:3356
#, no-wrap
msgid "package removal policy"
msgstr "politica di rimozione dei pacchetti"

#. type: anchor{#1}
#: guix-git/doc/contributing.texi:3358
msgid "package-removal-policy"
msgstr "politica-di-rimozione-pacchetto"

#. type: item
#: guix-git/doc/contributing.texi:3358
#, fuzzy, no-wrap
#| msgid "Modules"
msgid "Package removal"
msgstr "Moduli"

#. type: table
#: guix-git/doc/contributing.texi:3362
msgid "Packages whose upstream developers have declared as having reached ``end of life'' or being unmaintained may be removed; likewise, packages that have been @b{failing to build for two months or more} may be removed."
msgstr "I pacchetti i cui sviluppatori upstream hanno dichiarato di aver raggiunto ``fine vita'' o non essere più mantenuti possono essere rimossi; allo stesso modo, i pacchetti che @b{non sono stati compilati con successo per due mesi o più} possono essere rimossi."

#. type: table
#: guix-git/doc/contributing.texi:3366
msgid "There is no formal deprecation mechanism for this case, unless a replacement exists, in which case the @code{deprecated-package} procedure mentioned above can be used."
msgstr "Non esiste un meccanismo formale di deprecazione per questo caso, a meno che non esista una sostituzione, nel qual caso può essere utilizzata la procedura @code{deprecated-package} menzionata sopra."

#. type: table
#: guix-git/doc/contributing.texi:3371
msgid "If the package being removed is a ``leaf'' (no other packages depend on it), it may be removed after a @b{one-month review period} of the patch removing it (this applies even when the removal has additional motivations such as security problems affecting the package)."
msgstr "Se il pacchetto da rimuovere è una ``foglia'' (nessun altro pacchetto dipende da esso), può essere rimosso dopo un @b{periodo di revisione di un mese} della patch che lo rimuove (questo si applica anche quando la rimozione ha motivazioni aggiuntive come problemi di sicurezza che interessano il pacchetto)."

#. type: quotation
#: guix-git/doc/contributing.texi:3376
msgid "Learn about pending package removals by checking @uref{https://codeberg.org/guix/guix/issues?labels=445131, issues and pull requests with the @samp{deprecation} label}."
msgstr ""

#. type: table
#: guix-git/doc/contributing.texi:3385
#, fuzzy
#| msgid "If it has many dependent packages---as is the case for example with Python version@tie{}2---the relevant team must propose a deprecation removal agenda and seek consensus with other packagers for @b{at least one month}.  It may also invite feedback from the broader user community, for example through a survey.  Removal of all impacted packages may be gradual, spanning multiple months, to accommodate all use cases."
msgid "If the package has many dependent packages---as is the case for example with Python version@tie{}2---the relevant team must propose a deprecation removal agenda and seek consensus with other packagers for @b{at least one month}.  It may also invite feedback from the broader user community, for example through a survey.  Removal of all impacted packages may be gradual, spanning multiple months, to accommodate all use cases."
msgstr "Se ha molti pacchetti dipendenti—come nel caso ad esempio di Python versione@tie{}2—il team competente deve proporre un'agenda di rimozione della deprecazione e cercare il consenso con altri packager per @b{almeno un mese}. Può anche invitare feedback dalla comunità utente più ampia, ad esempio attraverso un sondaggio. La rimozione di tutti i pacchetti impattati può essere graduale, estesa su più mesi, per accogliere tutti i casi d'uso."

#. type: table
#: guix-git/doc/contributing.texi:3389
msgid "When the package being removed is considered popular, whether or not it is a leaf, its deprecation must be announced as an entry in @code{etc/news.scm}."
msgstr "Quando il pacchetto da rimuovere è considerato popolare, che sia o meno una foglia, la sua deprecazione deve essere annunciata come voce in @code{etc/news.scm}."

#. type: item
#: guix-git/doc/contributing.texi:3390
#, fuzzy, no-wrap
#| msgid "Modules"
msgid "Package upgrade"
msgstr "Moduli"

#. type: table
#: guix-git/doc/contributing.texi:3393
msgid "In the case of packages with many dependents and/or many users, an upgrade may be treated like the @emph{removal} of the previous version."
msgstr "Nel caso di pacchetti con molti dipendenti e/o molti utenti, un aggiornamento può essere trattato come la @emph{removal} della versione precedente."

#. type: table
#: guix-git/doc/contributing.texi:3397
msgid "Examples include major version upgrades of programming language implementations, as we've seen above with Python, and major upgrades of ``big'' libraries such as Qt or GTK."
msgstr "Esempi includono aggiornamenti di versione maggiore delle implementazioni di linguaggi di programmazione, come abbiamo visto sopra con Python, e aggiornamenti maggiori di librerie ``grandi'' come Qt o GTK."

#. type: cindex
#: guix-git/doc/contributing.texi:3398
#, no-wrap
msgid "service deprecation"
msgstr "deprecazione dei servizi"

#. #-#-#-#-#  contributing.pot (guix manual checkout)  #-#-#-#-#
#. type: item
#. #-#-#-#-#  guix.pot (guix manual checkout)  #-#-#-#-#
#. type: node
#: guix-git/doc/contributing.texi:3399 guix-git/doc/guix.texi:399
#: guix-git/doc/guix.texi:405 guix-git/doc/guix.texi:17545
#: guix-git/doc/guix.texi:19545 guix-git/doc/guix.texi:19546
#: guix-git/doc/guix.texi:37650
#, no-wrap
msgid "Services"
msgstr "Servizi"

#. type: table
#: guix-git/doc/contributing.texi:3404
msgid "Changes to services for Guix Home and Guix System have a direct impact on user configuration.  For a user, adjusting to interface changes is rarely rewarding, which is why any such change must be clearly communicated in advance through deprecation warnings and documentation."
msgstr "Le modifiche ai servizi per Guix Home e Guix System hanno un impatto diretto sulla configurazione dell'utente. Per un utente, adattarsi ai cambiamenti dell'interfaccia è raramente gratificante, motivo per cui ogni modifica del genere deve essere chiaramente comunicata in anticipo tramite avvisi di deprecazione e documentazione."

#. type: table
#: guix-git/doc/contributing.texi:3410
msgid "Renaming of variables related to service, home, or system configuration must be communicated for at least six months before removal using the @code{(guix deprecation)} mechanisms.  For example, renaming of @code{murmur-configuration} to @code{mumble-server-configuration} was communicated through a series of definitions like this one:"
msgstr "La ridenominazione di variabili relative a servizi, home o configurazione di sistema deve essere comunicata per almeno sei mesi prima della rimozione utilizzando i meccanismi @code{(guix deprecation)}. Ad esempio, la ridenominazione di @code{murmur-configuration} in @code{mumble-server-configuration} è stata comunicata tramite una serie di definizioni come questa:"

#. type: findex
#: guix-git/doc/contributing.texi:3411
#, no-wrap
msgid "define-deprecated/public-alias"
msgstr "define-deprecated/public-alias"

#. type: lisp
#: guix-git/doc/contributing.texi:3416
#, no-wrap
msgid ""
"(define-deprecated/public-alias\n"
"  murmur-configuration\n"
"  mumble-server-configuration)\n"
msgstr ""
"(define-deprecated/public-alias\n"
"  murmur-configuration\n"
"  mumble-server-configuration)\n"

#. type: table
#: guix-git/doc/contributing.texi:3419
msgid "Procedures slated for removal may be defined like this:"
msgstr "Le procedure destinate alla rimozione possono essere definite così:"

#. type: findex
#: guix-git/doc/contributing.texi:3420
#, no-wrap
msgid "define-deprecated"
msgstr "define-deprecated"

#. type: lisp
#: guix-git/doc/contributing.texi:3425
#, no-wrap
msgid ""
"(define-deprecated (elogind-service #:key (config (elogind-configuration)))\n"
"  elogind-service-type\n"
"  (service elogind-service-type config))\n"
msgstr ""
"(define-deprecated (elogind-service #:key (config (elogind-configuration)))\n"
"  elogind-service-type\n"
"  (service elogind-service-type config))\n"

#. type: table
#: guix-git/doc/contributing.texi:3432
msgid "Record fields, notably fields of service configuration records, must follow a similar deprecation period.  This is usually achieved through @i{ad hoc} means though.  For example, the @code{hosts-file} field of @code{operating-system} was deprecated by adding a @code{sanitized} property that would emit a warning:"
msgstr "I campi dei record, in particolare i campi dei record di configurazione dei servizi, devono seguire un periodo di deprecazione simile. Tuttavia, questo di solito è ottenuto tramite mezzi @i{ad hoc}. Ad esempio, il campo @code{hosts-file} di @code{operating-system} è stato deprecato aggiungendo una proprietà @code{sanitized} che emetteva un avviso:"

#. type: lisp
#: guix-git/doc/contributing.texi:3439
#, no-wrap
msgid ""
"(define-record-type* <operating-system>\n"
"  ;; @dots{}\n"
"  (hosts-file %operating-system-hosts-file         ;deprecated\n"
"              (default #f)\n"
"              (sanitize warn-hosts-file-field-deprecation)))\n"
"\n"
msgstr ""
"(define-record-type* <operating-system>\n"
"  ;; @dots{}\n"
"  (hosts-file %operating-system-hosts-file         ;obsoleto\n"
"              (default #f)\n"
"              (sanitize warn-hosts-file-field-deprecation)))\n"
"\n"

#. type: lisp
#: guix-git/doc/contributing.texi:3443
#, no-wrap
msgid ""
"(define-deprecated (operating-system-hosts-file os)\n"
"  hosts-service-type\n"
"  (%operating-system-hosts-file os))\n"
msgstr ""
"(define-deprecated (operating-system-hosts-file os)\n"
"  hosts-service-type\n"
"  (%operating-system-hosts-file os))\n"

#. type: table
#: guix-git/doc/contributing.texi:3448
msgid "When deprecating interfaces in @code{operating-system}, @code{home-environment}, @code{(gnu services)}, or any popular service, the deprecation must come with an entry in @code{etc/news.scm}."
msgstr "Quando si deprecano interfacce in @code{operating-system}, @code{home-environment}, @code{(gnu services)} o qualsiasi servizio popolare, la deprecazione deve includere una voce in @code{etc/news.scm}."

#. type: cindex
#: guix-git/doc/contributing.texi:3449
#, no-wrap
msgid "deprecation of programming interfaces"
msgstr "deprecazione delle interfacce di programmazione"

#. type: item
#: guix-git/doc/contributing.texi:3450
#, fuzzy, no-wrap
#| msgid "More services."
msgid "Core interfaces"
msgstr "Altri servizi."

#. type: table
#: guix-git/doc/contributing.texi:3457
msgid "Core programming interfaces, in particular the @code{(guix ...)} modules, may be relied on by a variety of external tools and channels.  Any incompatible change must be formally deprecated with @code{define-deprecated}, as shown above, for @b{at least one year} before removal.  The manual must clearly document the new interface and, except in obvious cases, explain how to migrate from the old one."
msgstr "Le interfacce di programmazione principali, in particolare i moduli @code{(guix ...)}, possono essere utilizzate da vari strumenti e canali esterni. Qualsiasi modifica incompatibile deve essere formalmente deprecata con @code{define-deprecated}, come mostrato sopra, per @b{almeno un anno} prima della rimozione. Il manuale deve documentare chiaramente la nuova interfaccia e, tranne nei casi ovvi, spiegare come migrare dalla vecchia."

#. type: table
#: guix-git/doc/contributing.texi:3461
msgid "As an example, the @code{build-expression->derivation} procedure was superseded by @code{gexp->derivation} and remained available as a deprecated symbol:"
msgstr "Ad esempio, la procedura @code{build-expression->derivation} è stata sostituita da @code{gexp->derivation} ed è rimasta disponibile come simbolo deprecato:"

#. type: lisp
#: guix-git/doc/contributing.texi:3467
#, no-wrap
msgid ""
"(define-deprecated (build-expression->derivation store name exp\n"
"                                                 #:key @dots{})\n"
"  gexp->derivation\n"
"  @dots{})\n"
msgstr ""
"(define-deprecated (build-expression->derivation store name exp\n"
"                                                 #:key @dots{})\n"
"  gexp->derivation\n"
"  @dots{})\n"

#. type: table
#: guix-git/doc/contributing.texi:3472
msgid "Sometimes bindings are moved from one module to another.  In those cases, bindings must be reexported from the original module for at least one year."
msgstr "A volte i binding vengono spostati da un modulo a un altro. In questi casi, i binding devono essere riesportati dal modulo originale per almeno un anno."

#. type: Plain text
#: guix-git/doc/contributing.texi:3477
msgid "This section does not cover all possible situations but hopefully allows users to know what to expect and developers to stick to its spirit.  Please email @email{guix-devel@@gnu.org} for any questions."
msgstr "Questa sezione non copre tutte le possibili situazioni ma si spera permetta agli utenti di sapere cosa aspettarsi e agli sviluppatori di attenersi al suo spirito. Per qualsiasi domanda, inviare un'email a @email{guix-devel@@gnu.org}."

#. #-#-#-#-#  contributing.pot (guix manual checkout)  #-#-#-#-#
#. type: cindex
#. #-#-#-#-#  guix.pot (guix manual checkout)  #-#-#-#-#
#. type: item
#: guix-git/doc/contributing.texi:3478 guix-git/doc/guix.texi:4233
#: guix-git/doc/guix.texi:48922 guix-git/doc/guix.texi:48979
#, no-wrap
msgid "documentation"
msgstr "documentation"

#. type: Plain text
#: guix-git/doc/contributing.texi:3485
msgid "Guix is documented using the Texinfo system.  If you are not yet familiar with it, we accept contributions for documentation in most formats.  That includes plain text, Markdown, Org, etc."
msgstr "Guix è documentato utilizzando il sistema Texinfo. Se non lo conosci ancora, accettiamo contributi per la documentazione nella maggior parte dei formati. Ciò include testo semplice, Markdown, Org, ecc."

#. type: Plain text
#: guix-git/doc/contributing.texi:3489
msgid "Documentation contributions can be sent to @email{guix-patches@@gnu.org}.  Prepend @samp{[DOCUMENTATION]} to the subject."
msgstr "I contributi alla documentazione possono essere inviati a @email{guix-patches@@gnu.org}. Anteporre @samp{[DOCUMENTATION]} all'oggetto."

#. type: Plain text
#: guix-git/doc/contributing.texi:3494
msgid "When you need to make more than a simple addition to the documentation, we prefer that you send a proper patch as opposed to sending an email as described above.  @xref{Submitting Patches} for more information on how to send your patches."
msgstr "Quando devi apportare più di una semplice aggiunta alla documentazione, preferiamo che invii una patch corretta invece di inviare un'email come descritto sopra. @xref{Submitting Patches} per maggiori informazioni su come inviare le tue patch."

#. type: Plain text
#: guix-git/doc/contributing.texi:3503
msgid "To modify the documentation, you need to edit @file{doc/guix.texi} and @file{doc/contributing.texi} (which contains this documentation section), or @file{doc/guix-cookbook.texi} for the cookbook.  If you compiled the Guix repository before, you will have many more @file{.texi} files that are translations of these documents.  Do not modify them, the translation is managed through @uref{https://translate.codeberg.org/projects/guix, Weblate}.  @xref{Translating Guix} for more information."
msgstr "Per modificare la documentazione, devi modificare @file{doc/guix.texi} e @file{doc/contributing.texi} (che contiene questa sezione di documentazione) o @file{doc/guix-cookbook.texi} per il cookbook. Se hai compilato il repository Guix in precedenza, avrai molti altri file @file{.texi} che sono traduzioni di questi documenti. Non modificarli, la traduzione è gestita tramite @uref{https://translate.codeberg.org/projects/guix, Weblate}. @xref{Translating Guix} per maggiori informazioni."

#. type: Plain text
#: guix-git/doc/contributing.texi:3508
msgid "To render documentation, you must first make sure that you ran @command{./configure} in your source tree (@pxref{Running Guix Before It Is Installed}).  After that you can run one of the following commands:"
msgstr "Per generare la documentazione, devi prima assicurarti di aver eseguito @command{./configure} nel tuo albero sorgente (@pxref{Running Guix Before It Is Installed}). Dopodiché puoi eseguire uno dei seguenti comandi:"

#. type: item
#: guix-git/doc/contributing.texi:3510
#, no-wrap
msgid "@samp{make doc/guix.info} to compile the Info manual."
msgstr "@samp{make doc/guix.info} per compilare il manuale Info."

#. type: itemize
#: guix-git/doc/contributing.texi:3512
msgid "You can check it with @command{info doc/guix.info}."
msgstr "Puoi controllarlo con @command{info doc/guix.info}."

#. type: item
#: guix-git/doc/contributing.texi:3512
#, no-wrap
msgid "@samp{make doc/guix.html} to compile the HTML version."
msgstr "@samp{make doc/guix.html} per compilare la versione HTML."

#. type: itemize
#: guix-git/doc/contributing.texi:3515
msgid "You can point your browser to the relevant file in the @file{doc/guix.html} directory."
msgstr "Puoi puntare il tuo browser al file pertinente nella directory @file{doc/guix.html}."

#. type: item
#: guix-git/doc/contributing.texi:3515
#, no-wrap
msgid "@samp{make doc/guix-cookbook.info} for the cookbook Info manual."
msgstr "@samp{make doc/guix-cookbook.info} per il manuale Info del cookbook."

#. type: item
#: guix-git/doc/contributing.texi:3516
#, no-wrap
msgid "@samp{make doc/guix-cookbook.html} for the cookbook HTML version."
msgstr "@samp{make doc/guix-cookbook.html} per la versione HTML del cookbook."

#. type: cindex
#: guix-git/doc/contributing.texi:3519
#, fuzzy, no-wrap
#| msgid "Installation"
msgid "translation"
msgstr "Installazione"

#. type: cindex
#: guix-git/doc/contributing.texi:3520
#, no-wrap
msgid "l10n"
msgstr "l10n"

#. type: cindex
#: guix-git/doc/contributing.texi:3521
#, no-wrap
msgid "i18n"
msgstr "i18n"

#. type: cindex
#: guix-git/doc/contributing.texi:3522
#, no-wrap
msgid "native language support"
msgstr "supporto per la lingua nativa"

#. type: Plain text
#: guix-git/doc/contributing.texi:3532
msgid "Writing code and packages is not the only way to provide a meaningful contribution to Guix.  Translating to a language you speak is another example of a valuable contribution you can make.  This section is designed to describe the translation process.  It gives you advice on how you can get involved, what can be translated, what mistakes you should avoid and what we can do to help you!"
msgstr "Scrivere codice e pacchetti non è l'unico modo per fornire un contributo significativo a Guix. Tradurre in una lingua che conosci è un altro esempio di contributo prezioso che puoi dare. Questa sezione è progettata per descrivere il processo di traduzione. Ti dà consigli su come puoi coinvolgerti, cosa puoi tradurre, quali errori dovresti evitare e cosa possiamo fare per aiutarti!"

#. type: Plain text
#: guix-git/doc/contributing.texi:3537
msgid "Guix is a big project that has multiple components that can be translated.  We coordinate the translation effort on a @uref{https://translate.codeberg.org/projects/guix/,Weblate instance} hosted by Codeberg.  You will need an account to submit translations."
msgstr "Guix è un grande progetto con più componenti che possono essere tradotti. Coordiniamo lo sforzo di traduzione su un @uref{https://translate.codeberg.org/projects/guix/,istanza Weblate} ospitata da Codeberg. Avrai bisogno di un account per inviare traduzioni."

#. type: Plain text
#: guix-git/doc/contributing.texi:3544
msgid "Some of the software packaged in Guix also contain translations.  We do not host a translation platform for them.  If you want to translate a package provided by Guix, you should contact their developers or find the information on their website.  As an example, you can find the homepage of the @code{hello} package by typing @command{guix show hello}.  On the ``homepage'' line, you will see @url{https://www.gnu.org/software/hello/} as the homepage."
msgstr "Alcuni dei software impacchettati in Guix contengono anche traduzioni. Non ospitiamo una piattaforma di traduzione per loro. Se vuoi tradurre un pacchetto fornito da Guix, dovresti contattare i suoi sviluppatori o trovare le informazioni sul loro sito web. Ad esempio, puoi trovare la homepage del pacchetto @code{hello} digitando @command{guix show hello}. Sulla riga ``homepage'', vedrai @url{https://www.gnu.org/software/hello/} come homepage."

#. type: Plain text
#: guix-git/doc/contributing.texi:3549
msgid "Many GNU and non-GNU packages can be translated on the @uref{https://translationproject.org,Translation Project}.  Some projects with multiple components have their own platform.  For instance, GNOME has its own platform, @uref{https://l10n.gnome.org/,Damned Lies}."
msgstr "Molti pacchetti GNU e non GNU possono essere tradotti su @uref{https://translationproject.org,Translation Project}. Alcuni progetti con più componenti hanno la loro piattaforma. Ad esempio, GNOME ha la sua piattaforma, @uref{https://l10n.gnome.org/,Damned Lies}."

#. type: Plain text
#: guix-git/doc/contributing.texi:3551
msgid "Guix has five components hosted on Weblate."
msgstr "Guix ha cinque componenti ospitati su Weblate."

#. type: item
#: guix-git/doc/contributing.texi:3553
#, no-wrap
msgid "@code{guix} contains all the strings from the Guix software (the"
msgstr "@code{guix} contiene tutte le stringhe del software Guix (il"

#. type: itemize
#: guix-git/doc/contributing.texi:3555
msgid "guided system installer, the package manager, etc), excluding packages."
msgstr "installer guidato del sistema, il gestore di pacchetti, ecc.), escludendo i pacchetti."

#. type: item
#: guix-git/doc/contributing.texi:3555
#, no-wrap
msgid "@code{packages} contains the synopsis (single-sentence description"
msgstr "@code{packages} contiene la sinossi (descrizione di una frase)"

#. type: itemize
#: guix-git/doc/contributing.texi:3557
msgid "of a package) and description (longer description) of packages in Guix."
msgstr "di un pacchetto) e la descrizione (descrizione più lunga) dei pacchetti in Guix."

#. type: item
#: guix-git/doc/contributing.texi:3557
#, no-wrap
msgid "@code{website} contains the official Guix website, except for"
msgstr "@code{website} contiene il sito web ufficiale di Guix, eccetto per"

#. type: itemize
#: guix-git/doc/contributing.texi:3559
msgid "blog posts and multimedia content."
msgstr "post del blog e contenuti multimediali."

#. type: item
#: guix-git/doc/contributing.texi:3559
#, no-wrap
msgid "@code{documentation-manual} corresponds to this manual."
msgstr "@code{documentation-manual} corrisponde a questo manuale."

#. type: item
#: guix-git/doc/contributing.texi:3560
#, no-wrap
msgid "@code{documentation-cookbook} is the component for the cookbook."
msgstr "@code{documentation-cookbook} è il componente per il cookbook."

#. type: subsubheading
#: guix-git/doc/contributing.texi:3563
#, no-wrap
msgid "General Directions"
msgstr "Indicazioni Generali"

#. type: Plain text
#: guix-git/doc/contributing.texi:3571
msgid "Once you get an account, you should be able to select a component from @uref{https://translate.codeberg.org/projects/guix/,the guix project}, and select a language.  If your language does not appear in the list, go to the bottom and click on the ``Start new translation'' button.  Select the language you want to translate to from the list, to start your new translation."
msgstr "Una volta ottenuto un account, dovresti essere in grado di selezionare un componente da @uref{https://translate.codeberg.org/projects/guix/,il progetto guix} e selezionare una lingua. Se la tua lingua non appare nell'elenco, vai in fondo e clicca sul pulsante ``Start new translation''. Seleziona la lingua in cui vuoi tradurre dall'elenco per iniziare la tua nuova traduzione."

#. type: Plain text
#: guix-git/doc/contributing.texi:3576
msgid "Like lots of other free software packages, Guix uses @uref{https://www.gnu.org/software/gettext,GNU Gettext} for its translations, with which translatable strings are extracted from the source code to so-called PO files."
msgstr "Come molti altri pacchetti software libero, Guix utilizza @uref{https://www.gnu.org/software/gettext,GNU Gettext} per le sue traduzioni, con cui le stringhe traducibili vengono estratte dal codice sorgente in file cosiddetti PO."

#. type: Plain text
#: guix-git/doc/contributing.texi:3587
msgid "Even though PO files are text files, changes should not be made with a text editor but with PO editing software.  Weblate integrates PO editing functionality.  Alternatively, translators can use any of various free-software tools for filling in translations, of which @uref{https://poedit.net/,Poedit} is one example, and (after logging in)  @uref{https://docs.weblate.org/en/latest/user/files.html,upload} the changed file.  There is also a special @uref{https://www.emacswiki.org/emacs/PoMode,PO editing mode} for users of GNU Emacs.  Over time translators find out what software they are happy with and what features they need."
msgstr "Anche se i file PO sono file di testo, le modifiche non dovrebbero essere fatte con un editor di testo ma con software di editing PO. Weblate integra la funzionalità di editing PO. In alternativa, i traduttori possono utilizzare uno dei vari strumenti software libero per compilare le traduzioni, tra cui @uref{https://poedit.net/,Poedit} è un esempio, e (dopo aver effettuato l'accesso) @uref{https://docs.weblate.org/en/latest/user/files.html,caricare} il file modificato. C'è anche un @uref{https://www.emacswiki.org/emacs/PoMode,modalità di editing PO} speciale per gli utenti di GNU Emacs. Nel tempo i traduttori scoprono con quale software sono soddisfatti e di quali funzionalità hanno bisogno."

#. type: Plain text
#: guix-git/doc/contributing.texi:3592
msgid "On Weblate, you will find various links to the editor, that will show various subsets (or all) of the strings.  Have a look around and at the @uref{https://docs.weblate.org/en/latest/,documentation} to familiarize yourself with the platform."
msgstr "Su Weblate, troverai vari collegamenti all'editor, che mostreranno vari sottoinsiemi (o tutte) le stringhe. Dai un'occhiata in giro e alla @uref{https://docs.weblate.org/en/latest/,documentazione} per familiarizzare con la piattaforma."

#. type: subsubheading
#: guix-git/doc/contributing.texi:3593
#, no-wrap
msgid "Translation Components"
msgstr "Componenti della Traduzione"

#. type: Plain text
#: guix-git/doc/contributing.texi:3598
msgid "In this section, we provide more detailed guidance on the translation process, as well as details on what you should or should not do.  When in doubt, please contact us, we will be happy to help!"
msgstr "In questa sezione, forniamo indicazioni più dettagliate sul processo di traduzione, nonché dettagli su cosa dovresti o non dovresti fare. In caso di dubbio, contattaci, saremo felici di aiutare!"

#. type: table
#: guix-git/doc/contributing.texi:3605
msgid "Guix is written in the Guile programming language, and some strings contain special formatting that is interpreted by Guile.  These special formatting should be highlighted by Weblate.  They start with @code{~} followed by one or more characters."
msgstr "Guix è scritto nel linguaggio di programmazione Guile e alcune stringhe contengono formattazioni speciali interpretate da Guile. Queste formattazioni speciali dovrebbero essere evidenziate da Weblate. Iniziano con @code{~} seguito da uno o più caratteri."

#. type: table
#: guix-git/doc/contributing.texi:3614
msgid "When printing the string, Guile replaces the special formatting symbols with actual values.  For instance, the string @samp{ambiguous package specification `~a'} would be substituted to contain said package specification instead of @code{~a}.  To properly translate this string, you must keep the formatting code in your translation, although you can place it where it makes sense in your language.  For instance, the French translation says @samp{spécification du paquet « ~a » ambiguë} because the adjective needs to be placed in the end of the sentence."
msgstr "Quando stampa la stringa, Guile sostituisce i simboli di formattazione speciali con valori effettivi. Ad esempio, la stringa @samp{ambiguous package specification `~a'} verrebbe sostituita per contenere la specifica del pacchetto anziché @code{~a}. Per tradurre correttamente questa stringa, devi mantenere il codice di formattazione nella tua traduzione, sebbene tu possa posizionarlo dove ha senso nella tua lingua. Ad esempio, la traduzione francese dice @samp{spécification du paquet « ~a » ambiguë} perché l'aggettivo deve essere posto alla fine della frase."

#. type: table
#: guix-git/doc/contributing.texi:3618
msgid "If there are multiple formatting symbols, make sure to respect the order.  Guile does not know in which order you intended the string to be read, so it will substitute the symbols in the same order as the English sentence."
msgstr "Se ci sono più simboli di formattazione, assicurati di rispettare l'ordine. Guile non sa in quale ordine intendevi che la stringa fosse letta, quindi sostituirà i simboli nello stesso ordine della frase inglese."

#. type: table
#: guix-git/doc/contributing.texi:3626
msgid "As an example, you cannot translate @samp{package '~a' has been superseded by '~a'} by @samp{'~a' supersedes package '~a'}, because the meaning would be reversed.  If @var{foo} is superseded by @var{bar}, the translation would read @samp{'foo' supersedes package 'bar'}.  To work around this problem, it is possible to use more advanced formatting to select a given piece of data, instead of following the default English order.  @xref{Formatted Output,,, guile, GNU Guile Reference Manual}, for more information on formatting in Guile."
msgstr "Ad esempio, non puoi tradurre @samp{package '~a' has been superseded by '~a'} con @samp{'~a' supersedes package '~a'}, perché il significato sarebbe invertito. Se @var{foo} è sostituito da @var{bar}, la traduzione dice @samp{'foo' supersedes package 'bar'}. Per aggirare questo problema, è possibile utilizzare una formattazione più avanzata per selezionare un dato pezzo di dati, invece di seguire l'ordine predefinito inglese. @xref{Formatted Output,,, guile, GNU Guile Reference Manual}, per maggiori informazioni sulla formattazione in Guile."

#. #-#-#-#-#  contributing.pot (guix manual checkout)  #-#-#-#-#
#. type: item
#. #-#-#-#-#  guix.pot (guix manual checkout)  #-#-#-#-#
#. type: code{#1}
#: guix-git/doc/contributing.texi:3627 guix-git/doc/guix.texi:3111
#: guix-git/doc/guix.texi:35287
#, no-wrap
msgid "packages"
msgstr "pacchetti"

#. type: table
#: guix-git/doc/contributing.texi:3632
msgid "Package descriptions occasionally contain Texinfo markup (@pxref{Synopses and Descriptions}).  Texinfo markup looks like @samp{@@code@{rm -rf@}}, @samp{@@emph@{important@}}, etc.  When translating, please leave markup as is."
msgstr "Le descrizioni dei pacchetti occasionalmente contengono markup Texinfo (@pxref{Synopses and Descriptions}). Il markup Texinfo appare come @samp{@@code@{rm -rf@}}, @samp{@@emph@{important@}}, ecc. Durante la traduzione, per favore lascia il markup così com'è."

#. type: table
#: guix-git/doc/contributing.texi:3641
msgid "The characters after ``@@'' form the name of the markup, and the text between ``@{'' and ``@}'' is its content.  In general, you should not translate the content of markup like @code{@@code}, as it contains literal code that do not change with language.  You can translate the content of formatting markup such as @code{@@emph}, @code{@@i}, @code{@@itemize}, @code{@@item}.  However, do not translate the name of the markup, or it will not be recognized.  Do not translate the word after @code{@@end}, it is the name of the markup that is closed at this position (e.g.@: @code{@@itemize ... @@end itemize})."
msgstr "I caratteri dopo ``@@'' formano il nome del markup, e il testo tra ``@{'' e ``@}'' è il suo contenuto. In generale, non dovresti tradurre il contenuto di markup come @code{@@code}, poiché contiene codice letterale che non cambia con la lingua. Puoi tradurre il contenuto del markup di formattazione come @code{@@emph}, @code{@@i}, @code{@@itemize}, @code{@@item}. Tuttavia, non tradurre il nome del markup, altrimenti non sarà riconosciuto. Non tradurre la parola dopo @code{@@end}, è il nome del markup che viene chiuso in questa posizione (es.@: @code{@@itemize ... @@end itemize})."

#. type: item
#: guix-git/doc/contributing.texi:3642
#, no-wrap
msgid "documentation-manual and documentation-cookbook"
msgstr "documentation-manual e documentation-cookbook"

#. type: table
#: guix-git/doc/contributing.texi:3646
msgid "The first step to ensure a successful translation of the manual is to find and translate the following strings @emph{first}:"
msgstr "Il primo passo per garantire una traduzione riuscita del manuale è trovare e tradurre @emph{first} le seguenti stringhe:"

#. type: item
#: guix-git/doc/contributing.texi:3648
#, no-wrap
msgid "@code{version.texi}: Translate this string as @code{version-xx.texi},"
msgstr "@code{version.texi}: Traduci questa stringa come @code{version-xx.texi},"

#. type: itemize
#: guix-git/doc/contributing.texi:3651
msgid "where @code{xx} is your language code (the one shown in the URL on weblate)."
msgstr "dove @code{xx} è il tuo codice lingua (quello mostrato nell'URL su weblate)."

#. type: item
#: guix-git/doc/contributing.texi:3651
#, no-wrap
msgid "@code{contributing.texi}: Translate this string as"
msgstr "@code{contributing.texi}: Traduci questa stringa come"

#. type: itemize
#: guix-git/doc/contributing.texi:3653
msgid "@code{contributing.xx.texi}, where @code{xx} is the same language code."
msgstr "@code{contributing.xx.texi}, dove @code{xx} è lo stesso codice lingua."

#. type: item
#: guix-git/doc/contributing.texi:3653
#, no-wrap
msgid "@code{Top}: Do not translate this string, it is important for Texinfo."
msgstr "@code{Top}: Non tradurre questa stringa, è importante per Texinfo."

#. type: itemize
#: guix-git/doc/contributing.texi:3656
msgid "If you translate it, the document will be empty (missing a Top node).  Please look for it, and register @code{Top} as its translation."
msgstr "Se la traduci, il documento sarà vuoto (manca un nodo Top). Per favore cercala e registra @code{Top} come sua traduzione."

#. type: table
#: guix-git/doc/contributing.texi:3661
msgid "Translating these strings first ensure we can include your translation in the guix repository without breaking the make process or the @command{guix pull} machinery."
msgstr "Tradurre queste stringhe per prime garantisce che possiamo includere la tua traduzione nel repository guix senza interrompere il processo make o il meccanismo @command{guix pull}."

#. type: table
#: guix-git/doc/contributing.texi:3668
msgid "The manual and the cookbook both use Texinfo.  As for @code{packages}, please keep Texinfo markup as is.  There are more possible markup types in the manual than in the package descriptions.  In general, do not translate the content of @code{@@code}, @code{@@file}, @code{@@var}, @code{@@value}, etc.  You should translate the content of formatting markup such as @code{@@emph}, @code{@@i}, etc."
msgstr "Il manuale e il cookbook utilizzano entrambi Texinfo. Come per @code{packages}, per favore mantieni il markup Texinfo così com'è. Ci sono più tipi di markup possibili nel manuale che nelle descrizioni dei pacchetti. In generale, non tradurre il contenuto di @code{@@code}, @code{@@file}, @code{@@var}, @code{@@value}, ecc. Dovresti tradurre il contenuto del markup di formattazione come @code{@@emph}, @code{@@i}, ecc."

#. type: table
#: guix-git/doc/contributing.texi:3676
msgid "The manual contains sections that can be referred to by name by @code{@@ref}, @code{@@xref} and @code{@@pxref}.  We have a mechanism in place so you do not have to translate their content.  If you keep the English title, we will automatically replace it with your translation of that title.  This ensures that Texinfo will always be able to find the node. If you decide to change the translation of the title, the references will automatically be updated and you will not have to update them all yourself."
msgstr "Il manuale contiene sezioni a cui si può fare riferimento per nome con @code{@@ref}, @code{@@xref} e @code{@@pxref}. Abbiamo un meccanismo in atto in modo che tu non debba tradurne il contenuto. Se mantieni il titolo inglese, lo sostituiremo automaticamente con la tua traduzione di quel titolo. Ciò garantisce che Texinfo sarà sempre in grado di trovare il nodo. Se decidi di cambiare la traduzione del titolo, i riferimenti verranno aggiornati automaticamente e non dovrai aggiornarli tutti tu stesso."

#. type: table
#: guix-git/doc/contributing.texi:3686
msgid "When translating references from the cookbook to the manual, you need to replace the name of the manual and the name of the section.  For instance, to translate @code{@@pxref@{Defining Packages,,, guix, GNU Guix Reference Manual@}}, you would replace @code{Defining Packages} with the title of that section in the translated manual @emph{only} if that title is translated.  If the title is not translated in your language yet, do not translate it here, or the link will be broken.  Replace @code{guix} with @code{guix.xx} where @code{xx} is your language code.  @code{GNU Guix Reference Manual} is the text of the link.  You can translate it however you wish."
msgstr "Quando traduci riferimenti dal cookbook al manuale, devi sostituire il nome del manuale e il nome della sezione. Ad esempio, per tradurre @code{@@pxref@{Defining Packages,,, guix, GNU Guix Reference Manual@}}, sostituiresti @code{Defining Packages} con il titolo di quella sezione nel manuale tradotto @emph{solo} se quel titolo è tradotto. Se il titolo non è ancora tradotto nella tua lingua, non tradurlo qui, altrimenti il collegamento si interromperà. Sostituisci @code{guix} con @code{guix.xx} dove @code{xx} è il tuo codice lingua. @code{GNU Guix Reference Manual} è il testo del collegamento. Puoi tradurlo come preferisci."

#. type: item
#: guix-git/doc/contributing.texi:3687
#, no-wrap
msgid "website"
msgstr "sito web"

#. type: table
#: guix-git/doc/contributing.texi:3694
msgid "The website pages are written using SXML, an s-expression version of HTML, the basic language of the web.  We have a process to extract translatable strings from the source, and replace complex s-expressions with a more familiar XML markup, where each markup is numbered.  Translators can arbitrarily change the ordering, as in the following example."
msgstr "Le pagine del sito web sono scritte in SXML, una versione s-expression di HTML, il linguaggio di base del web. Abbiamo un processo per estrarre le stringhe traducibili dal sorgente e sostituire espressioni s complesse con un markup XML più familiare, dove ogni markup è numerato. I traduttori possono cambiare arbitrariamente l'ordine, come nell'esempio seguente."

#. type: example
#: guix-git/doc/contributing.texi:3701
#, no-wrap
msgid ""
"#. TRANSLATORS: Defining Packages is a section name\n"
"#. in the English (en) manual.\n"
"#: apps/base/templates/about.scm:64\n"
"msgid \"Packages are <1>defined<1.1>en</1.1><1.2>Defining-Packages.html</1.2></1> as native <2>Guile</2> modules.\"\n"
"msgstr \"Pakete werden als reine <2>Guile</2>-Module <1>definiert<1.1>de</1.1><1.2>Pakete-definieren.html</1.2></1>.\"\n"
msgstr ""
"#. TRADUTTORI: Defining Packages è un nome di sezione\n"
"#. nel manuale inglese (en).\n"
"#: apps/base/templates/about.scm:64\n"
"msgid \"Packages are <1>defined<1.1>en</1.1><1.2>Defining-Packages.html</1.2></1> as native <2>Guile</2> modules.\"\n"
"msgstr \"I pacchetti sono <1>definiti<1.1>it</1.1><1.2>Definizione-dei-pacchetti.html</1.2></1> come moduli nativi <2>Guile</2>.\"\n"

#. type: table
#: guix-git/doc/contributing.texi:3704
msgid "Note that you need to include the same markups.  You cannot skip any."
msgstr "Nota che devi includere gli stessi markup. Non puoi saltarne nessuno."

#. type: Plain text
#: guix-git/doc/contributing.texi:3712
msgid "In case you make a mistake, the component might fail to build properly with your language, or even make guix pull fail.  To prevent that, we have a process in place to check the content of the files before pushing to our repository.  We will not be able to update the translation for your language in Guix, so we will notify you (through weblate and/or by email) so you get a chance to fix the issue."
msgstr "In caso di errore, il componente potrebbe non essere compilato correttamente con la tua lingua, o addirittura far fallire guix pull. Per prevenire ciò, abbiamo un processo per controllare il contenuto dei file prima di inviarli al nostro repository. Non saremo in grado di aggiornare la traduzione per la tua lingua in Guix, quindi ti notificheremo (tramite weblate e/o email) in modo che tu abbia la possibilità di risolvere il problema."

#. type: subsubheading
#: guix-git/doc/contributing.texi:3713
#, no-wrap
msgid "Outside of Weblate"
msgstr "Al di fuori di Weblate"

#. type: Plain text
#: guix-git/doc/contributing.texi:3716
msgid "Currently, some parts of Guix cannot be translated on Weblate, help wanted!"
msgstr "Attualmente, alcune parti di Guix non possono essere tradotte su Weblate, cercasi aiuto!"

#. type: item
#: guix-git/doc/contributing.texi:3718
#, no-wrap
msgid "@command{guix pull} news can be translated in @file{news.scm}, but is not"
msgstr "Le notizie di @command{guix pull} possono essere tradotte in @file{news.scm}, ma non sono"

#. type: itemize
#: guix-git/doc/contributing.texi:3724
msgid "available from Weblate.  If you want to provide a translation, you can prepare a patch as described above, or simply send us your translation with the name of the news entry you translated and your language. @xref{Writing Channel News}, for more information about channel news."
msgstr "disponibili su Weblate. Se vuoi fornire una traduzione, puoi preparare una patch come descritto sopra, o semplicemente inviarci la tua traduzione con il nome della voce di notizie che hai tradotto e la tua lingua. @xref{Writing Channel News}, per maggiori informazioni sulle notizie del canale."

#. type: item
#: guix-git/doc/contributing.texi:3724
#, no-wrap
msgid "Guix blog posts cannot currently be translated."
msgstr "I post del blog di Guix attualmente non possono essere tradotti."

#. type: item
#: guix-git/doc/contributing.texi:3725
#, no-wrap
msgid "The installer script (for foreign distributions) is entirely in English."
msgstr "Lo script di installazione (per distribuzioni esterne) è interamente in inglese."

#. type: item
#: guix-git/doc/contributing.texi:3726
#, no-wrap
msgid "Some of the libraries Guix uses cannot be translated or are translated"
msgstr "Alcune delle librerie utilizzate da Guix non possono essere tradotte o sono tradotte"

#. type: itemize
#: guix-git/doc/contributing.texi:3728
msgid "outside of the Guix project.  Guile itself is not internationalized."
msgstr "al di fuori del progetto Guix. Guile stesso non è internazionalizzato."

#. type: item
#: guix-git/doc/contributing.texi:3728
#, no-wrap
msgid "Other manuals linked from this manual or the cookbook might not be"
msgstr "Altri manuali collegati da questo manuale o dal cookbook potrebbero non essere"

#. type: itemize
#: guix-git/doc/contributing.texi:3730
msgid "translated."
msgstr "tradotti."

#. type: subsubheading
#: guix-git/doc/contributing.texi:3732
#, no-wrap
msgid "Conditions for Inclusion"
msgstr "Condizioni per l'Inclusione"

#. type: Plain text
#: guix-git/doc/contributing.texi:3739
msgid "There are no conditions for adding new translations of the @code{guix} and @code{guix-packages} components, other than they need at least one translated string.  New languages will be added to Guix as soon as possible.  The files may be removed if they fall out of sync and have no more translated strings."
msgstr "Non ci sono condizioni per aggiungere nuove traduzioni dei componenti @code{guix} e @code{guix-packages}, se non che devono avere almeno una stringa tradotta. Le nuove lingue verranno aggiunte a Guix il prima possibile. I file potrebbero essere rimossi se cadono fuori sincronizzazione e non hanno più stringhe tradotte."

#. type: Plain text
#: guix-git/doc/contributing.texi:3745
msgid "Given that the web site is dedicated to new users, we want its translation to be as complete as possible before we include it in the language menu.  For a new language to be included, it needs to reach at least 80% completion.  When a language is included, it may be removed in the future if it stays out of sync and falls below 60% completion."
msgstr "Dato che il sito web è dedicato ai nuovi utenti, vogliamo che la sua traduzione sia il più completa possibile prima di includerla nel menu lingua. Affinché una nuova lingua venga inclusa, deve raggiungere almeno l'80% di completamento. Quando una lingua è inclusa, potrebbe essere rimossa in futuro se rimane fuori sincronizzazione e scende sotto il 60% di completamento."

#. type: Plain text
#: guix-git/doc/contributing.texi:3753
msgid "The manual and cookbook are automatically added in the default compilation target.  Every time we synchronize translations, developers need to recompile all the translated manuals and cookbooks.  This is useless for what is essentially the English manual or cookbook.  Therefore, we will only include a new language when it reaches 10% completion in the component.  When a language is included, it may be removed in the future if it stays out of sync and falls below 5% completion."
msgstr "Il manuale e il cookbook vengono aggiunti automaticamente nel target di compilazione predefinito. Ogni volta che sincronizziamo le traduzioni, gli sviluppatori devono ricompilare tutti i manuali e i cookbook tradotti. Ciò è inutile per ciò che è essenzialmente il manuale o il cookbook inglese. Pertanto, includeremo una nuova lingua solo quando raggiunge il 10% di completamento nel componente. Quando una lingua è inclusa, potrebbe essere rimossa in futuro se rimane fuori sincronizzazione e scende sotto il 5% di completamento."

#. type: subsubheading
#: guix-git/doc/contributing.texi:3754
#, no-wrap
msgid "Translation Infrastructure"
msgstr "Infrastruttura di Traduzione"

#. type: Plain text
#: guix-git/doc/contributing.texi:3765
msgid "Weblate is backed by a git repository from which it discovers new strings to translate and pushes new and updated translations.  Normally, it would be enough to give it commit access to our repositories.  However, we decided to use a separate repository for two reasons.  First, we would have to give Weblate commit access and authorize its signing key, but we do not trust it in the same way we trust guix developers, especially since we do not manage the instance ourselves.  Second, if translators mess something up, it can break the generation of the website and/or guix pull for all our users, independently of their language."
msgstr "Weblate è supportato da un repository git da cui scopre nuove stringhe da tradurre e invia nuove traduzioni e aggiornamenti. Normalmente, sarebbe sufficiente dargli accesso in commit ai nostri repository. Tuttavia, abbiamo deciso di utilizzare un repository separato per due motivi. Primo, dovremmo dare a Weblate l'accesso in commit e autorizzare la sua chiave di firma, ma non ci fidiamo di esso nello stesso modo in cui ci fidiamo degli sviluppatori di guix, specialmente poiché non gestiamo l'istanza noi stessi. Secondo, se i traduttori combinano pasticci, potrebbe interrompere la generazione del sito web e/o di guix pull per tutti i nostri utenti, indipendentemente dalla loro lingua."

#. type: Plain text
#: guix-git/doc/contributing.texi:3769
msgid "For these reasons, we use a dedicated repository to host translations, and we synchronize it with our guix and artworks repositories after checking no issue was introduced in the translation."
msgstr "Per questi motivi, utilizziamo un repository dedicato per ospitare le traduzioni e lo sincronizziamo con i nostri repository guix e artworks dopo aver verificato che nessun problema sia stato introdotto nella traduzione."

#. type: Plain text
#: guix-git/doc/contributing.texi:3775
msgid "Developers can download the latest PO files from weblate in the Guix repository by running the @command{make download-po} command.  It will automatically download the latest files from weblate, reformat them to a canonical form, and check they do not contain issues.  The manual needs to be built again to check for additional issues that might crash Texinfo."
msgstr "Gli sviluppatori possono scaricare i file PO più recenti da weblate nel repository Guix eseguendo il comando @command{make download-po}. Scaricherà automaticamente i file più recenti da weblate, li riformatterà in una forma canonica e controllerà che non contengano problemi. Il manuale deve essere ricostruito per verificare ulteriori problemi che potrebbero far crashare Texinfo."

#. type: Plain text
#: guix-git/doc/contributing.texi:3779
msgid "Before pushing new translation files, developers should add them to the make machinery so the translations are actually available.  The process differs for the various components."
msgstr "Prima di inviare nuovi file di traduzione, gli sviluppatori dovrebbero aggiungerli alla meccanica make in modo che le traduzioni siano effettivamente disponibili. Il processo differisce per i vari componenti."

#. type: item
#: guix-git/doc/contributing.texi:3781
#, no-wrap
msgid "New po files for the @code{guix} and @code{packages} components must"
msgstr "I nuovi file po per i componenti @code{guix} e @code{packages} devono"

#. type: itemize
#: guix-git/doc/contributing.texi:3784
msgid "be registered by adding the new language to @file{po/guix/LINGUAS} or @file{po/packages/LINGUAS}."
msgstr "essere registrati aggiungendo la nuova lingua a @file{po/guix/LINGUAS} o @file{po/packages/LINGUAS}."

#. type: item
#: guix-git/doc/contributing.texi:3784
#, no-wrap
msgid "New po files for the @code{documentation-manual} component must be"
msgstr "I nuovi file po per il componente @code{documentation-manual} devono essere"

#. type: itemize
#: guix-git/doc/contributing.texi:3790
msgid "registered by adding the file name to @code{DOC_PO_FILES} in @file{po/doc/local.mk}, the generated @file{%D%/guix.xx.texi} manual to @code{info_TEXINFOS} in @file{doc/local.mk} and the generated @file{%D%/guix.xx.texi} and @file{%D%/contributing.xx.texi} to @code{TRANSLATED_INFO} also in @file{doc/local.mk}."
msgstr "registrati aggiungendo il nome del file a @code{DOC_PO_FILES} in @file{po/doc/local.mk}, il manuale generato @file{%D%/guix.xx.texi} a @code{info_TEXINFOS} in @file{doc/local.mk} e @file{%D%/guix.xx.texi} e @file{%D%/contributing.xx.texi} a @code{TRANSLATED_INFO} sempre in @file{doc/local.mk}."

#. type: item
#: guix-git/doc/contributing.texi:3790
#, no-wrap
msgid "New po files for the @code{documentation-cookbook} component must be"
msgstr "I nuovi file po per il componente @code{documentation-cookbook} devono essere"

#. type: itemize
#: guix-git/doc/contributing.texi:3796
msgid "registered by adding the file name to @code{DOC_COOKBOOK_PO_FILES} in @file{po/doc/local.mk}, the generated @file{%D%/guix-cookbook.xx.texi} manual to @code{info_TEXINFOS} in @file{doc/local.mk} and the generated @file{%D%/guix-cookbook.xx.texi} to @code{TRANSLATED_INFO} also in @file{doc/local.mk}."
msgstr "registrati aggiungendo il nome del file a @code{DOC_COOKBOOK_PO_FILES} in @file{po/doc/local.mk}, il manuale generato @file{%D%/guix-cookbook.xx.texi} a @code{info_TEXINFOS} in @file{doc/local.mk} e @file{%D%/guix-cookbook.xx.texi} a @code{TRANSLATED_INFO} sempre in @file{doc/local.mk}."

#. type: item
#: guix-git/doc/contributing.texi:3796
#, no-wrap
msgid "New po files for the @code{website} component must be added to the"
msgstr "I nuovi file po per il componente @code{website} devono essere aggiunti al"

#. type: itemize
#: guix-git/doc/contributing.texi:3801
msgid "@code{guix-artwork} repository, in @file{website/po/}.  @file{website/po/LINGUAS} and @file{website/po/ietf-tags.scm} must be updated accordingly (see @file{website/i18n-howto.txt} for more information on the process)."
msgstr "repository @code{guix-artwork}, in @file{website/po/}. @file{website/po/LINGUAS} e @file{website/po/ietf-tags.scm} devono essere aggiornati di conseguenza (vedi @file{website/i18n-howto.txt} per maggiori informazioni sul processo)."

#. type: cindex
#: guix-git/doc/contributing.texi:3804
#, no-wrap
msgid "infrastructure"
msgstr "infrastrutture"

#. type: Plain text
#: guix-git/doc/contributing.texi:3811
msgid "Since its inception, the Guix project has always valued its autonomy, and that reflects in its infrastructure: our servers run Guix System and exclusively free software, and are administered by volunteers."
msgstr "Fin dalla sua creazione, il progetto Guix ha sempre valorizzato la sua autonomia, e questo si riflette nella sua infrastruttura: i nostri server eseguono Guix System e software esclusivamente libero, e sono amministrati da volontari."

#. type: Plain text
#: guix-git/doc/contributing.texi:3815
msgid "Of course this comes at a cost and this is why we need contributions.  Our hope is to make infrastructure-related activity more legible so that maybe you can picture yourself helping in one of these areas."
msgstr "Naturalmente questo ha un costo ed è per questo che abbiamo bisogno di contributi. La nostra speranza è rendere più leggibili le attività relative all'infrastruttura in modo che forse tu possa immaginarti di aiutare in una di queste aree."

#. type: subsection
#: guix-git/doc/contributing.texi:3824 guix-git/doc/contributing.texi:3826
#: guix-git/doc/contributing.texi:3827
#, fuzzy, no-wrap
#| msgid "Coding Style"
msgid "Coding"
msgstr "Stile del Codice"

#. type: subsection
#: guix-git/doc/contributing.texi:3824 guix-git/doc/contributing.texi:3865
#: guix-git/doc/contributing.texi:3866
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "System Administration"
msgstr "Documentazione"

#. type: subsection
#: guix-git/doc/contributing.texi:3824 guix-git/doc/contributing.texi:3918
#: guix-git/doc/contributing.texi:3919
#, no-wrap
msgid "Day-to-Day System Administration"
msgstr "Amministrazione del Sistema Giornaliera"

#. type: subsection
#: guix-git/doc/contributing.texi:3824 guix-git/doc/contributing.texi:3938
#: guix-git/doc/contributing.texi:3939
#, no-wrap
msgid "On-Site Intervention"
msgstr "Intervento in Sito"

#. type: subsection
#: guix-git/doc/contributing.texi:3824 guix-git/doc/contributing.texi:3953
#: guix-git/doc/contributing.texi:3954
#, fuzzy, no-wrap
#| msgid "name"
msgid "Hosting"
msgstr "nome"

#. type: subsection
#: guix-git/doc/contributing.texi:3824 guix-git/doc/contributing.texi:3977
#: guix-git/doc/contributing.texi:3978
#, no-wrap
msgid "Administrative Tasks"
msgstr "Compiti Amministrativi"

#. type: Plain text
#: guix-git/doc/contributing.texi:3831
msgid "The project runs many Guix-specific services; this is all lovely Scheme code but it tends to receive less attention than Guix itself:"
msgstr "Il progetto esegue molti servizi specifici di Guix; questo è tutto codice Scheme adorabile ma tende a ricevere meno attenzione di Guix stesso:"

#. type: itemize
#: guix-git/doc/contributing.texi:3835
msgid "@url{https://git.cbaines.net/guix/bffe, Build Farm Front End}"
msgstr "@url{https://git.cbaines.net/guix/bffe, Build Farm Front End}"

#. type: itemize
#: guix-git/doc/contributing.texi:3837
msgid "@url{https://codeberg.org/guix/cuirass/, Cuirass}"
msgstr "@url{https://codeberg.org/guix/cuirass/, Cuirass}"

#. type: itemize
#: guix-git/doc/contributing.texi:3840
msgid "@url{https://codeberg.org/guix/maintenance/src/branch/master/hydra/goggles.scm, Goggles} (IRC logger)"
msgstr "@url{https://codeberg.org/guix/maintenance/src/branch/master/hydra/goggles.scm, Goggles} (logger IRC)"

#. type: itemize
#: guix-git/doc/contributing.texi:3842
msgid "@url{https://codeberg.org/guix/build-coordinator, Guix Build Coordinator}"
msgstr "@url{https://codeberg.org/guix/build-coordinator, Guix Build Coordinator}"

#. type: itemize
#: guix-git/doc/contributing.texi:3844
#, fuzzy
#| msgid "git clone https://git.savannah.gnu.org/git/guix.git\n"
msgid "@url{https://codeberg.org/guix/data-service, Guix Data Service}"
msgstr "git clone https://git.savannah.gnu.org/git/guix.git\n"

#. type: itemize
#: guix-git/doc/contributing.texi:3847
msgid "@url{https://codeberg.org/luis-felipe/guix-packages-website, Guix Packages Website}"
msgstr "@url{https://codeberg.org/luis-felipe/guix-packages-website, Sito Web dei Pacchetti Guix}"

#. type: itemize
#: guix-git/doc/contributing.texi:3849
#, fuzzy
#| msgid "git clone https://git.savannah.gnu.org/git/guix.git\n"
msgid "@url{https://codeberg.org/guix/mumi, mumi}"
msgstr "git clone https://git.savannah.gnu.org/git/guix.git\n"

#. type: itemize
#: guix-git/doc/contributing.texi:3851
#, fuzzy
#| msgid "git clone https://git.savannah.gnu.org/git/guix.git\n"
msgid "@url{https://codeberg.org/guix/nar-herder, Nar Herder}"
msgstr "git clone https://git.savannah.gnu.org/git/guix.git\n"

#. type: itemize
#: guix-git/doc/contributing.texi:3853
#, fuzzy
#| msgid "git clone https://git.savannah.gnu.org/git/guix.git\n"
msgid "@url{https://codeberg.org/guix/qa-frontpage, QA Frontpage}"
msgstr "git clone https://git.savannah.gnu.org/git/guix.git\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:3858
msgid "There is no time constraint on this coding activity: any improvement is welcome, whenever it comes.  Most of these code bases are relatively small, which should make it easier to get started."
msgstr "Non ci sono vincoli di tempo per questa attività di codifica: qualsiasi miglioramento è benvenuto, ogni volta che arriva. La maggior parte di queste basi di codice sono relativamente piccole, il che dovrebbe rendere più facile iniziare."

#. type: Plain text
#: guix-git/doc/contributing.texi:3860
msgid "Prerequisites: Familiarity with Guile, HTTP, and databases."
msgstr "Prerequisiti: Familiarità con Guile, HTTP e database."

#. type: Plain text
#: guix-git/doc/contributing.texi:3864
msgid "If you wish to get started, check out the README of the project of your choice and get in touch with guix-devel and the primary developer(s) of the tool as per @code{git shortlog -s | sort -k1 -n}."
msgstr "Se desideri iniziare, controlla il README del progetto di tua scelta e mettiti in contatto con guix-devel e lo/i sviluppatore/i principale/i dello strumento come da @code{git shortlog -s | sort -k1 -n}."

#. type: Plain text
#: guix-git/doc/contributing.texi:3869
msgid "Guix System configuration for all our systems is held in this repository:"
msgstr "La configurazione di Guix System per tutti i nostri sistemi è contenuta in questo repository:"

#. type: Plain text
#: guix-git/doc/contributing.texi:3871
#, fuzzy
#| msgid "git clone https://git.savannah.gnu.org/git/guix.git\n"
msgid "@url{https://codeberg.org/guix/maintenance.git/src/branch/master/hydra/}"
msgstr "git clone https://git.savannah.gnu.org/git/guix.git\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:3876
msgid "The two front-ends are @file{berlin.scm} (the machine behind ci.guix.gnu.org)  and @file{bayfront.scm} (the machine behind bordeaux.guix.gnu.org, guix.gnu.org, hpc.guix.info, qa.guix.gnu.org, and more).  Both connect to a number of build machines and helpers."
msgstr "I due front-end sono @file{berlin.scm} (la macchina dietro ci.guix.gnu.org) e @file{bayfront.scm} (la macchina dietro bordeaux.guix.gnu.org, guix.gnu.org, hpc.guix.info, qa.guix.gnu.org e altro). Entrambi si connettono a una serie di macchine di compilazione e helper."

#. type: Plain text
#: guix-git/doc/contributing.texi:3880
msgid "Without even having SSH access to the machine, you can help by posting patches to improve the configuration (you can test it with @code{guix system vm}).  Here are ways you can help:"
msgstr "Anche senza accesso SSH alla macchina, puoi aiutare inviando patch per migliorare la configurazione (puoi testarla con @code{guix system vm}). Ecco come puoi aiutare:"

#. type: itemize
#: guix-git/doc/contributing.texi:3885
msgid "Improve infra monitoring: set up a dashboard to monitor all the infrastructure, and an out-of-band channel to communicate about downtime."
msgstr "Migliorare il monitoraggio dell'infrastruttura: impostare una dashboard per monitorare tutta l'infrastruttura e un canale fuori banda per comunicare i tempi di inattività."

#. type: itemize
#: guix-git/doc/contributing.texi:3889
msgid "Implement web site redundancy: guix.gnu.org should be backed by several machines on different sites.  Get in touch with us and/or send a patch!"
msgstr "Implementare la ridondanza del sito web: guix.gnu.org dovrebbe essere supportato da diverse macchine su siti diversi. Mettiti in contatto con noi e/o invia una patch!"

#. type: itemize
#: guix-git/doc/contributing.texi:3893
msgid "Implement substitute redundancy: likewise, bordeaux.guix.gnu.org and ci.guix.gnu.org should be backed by several head nodes."
msgstr "Implementare la ridondanza dei sostituti: allo stesso modo, bordeaux.guix.gnu.org e ci.guix.gnu.org dovrebbero essere supportati da diversi nodi head."

#. type: itemize
#: guix-git/doc/contributing.texi:3898
msgid "Improve backup: there's currently ad-hoc backup of selected pieces over rsync between the two head nodes; we can improve on that, for example with a dedicated backup site and proper testing of recoverability."
msgstr "Migliorare il backup: attualmente c'è un backup ad-hoc di parti selezionate tramite rsync tra i due nodi head; possiamo migliorarlo, ad esempio con un sito di backup dedicato e un adeguato test di recuperabilità."

#. type: itemize
#: guix-git/doc/contributing.texi:3902
msgid "Support mirroring: We'd like to make it easy for others to mirror substitutes from ci.guix and bordeaux.guix, perhaps by offering public rsync access."
msgstr "Supportare il mirroring: vorremmo rendere facile per altri fare mirror dei sostituti da ci.guix e bordeaux.guix, magari offrendo accesso rsync pubblico."

#. type: itemize
#: guix-git/doc/contributing.texi:3906
msgid "Optimize our web services: Monitor the performance of our services and tweak nginx config or whatever it takes to improve it."
msgstr "Ottimizzare i nostri servizi web: monitorare le prestazioni dei nostri servizi e modificare la configurazione di nginx o qualsiasi cosa sia necessaria per migliorarla."

#. type: itemize
#: guix-git/doc/contributing.texi:3909
msgid "There is no time constraint on this activity: any improvement is welcome, whenever you can work on it."
msgstr "Non ci sono vincoli di tempo per questa attività: qualsiasi miglioramento è benvenuto, ogni volta che puoi lavorarci."

#. type: itemize
#: guix-git/doc/contributing.texi:3912
msgid "Prerequisite: Familiarity with Guix System administration and ideally with the infrastructure handbook:"
msgstr "Prerequisito: Familiarità con l'amministrazione di Guix System e idealmente con il manuale dell'infrastruttura:"

#. type: Plain text
#: guix-git/doc/contributing.texi:3915 guix-git/doc/contributing.texi:3937
msgid "@url{https://codeberg.org/guix/maintenance.git/src/branch/master/doc/infra-handbook.org, Infra-Handbook}"
msgstr "@url{https://codeberg.org/guix/maintenance.git/src/branch/master/doc/infra-handbook.org, Infra-Handbook}"

#. type: Plain text
#: guix-git/doc/contributing.texi:3925
msgid "We're also looking for people who'd be willing to have SSH access to some of the infrastructure to help with day-to-day maintenance: restarting a build, restarting the occasional service that has gone wild (that can happen), reconfiguring/upgrading a machine, rebooting, etc."
msgstr "Cerchiamo anche persone disposte ad avere accesso SSH ad alcune parti dell'infrastruttura per aiutare con la manutenzione giornaliera: riavviare una compilazione, riavviare il servizio occasionale che è impazzito (può succedere), riconfigurare/aggiornare una macchina, riavviare, ecc."

#. type: Plain text
#: guix-git/doc/contributing.texi:3930
msgid "This day-to-day activity requires you to be available some of the time (during office hours or not, during the week-end or not), whenever is convenient for you, so you can react to issues reported on IRC, on the mailing list, or elsewhere, and synchronize with other sysadmins."
msgstr "Questa attività giornaliera richiede che tu sia disponibile in alcuni momenti (durante l'orario d'ufficio o meno, durante il fine settimana o meno), ogni volta che è conveniente per te, in modo da poter reagire ai problemi segnalati su IRC, sulla mailing list o altrove, e sincronizzarti con altri amministratori di sistema."

#. type: Plain text
#: guix-git/doc/contributing.texi:3934
msgid "Prerequisite: Being a ``known'' member of the community, familiarity with Guix System administration, with some of the services/web sites being run, and with the infrastructure handbook:"
msgstr "Prerequisito: Essere un membro ``noto'' della comunità, familiarità con l'amministrazione di Guix System, con alcuni dei servizi/siti web in esecuzione e con il manuale dell'infrastruttura:"

#. type: Plain text
#: guix-git/doc/contributing.texi:3944
msgid "The first front-end is currently generously hosted by the Max Delbrück Center (MDC), a research institute in Berlin, Germany. Only authorized personnel can physically access it."
msgstr "Il primo front-end è attualmente generosamente ospitato dal Max Delbrück Center (MDC), un istituto di ricerca a Berlino, Germania. Solo il personale autorizzato può accedervi fisicamente."

#. type: Plain text
#: guix-git/doc/contributing.texi:3949
msgid "The second one, bordeaux.guix.gnu.org, is hosted in Bordeaux, France, in a professional data center shared with non-profit ISP Aquilenet.  If you live in the region of Bordeaux and would like to help out when we need to go on-site, please make yourself known by emailing @email{guix-sysadmin@@gnu.org}."
msgstr "Il secondo, bordeaux.guix.gnu.org, è ospitato a Bordeaux, Francia, in un data center professionale condiviso con l'ISP no-profit Aquilenet. Se vivi nella regione di Bordeaux e vorresti aiutare quando dobbiamo intervenire in sito, fatti conoscere inviando un'email a @email{guix-sysadmin@@gnu.org}."

#. type: Plain text
#: guix-git/doc/contributing.texi:3952
msgid "On-site interventions are rare, but they're usually in response to an emergency."
msgstr "Gli interventi in sito sono rari, ma di solito sono in risposta a un'emergenza."

#. type: Plain text
#: guix-git/doc/contributing.texi:3958
msgid "We're looking for people who can host machines and help out whenever physical access is needed.  More specifically:"
msgstr "Cerchiamo persone che possano ospitare macchine e aiutare ogni volta che è necessario l'accesso fisico. Più specificamente:"

#. type: itemize
#: guix-git/doc/contributing.texi:3963
msgid "We need hosting of ``small'' machines such as single-board computers (AArch64, RISC-V) for use as build machines."
msgstr "Abbiamo bisogno di ospitare macchine ``piccole'' come computer single-board (AArch64, RISC-V) per usarle come macchine di compilazione."

#. type: itemize
#: guix-git/doc/contributing.texi:3968
msgid "We need hosting for front-ends and x86_64 build machines in a data center where they can be racked and where, ideally, several local Guix sysadmins can physically access them."
msgstr "Abbiamo bisogno di ospitare front-end e macchine di compilazione x86_64 in un data center dove possono essere rackate e dove, idealmente, diversi amministratori di sistema Guix locali possono accedervi fisicamente."

#. type: Plain text
#: guix-git/doc/contributing.texi:3973
msgid "The machines should be accessible over Wireguard VPN most of the time, so longer power or network interruptions should be the exception."
msgstr "Le macchine dovrebbero essere accessibili tramite VPN Wireguard la maggior parte del tempo, quindi interruzioni più lunghe di alimentazione o rete dovrebbero essere l'eccezione."

#. type: Plain text
#: guix-git/doc/contributing.texi:3976
msgid "Prerequisites: Familiarity with installing and remotely administering Guix System."
msgstr "Prerequisiti: Familiarità con l'installazione e l'amministrazione remota di Guix System."

#. type: Plain text
#: guix-git/doc/contributing.texi:3982
msgid "The infra remains up and running thanks to crucial administrative tasks, which includes:"
msgstr "L'infrastruttura rimane attiva e funzionante grazie a compiti amministrativi cruciali, che includono:"

#. type: itemize
#: guix-git/doc/contributing.texi:3986
msgid "Selecting and purchasing hardware, for example build machines."
msgstr "Selezionare e acquistare hardware, ad esempio macchine di compilazione."

#. type: itemize
#: guix-git/doc/contributing.texi:3988
msgid "Renewing domain names."
msgstr "Rinnovare i nomi di dominio."

#. type: itemize
#: guix-git/doc/contributing.texi:3992
msgid "Securing funding, in particular via the Guix Foundation: @url{https://foundation.guix.info, Guix Foundation}"
msgstr "Assicurare i finanziamenti, in particolare tramite la Guix Foundation: @url{https://foundation.guix.info, Guix Foundation}"

#. type: Plain text
#: guix-git/doc/contributing.texi:3995
msgid "Prerequisites: Familiarity with hardware, and/or DNS registrars, and/or sponsorship, and/or crowdfunding."
msgstr "Prerequisiti: Familiarità con l'hardware e/o registrar DNS e/o sponsorizzazioni e/o crowdfunding."

#. type: Plain text
#: guix-git/doc/guix.texi:7
msgid "@documentencoding UTF-8"
msgstr ""
"@documentencoding UTF-8\n"
"@documentlanguage it\n"
"@frenchspacing on"

#. type: title
#: guix-git/doc/guix.texi:7 guix-git/doc/guix.texi:175
#, no-wrap
msgid "GNU Guix Reference Manual"
msgstr "Manuale di riferimento di GNU Guix"

#. type: include
#: guix-git/doc/guix.texi:10
#, no-wrap
msgid "version.texi"
msgstr "version-it.texi"

#. type: copying
#: guix-git/doc/guix.texi:147
#, fuzzy
#| msgid "Copyright @copyright{} 2012--2025 Ludovic Courtès@* Copyright @copyright{} 2013, 2014, 2016, 2024 Andreas Enge@* Copyright @copyright{} 2013 Nikita Karetnikov@* Copyright @copyright{} 2014, 2015, 2016 Alex Kost@* Copyright @copyright{} 2015, 2016 Mathieu Lirzin@* Copyright @copyright{} 2014 Pierre-Antoine Rault@* Copyright @copyright{} 2015 Taylan Ulrich Bayırlı/Kammer@* Copyright @copyright{} 2015, 2016, 2017, 2019, 2020, 2021, 2023, 2025 Leo Famulari@* Copyright @copyright{} 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023 Ricardo Wurmus@* Copyright @copyright{} 2016 Ben Woodcroft@* Copyright @copyright{} 2016, 2017, 2018, 2021 Chris Marusich@* Copyright @copyright{} 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023 Efraim Flashner@* Copyright @copyright{} 2016 John Darrington@* Copyright @copyright{} 2016, 2017 Nikita Gillmann@* Copyright @copyright{} 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025 Janneke Nieuwenhuizen@* Copyright @copyright{} 2016, 2017, 2018, 2019, 2020, 2021 Julien Lepiller@* Copyright @copyright{} 2016 Alex ter Weele@* Copyright @copyright{} 2016, 2017, 2018, 2019, 2020, 2021 Christopher Baines@* Copyright @copyright{} 2017, 2018, 2019 Clément Lassieur@* Copyright @copyright{} 2017, 2018, 2020, 2021, 2022 Mathieu Othacehe@* Copyright @copyright{} 2017 Federico Beffa@* Copyright @copyright{} 2017, 2018, 2024, 2025 Carlo Zancanaro@* Copyright @copyright{} 2017 Thomas Danckaert@* Copyright @copyright{} 2017 humanitiesNerd@* Copyright @copyright{} 2017, 2021 Christine Lemmer-Webber@* Copyright @copyright{} 2017, 2018, 2019, 2020, 2021, 2022 Marius Bakke@* Copyright @copyright{} 2017, 2019, 2020, 2022 Hartmut Goebel@* Copyright @copyright{} 2017, 2019--2025 Maxim Cournoyer@* Copyright @copyright{} 2017–2022 Tobias Geerinckx-Rice@* Copyright @copyright{} 2017 George Clemmer@* Copyright @copyright{} 2017 Andy Wingo@* Copyright @copyright{} 2017, 2018, 2019, 2020, 2023, 2024, 2025 Arun Isaac@* Copyright @copyright{} 2017 nee@* Copyright @copyright{} 2018 Rutger Helling@* Copyright @copyright{} 2018, 2021, 2023 Oleg Pykhalov@* Copyright @copyright{} 2018 Mike Gerwitz@* Copyright @copyright{} 2018 Pierre-Antoine Rouby@* Copyright @copyright{} 2018, 2019 Gábor Boskovits@* Copyright @copyright{} 2018, 2019, 2020, 2022, 2023, 2024 Florian Pelz@* Copyright @copyright{} 2018 Laura Lazzati@* Copyright @copyright{} 2018 Alex Vong@* Copyright @copyright{} 2019 Josh Holland@* Copyright @copyright{} 2019, 2020 Diego Nicola Barbato@* Copyright @copyright{} 2019 Ivan Petkov@* Copyright @copyright{} 2019 Jakob L. Kreuze@* Copyright @copyright{} 2019 Kyle Andrews@* Copyright @copyright{} 2019 Alex Griffin@* Copyright @copyright{} 2019, 2020, 2021, 2022 Guillaume Le Vaillant@* Copyright @copyright{} 2020 Liliana Marie Prikler@* Copyright @copyright{} 2019, 2020, 2021, 2022, 2023 Simon Tournier@* Copyright @copyright{} 2020 Wiktor Żelazny@* Copyright @copyright{} 2020 Damien Cassou@* Copyright @copyright{} 2020 Jakub Kądziołka@* Copyright @copyright{} 2020 Jack Hill@* Copyright @copyright{} 2020 Naga Malleswari@* Copyright @copyright{} 2020, 2021 Brice Waegeneire@* Copyright @copyright{} 2020 R Veera Kumar@* Copyright @copyright{} 2020, 2021, 2022 Pierre Langlois@* Copyright @copyright{} 2020 pinoaffe@* Copyright @copyright{} 2020, 2023 André Batista@* Copyright @copyright{} 2020, 2021 Alexandru-Sergiu Marton@* Copyright @copyright{} 2020 raingloom@* Copyright @copyright{} 2020 Daniel Brooks@* Copyright @copyright{} 2020 John Soo@* Copyright @copyright{} 2020 Jonathan Brielmaier@* Copyright @copyright{} 2020 Edgar Vincent@* Copyright @copyright{} 2021, 2022 Maxime Devos@* Copyright @copyright{} 2021 B. Wilson@* Copyright @copyright{} 2021 Xinglu Chen@* Copyright @copyright{} 2021 Raghav Gururajan@* Copyright @copyright{} 2021 Domagoj Stolfa@* Copyright @copyright{} 2021 Hui Lu@* Copyright @copyright{} 2021 pukkamustard@* Copyright @copyright{} 2021 Alice Brenon@* Copyright @copyright{} 2021-2023 Josselin Poiret@* Copyright @copyright{} 2021, 2023 muradm@* Copyright @copyright{} 2021, 2022 Andrew Tropin@* Copyright @copyright{} 2021 Sarah Morgensen@* Copyright @copyright{} 2022 Remco van 't Veer@* Copyright @copyright{} 2022 Aleksandr Vityazev@* Copyright @copyright{} 2022 Philip M@sup{c}Grath@* Copyright @copyright{} 2022 Karl Hallsby@* Copyright @copyright{} 2022 Justin Veilleux@* Copyright @copyright{} 2022 Reily Siegel@* Copyright @copyright{} 2022 Simon Streit@* Copyright @copyright{} 2022 (@* Copyright @copyright{} 2022 John Kehayias@* Copyright @copyright{} 2022⁠–⁠2023 Bruno Victal@* Copyright @copyright{} 2022 Ivan Vilata-i-Balaguer@* Copyright @copyright{} 2023-2025 Giacomo Leidi@* Copyright @copyright{} 2022 Antero Mejr@* Copyright @copyright{} 2023 Karl Hallsby@* Copyright @copyright{} 2023 Nathaniel Nicandro@* Copyright @copyright{} 2023 Tanguy Le Carrour@* Copyright @copyright{} 2023-2024 Zheng Junjie@* Copyright @copyright{} 2023 Brian Cully@* Copyright @copyright{} 2023 Felix Lechner@* Copyright @copyright{} 2023 Foundation Devices, Inc.@* Copyright @copyright{} 2023 Thomas Ieong@* Copyright @copyright{} 2023 Saku Laesvuori@* Copyright @copyright{} 2023 Graham James Addis@* Copyright @copyright{} 2023-2025 Tomas Volf@* Copyright @copyright{} 2024, 2025 Herman Rimm@* Copyright @copyright{} 2024 Matthew Trzcinski@* Copyright @copyright{} 2024 Richard Sent@* Copyright @copyright{} 2024 Dariqq@* Copyright @copyright{} 2024 Denis 'GNUtoo' Carikli@* Copyright @copyright{} 2024 Fabio Natali@* Copyright @copyright{} 2024 Arnaud Daby-Seesaram@* Copyright @copyright{} 2024-2025 Nigko Yerden@* Copyright @copyright{} 2024 Troy Figiel@* Copyright @copyright{} 2024 Sharlatan Hellseher@* Copyright @copyright{} 2024 45mg@* Copyright @copyright{} 2025 Sören Tempel@* Copyright @copyright{} 2025 Rostislav Svoboda@* Copyright @copyright{} 2025 Zacchaeus@* Copyright @copyright{} 2025 Sergio Pastor Pérez@* Copyright @copyright{} 2024 Evgeny Pisemsky@*"
msgid "Copyright @copyright{} 2012--2025 Ludovic Courtès@* Copyright @copyright{} 2013, 2014, 2016, 2024 Andreas Enge@* Copyright @copyright{} 2013 Nikita Karetnikov@* Copyright @copyright{} 2014, 2015, 2016 Alex Kost@* Copyright @copyright{} 2015, 2016 Mathieu Lirzin@* Copyright @copyright{} 2014 Pierre-Antoine Rault@* Copyright @copyright{} 2015 Taylan Ulrich Bayırlı/Kammer@* Copyright @copyright{} 2015, 2016, 2017, 2019, 2020, 2021, 2023, 2025 Leo Famulari@* Copyright @copyright{} 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023 Ricardo Wurmus@* Copyright @copyright{} 2016 Ben Woodcroft@* Copyright @copyright{} 2016, 2017, 2018, 2021 Chris Marusich@* Copyright @copyright{} 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2025 Efraim Flashner@* Copyright @copyright{} 2016 John Darrington@* Copyright @copyright{} 2016, 2017 Nikita Gillmann@* Copyright @copyright{} 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025 Janneke Nieuwenhuizen@* Copyright @copyright{} 2016, 2017, 2018, 2019, 2020, 2021 Julien Lepiller@* Copyright @copyright{} 2016 Alex ter Weele@* Copyright @copyright{} 2016, 2017, 2018, 2019, 2020, 2021 Christopher Baines@* Copyright @copyright{} 2017, 2018, 2019 Clément Lassieur@* Copyright @copyright{} 2017, 2018, 2020, 2021, 2022 Mathieu Othacehe@* Copyright @copyright{} 2017 Federico Beffa@* Copyright @copyright{} 2017, 2018, 2024, 2025 Carlo Zancanaro@* Copyright @copyright{} 2017 Thomas Danckaert@* Copyright @copyright{} 2017 humanitiesNerd@* Copyright @copyright{} 2017, 2021 Christine Lemmer-Webber@* Copyright @copyright{} 2017, 2018, 2019, 2020, 2021, 2022 Marius Bakke@* Copyright @copyright{} 2017, 2019, 2020, 2022 Hartmut Goebel@* Copyright @copyright{} 2017, 2019--2025 Maxim Cournoyer@* Copyright @copyright{} 2017–2022 Tobias Geerinckx-Rice@* Copyright @copyright{} 2017 George Clemmer@* Copyright @copyright{} 2017 Andy Wingo@* Copyright @copyright{} 2017, 2018, 2019, 2020, 2023, 2024, 2025 Arun Isaac@* Copyright @copyright{} 2017 nee@* Copyright @copyright{} 2018 Rutger Helling@* Copyright @copyright{} 2018, 2021, 2023 Oleg Pykhalov@* Copyright @copyright{} 2018 Mike Gerwitz@* Copyright @copyright{} 2018 Pierre-Antoine Rouby@* Copyright @copyright{} 2018, 2019 Gábor Boskovits@* Copyright @copyright{} 2018, 2019, 2020, 2022, 2023, 2024 Florian Pelz@* Copyright @copyright{} 2018 Laura Lazzati@* Copyright @copyright{} 2018 Alex Vong@* Copyright @copyright{} 2019 Josh Holland@* Copyright @copyright{} 2019, 2020 Diego Nicola Barbato@* Copyright @copyright{} 2019 Ivan Petkov@* Copyright @copyright{} 2019 Jakob L. Kreuze@* Copyright @copyright{} 2019 Kyle Andrews@* Copyright @copyright{} 2019 Alex Griffin@* Copyright @copyright{} 2019, 2020, 2021, 2022 Guillaume Le Vaillant@* Copyright @copyright{} 2020 Liliana Marie Prikler@* Copyright @copyright{} 2019, 2020, 2021, 2022, 2023 Simon Tournier@* Copyright @copyright{} 2020 Wiktor Żelazny@* Copyright @copyright{} 2020 Damien Cassou@* Copyright @copyright{} 2020 Jakub Kądziołka@* Copyright @copyright{} 2020 Jack Hill@* Copyright @copyright{} 2020 Naga Malleswari@* Copyright @copyright{} 2020, 2021 Brice Waegeneire@* Copyright @copyright{} 2020 R Veera Kumar@* Copyright @copyright{} 2020, 2021, 2022 Pierre Langlois@* Copyright @copyright{} 2020 pinoaffe@* Copyright @copyright{} 2020, 2023 André Batista@* Copyright @copyright{} 2020, 2021 Alexandru-Sergiu Marton@* Copyright @copyright{} 2020 raingloom@* Copyright @copyright{} 2020 Daniel Brooks@* Copyright @copyright{} 2020 John Soo@* Copyright @copyright{} 2020 Jonathan Brielmaier@* Copyright @copyright{} 2020 Edgar Vincent@* Copyright @copyright{} 2021, 2022 Maxime Devos@* Copyright @copyright{} 2021 B. Wilson@* Copyright @copyright{} 2021 Xinglu Chen@* Copyright @copyright{} 2021 Raghav Gururajan@* Copyright @copyright{} 2021 Domagoj Stolfa@* Copyright @copyright{} 2021 Hui Lu@* Copyright @copyright{} 2021 pukkamustard@* Copyright @copyright{} 2021 Alice Brenon@* Copyright @copyright{} 2021-2023 Josselin Poiret@* Copyright @copyright{} 2021, 2023 muradm@* Copyright @copyright{} 2021, 2022 Andrew Tropin@* Copyright @copyright{} 2021 Sarah Morgensen@* Copyright @copyright{} 2022 Remco van 't Veer@* Copyright @copyright{} 2022 Aleksandr Vityazev@* Copyright @copyright{} 2022 Philip M@sup{c}Grath@* Copyright @copyright{} 2022 Karl Hallsby@* Copyright @copyright{} 2022 Justin Veilleux@* Copyright @copyright{} 2022 Reily Siegel@* Copyright @copyright{} 2022 Simon Streit@* Copyright @copyright{} 2022 (@* Copyright @copyright{} 2022 John Kehayias@* Copyright @copyright{} 2022⁠–⁠2023 Bruno Victal@* Copyright @copyright{} 2022 Ivan Vilata-i-Balaguer@* Copyright @copyright{} 2023-2025 Giacomo Leidi@* Copyright @copyright{} 2022 Antero Mejr@* Copyright @copyright{} 2023 Karl Hallsby@* Copyright @copyright{} 2023 Nathaniel Nicandro@* Copyright @copyright{} 2023 Tanguy Le Carrour@* Copyright @copyright{} 2023-2024 Zheng Junjie@* Copyright @copyright{} 2023 Brian Cully@* Copyright @copyright{} 2023 Felix Lechner@* Copyright @copyright{} 2023 Foundation Devices, Inc.@* Copyright @copyright{} 2023 Thomas Ieong@* Copyright @copyright{} 2023 Saku Laesvuori@* Copyright @copyright{} 2023 Graham James Addis@* Copyright @copyright{} 2023-2025 Tomas Volf@* Copyright @copyright{} 2024, 2025 Herman Rimm@* Copyright @copyright{} 2024 Matthew Trzcinski@* Copyright @copyright{} 2024 Richard Sent@* Copyright @copyright{} 2024 Dariqq@* Copyright @copyright{} 2024 Denis 'GNUtoo' Carikli@* Copyright @copyright{} 2024 Fabio Natali@* Copyright @copyright{} 2024 Arnaud Daby-Seesaram@* Copyright @copyright{} 2024-2025 Nigko Yerden@* Copyright @copyright{} 2024 Troy Figiel@* Copyright @copyright{} 2024 Sharlatan Hellseher@* Copyright @copyright{} 2024 45mg@* Copyright @copyright{} 2024 Greg Hogan@* Copyright @copyright{} 2025 Sören Tempel@* Copyright @copyright{} 2025 Rostislav Svoboda@* Copyright @copyright{} 2025 Zacchaeus@* Copyright @copyright{} 2025 Sergio Pastor Pérez@* Copyright @copyright{} 2024 Evgeny Pisemsky@* Copyright @copyright{} 2025 jgart@* Copyright @copyright{} 2025 Artur Wroblewski@* Copyright @copyright{} 2025 Edouard Klein@*"
msgstr "Copyright @copyright{} 2012--2025 Ludovic Courtès@* Copyright @copyright{} 2013, 2014, 2016, 2024 Andreas Enge@* Copyright @copyright{} 2013 Nikita Karetnikov@* Copyright @copyright{} 2014, 2015, 2016 Alex Kost@* Copyright @copyright{} 2015, 2016 Mathieu Lirzin@* Copyright @copyright{} 2014 Pierre-Antoine Rault@* Copyright @copyright{} 2015 Taylan Ulrich Bayırlı/Kammer@* Copyright @copyright{} 2015, 2016, 2017, 2019, 2020, 2021, 2023, 2025 Leo Famulari@* Copyright @copyright{} 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023 Ricardo Wurmus@* Copyright @copyright{} 2016 Ben Woodcroft@* Copyright @copyright{} 2016, 2017, 2018, 2021 Chris Marusich@* Copyright @copyright{} 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023 Efraim Flashner@* Copyright @copyright{} 2016 John Darrington@* Copyright @copyright{} 2016, 2017 Nikita Gillmann@* Copyright @copyright{} 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025 Janneke Nieuwenhuizen@* Copyright @copyright{} 2016, 2017, 2018, 2019, 2020, 2021 Julien Lepiller@* Copyright @copyright{} 2016 Alex ter Weele@* Copyright @copyright{} 2016, 2017, 2018, 2019, 2020, 2021 Christopher Baines@* Copyright @copyright{} 2017, 2018, 2019 Clément Lassieur@* Copyright @copyright{} 2017, 2018, 2020, 2021, 2022 Mathieu Othacehe@* Copyright @copyright{} 2017 Federico Beffa@* Copyright @copyright{} 2017, 2018, 2024, 2025 Carlo Zancanaro@* Copyright @copyright{} 2017 Thomas Danckaert@* Copyright @copyright{} 2017 humanitiesNerd@* Copyright @copyright{} 2017, 2021 Christine Lemmer-Webber@* Copyright @copyright{} 2017, 2018, 2019, 2020, 2021, 2022 Marius Bakke@* Copyright @copyright{} 2017, 2019, 2020, 2022 Hartmut Goebel@* Copyright @copyright{} 2017, 2019--2025 Maxim Cournoyer@* Copyright @copyright{} 2017–2022 Tobias Geerinckx-Rice@* Copyright @copyright{} 2017 George Clemmer@* Copyright @copyright{} 2017 Andy Wingo@* Copyright @copyright{} 2017, 2018, 2019, 2020, 2023, 2024, 2025 Arun Isaac@* Copyright @copyright{} 2017 nee@* Copyright @copyright{} 2018 Rutger Helling@* Copyright @copyright{} 2018, 2021, 2023 Oleg Pykhalov@* Copyright @copyright{} 2018 Mike Gerwitz@* Copyright @copyright{} 2018 Pierre-Antoine Rouby@* Copyright @copyright{} 2018, 2019 Gábor Boskovits@* Copyright @copyright{} 2018, 2019, 2020, 2022, 2023, 2024 Florian Pelz@* Copyright @copyright{} 2018 Laura Lazzati@* Copyright @copyright{} 2018 Alex Vong@* Copyright @copyright{} 2019 Josh Holland@* Copyright @copyright{} 2019, 2020 Diego Nicola Barbato@* Copyright @copyright{} 2019 Ivan Petkov@* Copyright @copyright{} 2019 Jakob L. Kreuze@* Copyright @copyright{} 2019 Kyle Andrews@* Copyright @copyright{} 2019 Alex Griffin@* Copyright @copyright{} 2019, 2020, 2021, 2022 Guillaume Le Vaillant@* Copyright @copyright{} 2020 Liliana Marie Prikler@* Copyright @copyright{} 2019, 2020, 2021, 2022, 2023 Simon Tournier@* Copyright @copyright{} 2020 Wiktor Żelazny@* Copyright @copyright{} 2020 Damien Cassou@* Copyright @copyright{} 2020 Jakub Kądziołka@* Copyright @copyright{} 2020 Jack Hill@* Copyright @copyright{} 2020 Naga Malleswari@* Copyright @copyright{} 2020, 2021 Brice Waegeneire@* Copyright @copyright{} 2020 R Veera Kumar@* Copyright @copyright{} 2020, 2021, 2022 Pierre Langlois@* Copyright @copyright{} 2020 pinoaffe@* Copyright @copyright{} 2020, 2023 André Batista@* Copyright @copyright{} 2020, 2021 Alexandru-Sergiu Marton@* Copyright @copyright{} 2020 raingloom@* Copyright @copyright{} 2020 Daniel Brooks@* Copyright @copyright{} 2020 John Soo@* Copyright @copyright{} 2020 Jonathan Brielmaier@* Copyright @copyright{} 2020 Edgar Vincent@* Copyright @copyright{} 2021, 2022 Maxime Devos@* Copyright @copyright{} 2021 B. Wilson@* Copyright @copyright{} 2021 Xinglu Chen@* Copyright @copyright{} 2021 Raghav Gururajan@* Copyright @copyright{} 2021 Domagoj Stolfa@* Copyright @copyright{} 2021 Hui Lu@* Copyright @copyright{} 2021 pukkamustard@* Copyright @copyright{} 2021 Alice Brenon@* Copyright @copyright{} 2021-2023 Josselin Poiret@* Copyright @copyright{} 2021, 2023 muradm@* Copyright @copyright{} 2021, 2022 Andrew Tropin@* Copyright @copyright{} 2021 Sarah Morgensen@* Copyright @copyright{} 2022 Remco van 't Veer@* Copyright @copyright{} 2022 Aleksandr Vityazev@* Copyright @copyright{} 2022 Philip M@sup{c}Grath@* Copyright @copyright{} 2022 Karl Hallsby@* Copyright @copyright{} 2022 Justin Veilleux@* Copyright @copyright{} 2022 Reily Siegel@* Copyright @copyright{} 2022 Simon Streit@* Copyright @copyright{} 2022 (@* Copyright @copyright{} 2022 John Kehayias@* Copyright @copyright{} 2022⁠–⁠2023 Bruno Victal@* Copyright @copyright{} 2022 Ivan Vilata-i-Balaguer@* Copyright @copyright{} 2023-2025 Giacomo Leidi@* Copyright @copyright{} 2022 Antero Mejr@* Copyright @copyright{} 2023 Karl Hallsby@* Copyright @copyright{} 2023 Nathaniel Nicandro@* Copyright @copyright{} 2023 Tanguy Le Carrour@* Copyright @copyright{} 2023-2024 Zheng Junjie@* Copyright @copyright{} 2023 Brian Cully@* Copyright @copyright{} 2023 Felix Lechner@* Copyright @copyright{} 2023 Foundation Devices, Inc.@* Copyright @copyright{} 2023 Thomas Ieong@* Copyright @copyright{} 2023 Saku Laesvuori@* Copyright @copyright{} 2023 Graham James Addis@* Copyright @copyright{} 2023-2025 Tomas Volf@* Copyright @copyright{} 2024, 2025 Herman Rimm@* Copyright @copyright{} 2024 Matthew Trzcinski@* Copyright @copyright{} 2024 Richard Sent@* Copyright @copyright{} 2024 Dariqq@* Copyright @copyright{} 2024 Denis 'GNUtoo' Carikli@* Copyright @copyright{} 2024 Fabio Natali@* Copyright @copyright{} 2024 Arnaud Daby-Seesaram@* Copyright @copyright{} 2024-2025 Nigko Yerden@* Copyright @copyright{} 2024 Troy Figiel@* Copyright @copyright{} 2024 Sharlatan Hellseher@* Copyright @copyright{} 2024 45mg@* Copyright @copyright{} 2025 Sören Tempel@* Copyright @copyright{} 2025 Rostislav Svoboda@* Copyright @copyright{} 2025 Zacchaeus@* Copyright @copyright{} 2025 Sergio Pastor Pérez@* Copyright @copyright{} 2024 Evgeny Pisemsky@*"

#. type: copying
#: guix-git/doc/guix.texi:154
msgid "Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.3 or any later version published by the Free Software Foundation; with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the license is included in the section entitled ``GNU Free Documentation License''."
msgstr "È concesso il permesso di copiare, distribuire e/o modificare questo documento secondo i termini della GNU Free Documentation License, Versione 1.3 o qualsiasi versione successiva pubblicata dalla Free Software Foundation; senza Sezioni Invarianti, senza Testi di Copertina e senza Testi di Retro copertina. Una copia della licenza è inclusa nella sezione intitolata \"Licenza di Documentazione Libera GNU\"."

#. type: dircategory
#: guix-git/doc/guix.texi:156
#, no-wrap
msgid "System administration"
msgstr "Amministrazione di sistema"

#. type: menuentry
#: guix-git/doc/guix.texi:164
msgid "Guix: (guix)"
msgstr "Guix.it: (guix.it)"

#. type: menuentry
#: guix-git/doc/guix.texi:164
msgid "Manage installed software and system configuration."
msgstr "Gestisci il software installato e la configurazione del sistema."

#. type: menuentry
#: guix-git/doc/guix.texi:164
msgid "guix package: (guix)Invoking guix package"
msgstr "guix package: (guix.it)Invocare guix package"

#. type: menuentry
#: guix-git/doc/guix.texi:164
msgid "Installing, removing, and upgrading packages."
msgstr "Installazione, rimozione e aggiornamento dei pacchetti."

#. type: menuentry
#: guix-git/doc/guix.texi:164
msgid "guix gc: (guix)Invoking guix gc"
msgstr "guix gc: (guix.it)Invocare guix gc"

#. type: menuentry
#: guix-git/doc/guix.texi:164
msgid "Reclaiming unused disk space."
msgstr "Recupero dello spazio su disco non utilizzato."

#. type: menuentry
#: guix-git/doc/guix.texi:164
msgid "guix pull: (guix)Invoking guix pull"
msgstr "guix pull: (guix.it)Invocare guix pull"

#. type: menuentry
#: guix-git/doc/guix.texi:164
msgid "Update the list of available packages."
msgstr "Aggiorna l'elenco dei pacchetti disponibili."

#. type: menuentry
#: guix-git/doc/guix.texi:164
msgid "guix system: (guix)Invoking guix system"
msgstr "guix system: (guix.it)Invocare guix system"

#. type: menuentry
#: guix-git/doc/guix.texi:164
msgid "Manage the operating system configuration."
msgstr "Gestisci la configurazione del sistema operativo."

#. type: menuentry
#: guix-git/doc/guix.texi:164
msgid "guix deploy: (guix)Invoking guix deploy"
msgstr "guix deploy: (guix.it)Invocare guix deploy"

#. type: menuentry
#: guix-git/doc/guix.texi:164
msgid "Manage operating system configurations for remote hosts."
msgstr "Gestisci le configurazioni del sistema operativo per host remoti."

#. type: dircategory
#: guix-git/doc/guix.texi:166
#, no-wrap
msgid "Software development"
msgstr "Sviluppo software"

#. type: menuentry
#: guix-git/doc/guix.texi:172
msgid "guix shell: (guix)Invoking guix shell"
msgstr "guix shell: (guix.it)Invocare guix shell"

#. type: menuentry
#: guix-git/doc/guix.texi:172
msgid "Creating software environments."
msgstr "Creazione di ambienti software."

#. type: menuentry
#: guix-git/doc/guix.texi:172
msgid "guix environment: (guix)Invoking guix environment"
msgstr "guix environment: (guix.it)Invocare guix environment"

#. type: menuentry
#: guix-git/doc/guix.texi:172
msgid "Building development environments with Guix."
msgstr "Costruire ambienti di sviluppo con Guix."

#. type: menuentry
#: guix-git/doc/guix.texi:172
msgid "guix build: (guix)Invoking guix build"
msgstr "guix build: (guix.it)Invocare guix build"

#. type: menuentry
#: guix-git/doc/guix.texi:172
msgid "Building packages."
msgstr "Compilazione di pacchetti."

#. type: menuentry
#: guix-git/doc/guix.texi:172
msgid "guix pack: (guix)Invoking guix pack"
msgstr "guix pack: (guix.it)Invocare guix pack"

#. type: menuentry
#: guix-git/doc/guix.texi:172
msgid "Creating binary bundles."
msgstr "Creazione di bundle binari."

#. type: subtitle
#: guix-git/doc/guix.texi:176
#, no-wrap
msgid "Using the GNU Guix Functional Package Manager"
msgstr "Utilizzo del Gestore di Pacchetti Funzionale GNU Guix"

#. type: author
#: guix-git/doc/guix.texi:177
#, no-wrap
msgid "The GNU Guix Developers"
msgstr "Gli Sviluppatori di GNU Guix"

#. type: titlepage
#: guix-git/doc/guix.texi:183
msgid "Edition @value{EDITION} @* @value{UPDATED} @*"
msgstr "Edizione @value{EDITION} @* @value{UPDATED} @*"

#. type: node
#: guix-git/doc/guix.texi:190
#, no-wrap
msgid "Top"
msgstr "Top"

#. type: top
#: guix-git/doc/guix.texi:191
#, no-wrap
msgid "GNU Guix"
msgstr "GNU Guix"

#. type: Plain text
#: guix-git/doc/guix.texi:195
msgid "This document describes GNU Guix version @value{VERSION}, a functional package management tool written for the GNU system."
msgstr "Questo documento descrive GNU Guix versione @value{VERSION}, uno strumento funzionale di gestione dei pacchetti scritto per il sistema GNU."

#.  You can replace the following paragraph with information on
#. type: Plain text
#: guix-git/doc/guix.texi:209
msgid "This manual is also available in Simplified Chinese (@pxref{Top,,, guix.zh_CN, GNU Guix参考手册}), French (@pxref{Top,,, guix.fr, Manuel de référence de GNU Guix}), German (@pxref{Top,,, guix.de, Referenzhandbuch zu GNU Guix}), Spanish (@pxref{Top,,, guix.es, Manual de referencia de GNU Guix}), Italian (@pxref{Top,,, guix.it, Manuale di riferimento di GNU Guix}), Brazilian Portuguese (@pxref{Top,,, guix.pt_BR, Manual de referência do GNU Guix}), and Russian (@pxref{Top,,, guix.ru, Руководство GNU Guix}).  If you would like to translate it in your native language, consider joining @uref{https://translate.codeberg.org/projects/guix/documentation-manual, Weblate} (@pxref{Translating Guix})."
msgstr "Questo manuale è disponibile anche in inglese (@pxref{Top,,, guix, GNU Guix Reference Manual}), cinese semplificato (@pxref{Top,,, guix.zh_CN, GNU Guix参考手册}), francese (@pxref{Top,,, guix.fr, Manuel de référence de GNU Guix}), tedesco (@pxref{Top,,, guix.de, Referenzhandbuch zu GNU Guix}), spagnolo (@pxref{Top,,, guix.es, Manual de referencia de GNU Guix}), portoghese brasiliano (@pxref{Top,,, guix.pt_BR, Manual de referência do GNU Guix}) e russo (@pxref{Top,,, guix.ru, Руководство GNU Guix}). Se desideri tradurlo nella tua lingua madre, considera di unirti a @uref{https://translate.codeberg.org/projects/guix/documentation-manual, Weblate} (@pxref{Translating Guix})."

#. type: chapter
#: guix-git/doc/guix.texi:233 guix-git/doc/guix.texi:243
#: guix-git/doc/guix.texi:515 guix-git/doc/guix.texi:516
#, no-wrap
msgid "Introduction"
msgstr "Introduzione"

#. type: menuentry
#: guix-git/doc/guix.texi:233
msgid "What is Guix about?"
msgstr "Di cosa tratta Guix?"

#. type: chapter
#: guix-git/doc/guix.texi:233 guix-git/doc/guix.texi:248
#: guix-git/doc/guix.texi:719 guix-git/doc/guix.texi:720
#, no-wrap
msgid "Installation"
msgstr "Installazione"

#. type: menuentry
#: guix-git/doc/guix.texi:233
msgid "Installing Guix."
msgstr "Installazione di Guix."

#. type: chapter
#: guix-git/doc/guix.texi:233 guix-git/doc/guix.texi:262
#: guix-git/doc/guix.texi:2197 guix-git/doc/guix.texi:2198
#, no-wrap
msgid "System Installation"
msgstr "Installazione del Sistema"

#. type: menuentry
#: guix-git/doc/guix.texi:233
msgid "Installing the whole operating system."
msgstr "Installazione dell'intero sistema operativo."

#. type: section
#: guix-git/doc/guix.texi:233 guix-git/doc/guix.texi:2909
#: guix-git/doc/guix.texi:2910 guix-git/doc/guix.texi:17548
#, no-wrap
msgid "Getting Started"
msgstr "Per iniziare"

#. type: menuentry
#: guix-git/doc/guix.texi:233 guix-git/doc/guix.texi:399
#: guix-git/doc/guix.texi:17545
msgid "Your first steps."
msgstr "I tuoi primi passi."

#. type: chapter
#: guix-git/doc/guix.texi:233 guix-git/doc/guix.texi:279
#: guix-git/doc/guix.texi:3108 guix-git/doc/guix.texi:3109
#, no-wrap
msgid "Package Management"
msgstr "Gestione dei pacchetti"

#. type: menuentry
#: guix-git/doc/guix.texi:233
msgid "Package installation, upgrade, etc."
msgstr "Installazione, aggiornamento, ecc. dei pacchetti."

#. type: chapter
#: guix-git/doc/guix.texi:233 guix-git/doc/guix.texi:303
#: guix-git/doc/guix.texi:5431 guix-git/doc/guix.texi:5432
#, no-wrap
msgid "Channels"
msgstr "Canali"

#. type: menuentry
#: guix-git/doc/guix.texi:233
msgid "Customizing the package collection."
msgstr "Personalizzazione della collezione di pacchetti."

#. type: chapter
#: guix-git/doc/guix.texi:233 guix-git/doc/guix.texi:318
#: guix-git/doc/guix.texi:6131 guix-git/doc/guix.texi:6132
#, no-wrap
msgid "Development"
msgstr "Sviluppo"

#. type: menuentry
#: guix-git/doc/guix.texi:233
msgid "Guix-aided software development."
msgstr "Sviluppo software assistito da Guix."

#. type: chapter
#: guix-git/doc/guix.texi:233 guix-git/doc/guix.texi:326
#: guix-git/doc/guix.texi:7760 guix-git/doc/guix.texi:7761
#, no-wrap
msgid "Programming Interface"
msgstr "Interfaccia di Programmazione"

#. type: menuentry
#: guix-git/doc/guix.texi:233
msgid "Using Guix in Scheme."
msgstr "Utilizzo di Guix in Scheme."

#. type: chapter
#: guix-git/doc/guix.texi:233 guix-git/doc/guix.texi:348
#: guix-git/doc/guix.texi:13240 guix-git/doc/guix.texi:13241
#, no-wrap
msgid "Utilities"
msgstr "Utilità"

#. type: menuentry
#: guix-git/doc/guix.texi:233
msgid "Package management commands."
msgstr "Comandi di gestione dei pacchetti."

#. type: chapter
#: guix-git/doc/guix.texi:233 guix-git/doc/guix.texi:374
#: guix-git/doc/guix.texi:17333 guix-git/doc/guix.texi:17334
#, no-wrap
msgid "Foreign Architectures"
msgstr "Architetture Estere"

#. type: menuentry
#: guix-git/doc/guix.texi:233
msgid "Build for foreign architectures."
msgstr "Compilazione per architetture estere."

#. type: chapter
#: guix-git/doc/guix.texi:233 guix-git/doc/guix.texi:379
#: guix-git/doc/guix.texi:17500 guix-git/doc/guix.texi:17501
#, no-wrap
msgid "System Configuration"
msgstr "Configurazione di sistema"

#. type: menuentry
#: guix-git/doc/guix.texi:233
msgid "Configuring the operating system."
msgstr "Configurazione del sistema operativo."

#. type: chapter
#: guix-git/doc/guix.texi:233 guix-git/doc/guix.texi:454
#: guix-git/doc/guix.texi:49569 guix-git/doc/guix.texi:49570
#, no-wrap
msgid "System Troubleshooting Tips"
msgstr "Suggerimenti per la Risoluzione dei Problemi del Sistema"

#. type: menuentry
#: guix-git/doc/guix.texi:233
msgid "When things don't go as planned."
msgstr "Quando le cose non vanno come previsto."

#. type: chapter
#: guix-git/doc/guix.texi:233 guix-git/doc/guix.texi:458
#: guix-git/doc/guix.texi:49684 guix-git/doc/guix.texi:49685
#, no-wrap
msgid "Home Configuration"
msgstr "Configurazione della Home"

#. type: menuentry
#: guix-git/doc/guix.texi:233
msgid "Configuring the home environment."
msgstr "Configurazione dell'ambiente home."

#. type: chapter
#: guix-git/doc/guix.texi:233 guix-git/doc/guix.texi:53465
#: guix-git/doc/guix.texi:53466
#, no-wrap
msgid "Documentation"
msgstr "Documentazione"

#. type: menuentry
#: guix-git/doc/guix.texi:233
msgid "Browsing software user manuals."
msgstr "Navigazione nei manuali utente del software."

#. type: chapter
#: guix-git/doc/guix.texi:233 guix-git/doc/guix.texi:486
#: guix-git/doc/guix.texi:53531 guix-git/doc/guix.texi:53532
#, no-wrap
msgid "Platforms"
msgstr "Piattaforme"

#. type: menuentry
#: guix-git/doc/guix.texi:233
msgid "Defining platforms."
msgstr "Definizione delle piattaforme."

#. type: node
#: guix-git/doc/guix.texi:233 guix-git/doc/guix.texi:53669
#, no-wrap
msgid "System Images"
msgstr "Immagini di Sistema"

#. type: menuentry
#: guix-git/doc/guix.texi:233
msgid "Creating system images."
msgstr "Creazione di immagini di sistema."

#. type: chapter
#: guix-git/doc/guix.texi:233 guix-git/doc/guix.texi:502
#: guix-git/doc/guix.texi:54210 guix-git/doc/guix.texi:54211
#, no-wrap
msgid "Installing Debugging Files"
msgstr "Installazione dei File di Debug"

#. type: menuentry
#: guix-git/doc/guix.texi:233
msgid "Feeding the debugger."
msgstr "Alimentazione del debugger."

#. type: node
#: guix-git/doc/guix.texi:233 guix-git/doc/guix.texi:54365
#, no-wrap
msgid "Using TeX and LaTeX"
msgstr "Utilizzo di TeX e LaTeX"

#. type: menuentry
#: guix-git/doc/guix.texi:233
msgid "Typesetting."
msgstr "Composizione tipografica."

#. type: chapter
#: guix-git/doc/guix.texi:233 guix-git/doc/guix.texi:54484
#: guix-git/doc/guix.texi:54485
#, no-wrap
msgid "Security Updates"
msgstr "Aggiornamenti di sicurezza"

#. type: menuentry
#: guix-git/doc/guix.texi:233
msgid "Deploying security fixes quickly."
msgstr "Distribuzione rapida delle correzioni di sicurezza."

#. type: chapter
#: guix-git/doc/guix.texi:233 guix-git/doc/guix.texi:507
#: guix-git/doc/guix.texi:54599 guix-git/doc/guix.texi:54600
#, no-wrap
msgid "Bootstrapping"
msgstr "Bootstrapping"

#. type: menuentry
#: guix-git/doc/guix.texi:233
msgid "GNU/Linux built from scratch."
msgstr "GNU/Linux costruito da zero."

#. type: node
#: guix-git/doc/guix.texi:233 guix-git/doc/guix.texi:54903
#, no-wrap
msgid "Porting"
msgstr "Porting"

#. type: menuentry
#: guix-git/doc/guix.texi:233
msgid "Targeting another platform or kernel."
msgstr "Mirare a un'altra piattaforma o kernel."

#. type: menuentry
#: guix-git/doc/guix.texi:233
msgid "Your help needed!"
msgstr "Il tuo aiuto è necessario!"

#. type: chapter
#: guix-git/doc/guix.texi:238 guix-git/doc/guix.texi:54953
#: guix-git/doc/guix.texi:54954
#, no-wrap
msgid "Acknowledgments"
msgstr "Ringraziamenti"

#. type: menuentry
#: guix-git/doc/guix.texi:238
msgid "Thanks!"
msgstr "Grazie!"

#. type: appendix
#: guix-git/doc/guix.texi:238 guix-git/doc/guix.texi:54975
#: guix-git/doc/guix.texi:54976
#, no-wrap
msgid "GNU Free Documentation License"
msgstr "Licenza di Documentazione Libera GNU"

#. type: menuentry
#: guix-git/doc/guix.texi:238
msgid "The license of this manual."
msgstr "La licenza di questo manuale."

#. type: unnumbered
#: guix-git/doc/guix.texi:238 guix-git/doc/guix.texi:54981
#: guix-git/doc/guix.texi:54982
#, no-wrap
msgid "Concept Index"
msgstr "Indice dei concetti"

#. type: menuentry
#: guix-git/doc/guix.texi:238
msgid "Concepts."
msgstr "Concetti."

#. type: unnumbered
#: guix-git/doc/guix.texi:238 guix-git/doc/guix.texi:54985
#: guix-git/doc/guix.texi:54986
#, no-wrap
msgid "Programming Index"
msgstr "Indice di Programmazione"

#. type: menuentry
#: guix-git/doc/guix.texi:238
msgid "Data types, functions, and variables."
msgstr "Tipi di dati, funzioni e variabili."

#. type: menuentry
#: guix-git/doc/guix.texi:241
msgid "--- The Detailed Node Listing ---"
msgstr "--- L'Elenco Dettagliato dei Nodi ---"

#. type: section
#: guix-git/doc/guix.texi:246 guix-git/doc/guix.texi:542
#: guix-git/doc/guix.texi:544 guix-git/doc/guix.texi:545
#, no-wrap
msgid "Managing Software the Guix Way"
msgstr "Gestione del Software alla Maniera di Guix"

#. type: menuentry
#: guix-git/doc/guix.texi:246 guix-git/doc/guix.texi:542
msgid "What's special."
msgstr "Cosa c'è di speciale."

#. type: section
#: guix-git/doc/guix.texi:246 guix-git/doc/guix.texi:542
#: guix-git/doc/guix.texi:599 guix-git/doc/guix.texi:600
#, no-wrap
msgid "GNU Distribution"
msgstr "Distribuzione GNU"

#. type: menuentry
#: guix-git/doc/guix.texi:246 guix-git/doc/guix.texi:542
msgid "The packages and tools."
msgstr "I pacchetti e gli strumenti."

#. type: section
#: guix-git/doc/guix.texi:254 guix-git/doc/guix.texi:752
#: guix-git/doc/guix.texi:754 guix-git/doc/guix.texi:755
#, no-wrap
msgid "Binary Installation"
msgstr "Installazione binaria"

#. type: menuentry
#: guix-git/doc/guix.texi:254 guix-git/doc/guix.texi:752
msgid "Getting Guix running in no time!"
msgstr "Fare funzionare Guix in pochissimo tempo!"

#. type: section
#: guix-git/doc/guix.texi:254 guix-git/doc/guix.texi:256
#: guix-git/doc/guix.texi:752 guix-git/doc/guix.texi:886
#: guix-git/doc/guix.texi:887
#, no-wrap
msgid "Setting Up the Daemon"
msgstr "Configurazione del demone"

#. type: menuentry
#: guix-git/doc/guix.texi:254 guix-git/doc/guix.texi:752
msgid "Preparing the build daemon's environment."
msgstr "Preparazione dell'ambiente del demone di compilazione."

#. type: node
#: guix-git/doc/guix.texi:254 guix-git/doc/guix.texi:752
#: guix-git/doc/guix.texi:1538
#, no-wrap
msgid "Invoking guix-daemon"
msgstr "Invocare guix-daemon"

#. type: menuentry
#: guix-git/doc/guix.texi:254 guix-git/doc/guix.texi:752
msgid "Running the build daemon."
msgstr "Esecuzione del demone di compilazione."

#. type: section
#: guix-git/doc/guix.texi:254 guix-git/doc/guix.texi:752
#: guix-git/doc/guix.texi:1857 guix-git/doc/guix.texi:1858
#, no-wrap
msgid "Application Setup"
msgstr "Configurazione dell'applicazione"

#. type: menuentry
#: guix-git/doc/guix.texi:254 guix-git/doc/guix.texi:752
msgid "Application-specific setup."
msgstr "Configurazione specifica dell'applicazione."

#. type: section
#: guix-git/doc/guix.texi:254 guix-git/doc/guix.texi:752
#: guix-git/doc/guix.texi:2094 guix-git/doc/guix.texi:2095
#, no-wrap
msgid "Upgrading Guix"
msgstr "Aggiornamento di Guix"

#. type: menuentry
#: guix-git/doc/guix.texi:254 guix-git/doc/guix.texi:752
msgid "Upgrading Guix and its build daemon."
msgstr "Aggiornamento di Guix e del suo demone di compilazione."

#. type: subsection
#: guix-git/doc/guix.texi:260 guix-git/doc/guix.texi:927
#: guix-git/doc/guix.texi:929 guix-git/doc/guix.texi:930
#, no-wrap
msgid "Build Environment Setup"
msgstr "Configurazione dell'ambiente di build"

#. type: menuentry
#: guix-git/doc/guix.texi:260 guix-git/doc/guix.texi:927
msgid "Preparing the isolated build environment."
msgstr "Preparazione dell'ambiente di compilazione isolato."

#. type: node
#: guix-git/doc/guix.texi:260 guix-git/doc/guix.texi:927
#: guix-git/doc/guix.texi:1176
#, no-wrap
msgid "Daemon Offload Setup"
msgstr "Configurazione dello scarico del demone"

#. type: menuentry
#: guix-git/doc/guix.texi:260 guix-git/doc/guix.texi:927
msgid "Offloading builds to remote machines."
msgstr "Scaricare le compilazioni su macchine remote."

#. type: subsection
#: guix-git/doc/guix.texi:260 guix-git/doc/guix.texi:927
#: guix-git/doc/guix.texi:1428 guix-git/doc/guix.texi:1429
#, no-wrap
msgid "SELinux Support"
msgstr "Supporto SELinux"

#. type: menuentry
#: guix-git/doc/guix.texi:260 guix-git/doc/guix.texi:927
msgid "Using an SELinux policy for the daemon."
msgstr "Utilizzo di una politica SELinux per il demone."

#. type: section
#: guix-git/doc/guix.texi:272 guix-git/doc/guix.texi:1483
#: guix-git/doc/guix.texi:2231 guix-git/doc/guix.texi:2233
#: guix-git/doc/guix.texi:2234
#, no-wrap
msgid "Limitations"
msgstr "Limitazioni"

#. type: menuentry
#: guix-git/doc/guix.texi:272 guix-git/doc/guix.texi:2231
msgid "What you can expect."
msgstr "Cosa puoi aspettarti."

#. type: section
#: guix-git/doc/guix.texi:272 guix-git/doc/guix.texi:2231
#: guix-git/doc/guix.texi:2250 guix-git/doc/guix.texi:2251
#, no-wrap
msgid "Hardware Considerations"
msgstr "Considerazioni sull'hardware"

#. type: menuentry
#: guix-git/doc/guix.texi:272 guix-git/doc/guix.texi:2231
msgid "Supported hardware."
msgstr "Hardware supportato."

#. type: section
#: guix-git/doc/guix.texi:272 guix-git/doc/guix.texi:2231
#: guix-git/doc/guix.texi:2288 guix-git/doc/guix.texi:2289
#, no-wrap
msgid "USB Stick and DVD Installation"
msgstr "Installazione da chiavetta USB e DVD"

#. type: menuentry
#: guix-git/doc/guix.texi:272 guix-git/doc/guix.texi:2231
msgid "Preparing the installation medium."
msgstr "Preparazione del supporto di installazione."

#. type: section
#: guix-git/doc/guix.texi:272 guix-git/doc/guix.texi:2231
#: guix-git/doc/guix.texi:2379 guix-git/doc/guix.texi:2380
#, no-wrap
msgid "Preparing for Installation"
msgstr "Preparazione all'installazione"

#. type: menuentry
#: guix-git/doc/guix.texi:272 guix-git/doc/guix.texi:2231
msgid "Networking, partitioning, etc."
msgstr "Rete, partizionamento, ecc."

#. type: section
#: guix-git/doc/guix.texi:272 guix-git/doc/guix.texi:2231
#: guix-git/doc/guix.texi:2402 guix-git/doc/guix.texi:2403
#, no-wrap
msgid "Guided Graphical Installation"
msgstr "Installazione grafica guidata"

#. type: menuentry
#: guix-git/doc/guix.texi:272 guix-git/doc/guix.texi:2231
msgid "Easy graphical installation."
msgstr "Installazione grafica semplice."

#. type: section
#: guix-git/doc/guix.texi:272 guix-git/doc/guix.texi:274
#: guix-git/doc/guix.texi:2231 guix-git/doc/guix.texi:2433
#: guix-git/doc/guix.texi:2434
#, no-wrap
msgid "Manual Installation"
msgstr "Installazione manuale"

#. type: menuentry
#: guix-git/doc/guix.texi:272 guix-git/doc/guix.texi:2231
msgid "Manual installation for wizards."
msgstr "Installazione manuale per maghi."

#. type: section
#: guix-git/doc/guix.texi:272 guix-git/doc/guix.texi:2231
#: guix-git/doc/guix.texi:2804 guix-git/doc/guix.texi:2805
#, no-wrap
msgid "After System Installation"
msgstr "Dopo l'installazione del sistema"

#. type: menuentry
#: guix-git/doc/guix.texi:272 guix-git/doc/guix.texi:2231
msgid "When installation succeeded."
msgstr "Quando l'installazione è riuscita."

#. type: node
#: guix-git/doc/guix.texi:272 guix-git/doc/guix.texi:2231
#: guix-git/doc/guix.texi:2825
#, no-wrap
msgid "Installing Guix in a VM"
msgstr "Installare Guix in una VM"

#. type: menuentry
#: guix-git/doc/guix.texi:272 guix-git/doc/guix.texi:2231
msgid "Guix System playground."
msgstr "Area di prova per Guix System."

#. type: section
#: guix-git/doc/guix.texi:272 guix-git/doc/guix.texi:2231
#: guix-git/doc/guix.texi:2876 guix-git/doc/guix.texi:2877
#, no-wrap
msgid "Building the Installation Image"
msgstr "Creare l'immagine di installazione"

#. type: menuentry
#: guix-git/doc/guix.texi:272 guix-git/doc/guix.texi:2231
msgid "How this comes to be."
msgstr "Come questo viene creato."

#. type: node
#: guix-git/doc/guix.texi:277 guix-git/doc/guix.texi:2451
#: guix-git/doc/guix.texi:2453
#, no-wrap
msgid "Keyboard Layout and Networking and Partitioning"
msgstr "Layout della tastiera e rete e partizionamento"

#. type: menuentry
#: guix-git/doc/guix.texi:277 guix-git/doc/guix.texi:2451
msgid "Initial setup."
msgstr "Configurazione iniziale."

#. type: subsection
#: guix-git/doc/guix.texi:277 guix-git/doc/guix.texi:2451
#: guix-git/doc/guix.texi:2715 guix-git/doc/guix.texi:2716
#, no-wrap
msgid "Proceeding with the Installation"
msgstr "Procedere con l'installazione"

#. type: menuentry
#: guix-git/doc/guix.texi:277 guix-git/doc/guix.texi:2451
msgid "Installing."
msgstr "Installazione."

#. type: section
#: guix-git/doc/guix.texi:291 guix-git/doc/guix.texi:3141
#: guix-git/doc/guix.texi:3143 guix-git/doc/guix.texi:3144
#, no-wrap
msgid "Features"
msgstr "Funzionalità"

#. type: menuentry
#: guix-git/doc/guix.texi:291 guix-git/doc/guix.texi:3141
msgid "How Guix will make your life brighter."
msgstr "Come Guix renderà la tua vita più luminosa."

#. type: node
#: guix-git/doc/guix.texi:291 guix-git/doc/guix.texi:3141
#: guix-git/doc/guix.texi:3233
#, no-wrap
msgid "Invoking guix package"
msgstr "Invocare guix package"

#. type: menuentry
#: guix-git/doc/guix.texi:291 guix-git/doc/guix.texi:3141
msgid "Package installation, removal, etc."
msgstr "Installazione, rimozione, ecc. dei pacchetti."

#. type: section
#: guix-git/doc/guix.texi:291 guix-git/doc/guix.texi:293
#: guix-git/doc/guix.texi:3141 guix-git/doc/guix.texi:3846
#: guix-git/doc/guix.texi:3847
#, no-wrap
msgid "Substitutes"
msgstr "Sostituti"

#. type: menuentry
#: guix-git/doc/guix.texi:291 guix-git/doc/guix.texi:3141
msgid "Downloading pre-built binaries."
msgstr "Scaricare binari pre-compilati."

#. type: section
#: guix-git/doc/guix.texi:291 guix-git/doc/guix.texi:3141
#: guix-git/doc/guix.texi:4205 guix-git/doc/guix.texi:4206
#, no-wrap
msgid "Packages with Multiple Outputs"
msgstr "Pacchetti con output multipli"

#. type: menuentry
#: guix-git/doc/guix.texi:291 guix-git/doc/guix.texi:3141
msgid "Single source package, multiple outputs."
msgstr "Singolo pacchetto sorgente, output multipli."

#. type: node
#: guix-git/doc/guix.texi:291 guix-git/doc/guix.texi:3141
#: guix-git/doc/guix.texi:4278
#, no-wrap
msgid "Invoking guix locate"
msgstr "Invocare guix locate"

#. type: menuentry
#: guix-git/doc/guix.texi:291 guix-git/doc/guix.texi:3141
msgid "Locating packages that provide a file."
msgstr "Trovare pacchetti che forniscono un file."

#. type: node
#: guix-git/doc/guix.texi:291 guix-git/doc/guix.texi:3141
#: guix-git/doc/guix.texi:4408
#, no-wrap
msgid "Invoking guix gc"
msgstr "Invocare guix gc"

#. type: menuentry
#: guix-git/doc/guix.texi:291 guix-git/doc/guix.texi:3141
msgid "Running the garbage collector."
msgstr "Eseguire il garbage collector."

#. type: node
#: guix-git/doc/guix.texi:291 guix-git/doc/guix.texi:3141
#: guix-git/doc/guix.texi:4632
#, no-wrap
msgid "Invoking guix pull"
msgstr "Invocare guix pull"

#. type: menuentry
#: guix-git/doc/guix.texi:291 guix-git/doc/guix.texi:3141
msgid "Fetching the latest Guix and distribution."
msgstr "Ottenere l'ultima versione di Guix e della distribuzione."

#. type: node
#: guix-git/doc/guix.texi:291 guix-git/doc/guix.texi:3141
#: guix-git/doc/guix.texi:4892
#, no-wrap
msgid "Invoking guix time-machine"
msgstr "Invocare guix time-machine"

#. type: menuentry
#: guix-git/doc/guix.texi:291 guix-git/doc/guix.texi:3141
msgid "Running an older revision of Guix."
msgstr "Eseguire una revisione precedente di Guix."

#. type: section
#: guix-git/doc/guix.texi:291 guix-git/doc/guix.texi:3141
#: guix-git/doc/guix.texi:5018 guix-git/doc/guix.texi:5019
#, no-wrap
msgid "Inferiors"
msgstr "Inferiori"

#. type: menuentry
#: guix-git/doc/guix.texi:291 guix-git/doc/guix.texi:3141
msgid "Interacting with another revision of Guix."
msgstr "Interagire con un'altra revisione di Guix."

#. type: node
#: guix-git/doc/guix.texi:291 guix-git/doc/guix.texi:3141
#: guix-git/doc/guix.texi:5143
#, no-wrap
msgid "Invoking guix describe"
msgstr "Invocare guix describe"

#. type: menuentry
#: guix-git/doc/guix.texi:291 guix-git/doc/guix.texi:3141
msgid "Display information about your Guix revision."
msgstr "Mostrare informazioni sulla tua revisione di Guix."

#. type: node
#: guix-git/doc/guix.texi:291 guix-git/doc/guix.texi:3141
#: guix-git/doc/guix.texi:5239
#, no-wrap
msgid "Invoking guix archive"
msgstr "Invocare guix archive"

#. type: menuentry
#: guix-git/doc/guix.texi:291 guix-git/doc/guix.texi:3141
msgid "Exporting and importing store files."
msgstr "Esportare e importare file dallo store."

#. type: subsection
#: guix-git/doc/guix.texi:301 guix-git/doc/guix.texi:3870
#: guix-git/doc/guix.texi:3872 guix-git/doc/guix.texi:3873
#, no-wrap
msgid "Official Substitute Servers"
msgstr "Server di sostituti ufficiali"

#. type: menuentry
#: guix-git/doc/guix.texi:301 guix-git/doc/guix.texi:3870
msgid "One particular source of substitutes."
msgstr "Una fonte particolare di sostituti."

#. type: subsection
#: guix-git/doc/guix.texi:301 guix-git/doc/guix.texi:3870
#: guix-git/doc/guix.texi:3902 guix-git/doc/guix.texi:3903
#, no-wrap
msgid "Substitute Server Authorization"
msgstr "Autorizzazione del server di sostituti"

#. type: menuentry
#: guix-git/doc/guix.texi:301 guix-git/doc/guix.texi:3870
msgid "How to enable or disable substitutes."
msgstr "Come abilitare o disabilitare i sostituti."

#. type: subsection
#: guix-git/doc/guix.texi:301 guix-git/doc/guix.texi:3870
#: guix-git/doc/guix.texi:3972 guix-git/doc/guix.texi:3973
#, no-wrap
msgid "Getting Substitutes from Other Servers"
msgstr "Ottenere sostituti da altri server"

#. type: menuentry
#: guix-git/doc/guix.texi:301 guix-git/doc/guix.texi:3870
msgid "Substitute diversity."
msgstr "Diversità dei sostituti."

#. type: subsection
#: guix-git/doc/guix.texi:301 guix-git/doc/guix.texi:3870
#: guix-git/doc/guix.texi:4093 guix-git/doc/guix.texi:4094
#, no-wrap
msgid "Substitute Authentication"
msgstr "Autenticazione dei sostituti"

#. type: menuentry
#: guix-git/doc/guix.texi:301 guix-git/doc/guix.texi:3870
msgid "How Guix verifies substitutes."
msgstr "Come Guix verifica i sostituti."

#. type: subsection
#: guix-git/doc/guix.texi:301 guix-git/doc/guix.texi:3870
#: guix-git/doc/guix.texi:4128 guix-git/doc/guix.texi:4129
#, no-wrap
msgid "Proxy Settings"
msgstr "Impostazioni proxy"

#. type: menuentry
#: guix-git/doc/guix.texi:301 guix-git/doc/guix.texi:3870
msgid "How to get substitutes via proxy."
msgstr "Come ottenere sostituti tramite proxy."

#. type: subsection
#: guix-git/doc/guix.texi:301 guix-git/doc/guix.texi:3870
#: guix-git/doc/guix.texi:4140 guix-git/doc/guix.texi:4141
#, no-wrap
msgid "Substitution Failure"
msgstr "Fallimento della sostituzione"

#. type: menuentry
#: guix-git/doc/guix.texi:301 guix-git/doc/guix.texi:3870
msgid "What happens when substitution fails."
msgstr "Cosa succede quando la sostituzione fallisce."

#. type: subsection
#: guix-git/doc/guix.texi:301 guix-git/doc/guix.texi:3870
#: guix-git/doc/guix.texi:4168 guix-git/doc/guix.texi:4169
#, no-wrap
msgid "On Trusting Binaries"
msgstr "Sulla fiducia nei binari"

#. type: menuentry
#: guix-git/doc/guix.texi:301 guix-git/doc/guix.texi:3870
msgid "How can you trust that binary blob?"
msgstr "Come puoi fidarti di quel blob binario?"

#. type: section
#: guix-git/doc/guix.texi:316 guix-git/doc/guix.texi:5463
#: guix-git/doc/guix.texi:5465 guix-git/doc/guix.texi:5466
#, no-wrap
msgid "Specifying Additional Channels"
msgstr "Specificare canali aggiuntivi"

#. type: menuentry
#: guix-git/doc/guix.texi:316 guix-git/doc/guix.texi:5463
msgid "Extending the package collection."
msgstr "Estendere la collezione di pacchetti."

#. type: section
#: guix-git/doc/guix.texi:316 guix-git/doc/guix.texi:5463
#: guix-git/doc/guix.texi:5511 guix-git/doc/guix.texi:5512
#, no-wrap
msgid "Using a Custom Guix Channel"
msgstr "Usare un canale Guix personalizzato"

#. type: menuentry
#: guix-git/doc/guix.texi:316 guix-git/doc/guix.texi:5463
msgid "Using a customized Guix."
msgstr "Usare un Guix personalizzato."

#. type: section
#: guix-git/doc/guix.texi:316 guix-git/doc/guix.texi:5463
#: guix-git/doc/guix.texi:5552 guix-git/doc/guix.texi:5553
#, no-wrap
msgid "Replicating Guix"
msgstr "Replicare Guix"

#. type: menuentry
#: guix-git/doc/guix.texi:316 guix-git/doc/guix.texi:5463
msgid "Running the @emph{exact same} Guix."
msgstr "Eseguire l'@emph{esatto stesso} Guix."

#. type: section
#: guix-git/doc/guix.texi:316 guix-git/doc/guix.texi:5463
#: guix-git/doc/guix.texi:5612 guix-git/doc/guix.texi:5613
#, no-wrap
msgid "Customizing the System-Wide Guix"
msgstr "Personalizzare il Guix di sistema"

#. type: menuentry
#: guix-git/doc/guix.texi:316 guix-git/doc/guix.texi:5463
msgid "Default channels on Guix System."
msgstr "Canali predefiniti su Guix System."

#. type: section
#: guix-git/doc/guix.texi:316 guix-git/doc/guix.texi:5463
#: guix-git/doc/guix.texi:5671 guix-git/doc/guix.texi:5672
#, no-wrap
msgid "Channel Authentication"
msgstr "Autenticazione dei canali"

#. type: menuentry
#: guix-git/doc/guix.texi:316 guix-git/doc/guix.texi:5463
msgid "How Guix verifies what it fetches."
msgstr "Come Guix verifica ciò che scarica."

#. type: section
#: guix-git/doc/guix.texi:316 guix-git/doc/guix.texi:5463
#: guix-git/doc/guix.texi:5711 guix-git/doc/guix.texi:5712
#, no-wrap
msgid "Channels with Substitutes"
msgstr "Canali con sostituti"

#. type: menuentry
#: guix-git/doc/guix.texi:316 guix-git/doc/guix.texi:5463
msgid "Using channels with available substitutes."
msgstr "Usare canali con sostituti disponibili."

#. type: section
#: guix-git/doc/guix.texi:316 guix-git/doc/guix.texi:5463
#: guix-git/doc/guix.texi:5736 guix-git/doc/guix.texi:5737
#, no-wrap
msgid "Creating a Channel"
msgstr "Creare un canale"

#. type: menuentry
#: guix-git/doc/guix.texi:316 guix-git/doc/guix.texi:5463
msgid "How to write your custom channel."
msgstr "Come scrivere il tuo canale personalizzato."

#. type: section
#: guix-git/doc/guix.texi:316 guix-git/doc/guix.texi:5463
#: guix-git/doc/guix.texi:5867 guix-git/doc/guix.texi:5868
#, no-wrap
msgid "Package Modules in a Sub-directory"
msgstr "Moduli di pacchetti in una sottocartella"

#. type: menuentry
#: guix-git/doc/guix.texi:316 guix-git/doc/guix.texi:5463
msgid "Specifying the channel's package modules location."
msgstr "Specificare la posizione dei moduli dei pacchetti del canale."

#. type: section
#: guix-git/doc/guix.texi:316 guix-git/doc/guix.texi:5463
#: guix-git/doc/guix.texi:5893 guix-git/doc/guix.texi:5894
#, no-wrap
msgid "Declaring Channel Dependencies"
msgstr "Dichiarare le dipendenze dei canali"

#. type: menuentry
#: guix-git/doc/guix.texi:316 guix-git/doc/guix.texi:5463
msgid "How to depend on other channels."
msgstr "Come dipendere da altri canali."

#. type: section
#: guix-git/doc/guix.texi:316 guix-git/doc/guix.texi:5463
#: guix-git/doc/guix.texi:5935 guix-git/doc/guix.texi:5936
#, no-wrap
msgid "Specifying Channel Authorizations"
msgstr "Specificare le autorizzazioni dei canali"

#. type: menuentry
#: guix-git/doc/guix.texi:316 guix-git/doc/guix.texi:5463
msgid "Defining channel authors authorizations."
msgstr "Definire le autorizzazioni degli autori dei canali."

#. type: section
#: guix-git/doc/guix.texi:316 guix-git/doc/guix.texi:5463
#: guix-git/doc/guix.texi:6038 guix-git/doc/guix.texi:6039
#, no-wrap
msgid "Primary URL"
msgstr "URL primario"

#. type: menuentry
#: guix-git/doc/guix.texi:316 guix-git/doc/guix.texi:5463
msgid "Distinguishing mirror to original."
msgstr "Distinguere il mirror dall'originale."

#. type: section
#: guix-git/doc/guix.texi:316 guix-git/doc/guix.texi:5463
#: guix-git/doc/guix.texi:6061 guix-git/doc/guix.texi:6062
#, no-wrap
msgid "Writing Channel News"
msgstr "Scrivere le novità del canale"

#. type: menuentry
#: guix-git/doc/guix.texi:316 guix-git/doc/guix.texi:5463
msgid "Communicating information to channel's users."
msgstr "Comunicare informazioni agli utenti del canale."

#. type: node
#: guix-git/doc/guix.texi:324 guix-git/doc/guix.texi:6151
#: guix-git/doc/guix.texi:6153
#, no-wrap
msgid "Invoking guix shell"
msgstr "Invocare guix shell"

#. type: menuentry
#: guix-git/doc/guix.texi:324 guix-git/doc/guix.texi:6151
msgid "Spawning one-off software environments."
msgstr "Generare ambienti software temporanei."

#. type: node
#: guix-git/doc/guix.texi:324 guix-git/doc/guix.texi:6151
#: guix-git/doc/guix.texi:6703
#, no-wrap
msgid "Invoking guix environment"
msgstr "Invocare guix environment"

#. type: menuentry
#: guix-git/doc/guix.texi:324 guix-git/doc/guix.texi:6151
msgid "Setting up development environments."
msgstr "Impostare ambienti di sviluppo."

#. type: node
#: guix-git/doc/guix.texi:324 guix-git/doc/guix.texi:6151
#: guix-git/doc/guix.texi:7100
#, no-wrap
msgid "Invoking guix pack"
msgstr "Invocare guix pack"

#. type: menuentry
#: guix-git/doc/guix.texi:324 guix-git/doc/guix.texi:6151
msgid "Creating software bundles."
msgstr "Creare pacchetti software."

#. type: section
#: guix-git/doc/guix.texi:324 guix-git/doc/guix.texi:6151
#: guix-git/doc/guix.texi:7638 guix-git/doc/guix.texi:7639
#, no-wrap
msgid "The GCC toolchain"
msgstr "La toolchain GCC"

#. type: menuentry
#: guix-git/doc/guix.texi:324 guix-git/doc/guix.texi:6151
msgid "Working with languages supported by GCC."
msgstr "Lavorare con i linguaggi supportati da GCC."

#. type: node
#: guix-git/doc/guix.texi:324 guix-git/doc/guix.texi:6151
#: guix-git/doc/guix.texi:7664
#, no-wrap
msgid "Invoking guix git authenticate"
msgstr "Invocare guix git authenticate"

#. type: menuentry
#: guix-git/doc/guix.texi:324 guix-git/doc/guix.texi:6151
msgid "Authenticating Git repositories."
msgstr "Autenticare i repository Git."

#. type: section
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
#: guix-git/doc/guix.texi:7806 guix-git/doc/guix.texi:7807
#, no-wrap
msgid "Package Modules"
msgstr "Moduli di pacchetti"

#. type: menuentry
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
msgid "Packages from the programmer's viewpoint."
msgstr "Pacchetti dal punto di vista del programmatore."

#. type: section
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:343
#: guix-git/doc/guix.texi:7804 guix-git/doc/guix.texi:7868
#: guix-git/doc/guix.texi:7869
#, no-wrap
msgid "Defining Packages"
msgstr "Definire i pacchetti"

#. type: menuentry
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
msgid "Defining new packages."
msgstr "Definire nuovi pacchetti."

#. type: section
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
#: guix-git/doc/guix.texi:8697 guix-git/doc/guix.texi:8698
#, no-wrap
msgid "Defining Package Variants"
msgstr "Definire varianti di pacchetto"

#. type: menuentry
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
msgid "Customizing packages."
msgstr "Personalizzare i pacchetti."

#. type: section
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
#: guix-git/doc/guix.texi:8991 guix-git/doc/guix.texi:8992
#, no-wrap
msgid "Writing Manifests"
msgstr "Scrivere manifesti"

#. type: menuentry
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
msgid "The bill of materials of your environment."
msgstr "L'elenco dei materiali del tuo ambiente."

#. type: section
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
#: guix-git/doc/guix.texi:9296 guix-git/doc/guix.texi:9297
#, no-wrap
msgid "Build Systems"
msgstr "Sistemi di build"

#. type: menuentry
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
msgid "Specifying how packages are built."
msgstr "Specificare come vengono compilati i pacchetti."

#. type: subsection
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
#: guix-git/doc/guix.texi:10684 guix-git/doc/guix.texi:10685
#: guix-git/doc/guix.texi:11227
#, no-wrap
msgid "Build Phases"
msgstr "Fasi di build"

#. type: menuentry
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
msgid "Phases of the build process of a package."
msgstr "Fasi del processo di build di un pacchetto."

#. type: section
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
#: guix-git/doc/guix.texi:10909 guix-git/doc/guix.texi:10910
#, no-wrap
msgid "Build Utilities"
msgstr "Utilità di build"

#. type: menuentry
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
msgid "Helpers for your package definitions and more."
msgstr "Aiuti per le definizioni dei tuoi pacchetti e altro."

#. type: section
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
#: guix-git/doc/guix.texi:11384 guix-git/doc/guix.texi:11385
#, no-wrap
msgid "Search Paths"
msgstr "Percorsi di ricerca"

#. type: menuentry
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
msgid "Declaring search path environment variables."
msgstr "Dichiarare le variabili d'ambiente dei percorsi di ricerca."

#. type: section
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
#: guix-git/doc/guix.texi:11588 guix-git/doc/guix.texi:11589
#, no-wrap
msgid "The Store"
msgstr "Lo store"

#. type: menuentry
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
msgid "Manipulating the package store."
msgstr "Manipolare lo store dei pacchetti."

#. type: section
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
#: guix-git/doc/guix.texi:11740 guix-git/doc/guix.texi:11741
#, no-wrap
msgid "Derivations"
msgstr "Derivazioni"

#. type: menuentry
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
msgid "Low-level interface to package derivations."
msgstr "Interfaccia a basso livello per le derivazioni dei pacchetti."

#. type: section
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
#: guix-git/doc/guix.texi:11933 guix-git/doc/guix.texi:11934
#, no-wrap
msgid "The Store Monad"
msgstr "La monade dello store"

#. type: menuentry
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
msgid "Purely functional interface to the store."
msgstr "Interfaccia puramente funzionale allo store."

#. type: section
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
#: guix-git/doc/guix.texi:12255 guix-git/doc/guix.texi:12256
#, no-wrap
msgid "G-Expressions"
msgstr "G-expression"

#. type: menuentry
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
msgid "Manipulating build expressions."
msgstr "Manipolare le espressioni di build."

#. type: node
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
#: guix-git/doc/guix.texi:12961
#, no-wrap
msgid "Invoking guix repl"
msgstr "Invocare guix repl"

#. type: menuentry
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
msgid "Programming Guix in Guile"
msgstr "Programmare Guix in Guile"

#. type: section
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
#: guix-git/doc/guix.texi:13078 guix-git/doc/guix.texi:13079
#, no-wrap
msgid "Using Guix Interactively"
msgstr "Usare Guix interattivamente"

#. type: menuentry
#: guix-git/doc/guix.texi:341 guix-git/doc/guix.texi:7804
msgid "Fine-grain interaction at the REPL."
msgstr "Interazione a grana fine nella REPL."

#. type: node
#: guix-git/doc/guix.texi:346 guix-git/doc/guix.texi:8072
#: guix-git/doc/guix.texi:8075
#, no-wrap
msgid "package Reference"
msgstr "Riferimenti per 'package'"

#. type: menuentry
#: guix-git/doc/guix.texi:346 guix-git/doc/guix.texi:8072
msgid "The package data type."
msgstr "Il tipo di dato 'package'."

#. type: node
#: guix-git/doc/guix.texi:346 guix-git/doc/guix.texi:8072
#: guix-git/doc/guix.texi:8391
#, no-wrap
msgid "origin Reference"
msgstr "Riferimenti per 'origin'"

#. type: menuentry
#: guix-git/doc/guix.texi:346 guix-git/doc/guix.texi:8072
msgid "The origin data type."
msgstr "Il tipo di dato 'origin'."

#. type: node
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
#: guix-git/doc/guix.texi:13267
#, no-wrap
msgid "Invoking guix build"
msgstr "Invocare guix build"

#. type: menuentry
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
msgid "Building packages from the command line."
msgstr "Compilare pacchetti da riga di comando."

#. type: node
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
#: guix-git/doc/guix.texi:14278
#, no-wrap
msgid "Invoking guix edit"
msgstr "Invocare guix edit"

#. type: menuentry
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
msgid "Editing package definitions."
msgstr "Modificare le definizioni dei pacchetti."

#. type: node
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
#: guix-git/doc/guix.texi:14308
#, no-wrap
msgid "Invoking guix download"
msgstr "Invocare guix download"

#. type: menuentry
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
msgid "Downloading a file and printing its hash."
msgstr "Scaricare un file e stamparne l'hash."

#. type: node
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
#: guix-git/doc/guix.texi:14389
#, no-wrap
msgid "Invoking guix hash"
msgstr "Invocare guix hash"

#. type: menuentry
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
msgid "Computing the cryptographic hash of a file."
msgstr "Calcolare l'hash crittografico di un file."

#. type: node
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
#: guix-git/doc/guix.texi:14480
#, no-wrap
msgid "Invoking guix import"
msgstr "Invocare guix import"

#. type: menuentry
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
msgid "Importing package definitions."
msgstr "Importare le definizioni dei pacchetti."

#. type: node
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
#: guix-git/doc/guix.texi:15166
#, no-wrap
msgid "Invoking guix refresh"
msgstr "Invocare guix refresh"

#. type: menuentry
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
msgid "Updating package definitions."
msgstr "Aggiornare le definizioni dei pacchetti."

#. type: node
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
#: guix-git/doc/guix.texi:15645
#, no-wrap
msgid "Invoking guix style"
msgstr "Invocare guix style"

#. type: menuentry
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
#, fuzzy
#| msgid "Updating the Guix package definition."
msgid "Styling package definitions."
msgstr "Aggiornamento della definizione del pacchetto Guix."

#. type: node
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
#: guix-git/doc/guix.texi:15854
#, no-wrap
msgid "Invoking guix lint"
msgstr "Invocare guix lint"

#. type: menuentry
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
msgid "Finding errors in package definitions."
msgstr "Trovare errori nelle definizioni dei pacchetti."

#. type: node
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
#: guix-git/doc/guix.texi:16079
#, no-wrap
msgid "Invoking guix size"
msgstr "Invocare guix size"

#. type: menuentry
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
msgid "Profiling disk usage."
msgstr "Profilare l'uso del disco."

#. type: node
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
#: guix-git/doc/guix.texi:16223
#, no-wrap
msgid "Invoking guix graph"
msgstr "Invocare guix graph"

#. type: menuentry
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
msgid "Visualizing the graph of packages."
msgstr "Visualizzare il grafico dei pacchetti."

#. type: node
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
#: guix-git/doc/guix.texi:16504
#, no-wrap
msgid "Invoking guix publish"
msgstr "Invocare guix publish"

#. type: menuentry
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
msgid "Sharing substitutes."
msgstr "Condividere sostituti."

#. type: node
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
#: guix-git/doc/guix.texi:16778
#, no-wrap
msgid "Invoking guix challenge"
msgstr "Invocare guix challenge"

#. type: menuentry
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
msgid "Challenging substitute servers."
msgstr "Sfidare i server di sostituti."

#. type: node
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
#: guix-git/doc/guix.texi:16967
#, no-wrap
msgid "Invoking guix copy"
msgstr "Invocare guix copy"

#. type: menuentry
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
msgid "Copying to and from a remote store."
msgstr "Copiare da e verso uno store remoto."

#. type: node
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
#: guix-git/doc/guix.texi:17031
#, no-wrap
msgid "Invoking guix container"
msgstr "Invocare guix container"

#. type: menuentry
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
msgid "Process isolation."
msgstr "Isolamento dei processi."

#. type: node
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
#: guix-git/doc/guix.texi:17085
#, no-wrap
msgid "Invoking guix weather"
msgstr "Invocare guix weather"

#. type: menuentry
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
msgid "Assessing substitute availability."
msgstr "Valutare la disponibilità dei sostituti."

#. type: node
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
#: guix-git/doc/guix.texi:17234
#, no-wrap
msgid "Invoking guix processes"
msgstr "Invocare guix processes"

#. type: menuentry
#: guix-git/doc/guix.texi:365 guix-git/doc/guix.texi:13265
msgid "Listing client processes."
msgstr "Elencare i processi client."

#. type: section
#: guix-git/doc/guix.texi:367 guix-git/doc/guix.texi:13268
#, no-wrap
msgid "Invoking @command{guix build}"
msgstr "Invocare @command{guix build}"

#. type: subsection
#: guix-git/doc/guix.texi:372 guix-git/doc/guix.texi:13319
#: guix-git/doc/guix.texi:13321 guix-git/doc/guix.texi:13322
#, no-wrap
msgid "Common Build Options"
msgstr "Opzioni di build comuni"

#. type: menuentry
#: guix-git/doc/guix.texi:372 guix-git/doc/guix.texi:13319
msgid "Build options for most commands."
msgstr "Opzioni di build per la maggior parte dei comandi."

#. type: subsection
#: guix-git/doc/guix.texi:372 guix-git/doc/guix.texi:13319
#: guix-git/doc/guix.texi:13476 guix-git/doc/guix.texi:13477
#, no-wrap
msgid "Package Transformation Options"
msgstr "Opzioni di trasformazione dei pacchetti"

#. type: menuentry
#: guix-git/doc/guix.texi:372 guix-git/doc/guix.texi:13319
msgid "Creating variants of packages."
msgstr "Creare varianti di pacchetti."

#. type: subsection
#: guix-git/doc/guix.texi:372 guix-git/doc/guix.texi:13319
#: guix-git/doc/guix.texi:13901 guix-git/doc/guix.texi:13902
#, no-wrap
msgid "Additional Build Options"
msgstr "Opzioni di build aggiuntive"

#. type: menuentry
#: guix-git/doc/guix.texi:372 guix-git/doc/guix.texi:13319
msgid "Options specific to 'guix build'."
msgstr "Opzioni specifiche per 'guix build'."

#. type: subsection
#: guix-git/doc/guix.texi:372 guix-git/doc/guix.texi:13319
#: guix-git/doc/guix.texi:14197 guix-git/doc/guix.texi:14198
#, no-wrap
msgid "Debugging Build Failures"
msgstr "Debug dei fallimenti di build"

#. type: menuentry
#: guix-git/doc/guix.texi:372 guix-git/doc/guix.texi:13319
msgid "Real life packaging experience."
msgstr "Esperienza di pacchettizzazione nella vita reale."

#. type: section
#: guix-git/doc/guix.texi:377 guix-git/doc/guix.texi:17357
#: guix-git/doc/guix.texi:17359 guix-git/doc/guix.texi:17360
#, no-wrap
msgid "Cross-Compilation"
msgstr "Compilazione incrociata"

#. type: menuentry
#: guix-git/doc/guix.texi:377 guix-git/doc/guix.texi:17357
msgid "Cross-compiling for another architecture."
msgstr "Compilazione incrociata per un'altra architettura."

#. type: section
#: guix-git/doc/guix.texi:377 guix-git/doc/guix.texi:17357
#: guix-git/doc/guix.texi:17412 guix-git/doc/guix.texi:17413
#, no-wrap
msgid "Native Builds"
msgstr "Build nativi"

#. type: menuentry
#: guix-git/doc/guix.texi:377 guix-git/doc/guix.texi:17357
msgid "Targeting another architecture through native builds."
msgstr "Mirare a un'altra architettura tramite build nativi."

#. type: node
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
#: guix-git/doc/guix.texi:17547
#, no-wrap
msgid "Getting Started with the System"
msgstr "Primi passi con il sistema"

#. type: section
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
#: guix-git/doc/guix.texi:17750 guix-git/doc/guix.texi:17751
#, no-wrap
msgid "Using the Configuration System"
msgstr "Usare il sistema di configurazione"

#. type: menuentry
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
msgid "Customizing your GNU system."
msgstr "Personalizzare il tuo sistema GNU."

#. type: node
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
#: guix-git/doc/guix.texi:18079
#, no-wrap
msgid "operating-system Reference"
msgstr "Riferimenti per 'operating-system'"

#. type: menuentry
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
msgid "Detail of operating-system declarations."
msgstr "Dettagli sulle dichiarazioni di operating-system."

#. type: section
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:401
#: guix-git/doc/guix.texi:17545 guix-git/doc/guix.texi:18298
#: guix-git/doc/guix.texi:18299
#, no-wrap
msgid "File Systems"
msgstr "Filesystem"

#. type: menuentry
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
msgid "Configuring file system mounts."
msgstr "Configurare i mount del file system."

#. type: section
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
#: guix-git/doc/guix.texi:18703 guix-git/doc/guix.texi:18704
#, no-wrap
msgid "Mapped Devices"
msgstr "Dispositivi mappati"

#. type: menuentry
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
msgid "Block device extra processing."
msgstr "Elaborazione extra dei dispositivi a blocchi."

#. type: section
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
#: guix-git/doc/guix.texi:18890 guix-git/doc/guix.texi:18891
#, no-wrap
msgid "Swap Space"
msgstr "Spazio di swap"

#. type: menuentry
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
msgid "Backing RAM with disk space."
msgstr "Supportare la RAM con spazio su disco."

#. type: section
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
#: guix-git/doc/guix.texi:19072 guix-git/doc/guix.texi:19073
#, no-wrap
msgid "User Accounts"
msgstr "Account utente"

#. type: menuentry
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
msgid "Specifying user accounts."
msgstr "Specificare gli account utente."

#. type: section
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:2460
#: guix-git/doc/guix.texi:17545 guix-git/doc/guix.texi:19260
#: guix-git/doc/guix.texi:19261
#, no-wrap
msgid "Keyboard Layout"
msgstr "Layout della tastiera"

#. type: menuentry
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
msgid "How the system interprets key strokes."
msgstr "Come il sistema interpreta la pressione dei tasti."

#. type: section
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:1865
#: guix-git/doc/guix.texi:17545 guix-git/doc/guix.texi:19405
#: guix-git/doc/guix.texi:19406
#, no-wrap
msgid "Locales"
msgstr "Lingue"

#. type: menuentry
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
msgid "Language and cultural convention settings."
msgstr "Impostazioni di lingua e convenzioni culturali."

#. type: menuentry
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
msgid "Specifying system services."
msgstr "Specificare i servizi di sistema."

#. type: section
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
#: guix-git/doc/guix.texi:46089 guix-git/doc/guix.texi:46090
#, no-wrap
msgid "Privileged Programs"
msgstr "Programmi privilegiati"

#. type: menuentry
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
msgid "Programs running with elevated privileges."
msgstr "Programmi eseguiti con privilegi elevati."

#. type: section
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:2037
#: guix-git/doc/guix.texi:17545 guix-git/doc/guix.texi:46186
#: guix-git/doc/guix.texi:46187
#, no-wrap
msgid "X.509 Certificates"
msgstr "Certificati X.509"

#. type: menuentry
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
msgid "Authenticating HTTPS servers."
msgstr "Autenticazione dei server HTTPS."

#. type: section
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:1924
#: guix-git/doc/guix.texi:17545 guix-git/doc/guix.texi:46250
#: guix-git/doc/guix.texi:46251
#, no-wrap
msgid "Name Service Switch"
msgstr "Name Service Switch"

#. type: menuentry
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
msgid "Configuring libc's name service switch."
msgstr "Configurare il name service switch della libc."

#. type: section
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
#: guix-git/doc/guix.texi:46388 guix-git/doc/guix.texi:46389
#, no-wrap
msgid "Initial RAM Disk"
msgstr "Disco RAM iniziale"

#. type: menuentry
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
msgid "Linux-Libre bootstrapping."
msgstr "Bootstrap di Linux-Libre."

#. type: section
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
#: guix-git/doc/guix.texi:46595 guix-git/doc/guix.texi:46596
#, no-wrap
msgid "Bootloader Configuration"
msgstr "Configurazione del bootloader"

#. type: menuentry
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
msgid "Configuring the boot loader."
msgstr "Configurare il boot loader."

#. type: node
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
#: guix-git/doc/guix.texi:47031
#, no-wrap
msgid "Invoking guix system"
msgstr "Invocare guix system"

#. type: menuentry
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
msgid "Instantiating a system configuration."
msgstr "Instanziare una configurazione di sistema."

#. type: node
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
#: guix-git/doc/guix.texi:47704
#, no-wrap
msgid "Invoking guix deploy"
msgstr "Invocare guix deploy"

#. type: menuentry
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
msgid "Deploying a system configuration to a remote host."
msgstr "Distribuire una configurazione di sistema su un host remoto."

#. type: node
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
#: guix-git/doc/guix.texi:48095
#, no-wrap
msgid "Running Guix in a VM"
msgstr "Eseguire Guix in una VM"

#. type: menuentry
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
msgid "How to run Guix System in a virtual machine."
msgstr "Come eseguire Guix System in una macchina virtuale."

#. type: section
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:446
#: guix-git/doc/guix.texi:17545 guix-git/doc/guix.texi:48230
#: guix-git/doc/guix.texi:48231
#, no-wrap
msgid "Defining Services"
msgstr "Definire i servizi"

#. type: menuentry
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:17545
msgid "Adding new service definitions."
msgstr "Aggiungere nuove definizioni di servizi."

#. type: subsection
#: guix-git/doc/guix.texi:403 guix-git/doc/guix.texi:18597
#: guix-git/doc/guix.texi:18599 guix-git/doc/guix.texi:18600
#, no-wrap
msgid "Btrfs file system"
msgstr "File system Btrfs"

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:19646 guix-git/doc/guix.texi:19647
#, no-wrap
msgid "Base Services"
msgstr "Servizi di base"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "Essential system services."
msgstr "Servizi di sistema essenziali."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:21207 guix-git/doc/guix.texi:21208
#, no-wrap
msgid "Scheduled Job Execution"
msgstr "Esecuzione di lavori pianificati"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "The mcron service."
msgstr "Il servizio mcron."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:21490 guix-git/doc/guix.texi:21491
#, no-wrap
msgid "Log Rotation"
msgstr "Rotazione dei log"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "Archiving and deleting old logs."
msgstr "Archiviazione ed eliminazione dei vecchi log."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:21800 guix-git/doc/guix.texi:21801
#, fuzzy, no-wrap
#| msgid "Networking"
msgid "Networking Setup"
msgstr "Rete"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "Setting up network interfaces."
msgstr "Impostazione delle interfacce di rete."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:22795 guix-git/doc/guix.texi:22796
#, no-wrap
msgid "Networking Services"
msgstr "Servizi di rete"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "Firewall, SSH daemon, etc."
msgstr "Firewall, demone SSH, ecc."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:24684 guix-git/doc/guix.texi:24685
#, no-wrap
msgid "Unattended Upgrades"
msgstr "Aggiornamenti non presidiati"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "Automated system upgrades."
msgstr "Aggiornamenti di sistema automatici."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:24842 guix-git/doc/guix.texi:24843
#, no-wrap
msgid "X Window"
msgstr "X Window"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "Graphical display."
msgstr "Schermo grafico."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:25505 guix-git/doc/guix.texi:25506
#, no-wrap
msgid "Printing Services"
msgstr "Servizi di stampa"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "Local and remote printer support."
msgstr "Supporto per stampanti locali e remote."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:26327 guix-git/doc/guix.texi:26328
#, no-wrap
msgid "Desktop Services"
msgstr "Servizi desktop"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "D-Bus and desktop services."
msgstr "D-Bus e servizi desktop."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:27628 guix-git/doc/guix.texi:27629
#, no-wrap
msgid "Sound Services"
msgstr "Servizi suono"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "ALSA and Pulseaudio services."
msgstr "Servizi ALSA e Pulseaudio."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:27853 guix-git/doc/guix.texi:27854
#, fuzzy, no-wrap
#| msgid "Services"
msgid "File Search Services"
msgstr "Servizi"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "Tools to search for files."
msgstr "Strumenti per cercare file."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:27959 guix-git/doc/guix.texi:27960
#, no-wrap
msgid "Database Services"
msgstr "Servizi di database"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "SQL databases, key-value stores, etc."
msgstr "Database SQL, archivi chiave-valore, ecc."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:28344 guix-git/doc/guix.texi:28345
#, no-wrap
msgid "Mail Services"
msgstr "Servizi di posta"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "IMAP, POP3, SMTP, and all that."
msgstr "IMAP, POP3, SMTP e tutto il resto."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:30469 guix-git/doc/guix.texi:30470
#, no-wrap
msgid "Messaging Services"
msgstr "Servizi di messaggistica"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "Messaging services."
msgstr "Servizi di messaggistica."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:31713 guix-git/doc/guix.texi:31714
#, no-wrap
msgid "Telephony Services"
msgstr "Servizi di telefonia"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "Telephony services."
msgstr "Servizi di telefonia."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:32165 guix-git/doc/guix.texi:32166
#, no-wrap
msgid "File-Sharing Services"
msgstr "Servizi di condivisione file"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "File-sharing services."
msgstr "Servizi di condivisione file."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:32963 guix-git/doc/guix.texi:32964
#, no-wrap
msgid "Monitoring Services"
msgstr "Servizi di monitoraggio"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "Monitoring services."
msgstr "Servizi di monitoraggio."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:33621 guix-git/doc/guix.texi:33622
#, no-wrap
msgid "Kerberos Services"
msgstr "Servizi Kerberos"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "Kerberos services."
msgstr "Servizi Kerberos."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:33747 guix-git/doc/guix.texi:33748
#, no-wrap
msgid "LDAP Services"
msgstr "Servizi LDAP"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "LDAP services."
msgstr "Servizi LDAP."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:34411 guix-git/doc/guix.texi:34412
#, no-wrap
msgid "Web Services"
msgstr "Servizi web"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "Web servers."
msgstr "Server web."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:35786 guix-git/doc/guix.texi:35787
#, fuzzy, no-wrap
#| msgid "Mail Services"
msgid "High Availability Services"
msgstr "Servizi di posta"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "High availability services."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:35847 guix-git/doc/guix.texi:35848
#, no-wrap
msgid "Certificate Services"
msgstr "Servizi di certificati"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "TLS certificates via Let's Encrypt."
msgstr "Certificati TLS tramite Let's Encrypt."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:36062 guix-git/doc/guix.texi:36063
#, no-wrap
msgid "DNS Services"
msgstr "Servizi DNS"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "DNS daemons."
msgstr "Demoni DNS."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:36892 guix-git/doc/guix.texi:36893
#, fuzzy, no-wrap
#| msgid "Services"
msgid "VNC Services"
msgstr "Servizi"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "VNC daemons."
msgstr "Demoni VNC."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:37046 guix-git/doc/guix.texi:37047
#, no-wrap
msgid "VPN Services"
msgstr "Servizi VPN"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "VPN daemons."
msgstr "Demoni VPN."

#. type: node
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:37454 guix-git/doc/guix.texi:37455
#: guix-git/doc/guix.texi:37650
#, no-wrap
msgid "Network File System"
msgstr "Filesystem di rete"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "NFS related services."
msgstr "Servizi correlati a NFS."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:37650 guix-git/doc/guix.texi:37651
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Samba Services"
msgstr "Servizi"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "Samba services."
msgstr "Servizi Samba."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:37650 guix-git/doc/guix.texi:37802
#: guix-git/doc/guix.texi:37803
#, no-wrap
msgid "Continuous Integration"
msgstr "Integrazione continua"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "Cuirass and Laminar services."
msgstr "Servizi Cuirass e Laminar."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:38215 guix-git/doc/guix.texi:38216
#, no-wrap
msgid "Power Management Services"
msgstr "Servizi di gestione energetica"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "Extending battery life, etc."
msgstr "Estendere la durata della batteria, ecc."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:39236 guix-git/doc/guix.texi:39237
#, no-wrap
msgid "Audio Services"
msgstr "Servizi audio"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "The MPD."
msgstr "L'MPD."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:39643 guix-git/doc/guix.texi:39644
#, no-wrap
msgid "Virtualization Services"
msgstr "Servizi di virtualizzazione"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "Virtualization services."
msgstr "Servizi di virtualizzazione."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:41369 guix-git/doc/guix.texi:41370
#, no-wrap
msgid "Version Control Services"
msgstr "Servizi di controllo versione"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "Providing remote access to Git repositories."
msgstr "Fornire accesso remoto ai repository Git."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:42774 guix-git/doc/guix.texi:42775
#, no-wrap
msgid "Game Services"
msgstr "Servizi di gioco"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "Game servers."
msgstr "Server di gioco."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:42829 guix-git/doc/guix.texi:42830
#, no-wrap
msgid "PAM Mount Service"
msgstr "Servizio PAM Mount"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "Service to mount volumes when logging in."
msgstr "Servizio per montare volumi al momento del login."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:43010 guix-git/doc/guix.texi:43011
#, no-wrap
msgid "Guix Services"
msgstr "Servizi Guix"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "Services relating specifically to Guix."
msgstr "Servizi relativi specificamente a Guix."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:43651 guix-git/doc/guix.texi:43652
#, no-wrap
msgid "Linux Services"
msgstr "Servizi Linux"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "Services tied to the Linux kernel."
msgstr "Servizi legati al kernel Linux."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:44174 guix-git/doc/guix.texi:44175
#, no-wrap
msgid "Hurd Services"
msgstr "Servizi Hurd"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "Services specific for a Hurd System."
msgstr "Servizi specifici per un sistema Hurd."

#. type: subsection
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
#: guix-git/doc/guix.texi:44216 guix-git/doc/guix.texi:44217
#, no-wrap
msgid "Miscellaneous Services"
msgstr "Servizi vari"

#. type: menuentry
#: guix-git/doc/guix.texi:444 guix-git/doc/guix.texi:19644
msgid "Other services."
msgstr "Altri servizi."

#. type: subsection
#: guix-git/doc/guix.texi:452 guix-git/doc/guix.texi:48243
#: guix-git/doc/guix.texi:48245 guix-git/doc/guix.texi:48246
#, no-wrap
msgid "Service Composition"
msgstr "Composizione dei servizi"

#. type: menuentry
#: guix-git/doc/guix.texi:452 guix-git/doc/guix.texi:48243
msgid "The model for composing services."
msgstr "Il modello per la composizione dei servizi."

#. type: subsection
#: guix-git/doc/guix.texi:452 guix-git/doc/guix.texi:48243
#: guix-git/doc/guix.texi:48301 guix-git/doc/guix.texi:48302
#, no-wrap
msgid "Service Types and Services"
msgstr "Tipi di servizio e servizi"

#. type: menuentry
#: guix-git/doc/guix.texi:452 guix-git/doc/guix.texi:48243
msgid "Types and services."
msgstr "Tipi e servizi."

#. type: subsection
#: guix-git/doc/guix.texi:452 guix-git/doc/guix.texi:48243
#: guix-git/doc/guix.texi:48437 guix-git/doc/guix.texi:48438
#, no-wrap
msgid "Service Reference"
msgstr "Riferimenti per i servizi"

#. type: menuentry
#: guix-git/doc/guix.texi:452 guix-git/doc/guix.texi:48243
msgid "API reference."
msgstr "Riferimenti API."

#. type: subsection
#: guix-git/doc/guix.texi:452 guix-git/doc/guix.texi:48243
#: guix-git/doc/guix.texi:48806 guix-git/doc/guix.texi:48807
#, no-wrap
msgid "Shepherd Services"
msgstr "Servizi Shepherd"

#. type: menuentry
#: guix-git/doc/guix.texi:452 guix-git/doc/guix.texi:48243
msgid "A particular type of service."
msgstr "Un tipo particolare di servizio."

#. type: subsection
#: guix-git/doc/guix.texi:452 guix-git/doc/guix.texi:48243
#: guix-git/doc/guix.texi:49192 guix-git/doc/guix.texi:49193
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "Complex Configurations"
msgstr "Documentazione"

#. type: menuentry
#: guix-git/doc/guix.texi:452 guix-git/doc/guix.texi:48243
msgid "Defining bindings for complex configurations."
msgstr "Definire collegamenti per configurazioni complesse."

#. type: section
#: guix-git/doc/guix.texi:456 guix-git/doc/guix.texi:49586
#: guix-git/doc/guix.texi:49588 guix-git/doc/guix.texi:49589
#, no-wrap
msgid "Chrooting into an existing system"
msgstr "Fare chroot in un sistema esistente"

#. type: section
#: guix-git/doc/guix.texi:463 guix-git/doc/guix.texi:49741
#: guix-git/doc/guix.texi:49743 guix-git/doc/guix.texi:49744
#, no-wrap
msgid "Declaring the Home Environment"
msgstr "Dichiarare l'ambiente home"

#. type: menuentry
#: guix-git/doc/guix.texi:463 guix-git/doc/guix.texi:49741
msgid "Customizing your Home."
msgstr "Personalizzare la tua home."

#. type: section
#: guix-git/doc/guix.texi:463 guix-git/doc/guix.texi:49741
#: guix-git/doc/guix.texi:49833 guix-git/doc/guix.texi:49834
#, no-wrap
msgid "Configuring the Shell"
msgstr "Configurare la shell"

#. type: menuentry
#: guix-git/doc/guix.texi:463 guix-git/doc/guix.texi:49741
msgid "Enabling home environment."
msgstr "Abilitare l'ambiente home."

#. type: section
#: guix-git/doc/guix.texi:463 guix-git/doc/guix.texi:465
#: guix-git/doc/guix.texi:49741 guix-git/doc/guix.texi:49880
#: guix-git/doc/guix.texi:49881
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Home Services"
msgstr "Servizi"

#. type: menuentry
#: guix-git/doc/guix.texi:463 guix-git/doc/guix.texi:49741
msgid "Specifying home services."
msgstr "Specificare i servizi home."

#. type: node
#: guix-git/doc/guix.texi:463 guix-git/doc/guix.texi:49741
#: guix-git/doc/guix.texi:53123
#, no-wrap
msgid "Invoking guix home"
msgstr "Invocare guix home"

#. type: menuentry
#: guix-git/doc/guix.texi:463 guix-git/doc/guix.texi:49741
msgid "Instantiating a home configuration."
msgstr "Instanziare una configurazione home."

#. type: subsection
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
#: guix-git/doc/guix.texi:49933 guix-git/doc/guix.texi:49934
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Essential Home Services"
msgstr "Servizi"

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
msgid "Environment variables, packages, on-* scripts."
msgstr "Variabili d'ambiente, pacchetti, script on-*."

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
msgid "Shells: Shells Home Services"
msgstr "Shell: Servizi Home per le Shell"

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
msgid "POSIX shells, Bash, Zsh."
msgstr "Shell POSIX, Bash, Zsh."

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
msgid "Mcron: Mcron Home Service"
msgstr "Mcron: Servizio Home Mcron"

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
msgid "Scheduled User's Job Execution."
msgstr "Esecuzione pianificata di lavori dell'utente."

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
msgid "Power Management: Power Management Home Services"
msgstr "Gestione energetica: Servizi Home di gestione energetica"

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
msgid "Services for battery power."
msgstr "Servizi per l'alimentazione a batteria."

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
msgid "Shepherd: Shepherd Home Service"
msgstr "Shepherd: Servizio Home Shepherd"

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
msgid "Managing User's Daemons."
msgstr "Gestione dei demoni dell'utente."

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
msgid "SSH: Secure Shell"
msgstr "SSH: Secure Shell"

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
msgid "Setting up the secure shell client."
msgstr "Impostazione del client secure shell."

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
msgid "GPG: GNU Privacy Guard"
msgstr "GPG: GNU Privacy Guard"

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
msgid "Setting up GPG and related tools."
msgstr "Impostazione di GPG e strumenti correlati."

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
#, fuzzy
#| msgid "Services"
msgid "Desktop: Desktop Home Services"
msgstr "Servizi"

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
msgid "Services for graphical environments."
msgstr "Servizi per ambienti grafici."

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
#, fuzzy
#| msgid "Services"
msgid "Guix: Guix Home Services"
msgstr "Servizi"

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
msgid "Services for Guix."
msgstr "Servizi per Guix."

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
#, fuzzy
#| msgid "Services"
msgid "Backup: Backup Home Services"
msgstr "Servizi"

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
#, fuzzy
#| msgid "Services for managing User's fonts."
msgid "Services for backing up User's files."
msgstr "Servizi per gestire i font dell'utente."

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
#, fuzzy
#| msgid "Services"
msgid "Fonts: Fonts Home Services"
msgstr "Servizi"

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
msgid "Services for managing User's fonts."
msgstr "Servizi per gestire i font dell'utente."

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
#, fuzzy
#| msgid "Services"
msgid "Sound: Sound Home Services"
msgstr "Servizi"

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
msgid "Dealing with audio."
msgstr "Gestione dell'audio."

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
#, fuzzy
#| msgid "Services"
msgid "Mail: Mail Home Services"
msgstr "Servizi"

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
msgid "Services for managing mail."
msgstr "Servizi per gestire la posta."

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
#, fuzzy
#| msgid "Services"
msgid "Messaging: Messaging Home Services"
msgstr "Servizi"

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
msgid "Services for managing messaging."
msgstr "Servizi per gestire la messaggistica."

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
#, fuzzy
#| msgid "Services"
msgid "Media: Media Home Services"
msgstr "Servizi"

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
msgid "Services for managing media."
msgstr "Servizi per gestire supporti e media."

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
msgid "Sway: Sway window manager"
msgstr "Sway: Window manager Sway"

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
#, fuzzy
#| msgid "Documentation"
msgid "Setting up the Sway configuration."
msgstr "Documentazione"

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
#, fuzzy
#| msgid "Services"
msgid "Networking: Networking Home Services"
msgstr "Servizi"

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
msgid "Networking services."
msgstr "Servizi di rete."

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
#, fuzzy
#| msgid "Services"
msgid "Miscellaneous: Miscellaneous Home Services"
msgstr "Servizi"

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:49930
msgid "More services."
msgstr "Altri servizi."

#. type: node
#: guix-git/doc/guix.texi:489 guix-git/doc/guix.texi:53543
#: guix-git/doc/guix.texi:53545
#, no-wrap
msgid "platform Reference"
msgstr "Riferimenti per 'platform'"

#. type: menuentry
#: guix-git/doc/guix.texi:489 guix-git/doc/guix.texi:53543
msgid "Detail of platform declarations."
msgstr "Dettagli sulle dichiarazioni di piattaforma."

#. type: section
#: guix-git/doc/guix.texi:489 guix-git/doc/guix.texi:53543
#: guix-git/doc/guix.texi:53592 guix-git/doc/guix.texi:53593
#, no-wrap
msgid "Supported Platforms"
msgstr "Piattaforme supportate"

#. type: menuentry
#: guix-git/doc/guix.texi:489 guix-git/doc/guix.texi:53543
msgid "Description of the supported platforms."
msgstr "Descrizione delle piattaforme supportate."

#. type: chapter
#: guix-git/doc/guix.texi:491 guix-git/doc/guix.texi:53670
#, no-wrap
msgid "Creating System Images"
msgstr "Creare immagini di sistema"

#. type: node
#: guix-git/doc/guix.texi:496 guix-git/doc/guix.texi:53702
#: guix-git/doc/guix.texi:53704
#, no-wrap
msgid "image Reference"
msgstr "Riferimenti per 'image'"

#. type: menuentry
#: guix-git/doc/guix.texi:496 guix-git/doc/guix.texi:53702
msgid "Detail of image declarations."
msgstr "Dettagli sulle dichiarazioni di immagine."

#. type: section
#: guix-git/doc/guix.texi:496 guix-git/doc/guix.texi:53702
#: guix-git/doc/guix.texi:53858 guix-git/doc/guix.texi:53859
#, no-wrap
msgid "Instantiate an Image"
msgstr "Instanziare un'immagine"

#. type: menuentry
#: guix-git/doc/guix.texi:496 guix-git/doc/guix.texi:53702
msgid "How to instantiate an image record."
msgstr "Come instanziare un record di immagine."

#. type: section
#: guix-git/doc/guix.texi:496 guix-git/doc/guix.texi:53702
#: guix-git/doc/guix.texi:54028 guix-git/doc/guix.texi:54029
#, no-wrap
msgid "image-type Reference"
msgstr "Riferimenti per 'image-type'"

#. type: menuentry
#: guix-git/doc/guix.texi:496 guix-git/doc/guix.texi:53702
msgid "Detail of image types declaration."
msgstr "Dettagli sulla dichiarazione dei tipi di immagine."

#. type: section
#: guix-git/doc/guix.texi:496 guix-git/doc/guix.texi:53702
#: guix-git/doc/guix.texi:54157 guix-git/doc/guix.texi:54158
#, fuzzy, no-wrap
#| msgid "Modules"
msgid "Image Modules"
msgstr "Moduli"

#. type: menuentry
#: guix-git/doc/guix.texi:496 guix-git/doc/guix.texi:53702
msgid "Definition of image modules."
msgstr "Definizione dei moduli di immagine."

#. type: section
#: guix-git/doc/guix.texi:498 guix-git/doc/guix.texi:53705
#, no-wrap
msgid "@code{image} Reference"
msgstr "Riferimenti per @code{image}"

#. type: node
#: guix-git/doc/guix.texi:500 guix-git/doc/guix.texi:53794
#: guix-git/doc/guix.texi:53796
#, no-wrap
msgid "partition Reference"
msgstr "Riferimenti per 'partition'"

#. type: section
#: guix-git/doc/guix.texi:505 guix-git/doc/guix.texi:54227
#: guix-git/doc/guix.texi:54229 guix-git/doc/guix.texi:54230
#, no-wrap
msgid "Separate Debug Info"
msgstr "Informazioni di debug separate"

#. type: menuentry
#: guix-git/doc/guix.texi:505 guix-git/doc/guix.texi:54227
msgid "Installing 'debug' outputs."
msgstr "Installare output di 'debug'."

#. type: section
#: guix-git/doc/guix.texi:505 guix-git/doc/guix.texi:54227
#: guix-git/doc/guix.texi:54302 guix-git/doc/guix.texi:54303
#, no-wrap
msgid "Rebuilding Debug Info"
msgstr "Ricompilare le informazioni di debug"

#. type: menuentry
#: guix-git/doc/guix.texi:505 guix-git/doc/guix.texi:54227
msgid "Building missing debug info."
msgstr "Compilare le informazioni di debug mancanti."

#. type: node
#: guix-git/doc/guix.texi:510 guix-git/doc/guix.texi:54638
#: guix-git/doc/guix.texi:54640
#, no-wrap
msgid "Full-Source Bootstrap"
msgstr "Bootstrap completo da sorgente"

#. type: menuentry
#: guix-git/doc/guix.texi:510 guix-git/doc/guix.texi:54638
msgid "A Bootstrap worthy of GNU."
msgstr "Un bootstrap degno di GNU."

#. type: section
#: guix-git/doc/guix.texi:510 guix-git/doc/guix.texi:54638
#: guix-git/doc/guix.texi:54727 guix-git/doc/guix.texi:54728
#, no-wrap
msgid "Preparing to Use the Bootstrap Binaries"
msgstr "Preparazione all'uso dei binari di bootstrap"

#. type: menuentry
#: guix-git/doc/guix.texi:510 guix-git/doc/guix.texi:54638
msgid "Building that what matters most."
msgstr "Compilare ciò che conta di più."

#. type: cindex
#: guix-git/doc/guix.texi:518
#, no-wrap
msgid "purpose"
msgstr "scopo"

#. type: Plain text
#: guix-git/doc/guix.texi:526
msgid "GNU Guix@footnote{``Guix'' is pronounced like ``geeks'', or ``ɡiːks'' using the international phonetic alphabet (IPA).} is a package management tool for and distribution of the GNU system.  Guix makes it easy for unprivileged users to install, upgrade, or remove software packages, to roll back to a previous package set, to build packages from source, and generally assists with the creation and maintenance of software environments."
msgstr "GNU Guix@footnote{``Guix'' si pronuncia come «ghiks», o «ɡiːks» usando l'alfabeto fonetico internazionale (IPA).} è uno strumento di gestione dei pacchetti e una distribuzione del sistema GNU. Guix rende facile per gli utenti non privilegiati installare, aggiornare o rimuovere pacchetti software, tornare a un insieme di pacchetti precedente, compilare pacchetti dai sorgenti, e in generale assiste con la creazione e la manutenzione di ambienti software."

#. type: cindex
#: guix-git/doc/guix.texi:527 guix-git/doc/guix.texi:602
#: guix-git/doc/guix.texi:724
#, no-wrap
msgid "Guix System"
msgstr "Guix System"

#. type: cindex
#: guix-git/doc/guix.texi:528
#, no-wrap
msgid "GuixSD, now Guix System"
msgstr "GuixSD, ora Guix System"

#. type: cindex
#: guix-git/doc/guix.texi:529
#, no-wrap
msgid "Guix System Distribution, now Guix System"
msgstr "Guix System Distribution, ora Guix System"

#. type: Plain text
#: guix-git/doc/guix.texi:538
msgid "You can install GNU@tie{}Guix on top of an existing GNU/Linux system where it complements the available tools without interference (@pxref{Installation}), or you can use it as a standalone operating system distribution, @dfn{Guix@tie{}System}@footnote{We used to refer to Guix System as ``Guix System Distribution'' or ``GuixSD''.  We now consider it makes more sense to group everything under the ``Guix'' banner since, after all, Guix System is readily available through the @command{guix system} command, even if you're using a different distro underneath!}.  @xref{GNU Distribution}."
msgstr "È possibile installare GNU@tie{}Guix su un sistema GNU/Linux esistente, dove completa gli strumenti disponibili senza interferenze (@pxref{Installation}), oppure si può usare come una distribuzione di sistema operativo autonoma, @dfn{Guix@tie{}System}@footnote{In passato ci riferivamo a Guix System come ``Guix System Distribution'' o ``GuixSD''. Ora riteniamo che abbia più senso raggruppare tutto sotto l'insegna di ``Guix'' poiché, dopotutto, Guix System è prontamente disponibile tramite il comando @command{guix system}, anche se si sta usando una distro diversa sotto!}. @xref{GNU Distribution}."

#. type: cindex
#: guix-git/doc/guix.texi:547
#, no-wrap
msgid "user interfaces"
msgstr "interfacce utente"

#. type: Plain text
#: guix-git/doc/guix.texi:553
msgid "Guix provides a command-line package management interface (@pxref{Package Management}), tools to help with software development (@pxref{Development}), command-line utilities for more advanced usage (@pxref{Utilities}), as well as Scheme programming interfaces (@pxref{Programming Interface})."
msgstr "Guix fornisce un'interfaccia di gestione dei pacchetti da riga di comando (@pxref{Package Management}), strumenti per aiutare nello sviluppo software (@pxref{Development}), utilità da riga di comando per un uso più avanzato (@pxref{Utilities}), così come interfacce di programmazione Scheme (@pxref{Programming Interface})."

#. type: cindex
#: guix-git/doc/guix.texi:553 guix-git/doc/guix.texi:890
#, no-wrap
msgid "build daemon"
msgstr "demone di build"

#. type: Plain text
#: guix-git/doc/guix.texi:557
msgid "Its @dfn{build daemon} is responsible for building packages on behalf of users (@pxref{Setting Up the Daemon}) and for downloading pre-built binaries from authorized sources (@pxref{Substitutes})."
msgstr "Il suo @dfn{demone di build} è responsabile della compilazione dei pacchetti per conto degli utenti (@pxref{Setting Up the Daemon}) e dello scaricamento di binari precompilati da fonti autorizzate (@pxref{Substitutes})."

#. type: cindex
#: guix-git/doc/guix.texi:558
#, no-wrap
msgid "extensibility of the distribution"
msgstr "estensibilità della distribuzione"

#. type: cindex
#: guix-git/doc/guix.texi:559 guix-git/doc/guix.texi:7828
#, no-wrap
msgid "customization, of packages"
msgstr "personalizzazione, dei pacchetti"

#. type: Plain text
#: guix-git/doc/guix.texi:568
msgid "Guix includes package definitions for many GNU and non-GNU packages, all of which @uref{https://www.gnu.org/philosophy/free-sw.html, respect the user's computing freedom}.  It is @emph{extensible}: users can write their own package definitions (@pxref{Defining Packages}) and make them available as independent package modules (@pxref{Package Modules}).  It is also @emph{customizable}: users can @emph{derive} specialized package definitions from existing ones, including from the command line (@pxref{Package Transformation Options})."
msgstr "Guix include definizioni di pacchetti per molti pacchetti GNU e non-GNU, tutti i quali @uref{https://www.gnu.org/philosophy/free-sw.html, rispettano la libertà informatica dell'utente}. È @emph{estensibile}: gli utenti possono scrivere le proprie definizioni di pacchetto (@pxref{Defining Packages}) e renderle disponibili come moduli di pacchetti indipendenti (@pxref{Package Modules}). È anche @emph{customizable}: gli utenti possono @emph{derivare} definizioni di pacchetti specializzate da quelle esistenti, anche da riga di comando (@pxref{Package Transformation Options})."

#. type: cindex
#: guix-git/doc/guix.texi:569
#, no-wrap
msgid "functional package management"
msgstr "gestione funzionale dei pacchetti"

#. type: cindex
#: guix-git/doc/guix.texi:570
#, no-wrap
msgid "isolation"
msgstr "isolamento"

#. type: Plain text
#: guix-git/doc/guix.texi:585
msgid "Under the hood, Guix implements the @dfn{functional package management} discipline pioneered by Nix (@pxref{Acknowledgments}).  In Guix, the package build and installation process is seen as a @emph{function}, in the mathematical sense.  That function takes inputs, such as build scripts, a compiler, and libraries, and returns an installed package.  As a pure function, its result depends solely on its inputs---for instance, it cannot refer to software or scripts that were not explicitly passed as inputs.  A build function always produces the same result when passed a given set of inputs.  It cannot alter the environment of the running system in any way; for instance, it cannot create, modify, or delete files outside of its build and installation directories.  This is achieved by running build processes in isolated environments (or @dfn{containers}), where only their explicit inputs are visible."
msgstr "Sotto il cofano, Guix implementa la disciplina di @dfn{gestione funzionale dei pacchetti} introdotta da Nix (@pxref{Acknowledgments}). In Guix, il processo di build e installazione di un pacchetto è visto come una @emph{funzione}, nel senso matematico. Tale funzione prende degli input, come script di build, un compilatore e delle librerie, e restituisce un pacchetto installato. Come funzione pura, il suo risultato dipende unicamente dai suoi input - ad esempio, non può fare riferimento a software o script che non sono stati passati esplicitamente come input. Una funzione di build produce sempre lo stesso risultato quando le viene fornito un dato insieme di input. Non può alterare in alcun modo l'ambiente del sistema in esecuzione; ad esempio, non può creare, modificare o eliminare file al di fuori delle sue directory di build e installazione. Questo si ottiene eseguendo i processi di build in ambienti isolati (o @dfn{containers}), dove sono visibili solo i loro input espliciti."

#. type: cindex
#: guix-git/doc/guix.texi:586 guix-git/doc/guix.texi:4400
#: guix-git/doc/guix.texi:11591
#, no-wrap
msgid "store"
msgstr "store"

#. type: Plain text
#: guix-git/doc/guix.texi:593
msgid "The result of package build functions is @dfn{cached} in the file system, in a special directory called @dfn{the store} (@pxref{The Store}).  Each package is installed in a directory of its own in the store---by default under @file{/gnu/store}.  The directory name contains a hash of all the inputs used to build that package; thus, changing an input yields a different directory name."
msgstr "Il risultato delle funzioni di build dei pacchetti viene @dfn{cached} nel file system, in una directory speciale chiamata @dfn{lo store} (@pxref{The Store}). Ogni pacchetto è installato in una propria directory nello store - per impostazione predefinita sotto @file{/gnu/store}. Il nome della directory contiene un hash di tutti gli input usati per compilare quel pacchetto; quindi, cambiare un input produce un nome di directory diverso."

#. type: Plain text
#: guix-git/doc/guix.texi:597
msgid "This approach is the foundation for the salient features of Guix: support for transactional package upgrade and rollback, per-user installation, and garbage collection of packages (@pxref{Features})."
msgstr "Questo approccio è la base per le caratteristiche salienti di Guix: supporto per aggiornamenti e rollback transazionali dei pacchetti, installazione per utente e garbage collection dei pacchetti (@pxref{Features})."

#. type: Plain text
#: guix-git/doc/guix.texi:612
msgid "Guix comes with a distribution of the GNU system consisting entirely of free software@footnote{The term ``free'' here refers to the @url{https://www.gnu.org/philosophy/free-sw.html,freedom provided to users of that software}.}.  The distribution can be installed on its own (@pxref{System Installation}), but it is also possible to install Guix as a package manager on top of an installed GNU/Linux system (@pxref{Installation}).  When we need to distinguish between the two, we refer to the standalone distribution as Guix@tie{}System."
msgstr "Guix viene fornito con una distribuzione del sistema GNU composta interamente da software libero@footnote{Il termine ``libero'' qui si riferisce alla @url{https://www.gnu.org/philosophy/free-sw.html,libertà fornita agli utenti di quel software}.}. La distribuzione può essere installata da sola (@pxref{System Installation}), ma è anche possibile installare Guix come gestore di pacchetti su un sistema GNU/Linux già installato (@pxref{Installation}). Quando abbiamo bisogno di distinguere tra i due, ci riferiamo alla distribuzione autonoma come Guix@tie{}System."

#. type: Plain text
#: guix-git/doc/guix.texi:618
msgid "The distribution provides core GNU packages such as GNU libc, GCC, and Binutils, as well as many GNU and non-GNU applications.  The complete list of available packages can be browsed @url{https://www.gnu.org/software/guix/packages,on-line} or by running @command{guix package} (@pxref{Invoking guix package}):"
msgstr "La distribuzione fornisce pacchetti GNU di base come GNU libc, GCC e Binutils, così come molte applicazioni GNU e non-GNU. L'elenco completo dei pacchetti disponibili può essere consultato @url{https://www.gnu.org/software/guix/packages,on-line} o eseguendo @command{guix package} (@pxref{Invoking guix package}):"

#. type: example
#: guix-git/doc/guix.texi:621
#, no-wrap
msgid "guix package --list-available\n"
msgstr "guix package --list-available\n"

#. type: Plain text
#: guix-git/doc/guix.texi:627
msgid "Our goal is to provide a practical 100% free software distribution of Linux-based and other variants of GNU, with a focus on the promotion and tight integration of GNU components, and an emphasis on programs and tools that help users exert that freedom."
msgstr "Il nostro obiettivo è fornire una distribuzione pratica di software libero al 100% di varianti basate su Linux e altre di GNU, con un focus sulla promozione e l'integrazione stretta dei componenti GNU, e un'enfasi su programmi e strumenti che aiutano gli utenti a esercitare tale libertà."

#. type: Plain text
#: guix-git/doc/guix.texi:629
msgid "Packages are currently available on the following platforms:"
msgstr "I pacchetti sono attualmente disponibili sulle seguenti piattaforme:"

#. type: defvar
#: guix-git/doc/guix.texi:632 guix-git/doc/guix.texi:2297
#: guix-git/doc/guix.texi:53630
#, no-wrap
msgid "x86_64-linux"
msgstr "x86_64-linux"

#. type: table
#: guix-git/doc/guix.texi:634
msgid "Intel/AMD @code{x86_64} architecture, Linux-Libre kernel."
msgstr "Architettura Intel/AMD @code{x86_64}, kernel Linux-Libre."

#. type: defvar
#: guix-git/doc/guix.texi:635 guix-git/doc/guix.texi:2300
#: guix-git/doc/guix.texi:53626
#, no-wrap
msgid "i686-linux"
msgstr "i686-linux"

#. type: table
#: guix-git/doc/guix.texi:637
msgid "Intel 32-bit architecture (IA32), Linux-Libre kernel."
msgstr "Architettura Intel a 32 bit (IA32), kernel Linux-Libre."

#. type: item
#: guix-git/doc/guix.texi:638
#, no-wrap
msgid "armhf-linux"
msgstr "armhf-linux"

#. type: table
#: guix-git/doc/guix.texi:642
msgid "ARMv7-A architecture with hard float, Thumb-2 and NEON, using the EABI hard-float application binary interface (ABI), and Linux-Libre kernel."
msgstr "Architettura ARMv7-A con hard float, Thumb-2 e NEON, usando l'interfaccia binaria applicativa (ABI) EABI hard-float, e kernel Linux-Libre."

#. type: defvar
#: guix-git/doc/guix.texi:643 guix-git/doc/guix.texi:53602
#, no-wrap
msgid "aarch64-linux"
msgstr "aarch64-linux"

#. type: table
#: guix-git/doc/guix.texi:645
msgid "little-endian 64-bit ARMv8-A processors, Linux-Libre kernel."
msgstr "Processori ARMv8-A a 64 bit little-endian, kernel Linux-Libre."

#. type: defvar
#: guix-git/doc/guix.texi:646 guix-git/doc/guix.texi:53649
#, no-wrap
msgid "i586-gnu"
msgstr "i586-gnu"

#. type: table
#: guix-git/doc/guix.texi:649
msgid "@uref{https://hurd.gnu.org, GNU/Hurd} on the Intel 32-bit architecture (IA32)."
msgstr "@uref{https://hurd.gnu.org, GNU/Hurd} sull'architettura Intel a 32 bit (IA32)."

#. type: table
#: guix-git/doc/guix.texi:655
msgid "This configuration is experimental and under development.  The easiest way for you to give it a try is by setting up an instance of @code{hurd-vm-service-type} on your GNU/Linux machine (@pxref{transparent-emulation-qemu, @code{hurd-vm-service-type}}).  @xref{Contributing}, on how to help!"
msgstr "Questa configurazione è sperimentale e in fase di sviluppo. Il modo più semplice per provarla è impostare un'istanza di @code{hurd-vm-service-type} sulla tua macchina GNU/Linux (@pxref{transparent-emulation-qemu, @code{hurd-vm-service-type}}). @xref{Contributing}, su come aiutare!"

#. type: item
#: guix-git/doc/guix.texi:656
#, no-wrap
msgid "x86_64-gnu"
msgstr "x86_64-gnu"

#. type: table
#: guix-git/doc/guix.texi:659
msgid "@uref{https://hurd.gnu.org, GNU/Hurd} on the @code{x86_64} Intel/AMD 64-bit architecture."
msgstr "@uref{https://hurd.gnu.org, GNU/Hurd} sull'architettura Intel/AMD a 64 bit @code{x86_64}."

#. type: table
#: guix-git/doc/guix.texi:662
msgid "This configuration is even more experimental and under heavy upstream development."
msgstr "Questa configurazione è ancora più sperimentale e in forte sviluppo upstream."

#. type: item
#: guix-git/doc/guix.texi:663
#, no-wrap
msgid "mips64el-linux (unsupported)"
msgstr "mips64el-linux (non supportato)"

#. type: table
#: guix-git/doc/guix.texi:669
msgid "little-endian 64-bit MIPS processors, specifically the Loongson series, n32 ABI, and Linux-Libre kernel.  This configuration is no longer fully supported; in particular, there is no ongoing work to ensure that this architecture still works.  Should someone decide they wish to revive this architecture then the code is still available."
msgstr "Processori MIPS a 64 bit little-endian, in particolare la serie Loongson, ABI n32 e kernel Linux-Libre. Questa configurazione non è più completamente supportata; in particolare, non c'è un lavoro in corso per garantire che questa architettura funzioni ancora. Se qualcuno decidesse di voler ripristinare questa architettura, il codice è ancora disponibile."

#. type: item
#: guix-git/doc/guix.texi:670
#, no-wrap
msgid "powerpc-linux (unsupported)"
msgstr "powerpc-linux (non supportato)"

#. type: table
#: guix-git/doc/guix.texi:675
msgid "big-endian 32-bit PowerPC processors, specifically the PowerPC G4 with AltiVec support, and Linux-Libre kernel.  This configuration is not fully supported and there is no ongoing work to ensure this architecture works."
msgstr "Processori PowerPC a 32 bit big-endian, in particolare il PowerPC G4 con supporto AltiVec, e kernel Linux-Libre. Questa configurazione non è completamente supportata e non c'è un lavoro in corso per garantire che questa architettura funzioni."

#. type: table
#: guix-git/doc/guix.texi:686
msgid "little-endian 64-bit Power ISA processors, Linux-Libre kernel.  This includes POWER9 systems such as the @uref{https://www.fsf.org/news/talos-ii-mainboard-and-talos-ii-lite-mainboard-now-fsf-certified-to-respect-your-freedom, RYF Talos II mainboard}. This platform is available as a \"technology preview\": although it is supported, substitutes are not yet available from the build farm (@pxref{Substitutes}), and some packages may fail to build (@pxref{Tracking Bugs and Changes}).  That said, the Guix community is actively working on improving this support, and now is a great time to try it and get involved!"
msgstr "Processori Power ISA a 64 bit little-endian, kernel Linux-Libre. Questo include sistemi POWER9 come la @uref{https://www.fsf.org/news/talos-ii-mainboard-and-talos-ii-lite-mainboard-now-fsf-certified-to-respect-your-freedom, scheda madre RYF Talos II}. Questa piattaforma è disponibile come \"anteprima tecnologica\": sebbene sia supportata, i sostituti non sono ancora disponibili dalla build farm (@pxref{Substitutes}), e alcuni pacchetti potrebbero non compilare (@pxref{Tracking Bugs and Changes}). Detto questo, la comunità di Guix sta lavorando attivamente per migliorare questo supporto, e ora è un ottimo momento per provarlo e farsi coinvolgere!"

#. type: defvar
#: guix-git/doc/guix.texi:687 guix-git/doc/guix.texi:53622
#, no-wrap
msgid "riscv64-linux"
msgstr "riscv64-linux"

#. type: table
#: guix-git/doc/guix.texi:695
msgid "little-endian 64-bit RISC-V processors, specifically RV64GC, and Linux-Libre kernel. This platform is available as a \"technology preview\": although it is supported, substitutes are not yet available from the build farm (@pxref{Substitutes}), and some packages may fail to build (@pxref{Tracking Bugs and Changes}).  That said, the Guix community is actively working on improving this support, and now is a great time to try it and get involved!"
msgstr "Processori RISC-V a 64 bit little-endian, in particolare RV64GC, e kernel Linux-Libre. Questa piattaforma è disponibile come \"anteprima tecnologica\": sebbene sia supportata, i sostituti non sono ancora disponibili dalla build farm (@pxref{Substitutes}), e alcuni pacchetti potrebbero non compilare (@pxref{Tracking Bugs and Changes}). Detto questo, la comunità di Guix sta lavorando attivamente per migliorare questo supporto, e ora è un ottimo momento per provarlo e farsi coinvolgere!"

#. type: Plain text
#: guix-git/doc/guix.texi:705
msgid "With Guix@tie{}System, you @emph{declare} all aspects of the operating system configuration and Guix takes care of instantiating the configuration in a transactional, reproducible, and stateless fashion (@pxref{System Configuration}).  Guix System uses the Linux-libre kernel, the Shepherd initialization system (@pxref{Introduction,,, shepherd, The GNU Shepherd Manual}), the well-known GNU utilities and tool chain, as well as the graphical environment or system services of your choice."
msgstr "Con Guix@tie{}System, tu @emph{declare} tutti gli aspetti della configurazione del sistema operativo e Guix si occupa di instanziare la configurazione in modo transazionale, riproducibile e senza stato (@pxref{System Configuration}). Guix System utilizza il kernel Linux-libre, il sistema di inizializzazione Shepherd (@pxref{Introduction,,, shepherd, The GNU Shepherd Manual}), le ben note utilità e catena di compilazione GNU, così come l'ambiente grafico o i servizi di sistema di tua scelta."

#. type: Plain text
#: guix-git/doc/guix.texi:709
msgid "Guix System is available on all the above platforms except @code{mips64el-linux}, @code{powerpc-linux}, @code{powerpc64le-linux} and @code{riscv64-linux}."
msgstr "Guix System è disponibile su tutte le piattaforme sopra elencate eccetto @code{mips64el-linux}, @code{powerpc-linux}, @code{powerpc64le-linux} e @code{riscv64-linux}."

#. type: Plain text
#: guix-git/doc/guix.texi:713
msgid "For information on porting to other architectures or kernels, @pxref{Porting}."
msgstr "Per informazioni sul porting ad altre architetture o kernel, @pxref{Porting}."

#. type: Plain text
#: guix-git/doc/guix.texi:716
msgid "Building this distribution is a cooperative effort, and you are invited to join! @xref{Contributing}, for information about how you can help."
msgstr "La creazione di questa distribuzione è uno sforzo cooperativo, e sei invitato a unirti! @xref{Contributing}, per informazioni su come puoi aiutare."

#. type: cindex
#: guix-git/doc/guix.texi:722
#, no-wrap
msgid "installing Guix"
msgstr "installare Guix"

#. type: cindex
#: guix-git/doc/guix.texi:723 guix-git/doc/guix.texi:1860
#, no-wrap
msgid "foreign distro"
msgstr "distro esterna"

#. type: Plain text
#: guix-git/doc/guix.texi:731
msgid "You can install the package management tool Guix on top of an existing GNU/Linux or GNU/Hurd system@footnote{Hurd support is currently limited.}, referred to as a @dfn{foreign distro}.  If, instead, you want to install the complete, standalone GNU system distribution, @dfn{Guix@tie{}System}, @pxref{System Installation}.  This section is concerned only with the installation of Guix on a foreign distro."
msgstr "Puoi installare lo strumento di gestione dei pacchetti Guix su un sistema GNU/Linux o GNU/Hurd esistente@footnote{Il supporto a Hurd è attualmente limitato.}, chiamato @dfn{distro esterna}. Se, invece, vuoi installare la distribuzione di sistema GNU completa e autonoma, @dfn{Guix@tie{}System}, @pxref{System Installation}. Questa sezione riguarda solo l'installazione di Guix su una distro esterna."

#. type: quotation
#: guix-git/doc/guix.texi:735 guix-git/doc/guix.texi:767
msgid "This section only applies to systems without Guix.  Following it for existing Guix installations will overwrite important system files."
msgstr "Questa sezione si applica solo ai sistemi senza Guix. Seguirla per installazioni esistenti di Guix sovrascriverà file di sistema importanti."

#. type: cindex
#: guix-git/doc/guix.texi:737
#, no-wrap
msgid "directories related to foreign distro"
msgstr "directory relative a distro esterna"

#. type: Plain text
#: guix-git/doc/guix.texi:742
msgid "When installed on a foreign distro, GNU@tie{}Guix complements the available tools without interference.  Its data lives exclusively in two directories, usually @file{/gnu/store} and @file{/var/guix}; other files on your system, such as @file{/etc}, are left untouched."
msgstr "Quando installato su una distro esterna, GNU@tie{}Guix completa gli strumenti disponibili senza interferenze. I suoi dati risiedono esclusivamente in due directory, solitamente @file{/gnu/store} e @file{/var/guix}; altri file sul tuo sistema, come @file{/etc}, non vengono toccati."

#. type: Plain text
#: guix-git/doc/guix.texi:745
msgid "Once installed, Guix can be updated by running @command{guix pull} (@pxref{Invoking guix pull})."
msgstr "Una volta installato, Guix può essere aggiornato eseguendo @command{guix pull} (@pxref{Invoking guix pull})."

#. type: cindex
#: guix-git/doc/guix.texi:757
#, no-wrap
msgid "installing Guix from binaries"
msgstr "installare Guix da binari"

#. type: cindex
#: guix-git/doc/guix.texi:758
#, no-wrap
msgid "installer script"
msgstr "script di installazione"

#. type: Plain text
#: guix-git/doc/guix.texi:763
msgid "This section describes how to install Guix from a self-contained tarball providing binaries for Guix and for all its dependencies.  This is often quicker than installing from source, described later (@pxref{Building from Git})."
msgstr "Questa sezione descrive come installare Guix da un tarball auto-contenuto che fornisce i binari per Guix e per tutte le sue dipendenze. Questo è spesso più veloce dell'installazione dai sorgenti, descritta più avanti (@pxref{Building from Git})."

#. type: Plain text
#: guix-git/doc/guix.texi:773
msgid "Some GNU/Linux distributions, such as Debian, Ubuntu, and openSUSE provide Guix through their own package managers.  The version of Guix may be older than @value{VERSION} but you can update it afterwards by running @samp{guix pull}."
msgstr "Alcune distribuzioni GNU/Linux, come Debian, Ubuntu e openSUSE, forniscono Guix tramite i loro gestori di pacchetti. La versione di Guix potrebbe essere più vecchia di @value{VERSION} ma puoi aggiornarla in seguito eseguendo @samp{guix pull}."

#. type: Plain text
#: guix-git/doc/guix.texi:778
msgid "We advise system administrators who install Guix, both from the installation script or @i{via} the native package manager of their foreign distribution, to also regularly read and follow security notices, as shown by @command{guix pull}."
msgstr "Consigliamo agli amministratori di sistema che installano Guix, sia dallo script di installazione che @i{via} il gestore di pacchetti nativo della loro distribuzione esterna, di leggere e seguire regolarmente gli avvisi di sicurezza, come mostrato da @command{guix pull}."

#. type: Plain text
#: guix-git/doc/guix.texi:780
msgid "For Debian or derivatives such as Ubuntu or Trisquel, call:"
msgstr "Per Debian o derivate come Ubuntu o Trisquel, chiama:"

#. type: example
#: guix-git/doc/guix.texi:783
#, no-wrap
msgid "sudo apt install guix\n"
msgstr "sudo apt install guix\n"

#. type: Plain text
#: guix-git/doc/guix.texi:786
msgid "Likewise, on openSUSE:"
msgstr "Allo stesso modo, su openSUSE:"

#. type: example
#: guix-git/doc/guix.texi:789
#, no-wrap
msgid "sudo zypper install guix\n"
msgstr "sudo zypper install guix\n"

#. type: Plain text
#: guix-git/doc/guix.texi:793
msgid "If you are running Parabola, after enabling the pcr (Parabola Community Repo) repository, you can install Guix with:"
msgstr "Se stai usando Parabola, dopo aver abilitato il repository pcr (Parabola Community Repo), puoi installare Guix con:"

#. type: example
#: guix-git/doc/guix.texi:795
#, no-wrap
msgid "sudo pacman -S guix\n"
msgstr "sudo pacman -S guix\n"

#. type: Plain text
#: guix-git/doc/guix.texi:803
msgid "The Guix project also provides a shell script, @file{guix-install.sh}, which automates the binary installation process without use of a foreign distro package manager@footnote{@uref{https://guix.gnu.org/guix-install.sh}}.  Use of @file{guix-install.sh} requires Bash, GnuPG, GNU@tie{}tar, wget, and Xz."
msgstr "Il progetto Guix fornisce anche uno script di shell, @file{guix-install.sh}, che automatizza il processo di installazione binaria senza l'uso di un gestore di pacchetti di una distro esterna@footnote{@uref{https://guix.gnu.org/guix-install.sh}}. L'uso di @file{guix-install.sh} richiede Bash, GnuPG, GNU@tie{}tar, wget e Xz."

#. type: Plain text
#: guix-git/doc/guix.texi:805
msgid "The script guides you through the following:"
msgstr "Lo script ti guiderà attraverso quanto segue:"

#. type: item
#: guix-git/doc/guix.texi:807
#, no-wrap
msgid "Downloading and extracting the binary tarball"
msgstr "Scaricare ed estrarre il tarball binario"

#. type: item
#: guix-git/doc/guix.texi:808
#, no-wrap
msgid "Setting up the build daemon"
msgstr "Impostare il demone di build"

#. type: item
#: guix-git/doc/guix.texi:809
#, no-wrap
msgid "Making the ‘guix’ command available to non-root users"
msgstr "Rendere il comando 'guix' disponibile agli utenti non root"

#. type: item
#: guix-git/doc/guix.texi:810
#, no-wrap
msgid "Configuring substitute servers"
msgstr "Configurare i server di sostituti"

#. type: Plain text
#: guix-git/doc/guix.texi:814
msgid "As root, run:"
msgstr "Come root, esegui:"

#. type: example
#: guix-git/doc/guix.texi:820
#, no-wrap
msgid ""
"# cd /tmp\n"
"# wget https://guix.gnu.org/guix-install.sh\n"
"# chmod +x guix-install.sh\n"
"# ./guix-install.sh\n"
msgstr ""
"# cd /tmp\n"
"# wget https://guix.gnu.org/guix-install.sh\n"
"# chmod +x guix-install.sh\n"
"# ./guix-install.sh\n"

#. type: Plain text
#: guix-git/doc/guix.texi:824
msgid "The script to install Guix is also packaged in Parabola (in the pcr repository). You can install and run it with:"
msgstr "Lo script per installare Guix è anche pacchettizzato in Parabola (nel repository pcr). Puoi installarlo ed eseguirlo con:"

#. type: example
#: guix-git/doc/guix.texi:827
#, no-wrap
msgid ""
"sudo pacman -S guix-installer\n"
"sudo guix-install.sh\n"
msgstr ""
"sudo pacman -S guix-installer\n"
"sudo guix-install.sh\n"

#. type: quotation
#: guix-git/doc/guix.texi:837
msgid "By default, @file{guix-install.sh} will configure Guix to download pre-built package binaries, called @dfn{substitutes} (@pxref{Substitutes}), from the project's build farms.  If you choose not to permit this, Guix will build @emph{everything} from source, making each installation and upgrade very expensive.  @xref{On Trusting Binaries} for a discussion of why you may want to build packages from source."
msgstr "Per impostazione predefinita, @file{guix-install.sh} configurerà Guix per scaricare binari di pacchetti precompilati, chiamati @dfn{sostituti} (@pxref{Substitutes}), dalle build farm del progetto. Se scegli di non permetterlo, Guix compilerà @emph{everything} dai sorgenti, rendendo ogni installazione e aggiornamento molto costoso. @xref{On Trusting Binaries} per una discussione sul perché potresti voler compilare i pacchetti dai sorgenti."

#. type: cindex
#: guix-git/doc/guix.texi:838 guix-git/doc/guix.texi:3906
#: guix-git/doc/guix.texi:20348
#, no-wrap
msgid "substitutes, authorization thereof"
msgstr "sostituti, autorizzazione degli stessi"

#. type: quotation
#: guix-git/doc/guix.texi:842
msgid "To use substitutes from @code{@value{SUBSTITUTE-SERVER-1}}, @code{@value{SUBSTITUTE-SERVER-2}} or a mirror, you must authorize them.  For example,"
msgstr "Per usare i sostituti da @code{@value{SUBSTITUTE-SERVER-1}}, @code{@value{SUBSTITUTE-SERVER-2}} o un mirror, devi autorizzarli. Ad esempio,"

#. type: example
#: guix-git/doc/guix.texi:848
#, no-wrap
msgid ""
"# guix archive --authorize < \\\n"
"     ~root/.config/guix/current/share/guix/@value{SUBSTITUTE-SERVER-1}.pub\n"
"# guix archive --authorize < \\\n"
"     ~root/.config/guix/current/share/guix/@value{SUBSTITUTE-SERVER-2}.pub\n"
msgstr ""
"# guix archive --authorize < \\\n"
"     ~root/.config/guix/current/share/guix/@value{SUBSTITUTE-SERVER-1}.pub\n"
"# guix archive --authorize < \\\n"
"     ~root/.config/guix/current/share/guix/@value{SUBSTITUTE-SERVER-2}.pub\n"

#. type: Plain text
#: guix-git/doc/guix.texi:854
msgid "When you're done installing Guix, @pxref{Application Setup} for extra configuration you might need, and @ref{Getting Started} for your first steps!"
msgstr "Quando hai finito di installare Guix, @pxref{Application Setup} per una configurazione extra di cui potresti aver bisogno, e @ref{Getting Started} per i tuoi primi passi!"

#. type: quotation
#: guix-git/doc/guix.texi:858
msgid "The binary installation tarball can be (re)produced and verified simply by running the following command in the Guix source tree:"
msgstr "Il tarball di installazione binaria può essere (ri)prodotto e verificato semplicemente eseguendo il seguente comando nell'albero dei sorgenti di Guix:"

#. type: example
#: guix-git/doc/guix.texi:861
#, no-wrap
msgid "make guix-binary.@var{system}.tar.xz\n"
msgstr "make guix-binary.@var{system}.tar.xz\n"

#. type: quotation
#: guix-git/doc/guix.texi:865
msgid "...@: which, in turn, runs:"
msgstr "... che, a sua volta, esegue:"

#. type: example
#: guix-git/doc/guix.texi:869
#, no-wrap
msgid ""
"guix pack -s @var{system} --localstatedir \\\n"
"  --profile-name=current-guix guix\n"
msgstr ""
"guix pack -s @var{system} --localstatedir \\\n"
"  --profile-name=current-guix guix\n"

#. type: quotation
#: guix-git/doc/guix.texi:872
msgid "@xref{Invoking guix pack}, for more info on this handy tool."
msgstr "@xref{Invoking guix pack}, per maggiori informazioni su questo utile strumento."

#. type: cindex
#: guix-git/doc/guix.texi:874
#, fuzzy, no-wrap
#| msgid "Translating Guix"
msgid "uninstalling Guix"
msgstr "Traduzione di Guix"

#. type: cindex
#: guix-git/doc/guix.texi:875
#, fuzzy, no-wrap
#| msgid "Installation"
msgid "uninstallation, of Guix"
msgstr "Installazione"

#. type: Plain text
#: guix-git/doc/guix.texi:878
msgid "Should you eventually want to uninstall Guix, run the same script with the @option{--uninstall} flag:"
msgstr "Se alla fine volessi disinstallare Guix, esegui lo stesso script con l'opzione @option{--uninstall}:"

#. type: example
#: guix-git/doc/guix.texi:881
#, no-wrap
msgid "./guix-install.sh --uninstall\n"
msgstr "./guix-install.sh --uninstall\n"

#. type: Plain text
#: guix-git/doc/guix.texi:885
msgid "With @option{--uninstall}, the script irreversibly deletes all the Guix files, configuration, and services."
msgstr "Con @option{--uninstall}, lo script elimina irreversibilmente tutti i file, la configurazione e i servizi di Guix."

#. type: cindex
#: guix-git/doc/guix.texi:889
#, no-wrap
msgid "daemon"
msgstr "demone"

#. type: Plain text
#: guix-git/doc/guix.texi:894
msgid "During installation, the @dfn{build daemon} that must be running to use Guix has already been set up and you can run @command{guix} commands in your terminal program, @pxref{Getting Started}:"
msgstr "Durante l'installazione, il @dfn{demone di build} che deve essere in esecuzione per usare Guix è già stato configurato e puoi eseguire i comandi @command{guix} nel tuo programma terminale, @pxref{Getting Started}:"

#. type: example
#: guix-git/doc/guix.texi:897
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "guix build hello\n"
msgstr "Filesystem"

#. type: Plain text
#: guix-git/doc/guix.texi:902
msgid "If this runs through without error, feel free to skip this section.  You should continue with the following section, @ref{Application Setup}."
msgstr "Se questo viene eseguito senza errori, sentiti libero di saltare questa sezione. Dovresti continuare con la sezione successiva, @ref{Application Setup}."

#. type: Plain text
#: guix-git/doc/guix.texi:910
msgid "However, now would be a good time to replace outdated daemon versions, tweak it, perform builds on other machines (@pxref{Daemon Offload Setup}), or start it manually in special environments like ``chroots'' (@pxref{Chrooting into an existing system}) or WSL (not needed for WSL images created with Guix, @pxref{System Images, @code{wsl2-image-type}}).  If you want to know more or optimize your system, this section is worth reading."
msgstr "Tuttavia, ora sarebbe un buon momento per sostituire versioni obsolete del demone, modificarlo, eseguire build su altre macchine (@pxref{Daemon Offload Setup}), o avviarlo manualmente in ambienti speciali come i ``chroot'' (@pxref{Chrooting into an existing system}) o WSL (non necessario per le immagini WSL create con Guix, @pxref{System Images, @code{wsl2-image-type}}). Se vuoi saperne di più o ottimizzare il tuo sistema, questa sezione merita di essere letta."

#. type: Plain text
#: guix-git/doc/guix.texi:918
msgid "Operations such as building a package or running the garbage collector are all performed by a specialized process, the build daemon, on behalf of clients.  Only the daemon may access the store and its associated database.  Thus, any operation that manipulates the store goes through the daemon.  For instance, command-line tools such as @command{guix package} and @command{guix build} communicate with the daemon (@i{via} remote procedure calls) to instruct it what to do."
msgstr "Operazioni come la compilazione di un pacchetto o l'esecuzione del garbage collector sono tutte eseguite da un processo specializzato, il demone di build, per conto dei client. Solo il demone può accedere allo store e al suo database associato. Quindi, qualsiasi operazione che manipola lo store passa attraverso il demone. Per esempio, strumenti da riga di comando come @command{guix package} e @command{guix build} comunicano con il demone (@i{via} chiamate di procedura remota) per istruirlo su cosa fare."

#. type: Plain text
#: guix-git/doc/guix.texi:922
msgid "The following sections explain how to prepare the build daemon's environment.  @xref{Substitutes} for how to allow the daemon to download pre-built binaries."
msgstr "Le sezioni seguenti spiegano come preparare l'ambiente del demone di build. @xref{Substitutes} per come consentire al demone di scaricare binari precompilati."

#. type: cindex
#: guix-git/doc/guix.texi:932 guix-git/doc/guix.texi:1559
#, no-wrap
msgid "build environment"
msgstr "ambiente di build"

#. type: Plain text
#: guix-git/doc/guix.texi:939
msgid "In a standard multi-user setup, Guix and its daemon---the @command{guix-daemon} program---are installed by the system administrator.  Unprivileged users may use Guix tools to build packages or otherwise access the store, and the daemon will do it on their behalf, ensuring that the store is kept in a consistent state, and allowing built packages to be shared among users."
msgstr "In una configurazione multi-utente standard, Guix e il suo demone - il programma @command{guix-daemon} - sono installati dall'amministratore di sistema. Gli utenti non privilegiati possono usare gli strumenti di Guix per compilare pacchetti o accedere allo store in altro modo, e il demone lo farà per loro conto, assicurando che lo store sia mantenuto in uno stato consistente e permettendo che i pacchetti compilati siano condivisi tra gli utenti."

#. type: Plain text
#: guix-git/doc/guix.texi:941
msgid "There are currently two ways to set up and run the build daemon:"
msgstr "Ci sono attualmente due modi per configurare ed eseguire il demone di build:"

#. type: enumerate
#: guix-git/doc/guix.texi:947
msgid "running @command{guix-daemon} as ``root'', letting it run build processes as unprivileged users taken from a pool of build users---this is the historical approach;"
msgstr "eseguire @command{guix-daemon} come ``root'', lasciandogli eseguire i processi di build come utenti non privilegiati presi da un pool di utenti di build - questo è l'approccio storico;"

#. type: enumerate
#: guix-git/doc/guix.texi:954
msgid "running @command{guix-daemon} as a separate unprivileged user, relying on Linux's @dfn{unprivileged user namespace} functionality to set up isolated environments---this is the option chosen when installing Guix on a systemd-based distribution with the installation script (@pxref{Binary Installation})."
msgstr "eseguire @command{guix-daemon} come utente non privilegiato separato, affidandosi alla funzionalità @dfn{namespace utente non privilegiato} di Linux per impostare ambienti isolati - questa è l'opzione scelta quando si installa Guix su una distribuzione basata su systemd con lo script di installazione (@pxref{Binary Installation})."

#. type: Plain text
#: guix-git/doc/guix.texi:958
msgid "The sections below describe each of these two configurations in more detail and summarize the kind of build isolation they provide."
msgstr "Le sezioni seguenti descrivono ciascuna di queste due configurazioni in modo più dettagliato e riassumono il tipo di isolamento di build che forniscono."

#. type: unnumberedsubsubsec
#: guix-git/doc/guix.texi:959
#, no-wrap
msgid "Daemon Running as Root"
msgstr "Demone in esecuzione come Root"

#. type: cindex
#: guix-git/doc/guix.texi:961
#, no-wrap
msgid "build users"
msgstr "utenti di build"

#. type: Plain text
#: guix-git/doc/guix.texi:970
msgid "When @command{guix-daemon} runs as @code{root}, you may not want package build processes themselves to run as @code{root} too, for obvious security reasons.  To avoid that, a special pool of @dfn{build users} should be created for use by build processes started by the daemon.  Having several such users allows the daemon to launch distinct build processes under separate UIDs, which guarantees that they do not interfere with each other---an essential feature since builds are regarded as pure functions (@pxref{Introduction})."
msgstr "Quando @command{guix-daemon} viene eseguito come @code{root}, potresti non volere che anche i processi di build dei pacchetti vengano eseguiti come @code{root}, per ovvie ragioni di sicurezza. Per evitarlo, dovrebbe essere creato un pool speciale di @dfn{utenti di build} da utilizzare per i processi di build avviati dal demone. Avere diversi utenti di questo tipo permette al demone di avviare processi di build distinti con UID separati, il che garantisce che non interferiscano tra loro - una caratteristica essenziale poiché le build sono considerate funzioni pure (@pxref{Introduction})."

#. type: Plain text
#: guix-git/doc/guix.texi:973
msgid "On a GNU/Linux system, a build user pool may be created like this (using Bash syntax and the @code{shadow} commands):"
msgstr "Su un sistema GNU/Linux, un pool di utenti di build può essere creato in questo modo (usando la sintassi Bash e i comandi @code{shadow}):"

#. type: example
#: guix-git/doc/guix.texi:985
#, no-wrap
msgid ""
"# groupadd --system guixbuild\n"
"# for i in $(seq -w 1 10);\n"
"  do\n"
"    useradd -g guixbuild -G guixbuild           \\\n"
"            -d /var/empty -s $(which nologin)   \\\n"
"            -c \"Guix build user $i\" --system    \\\n"
"            guixbuilder$i;\n"
"  done\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:995
msgid "The number of build users determines how many build jobs may run in parallel, as specified by the @option{--max-jobs} option (@pxref{Invoking guix-daemon, @option{--max-jobs}}).  To use @command{guix system vm} and related commands, you may need to add the build users to the @code{kvm} group so they can access @file{/dev/kvm}, using @code{-G guixbuild,kvm} instead of @code{-G guixbuild} (@pxref{Invoking guix system})."
msgstr "Il numero di utenti di build determina quanti lavori di build possono essere eseguiti in parallelo, come specificato dall'opzione @option{--max-jobs} (@pxref{Invoking guix-daemon, @option{--max-jobs}}). Per usare @command{guix system vm} e comandi correlati, potrebbe essere necessario aggiungere gli utenti di build al gruppo @code{kvm} in modo che possano accedere a @file{/dev/kvm}, usando @code{-G guixbuild,kvm} invece di @code{-G guixbuild} (@pxref{Invoking guix system})."

#. type: Plain text
#: guix-git/doc/guix.texi:1004
msgid "The @code{guix-daemon} program may then be run as @code{root} with the following command@footnote{If your machine uses the systemd init system, copying the @file{@var{prefix}/lib/systemd/system/guix-daemon.service} file to @file{/etc/systemd/system} will ensure that @command{guix-daemon} is automatically started.  Similarly, if your machine uses the Upstart init system, copy the @file{@var{prefix}/lib/upstart/system/guix-daemon.conf} file to @file{/etc/init}.}:"
msgstr "Il programma @code{guix-daemon} può quindi essere eseguito come @code{root} con il seguente comando@footnote{Se la tua macchina usa il sistema di init systemd, copiare il file @file{@var{prefix}/lib/systemd/system/guix-daemon.service} in @file{/etc/systemd/system} garantirà che @command{guix-daemon} venga avviato automaticamente. Allo stesso modo, se la tua macchina usa il sistema di init Upstart, copia il file @file{@var{prefix}/lib/upstart/system/guix-daemon.conf} in @file{/etc/init}.}:"

#. type: example
#: guix-git/doc/guix.texi:1007 guix-git/doc/guix.texi:1548
#, no-wrap
msgid "# guix-daemon --build-users-group=guixbuild\n"
msgstr "# guix-daemon --build-users-group=guixbuild\n"

#. type: Plain text
#: guix-git/doc/guix.texi:1010
msgid "In this setup, @file{/gnu/store} is owned by @code{root}."
msgstr "In questa configurazione, @file{/gnu/store} è di proprietà di @code{root}."

#. type: unnumberedsubsubsec
#: guix-git/doc/guix.texi:1011
#, no-wrap
msgid "Daemon Running Without Privileges"
msgstr "Demone in esecuzione senza privilegi"

#. type: cindex
#: guix-git/doc/guix.texi:1013
#, no-wrap
msgid "rootless build daemon"
msgstr "demone di build rootless"

#. type: cindex
#: guix-git/doc/guix.texi:1014
#, no-wrap
msgid "unprivileged build daemon"
msgstr "demone di build non privilegiato"

#. type: cindex
#: guix-git/doc/guix.texi:1015
#, no-wrap
msgid "build daemon, unprivileged"
msgstr "demone di build, non privilegiato"

#. type: Plain text
#: guix-git/doc/guix.texi:1024
msgid "The second and preferred option is to run @command{guix-daemon} @emph{as an unprivileged user}.  It has the advantage of reducing the harm that can be done should a build process manage to exploit a vulnerability in the daemon.  This option requires the use of Linux's unprivileged user namespace mechanism; today it is available and enabled by most GNU/Linux distributions but can still be disabled.  The installation script automatically determines whether this option is available on your system (@pxref{Binary Installation})."
msgstr "La seconda e preferita opzione è eseguire @command{guix-daemon} @emph{come utente non privilegiato}. Ha il vantaggio di ridurre il danno che può essere fatto se un processo di build riesce a sfruttare una vulnerabilità nel demone. Questa opzione richiede l'uso del meccanismo di namespace utente non privilegiato di Linux; oggi è disponibile e abilitato sulla maggior parte delle distribuzioni GNU/Linux, ma può ancora essere disabilitato. Lo script di installazione determina automaticamente se questa opzione è disponibile sul tuo sistema (@pxref{Binary Installation})."

#. type: Plain text
#: guix-git/doc/guix.texi:1027
msgid "When using this option, you only need to create one user account, and @command{guix-daemon} will run with the authority of that account:"
msgstr "Quando si usa questa opzione, è necessario creare un solo account utente, e @command{guix-daemon} verrà eseguito con l'autorità di quell'account:"

#. type: example
#: guix-git/doc/guix.texi:1034
#, no-wrap
msgid ""
"# groupadd --system guix-daemon\n"
"# useradd -g guix-daemon -G guix-daemon              \\\n"
"          -d /var/empty -s $(which nologin)          \\\n"
"          -c \"Guix daemon privilege separation user\" \\\n"
"          --system guix-daemon\n"
msgstr ""
"# groupadd --system guix-daemon\n"
"# useradd -g guix-daemon -G guix-daemon              \\\n"
"          -d /var/empty -s $(which nologin)          \\\n"
"          -c \"Utente separazione privilegi demone Guix\" \\\n"
"          --system guix-daemon\n"

#. type: Plain text
#: guix-git/doc/guix.texi:1038
msgid "In this configuration, @file{/gnu/store} is owned by the @code{guix-daemon} user."
msgstr "In questa configurazione, @file{/gnu/store} è di proprietà dell'utente @code{guix-daemon}."

#. type: anchor{#1}
#: guix-git/doc/guix.texi:1040
msgid "unprivileged-daemon-migration"
msgstr "unprivileged-daemon-migration"

#. type: unnumberedsubsubsec
#: guix-git/doc/guix.texi:1040
#, no-wrap
msgid "Migrating to the Unprivileged Daemon"
msgstr "Migrazione al demone non privilegiato"

#. type: cindex
#: guix-git/doc/guix.texi:1042
#, no-wrap
msgid "unprivileged daemon, migration"
msgstr "demone non privilegiato, migrazione"

#. type: cindex
#: guix-git/doc/guix.texi:1043
#, no-wrap
msgid "rootless daemon, migration"
msgstr "demone rootless, migrazione"

#. type: Plain text
#: guix-git/doc/guix.texi:1049
msgid "To switch an existing installation to the unprivileged execution mode, a number of steps must be taken: creating a new dedicated @code{guix-daemon} user account, changing ownership of the relevant files to @code{guix-daemon}, and ensuring that the @command{guix-daemon} program runs as @code{guix-daemon}."
msgstr "Per passare una installazione esistente alla modalità di esecuzione non privilegiata, devono essere eseguiti alcuni passaggi: creare un nuovo account utente dedicato @code{guix-daemon}, cambiare la proprietà dei file pertinenti a @code{guix-daemon}, e assicurarsi che il programma @command{guix-daemon} venga eseguito come @code{guix-daemon}."

#. type: Plain text
#: guix-git/doc/guix.texi:1054
msgid "On Guix System, these steps are carried out automatically when you set the @code{privileged?} field of the @code{guix-configuration} record to @code{#f} and reconfigure (@pxref{guix-configuration-type, @code{guix-configuration}})."
msgstr "Su Guix System, questi passaggi vengono eseguiti automaticamente quando si imposta il campo @code{privileged?} del record @code{guix-configuration} su @code{#f} e si riconfigura (@pxref{guix-configuration-type, @code{guix-configuration}})."

#. type: Plain text
#: guix-git/doc/guix.texi:1057
msgid "However, on a foreign distribution, the process is manual.  The following paragraphs describe what you need to do."
msgstr "Tuttavia, su una distribuzione esterna, il processo è manuale. I seguenti paragrafi descrivono cosa è necessario fare."

#. type: quotation
#: guix-git/doc/guix.texi:1062
msgid "Follow the instructions below only after making sure you have a recent version of @command{guix-daemon} with support for unprivileged execution."
msgstr "Segui le istruzioni seguenti solo dopo esserti assicurato di avere una versione recente di @command{guix-daemon} con supporto per l'esecuzione non privilegiata."

#. type: Plain text
#: guix-git/doc/guix.texi:1067
msgid "File ownership can be changed, after stopping the daemon, by running the following commands as root (the @command{chown} can take a while if there are many files in @file{/gnu/store}):"
msgstr "La proprietà dei file può essere cambiata, dopo aver fermato il demone, eseguendo i seguenti comandi come root (il comando @command{chown} può richiedere del tempo se ci sono molti file in @file{/gnu/store}):"

#. type: example
#: guix-git/doc/guix.texi:1074
#, no-wrap
msgid ""
"groupadd --system guix-daemon\n"
"useradd -g guix-daemon -G guix-daemon,kvm               \\\n"
"        -d /var/empty -s $(which nologin)               \\\n"
"        -c \"Guix daemon privilege separation user\"      \\\n"
"        --system guix-daemon\n"
"\n"
msgstr ""
"groupadd --system guix-daemon\n"
"useradd -g guix-daemon -G guix-daemon,kvm               \\\n"
"        -d /var/empty -s $(which nologin)               \\\n"
"        -c \"Utente separazione privilegi demone Guix\"      \\\n"
"        --system guix-daemon\n"
"\n"

#. type: example
#: guix-git/doc/guix.texi:1078
#, no-wrap
msgid ""
"# Make the store writable, in case the systemd 'gnu-store.mount'\n"
"# unit made it read-only.\n"
"mount -o remount,rw /gnu/store\n"
"\n"
msgstr ""
"# Rendi lo store scrivibile, nel caso l'unità systemd 'gnu-store.mount'\n"
"# l'avesse reso di sola lettura.\n"
"mount -o remount,rw /gnu/store\n"
"\n"

#. type: example
#: guix-git/doc/guix.texi:1085
#, no-wrap
msgid ""
"chown -R guix-daemon:guix-daemon                        \\\n"
"  /gnu                                                  \\\n"
"  /var/guix/@{gc.lock,daemon-socket,db,discover@}         \\\n"
"  /var/guix/@{gcroots,offload,substitute,temproots@}      \\\n"
"  /var/log/guix                                         \\\n"
"  /etc/guix\n"
msgstr ""
"chown -R guix-daemon:guix-daemon                        \\\n"
"  /gnu                                                  \\\n"
"  /var/guix/@{gc.lock,daemon-socket,db,discover@}         \\\n"
"  /var/guix/@{gcroots,offload,substitute,temproots@}      \\\n"
"  /var/log/guix                                         \\\n"
"  /etc/guix\n"

#. type: Plain text
#: guix-git/doc/guix.texi:1091
msgid "If your system uses the systemd service manager, running the daemon as @code{guix-daemon} will be a matter of copying the relevant configuration files---make sure to review any changes you might have made in your own @file{.service} files before overwriting them:"
msgstr "Se il tuo sistema usa il gestore di servizi systemd, eseguire il demone come @code{guix-daemon} sarà una questione di copiare i file di configurazione pertinenti - assicurati di rivedere eventuali modifiche che potresti aver fatto nei tuoi file @file{.service} prima di sovrascriverli:"

#. type: example
#: guix-git/doc/guix.texi:1097
#, no-wrap
msgid ""
"cp /var/guix/profiles/per-user/root/current-guix/lib/systemd/system/*.service \\\n"
"   /etc/systemd/system\n"
"systemctl daemon-reload\n"
"systemctl start guix-daemon\n"
msgstr ""
"cp /var/guix/profiles/per-user/root/current-guix/lib/systemd/system/*.service \\\n"
"   /etc/systemd/system\n"
"systemctl daemon-reload\n"
"systemctl start guix-daemon\n"

#. type: quotation
#: guix-git/doc/guix.texi:1102
msgid "The commands above assume that @command{guix pull} was run for the root user.  You can check whether this is the case by running this command:"
msgstr "I comandi sopra assumono che @command{guix pull} sia stato eseguito per l'utente root. Puoi verificare se questo è il caso eseguendo questo comando:"

#. type: example
#: guix-git/doc/guix.texi:1106
#, no-wrap
msgid ""
"grep User=guix-daemon \\\n"
"  /var/guix/profiles/per-user/root/current-guix/lib/systemd/system/guix-daemon.service\n"
msgstr ""
"grep User=guix-daemon \\\n"
"  /var/guix/profiles/per-user/root/current-guix/lib/systemd/system/guix-daemon.service\n"

#. type: quotation
#: guix-git/doc/guix.texi:1110
msgid "If that command does not show the @code{User=guix-daemon} line, then run @command{guix pull} as the root user."
msgstr "Se quel comando non mostra la riga @code{User=guix-daemon}, allora esegui @command{guix pull} come utente root."

#. type: unnumberedsubsubsec
#: guix-git/doc/guix.texi:1112
#, no-wrap
msgid "The Isolated Build Environment"
msgstr "L'ambiente di build isolato"

#. type: cindex
#: guix-git/doc/guix.texi:1114 guix-git/doc/guix.texi:1557
#, no-wrap
msgid "chroot"
msgstr "chroot"

#. type: cindex
#: guix-git/doc/guix.texi:1115
#, no-wrap
msgid "build environment isolation"
msgstr "isolamento dell'ambiente di build"

#. type: cindex
#: guix-git/doc/guix.texi:1116
#, no-wrap
msgid "isolated build environment"
msgstr "ambiente di build isolato"

#. type: cindex
#: guix-git/doc/guix.texi:1117
#, no-wrap
msgid "hermetic build environment"
msgstr "ambiente di build ermetico"

#. type: Plain text
#: guix-git/doc/guix.texi:1122
msgid "In both cases, privileged and unprivileged, the daemon starts build processes without privileges in an @emph{isolated} or @emph{hermetic} build environment---a ``chroot''.  On GNU/Linux, by default, the build environment contains nothing but:"
msgstr "In entrambi i casi, privilegiato e non privilegiato, il demone avvia i processi di build senza privilegi in un ambiente di build @emph{isolated} o @emph{hermetic} - un ``chroot''. Su GNU/Linux, per impostazione predefinita, l'ambiente di build non contiene altro che:"

#. type: itemize
#: guix-git/doc/guix.texi:1130
msgid "a minimal @code{/dev} directory, created mostly independently from the host @code{/dev}@footnote{``Mostly'', because while the set of files that appear in the chroot's @code{/dev} is fixed, most of these files can only be created if the host has them.};"
msgstr "una directory @code{/dev} minimale, creata per lo più indipendentemente dalla @code{/dev} dell'host@footnote{``Per lo più'', perché mentre l'insieme di file che appaiono nella @code{/dev} del chroot è fisso, la maggior parte di questi file può essere creata solo se l'host li ha.};"

#. type: itemize
#: guix-git/doc/guix.texi:1134
msgid "the @code{/proc} directory; it only shows the processes of the container since a separate PID name space is used;"
msgstr "la directory @code{/proc}; mostra solo i processi del container poiché viene usato un namespace PID separato;"

#. type: itemize
#: guix-git/doc/guix.texi:1138
msgid "@file{/etc/passwd} with an entry for the current user and an entry for user @file{nobody};"
msgstr "@file{/etc/passwd} con una voce per l'utente corrente e una voce per l'utente @file{nobody};"

#. type: itemize
#: guix-git/doc/guix.texi:1141
msgid "@file{/etc/group} with an entry for the user's group;"
msgstr "@file{/etc/group} con una voce per il gruppo dell'utente;"

#. type: itemize
#: guix-git/doc/guix.texi:1145
msgid "@file{/etc/hosts} with an entry that maps @code{localhost} to @code{127.0.0.1};"
msgstr "@file{/etc/hosts} con una voce che mappa @code{localhost} a @code{127.0.0.1};"

#. type: itemize
#: guix-git/doc/guix.texi:1148
msgid "a writable @file{/tmp} directory."
msgstr "una directory @file{/tmp} scrivibile."

#. type: Plain text
#: guix-git/doc/guix.texi:1154
msgid "The chroot does not contain a @file{/home} directory, and the @env{HOME} environment variable is set to the non-existent @file{/homeless-shelter}.  This helps to highlight inappropriate uses of @env{HOME} in the build scripts of packages."
msgstr "Il chroot non contiene una directory @file{/home}, e la variabile d'ambiente @env{HOME} è impostata sulla directory inesistente @file{/homeless-shelter}. Questo aiuta a evidenziare usi inappropriati di @env{HOME} negli script di build dei pacchetti."

#. type: Plain text
#: guix-git/doc/guix.texi:1159
msgid "All this is usually enough to ensure details of the environment do not influence build processes.  In some exceptional cases where more control is needed---typically over the date, kernel, or CPU---you can resort to a virtual build machine (@pxref{build-vm, virtual build machines})."
msgstr "Tutto questo è solitamente sufficiente per garantire che i dettagli dell'ambiente non influenzino i processi di build. In alcuni casi eccezionali in cui è necessario un maggiore controllo - tipicamente sulla data, il kernel o la CPU - si può ricorrere a una macchina virtuale di build (@pxref{build-vm, virtual build machines})."

#. type: Plain text
#: guix-git/doc/guix.texi:1167
msgid "You can influence the directory where the daemon stores build trees @i{via} the @env{TMPDIR} environment variable.  However, the build tree within the chroot is always called @file{/tmp/guix-build-@var{name}.drv-0}, where @var{name} is the derivation name---e.g., @code{coreutils-8.24}.  This way, the value of @env{TMPDIR} does not leak inside build environments, which avoids discrepancies in cases where build processes capture the name of their build tree."
msgstr "Puoi influenzare la directory in cui il demone memorizza gli alberi di build @i{via} la variabile d'ambiente @env{TMPDIR}. Tuttavia, l'albero di build all'interno del chroot è sempre chiamato @file{/tmp/guix-build-@var{name}.drv-0}, dove @var{name} è il nome della derivazione - ad esempio, @code{coreutils-8.24}. In questo modo, il valore di @env{TMPDIR} non trapela negli ambienti di build, il che evita discrepanze nei casi in cui i processi di build catturano il nome del loro albero di build."

#. type: vindex
#: guix-git/doc/guix.texi:1168 guix-git/doc/guix.texi:4131
#, no-wrap
msgid "http_proxy"
msgstr "http_proxy"

#. type: vindex
#: guix-git/doc/guix.texi:1169 guix-git/doc/guix.texi:4132
#, no-wrap
msgid "https_proxy"
msgstr "https_proxy"

#. type: Plain text
#: guix-git/doc/guix.texi:1174
msgid "The daemon also honors the @env{http_proxy} and @env{https_proxy} environment variables for HTTP and HTTPS downloads it performs, be it for fixed-output derivations (@pxref{Derivations}) or for substitutes (@pxref{Substitutes})."
msgstr "Il demone onora anche le variabili d'ambiente @env{http_proxy} e @env{https_proxy} per i download HTTP e HTTPS che esegue, sia per le derivazioni a output fisso (@pxref{Derivations}) che per i sostituti (@pxref{Substitutes})."

#. type: subsection
#: guix-git/doc/guix.texi:1177
#, no-wrap
msgid "Using the Offload Facility"
msgstr "Uso della funzione di offload"

#. type: cindex
#: guix-git/doc/guix.texi:1179 guix-git/doc/guix.texi:1618
#, no-wrap
msgid "offloading"
msgstr "offloading"

#. type: cindex
#: guix-git/doc/guix.texi:1180
#, no-wrap
msgid "build hook"
msgstr "hook di build"

#. type: Plain text
#: guix-git/doc/guix.texi:1199
msgid "When desired, the build daemon can @dfn{offload} derivation builds to other machines running Guix, using the @code{offload} @dfn{build hook}@footnote{This feature is available only when @uref{https://github.com/artyom-poptsov/guile-ssh, Guile-SSH} is present.}.  When that feature is enabled, a list of user-specified build machines is read from @file{/etc/guix/machines.scm}; every time a build is requested, for instance via @code{guix build}, the daemon attempts to offload it to one of the machines that satisfy the constraints of the derivation, in particular its system types---e.g., @code{x86_64-linux}.  A single machine can have multiple system types, either because its architecture natively supports it, via emulation (@pxref{transparent-emulation-qemu, Transparent Emulation with QEMU}), or both.  Missing prerequisites for the build are copied over SSH to the target machine, which then proceeds with the build; upon success the output(s) of the build are copied back to the initial machine.  The offload facility comes with a basic scheduler that attempts to select the best machine.  The best machine is chosen among the available machines based on criteria such as:"
msgstr "Se lo si desidera, il demone di build può fare l'@dfn{offload} delle build di derivazione su altre macchine che eseguono Guix, utilizzando l'@dfn{hook di build} @code{offload}@footnote{Questa funzione è disponibile solo quando @uref{https://github.com/artyom-poptsov/guile-ssh, Guile-SSH} è presente.}. Quando questa funzione è abilitata, un elenco di macchine di build specificate dall'utente viene letto da @file{/etc/guix/machines.scm}; ogni volta che viene richiesta una build, ad esempio tramite @code{guix build}, il demone tenta di scaricarla su una delle macchine che soddisfano i vincoli della derivazione, in particolare i suoi tipi di sistema, ad esempio @code{x86_64-linux}. Una singola macchina può avere più tipi di sistema, sia perché la sua architettura lo supporta nativamente, sia tramite emulazione (@pxref{transparent-emulation-qemu, Transparent Emulation with QEMU}), o entrambi. I prerequisiti mancanti per la build vengono copiati tramite SSH sulla macchina di destinazione, che procede quindi con la build; in caso di successo, l'output (o gli output) della build viene copiato nuovamente sulla macchina iniziale. La funzione di offload è dotata di uno scheduler di base che tenta di selezionare la macchina migliore. La macchina migliore viene scelta tra le macchine disponibili in base a criteri quali:"

#. type: enumerate
#: guix-git/doc/guix.texi:1205
msgid "The availability of a build slot.  A build machine can have as many build slots (connections) as the value of the @code{parallel-builds} field of its @code{build-machine} object."
msgstr "La disponibilità di uno slot di build. Una macchina di build può avere tanti slot di build (connessioni) quanti il valore del campo @code{parallel-builds} del suo oggetto @code{build-machine}."

#. type: enumerate
#: guix-git/doc/guix.texi:1209
msgid "Its relative speed, as defined via the @code{speed} field of its @code{build-machine} object."
msgstr "La sua velocità relativa, come definita tramite il campo @code{speed} del suo oggetto @code{build-machine}."

#. type: enumerate
#: guix-git/doc/guix.texi:1214
msgid "Its load.  The normalized machine load must be lower than a threshold value, configurable via the @code{overload-threshold} field of its @code{build-machine} object."
msgstr "Il suo carico. Il carico normalizzato della macchina deve essere inferiore a un valore soglia, configurabile tramite il campo @code{overload-threshold} del suo oggetto @code{build-machine}."

#. type: enumerate
#: guix-git/doc/guix.texi:1217
msgid "Disk space availability.  More than 100 MiB must be available."
msgstr "Disponibilità di spazio su disco. Devono essere disponibili più di 100 MiB."

#. type: Plain text
#: guix-git/doc/guix.texi:1220
msgid "The @file{/etc/guix/machines.scm} file typically looks like this:"
msgstr "Il file @file{/etc/guix/machines.scm} si presenta tipicamente così:"

#. type: lisp
#: guix-git/doc/guix.texi:1228
#, no-wrap
msgid ""
"(list (build-machine\n"
"        (name \"eightysix.example.org\")\n"
"        (systems (list \"x86_64-linux\" \"i686-linux\"))\n"
"        (host-key \"ssh-ed25519 AAAAC3Nza@dots{}\")\n"
"        (user \"bob\")\n"
"        (speed 2.))     ;incredibly fast!\n"
"\n"
msgstr ""
"(list (build-machine\n"
"        (name \"eightysix.example.org\")\n"
"        (systems (list \"x86_64-linux\" \"i686-linux\"))\n"
"        (host-key \"ssh-ed25519 AAAAC3Nza@dots{}\")\n"
"        (user \"bob\")\n"
"        (speed 2.))     ;incredibilmente veloce!\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:1234
#, no-wrap
msgid ""
"      (build-machine\n"
"        (name \"armeight.example.org\")\n"
"        (systems (list \"aarch64-linux\"))\n"
"        (host-key \"ssh-rsa AAAAB3Nza@dots{}\")\n"
"        (user \"alice\")\n"
"\n"
msgstr ""
"      (build-machine\n"
"        (name \"armeight.example.org\")\n"
"        (systems (list \"aarch64-linux\"))\n"
"        (host-key \"ssh-rsa AAAAB3Nza@dots{}\")\n"
"        (user \"alice\")\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:1238
#, no-wrap
msgid ""
"        ;; Remember 'guix offload' is spawned by\n"
"        ;; 'guix-daemon' as root.\n"
"        (private-key \"/root/.ssh/identity-for-guix\")))\n"
msgstr ""
"        ;; Ricorda che 'guix offload' viene generato da\n"
"        ;; 'guix-daemon' come root.\n"
"        (private-key \"/root/.ssh/identity-for-guix\")))\n"

#. type: Plain text
#: guix-git/doc/guix.texi:1244
msgid "In the example above we specify a list of two build machines, one for the @code{x86_64} and @code{i686} architectures and one for the @code{aarch64} architecture."
msgstr "Nell'esempio sopra specifichiamo un elenco di due macchine di build, una per le architetture @code{x86_64} e @code{i686} e una per l'architettura @code{aarch64}."

#. type: Plain text
#: guix-git/doc/guix.texi:1253
msgid "In fact, this file is---not surprisingly!---a Scheme file that is evaluated when the @code{offload} hook is started.  Its return value must be a list of @code{build-machine} objects.  While this example shows a fixed list of build machines, one could imagine, say, using DNS-SD to return a list of potential build machines discovered in the local network (@pxref{Introduction, Guile-Avahi,, guile-avahi, Using Avahi in Guile Scheme Programs}).  The @code{build-machine} data type is detailed below."
msgstr "Infatti, questo file è - non sorprendentemente! - un file Scheme che viene valutato quando l'hook @code{offload} viene avviato. Il suo valore di ritorno deve essere un elenco di oggetti @code{build-machine}. Sebbene questo esempio mostri un elenco fisso di macchine di build, si potrebbe immaginare, ad esempio, di usare DNS-SD per restituire un elenco di potenziali macchine di build scoperte nella rete locale (@pxref{Introduction, Guile-Avahi,, guile-avahi, Using Avahi in Guile Scheme Programs}). Il tipo di dato @code{build-machine} è dettagliato di seguito."

#. type: deftp
#: guix-git/doc/guix.texi:1254
#, no-wrap
msgid "{Data Type} build-machine"
msgstr "{Tipo di dato} build-machine"

#. type: deftp
#: guix-git/doc/guix.texi:1257
msgid "This data type represents build machines to which the daemon may offload builds.  The important fields are:"
msgstr "Questo tipo di dato rappresenta le macchine di build su cui il demone può scaricare le build. I campi importanti sono:"

#. type: code{#1}
#: guix-git/doc/guix.texi:1260 guix-git/doc/guix.texi:8085
#: guix-git/doc/guix.texi:9154 guix-git/doc/guix.texi:19118
#: guix-git/doc/guix.texi:19217 guix-git/doc/guix.texi:19464
#: guix-git/doc/guix.texi:21975 guix-git/doc/guix.texi:23185
#: guix-git/doc/guix.texi:23513 guix-git/doc/guix.texi:28186
#: guix-git/doc/guix.texi:32141 guix-git/doc/guix.texi:33682
#: guix-git/doc/guix.texi:34479 guix-git/doc/guix.texi:34891
#: guix-git/doc/guix.texi:34946 guix-git/doc/guix.texi:35299
#: guix-git/doc/guix.texi:37427 guix-git/doc/guix.texi:39133
#: guix-git/doc/guix.texi:40859 guix-git/doc/guix.texi:40897
#: guix-git/doc/guix.texi:44446 guix-git/doc/guix.texi:44463
#: guix-git/doc/guix.texi:46367 guix-git/doc/guix.texi:48559
#: guix-git/doc/guix.texi:48976 guix-git/doc/guix.texi:54045
#, no-wrap
msgid "name"
msgstr "name"

#. type: table
#: guix-git/doc/guix.texi:1262
msgid "The host name of the remote machine."
msgstr "Il nome host della macchina remota."

#. type: item
#: guix-git/doc/guix.texi:1263
#, no-wrap
msgid "systems"
msgstr "sistemi"

#. type: table
#: guix-git/doc/guix.texi:1266
msgid "The system types the remote machine supports---e.g., @code{(list \"x86_64-linux\" \"i686-linux\")}."
msgstr "I tipi di sistema che la macchina remota supporta - ad es., @code{(list \"x86_64-linux\" \"i686-linux\")}."

#. type: code{#1}
#: guix-git/doc/guix.texi:1267 guix-git/doc/guix.texi:23195
#: guix-git/doc/guix.texi:43127
#, no-wrap
msgid "user"
msgstr "user"

#. type: table
#: guix-git/doc/guix.texi:1271
msgid "The user account on the remote machine to use when connecting over SSH.  Note that the SSH key pair must @emph{not} be passphrase-protected, to allow non-interactive logins."
msgstr "L'account utente sulla macchina remota da usare per la connessione via SSH. Nota che la coppia di chiavi SSH @emph{not} deve essere protetta da passphrase, per consentire accessi non interattivi."

#. type: item
#: guix-git/doc/guix.texi:1272
#, no-wrap
msgid "host-key"
msgstr "host-key"

#. type: table
#: guix-git/doc/guix.texi:1276
msgid "This must be the machine's SSH @dfn{public host key} in OpenSSH format.  This is used to authenticate the machine when we connect to it.  It is a long string that looks like this:"
msgstr "Questa deve essere la @dfn{chiave host pubblica} SSH della macchina in formato OpenSSH. Viene usata per autenticare la macchina quando ci colleghiamo ad essa. È una stringa lunga che assomiglia a questa:"

#. type: example
#: guix-git/doc/guix.texi:1279
#, no-wrap
msgid "ssh-ed25519 AAAAC3NzaC@dots{}mde+UhL hint@@example.org\n"
msgstr "ssh-ed25519 AAAAC3NzaC@dots{}mde+UhL hint@@example.org\n"

#. type: table
#: guix-git/doc/guix.texi:1284
msgid "If the machine is running the OpenSSH daemon, @command{sshd}, the host key can be found in a file such as @file{/etc/ssh/ssh_host_ed25519_key.pub}."
msgstr "Se la macchina sta eseguendo il demone OpenSSH, @command{sshd}, la chiave host può essere trovata in un file come @file{/etc/ssh/ssh_host_ed25519_key.pub}."

#. type: table
#: guix-git/doc/guix.texi:1289
msgid "If the machine is running the SSH daemon of GNU@tie{}lsh, @command{lshd}, the host key is in @file{/etc/lsh/host-key.pub} or a similar file.  It can be converted to the OpenSSH format using @command{lsh-export-key} (@pxref{Converting keys,,, lsh, LSH Manual}):"
msgstr "Se la macchina sta eseguendo il demone SSH di GNU@tie{}lsh, @command{lshd}, la chiave host si trova in @file{/etc/lsh/host-key.pub} o un file simile. Può essere convertita al formato OpenSSH usando @command{lsh-export-key} (@pxref{Converting keys,,, lsh, LSH Manual}):"

#. type: example
#: guix-git/doc/guix.texi:1293
#, no-wrap
msgid ""
"$ lsh-export-key --openssh < /etc/lsh/host-key.pub\n"
"ssh-rsa AAAAB3NzaC1yc2EAAAAEOp8FoQAAAQEAs1eB46LV@dots{}\n"
msgstr ""
"$ lsh-export-key --openssh < /etc/lsh/host-key.pub\n"
"ssh-rsa AAAAB3NzaC1yc2EAAAAEOp8FoQAAAQEAs1eB46LV@dots{}\n"

#. type: deftp
#: guix-git/doc/guix.texi:1298
msgid "A number of optional fields may be specified:"
msgstr "Possono essere specificati alcuni campi opzionali:"

#. type: item
#: guix-git/doc/guix.texi:1301 guix-git/doc/guix.texi:47893
#, no-wrap
msgid "@code{port} (default: @code{22})"
msgstr "@code{port} (predefinito: @code{22})"

#. type: table
#: guix-git/doc/guix.texi:1303
msgid "Port number of SSH server on the machine."
msgstr "Numero di porta del server SSH sulla macchina."

#. type: item
#: guix-git/doc/guix.texi:1304
#, no-wrap
msgid "@code{private-key} (default: @file{~root/.ssh/id_rsa})"
msgstr "@code{private-key} (predefinito: @file{~root/.ssh/id_rsa})"

#. type: table
#: guix-git/doc/guix.texi:1307
msgid "The SSH private key file to use when connecting to the machine, in OpenSSH format.  This key must not be protected with a passphrase."
msgstr "Il file della chiave privata SSH da usare per la connessione alla macchina, in formato OpenSSH. Questa chiave non deve essere protetta da passphrase."

#. type: table
#: guix-git/doc/guix.texi:1310
msgid "Note that the default value is the private key @emph{of the root account}.  Make sure it exists if you use the default."
msgstr "Nota che il valore predefinito è la chiave privata @emph{dell'account root}. Assicurati che esista se usi il valore predefinito."

#. type: item
#: guix-git/doc/guix.texi:1311
#, no-wrap
msgid "@code{compression} (default: @code{\"zlib@@openssh.com,zlib\"})"
msgstr "@code{compression} (predefinito: @code{\"zlib@@openssh.com,zlib\"})"

#. type: itemx
#: guix-git/doc/guix.texi:1312
#, no-wrap
msgid "@code{compression-level} (default: @code{3})"
msgstr "@code{compression-level} (predefinito: @code{3})"

#. type: table
#: guix-git/doc/guix.texi:1314
msgid "The SSH-level compression methods and compression level requested."
msgstr "I metodi di compressione a livello SSH e il livello di compressione richiesti."

#. type: table
#: guix-git/doc/guix.texi:1317
msgid "Note that offloading relies on SSH compression to reduce bandwidth usage when transferring files to and from build machines."
msgstr "Nota che l'offload si basa sulla compressione SSH per ridurre l'uso della banda durante il trasferimento di file da e verso le macchine di build."

#. type: item
#: guix-git/doc/guix.texi:1318
#, no-wrap
msgid "@code{daemon-socket} (default: @code{\"/var/guix/daemon-socket/socket\"})"
msgstr "@code{daemon-socket} (predefinito: @code{\"/var/guix/daemon-socket/socket\"})"

#. type: table
#: guix-git/doc/guix.texi:1321
msgid "File name of the Unix-domain socket @command{guix-daemon} is listening to on that machine."
msgstr "Nome del file della socket di dominio Unix su cui @command{guix-daemon} è in ascolto su quella macchina."

#. type: item
#: guix-git/doc/guix.texi:1322
#, no-wrap
msgid "@code{overload-threshold} (default: @code{0.8})"
msgstr "@code{overload-threshold} (predefinito: @code{0.8})"

#. type: table
#: guix-git/doc/guix.texi:1328
msgid "The load threshold above which a potential offload machine is disregarded by the offload scheduler.  The value roughly translates to the total processor usage of the build machine, ranging from 0.0 (0%) to 1.0 (100%).  It can also be disabled by setting @code{overload-threshold} to @code{#f}."
msgstr "La soglia di carico al di sopra della quale una potenziale macchina di offload viene scartata dallo scheduler di offload. Il valore si traduce approssimativamente nell'utilizzo totale del processore della macchina di build, con un intervallo da 0.0 (0%) a 1.0 (100%). Può anche essere disabilitato impostando @code{overload-threshold} a @code{#f}."

#. type: item
#: guix-git/doc/guix.texi:1329
#, no-wrap
msgid "@code{parallel-builds} (default: @code{1})"
msgstr "@code{parallel-builds} (predefinito: @code{1})"

#. type: table
#: guix-git/doc/guix.texi:1331
msgid "The number of builds that may run in parallel on the machine."
msgstr "Il numero di build che possono essere eseguite in parallelo sulla macchina."

#. type: item
#: guix-git/doc/guix.texi:1332
#, no-wrap
msgid "@code{speed} (default: @code{1.0})"
msgstr "@code{speed} (predefinito: @code{1.0})"

#. type: table
#: guix-git/doc/guix.texi:1335
msgid "A ``relative speed factor''.  The offload scheduler will tend to prefer machines with a higher speed factor."
msgstr "Un ``fattore di velocità relativa''. Lo scheduler di offload tenderà a preferire le macchine con un fattore di velocità più alto."

#. type: item
#: guix-git/doc/guix.texi:1336
#, no-wrap
msgid "@code{features} (default: @code{'()})"
msgstr "@code{features} (predefinito: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:1341
msgid "A list of strings denoting specific features supported by the machine.  An example is @code{\"kvm\"} for machines that have the KVM Linux modules and corresponding hardware support.  Derivations can request features by name, and they will be scheduled on matching build machines."
msgstr "Un elenco di stringhe che denotano caratteristiche specifiche supportate dalla macchina. Un esempio è @code{\"kvm\"} per le macchine che hanno i moduli KVM di Linux e il supporto hardware corrispondente. Le derivazioni possono richiedere caratteristiche per nome, e verranno pianificate su macchine di build corrispondenti."

#. type: quotation
#: guix-git/doc/guix.texi:1351
msgid "On Guix System, instead of managing @file{/etc/guix/machines.scm} independently, you can choose to specify build machines directly in the @code{operating-system} declaration, in the @code{build-machines} field of @code{guix-configuration}.  @xref{guix-configuration-build-machines, @code{build-machines} field of @code{guix-configuration}}."
msgstr "Su Guix System, invece di gestire @file{/etc/guix/machines.scm} indipendentemente, puoi scegliere di specificare le macchine di build direttamente nella dichiarazione @code{operating-system}, nel campo @code{build-machines} di @code{guix-configuration}. @xref{guix-configuration-build-machines, campo @code{build-machines} di @code{guix-configuration}}."

#. type: Plain text
#: guix-git/doc/guix.texi:1355
msgid "The @command{guix} command must be in the search path on the build machines.  You can check whether this is the case by running:"
msgstr "Il comando @command{guix} deve trovarsi nel percorso di ricerca delle macchine di build. Puoi verificare se questo è il caso eseguendo:"

#. type: example
#: guix-git/doc/guix.texi:1358
#, no-wrap
msgid "ssh build-machine guix repl --version\n"
msgstr "ssh build-machine guix repl --version\n"

#. type: Plain text
#: guix-git/doc/guix.texi:1365
msgid "There is one last thing to do once @file{machines.scm} is in place.  As explained above, when offloading, files are transferred back and forth between the machine stores.  For this to work, you first need to generate a key pair on each machine to allow the daemon to export signed archives of files from the store (@pxref{Invoking guix archive}):"
msgstr "C'è un'ultima cosa da fare una volta che @file{machines.scm} è a posto. Come spiegato sopra, durante l'offloading, i file vengono trasferiti avanti e indietro tra gli store delle macchine. Affinché ciò funzioni, devi prima generare una coppia di chiavi su ogni macchina per consentire al demone di esportare archivi firmati di file dallo store (@pxref{Invoking guix archive}):"

#. type: example
#: guix-git/doc/guix.texi:1368 guix-git/doc/guix.texi:47789
#, no-wrap
msgid "# guix archive --generate-key\n"
msgstr "# guix archive --generate-key\n"

#. type: quotation
#: guix-git/doc/guix.texi:1373
msgid "This key pair is not related to the SSH key pair that was previously mentioned in the description of the @code{build-machine} data type."
msgstr "Questa coppia di chiavi non è correlata alla coppia di chiavi SSH che è stata menzionata in precedenza nella descrizione del tipo di dato @code{build-machine}."

#. type: Plain text
#: guix-git/doc/guix.texi:1378
msgid "Each build machine must authorize the key of the master machine so that it accepts store items it receives from the master:"
msgstr "Ogni macchina di build deve autorizzare la chiave della macchina principale in modo da accettare gli elementi dello store che riceve dal master:"

#. type: example
#: guix-git/doc/guix.texi:1381
#, no-wrap
msgid "# guix archive --authorize < master-public-key.txt\n"
msgstr "# guix archive --authorize < master-public-key.txt\n"

#. type: Plain text
#: guix-git/doc/guix.texi:1385
msgid "Likewise, the master machine must authorize the key of each build machine."
msgstr "Allo stesso modo, la macchina principale deve autorizzare la chiave di ogni macchina di build."

#. type: Plain text
#: guix-git/doc/guix.texi:1391
msgid "All the fuss with keys is here to express pairwise mutual trust relations between the master and the build machines.  Concretely, when the master receives files from a build machine (and @i{vice versa}), its build daemon can make sure they are genuine, have not been tampered with, and that they are signed by an authorized key."
msgstr "Tutto questo trambusto con le chiavi serve per esprimere relazioni di fiducia reciproca a coppie tra la macchina principale e le macchine di build. Concretamente, quando la macchina principale riceve file da una macchina di build (e @i{viceversa}), il suo demone di build può assicurarsi che siano genuini, che non siano stati manomessi e che siano firmati da una chiave autorizzata."

#. type: cindex
#: guix-git/doc/guix.texi:1392
#, no-wrap
msgid "offload test"
msgstr "test di offload"

#. type: Plain text
#: guix-git/doc/guix.texi:1395
msgid "To test whether your setup is operational, run this command on the master node:"
msgstr "Per verificare se la tua configurazione è operativa, esegui questo comando sul nodo principale:"

#. type: example
#: guix-git/doc/guix.texi:1398
#, no-wrap
msgid "# guix offload test\n"
msgstr "# guix offload test\n"

#. type: Plain text
#: guix-git/doc/guix.texi:1404
msgid "This will attempt to connect to each of the build machines specified in @file{/etc/guix/machines.scm}, make sure Guix is available on each machine, attempt to export to the machine and import from it, and report any error in the process."
msgstr "Questo tenterà di connettersi a ciascuna delle macchine di build specificate in @file{/etc/guix/machines.scm}, si assicurerà che Guix sia disponibile su ogni macchina, tenterà di esportare sulla macchina e di importare da essa, e segnalerà qualsiasi errore nel processo."

#. type: Plain text
#: guix-git/doc/guix.texi:1407
msgid "If you want to test a different machine file, just specify it on the command line:"
msgstr "Se vuoi testare un file di macchine diverso, specificalo semplicemente sulla riga di comando:"

#. type: example
#: guix-git/doc/guix.texi:1410
#, no-wrap
msgid "# guix offload test machines-qualif.scm\n"
msgstr "# guix offload test machines-qualif.scm\n"

#. type: Plain text
#: guix-git/doc/guix.texi:1414
msgid "Last, you can test the subset of the machines whose name matches a regular expression like this:"
msgstr "Infine, puoi testare il sottoinsieme delle macchine il cui nome corrisponde a un'espressione regolare come questa:"

#. type: example
#: guix-git/doc/guix.texi:1417
#, no-wrap
msgid "# guix offload test machines.scm '\\.gnu\\.org$'\n"
msgstr "# guix offload test machines.scm '\\.gnu\\.org$'\n"

#. type: cindex
#: guix-git/doc/guix.texi:1419
#, no-wrap
msgid "offload status"
msgstr "stato dell'offload"

#. type: Plain text
#: guix-git/doc/guix.texi:1422
msgid "To display the current load of all build hosts, run this command on the main node:"
msgstr "Per visualizzare il carico corrente di tutti gli host di build, esegui questo comando sul nodo principale:"

#. type: example
#: guix-git/doc/guix.texi:1425
#, no-wrap
msgid "# guix offload status\n"
msgstr "# guix offload status\n"

#. type: cindex
#: guix-git/doc/guix.texi:1431
#, no-wrap
msgid "SELinux, daemon policy"
msgstr "SELinux, policy del demone"

#. type: cindex
#: guix-git/doc/guix.texi:1432
#, no-wrap
msgid "mandatory access control, SELinux"
msgstr "controllo di accesso obbligatorio, SELinux"

#. type: cindex
#: guix-git/doc/guix.texi:1433
#, no-wrap
msgid "security, guix-daemon"
msgstr "sicurezza, guix-daemon"

#. type: Plain text
#: guix-git/doc/guix.texi:1439
msgid "Guix includes an SELinux policy file at @file{etc/guix-daemon.cil} that can be installed on a system where SELinux is enabled, in order to label Guix files and to specify the expected behavior of the daemon.  Since Guix System does not provide an SELinux base policy, the daemon policy cannot be used on Guix System."
msgstr "Guix include un file di policy SELinux in @file{etc/guix-daemon.cil} che può essere installato su un sistema in cui SELinux è abilitato, al fine di etichettare i file di Guix e di specificare il comportamento atteso del demone. Poiché Guix System non fornisce una policy di base SELinux, la policy del demone non può essere usata su Guix System."

#. type: subsubsection
#: guix-git/doc/guix.texi:1440
#, no-wrap
msgid "Installing the SELinux policy"
msgstr "Installare la policy SELinux"

#. type: cindex
#: guix-git/doc/guix.texi:1441
#, no-wrap
msgid "SELinux, policy installation"
msgstr "SELinux, installazione della policy"

#. type: quotation
#: guix-git/doc/guix.texi:1446
msgid "The @code{guix-install.sh} binary installation script offers to perform the steps below for you (@pxref{Binary Installation})."
msgstr "Lo script di installazione binaria @code{guix-install.sh} offre di eseguire i passaggi seguenti per te (@pxref{Binary Installation})."

#. type: Plain text
#: guix-git/doc/guix.texi:1449
msgid "To install the policy run this command as root:"
msgstr "Per installare la policy, esegui questo comando come root:"

#. type: example
#: guix-git/doc/guix.texi:1452
#, no-wrap
msgid "semodule -i /var/guix/profiles/per-user/root/current-guix/share/selinux/guix-daemon.cil\n"
msgstr "semodule -i /var/guix/profiles/per-user/root/current-guix/share/selinux/guix-daemon.cil\n"

#. type: Plain text
#: guix-git/doc/guix.texi:1456
msgid "Then, as root, relabel the file system, possibly after making it writable:"
msgstr "Poi, come root, rietichetta il file system, eventualmente dopo averlo reso scrivibile:"

#. type: example
#: guix-git/doc/guix.texi:1460
#, no-wrap
msgid ""
"mount -o remount,rw /gnu/store\n"
"restorecon -R /gnu /var/guix\n"
msgstr ""
"mount -o remount,rw /gnu/store\n"
"restorecon -R /gnu /var/guix\n"

#. type: Plain text
#: guix-git/doc/guix.texi:1465
msgid "At this point you can start or restart @command{guix-daemon}; on a distribution that uses systemd as its service manager, you can do that with:"
msgstr "A questo punto puoi avviare o riavviare @command{guix-daemon}; su una distribuzione che usa systemd come gestore di servizi, puoi farlo con:"

#. type: example
#: guix-git/doc/guix.texi:1468
#, no-wrap
msgid "systemctl restart guix-daemon\n"
msgstr "systemctl restart guix-daemon\n"

#. type: Plain text
#: guix-git/doc/guix.texi:1474
msgid "Once the policy is installed, the file system has been relabeled, and the daemon has been restarted, it should be running in the @code{guix_daemon_t} context.  You can confirm this with the following command:"
msgstr "Una volta che la policy è installata, il file system è stato rietichettato e il demone è stato riavviato, dovrebbe essere in esecuzione nel contesto @code{guix_daemon_t}. Puoi confermarlo con il seguente comando:"

#. type: example
#: guix-git/doc/guix.texi:1477
#, no-wrap
msgid "ps -Zax | grep guix-daemon\n"
msgstr "ps -Zax | grep guix-daemon\n"

#. type: Plain text
#: guix-git/doc/guix.texi:1482
msgid "Monitor the SELinux log files as you run a command like @code{guix build hello} to convince yourself that SELinux permits all necessary operations."
msgstr "Monitora i file di log di SELinux mentre esegui un comando come @code{guix build hello} per convincerti che SELinux permette tutte le operazioni necessarie."

#. type: cindex
#: guix-git/doc/guix.texi:1484
#, no-wrap
msgid "SELinux, limitations"
msgstr "SELinux, limitazioni"

#. type: Plain text
#: guix-git/doc/guix.texi:1489
msgid "This policy is not perfect.  Here is a list of limitations or quirks that should be considered when deploying the provided SELinux policy for the Guix daemon."
msgstr "Questa policy non è perfetta. Ecco un elenco di limitazioni o stranezze che dovrebbero essere considerate quando si implementa la policy SELinux fornita per il demone Guix."

#. type: enumerate
#: guix-git/doc/guix.texi:1496
msgid "@code{guix_daemon_socket_t} isn’t actually used.  None of the socket operations involve contexts that have anything to do with @code{guix_daemon_socket_t}.  It doesn’t hurt to have this unused label, but it would be preferable to define socket rules for only this label."
msgstr "@code{guix_daemon_socket_t} non è effettivamente utilizzato. Nessuna delle operazioni sulle socket coinvolge contesti che abbiano a che fare con @code{guix_daemon_socket_t}. Non fa male avere questa etichetta inutilizzata, ma sarebbe preferibile definire regole per le socket solo per questa etichetta."

#. type: enumerate
#: guix-git/doc/guix.texi:1507
msgid "@code{guix gc} cannot access arbitrary links to profiles.  By design, the file label of the destination of a symlink is independent of the file label of the link itself.  Although all profiles under @file{$localstatedir} are labelled, the links to these profiles inherit the label of the directory they are in.  For links in the user’s home directory this will be @code{user_home_t}.  But for links from the root user’s home directory, or @file{/tmp}, or the HTTP server’s working directory, etc, this won’t work.  @code{guix gc} would be prevented from reading and following these links."
msgstr "@code{guix gc} non può accedere a collegamenti arbitrari ai profili. Per progetto, l'etichetta del file di destinazione di un collegamento simbolico è indipendente dall'etichetta del file del collegamento stesso. Sebbene tutti i profili sotto @file{$localstatedir} siano etichettati, i collegamenti a questi profili ereditano l'etichetta della directory in cui si trovano. Per i collegamenti nella directory home dell'utente, questa sarà @code{user_home_t}. Ma per i collegamenti dalla directory home dell'utente root, o @file{/tmp}, o la directory di lavoro del server HTTP, ecc, questo non funzionerà. A @code{guix gc} verrebbe impedito di leggere e seguire questi collegamenti."

#. type: enumerate
#: guix-git/doc/guix.texi:1512
msgid "The daemon’s feature to listen for TCP connections might no longer work.  This might require extra rules, because SELinux treats network sockets differently from files."
msgstr "La funzione del demone di ascoltare le connessioni TCP potrebbe non funzionare più. Questo potrebbe richiedere regole extra, perché SELinux tratta le socket di rete diversamente dai file."

#. type: enumerate
#: guix-git/doc/guix.texi:1523
msgid "Currently all files with a name matching the regular expression @code{/gnu/store/.+-(guix-.+|profile)/bin/guix-daemon} are assigned the label @code{guix_daemon_exec_t}; this means that @emph{any} file with that name in any profile would be permitted to run in the @code{guix_daemon_t} domain.  This is not ideal.  An attacker could build a package that provides this executable and convince a user to install and run it, which lifts it into the @code{guix_daemon_t} domain.  At that point SELinux could not prevent it from accessing files that are allowed for processes in that domain."
msgstr "Attualmente, a tutti i file con un nome che corrisponde all'espressione regolare @code{/gnu/store/.+-(guix-.+|profile)/bin/guix-daemon} viene assegnata l'etichetta @code{guix_daemon_exec_t}; questo significa che @emph{any} file con quel nome in qualsiasi profilo sarebbe autorizzato a essere eseguito nel dominio @code{guix_daemon_t}. Questo non è l'ideale. Un aggressore potrebbe creare un pacchetto che fornisce questo eseguibile e convincere un utente a installarlo ed eseguirlo, il che lo eleva al dominio @code{guix_daemon_t}. A quel punto SELinux non potrebbe impedirgli di accedere ai file consentiti per i processi in quel dominio."

#. type: enumerate
#: guix-git/doc/guix.texi:1528
msgid "You will need to relabel the store directory after all upgrades to @file{guix-daemon}, such as after running @code{guix pull}.  Assuming the store is in @file{/gnu}, you can do this with @code{restorecon -vR /gnu}, or by other means provided by your operating system."
msgstr "Dovrai rietichettare la directory dello store dopo tutti gli aggiornamenti a @file{guix-daemon}, come dopo aver eseguito @code{guix pull}. Supponendo che lo store sia in @file{/gnu}, puoi farlo con @code{restorecon -vR /gnu}, o con altri mezzi forniti dal tuo sistema operativo."

#. type: enumerate
#: guix-git/doc/guix.texi:1536
msgid "We could generate a much more restrictive policy at installation time, so that only the @emph{exact} file name of the currently installed @code{guix-daemon} executable would be labelled with @code{guix_daemon_exec_t}, instead of using a broad regular expression.  The downside is that root would have to install or upgrade the policy at installation time whenever the Guix package that provides the effectively running @code{guix-daemon} executable is upgraded."
msgstr "Potremmo generare una policy molto più restrittiva al momento dell'installazione, in modo che solo il nome @emph{exact} del file dell'eseguibile @code{guix-daemon} attualmente installato verrebbe etichettato con @code{guix_daemon_exec_t}, invece di usare un'espressione regolare generica. Lo svantaggio è che l'utente root dovrebbe installare o aggiornare la policy al momento dell'installazione ogni volta che il pacchetto Guix che fornisce l'eseguibile @code{guix-daemon} effettivamente in esecuzione viene aggiornato."

#. type: section
#: guix-git/doc/guix.texi:1539
#, no-wrap
msgid "Invoking @command{guix-daemon}"
msgstr "Invocare @command{guix-daemon}"

#. type: command{#1}
#: guix-git/doc/guix.texi:1540
#, no-wrap
msgid "guix-daemon"
msgstr "guix-daemon"

#. type: Plain text
#: guix-git/doc/guix.texi:1545
msgid "The @command{guix-daemon} program implements all the functionality to access the store.  This includes launching build processes, running the garbage collector, querying the availability of a build result, etc.  It is normally run as @code{root} like this:"
msgstr "Il programma @command{guix-daemon} implementa tutte le funzionalità per accedere allo store. Ciò include l'avvio dei processi di build, l'esecuzione del garbage collector, l'interrogazione sulla disponibilità di un risultato di build, ecc. Di solito viene eseguito come @code{root} in questo modo:"

#. type: cindex
#: guix-git/doc/guix.texi:1550
#, no-wrap
msgid "socket activation, for @command{guix-daemon}"
msgstr "attivazione socket, per @command{guix-daemon}"

#. type: Plain text
#: guix-git/doc/guix.texi:1554
msgid "This daemon can also be started following the systemd ``socket activation'' protocol (@pxref{Service De- and Constructors, @code{make-systemd-constructor},, shepherd, The GNU Shepherd Manual})."
msgstr "Questo demone può anche essere avviato seguendo il protocollo di ``attivazione socket'' di systemd (@pxref{Service De- and Constructors, @code{make-systemd-constructor},, shepherd, The GNU Shepherd Manual})."

#. type: Plain text
#: guix-git/doc/guix.texi:1556
msgid "For details on how to set it up, @pxref{Setting Up the Daemon}."
msgstr "Per i dettagli su come configurarlo, @pxref{Setting Up the Daemon}."

#. type: cindex
#: guix-git/doc/guix.texi:1558
#, no-wrap
msgid "container, build environment"
msgstr "container, ambiente di build"

#. type: cindex
#: guix-git/doc/guix.texi:1560 guix-git/doc/guix.texi:3195
#: guix-git/doc/guix.texi:4112 guix-git/doc/guix.texi:16781
#, no-wrap
msgid "reproducible builds"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:1572
msgid "By default, @command{guix-daemon} launches build processes under different UIDs, taken from the build group specified with @option{--build-users-group}.  In addition, each build process is run in a chroot environment that only contains the subset of the store that the build process depends on, as specified by its derivation (@pxref{Programming Interface, derivation}), plus a set of specific system directories.  By default, the latter contains @file{/dev} and @file{/dev/pts}.  Furthermore, on GNU/Linux, the build environment is a @dfn{container}: in addition to having its own file system tree, it has a separate mount name space, its own PID name space, network name space, etc.  This helps achieve reproducible builds (@pxref{Features})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:1578
msgid "When the daemon performs a build on behalf of the user, it creates a build directory under @file{/tmp} or under the directory specified by its @env{TMPDIR} environment variable.  This directory is shared with the container for the duration of the build, though within the container, the build tree is always called @file{/tmp/guix-build-@var{name}.drv-0}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:1582
msgid "The build directory is automatically deleted upon completion, unless the build failed and the client specified @option{--keep-failed} (@pxref{Common Build Options, @option{--keep-failed}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:1588
msgid "The daemon listens for connections and spawns one sub-process for each session started by a client (one of the @command{guix} sub-commands).  The @command{guix processes} command allows you to get an overview of the activity on your system by viewing each of the active sessions and clients.  @xref{Invoking guix processes}, for more information."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:1590
msgid "The following command-line options are supported:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1592
#, no-wrap
msgid "--build-users-group=@var{group}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1595
msgid "Take users from @var{group} to run build processes (@pxref{Setting Up the Daemon, build users})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1596 guix-git/doc/guix.texi:13381
#, no-wrap
msgid "--no-substitutes"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:1597 guix-git/doc/guix.texi:3207
#: guix-git/doc/guix.texi:3849
#, no-wrap
msgid "substitutes"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1601 guix-git/doc/guix.texi:13385
msgid "Do not use substitutes for build products.  That is, always build things locally instead of allowing downloads of pre-built binaries (@pxref{Substitutes})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1605
msgid "When the daemon runs with @option{--no-substitutes}, clients can still explicitly enable substitution @i{via} the @code{set-build-options} remote procedure call (@pxref{The Store})."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:1607
msgid "daemon-substitute-urls"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1607 guix-git/doc/guix.texi:13368
#: guix-git/doc/guix.texi:16183 guix-git/doc/guix.texi:16933
#: guix-git/doc/guix.texi:17163
#, no-wrap
msgid "--substitute-urls=@var{urls}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1611
msgid "Consider @var{urls} the default whitespace-separated list of substitute source URLs.  When this option is omitted, @indicateurl{@value{SUBSTITUTE-URLS}} is used."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1614
msgid "This means that substitutes may be downloaded from @var{urls}, as long as they are signed by a trusted signature (@pxref{Substitutes})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1617
msgid "@xref{Getting Substitutes from Other Servers}, for more information on how to configure the daemon to get substitutes from other servers."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1619 guix-git/doc/guix.texi:13404
#, no-wrap
msgid "--no-offload"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1623 guix-git/doc/guix.texi:13408
msgid "Do not use offload builds to other machines (@pxref{Daemon Offload Setup}).  That is, always build things locally instead of offloading builds to remote machines."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1624
#, no-wrap
msgid "--cache-failures"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1626
msgid "Cache build failures.  By default, only successful builds are cached."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1631
msgid "When this option is used, @command{guix gc --list-failures} can be used to query the set of store items marked as failed; @command{guix gc --clear-failures} removes store items from the set of cached failures.  @xref{Invoking guix gc}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1632 guix-git/doc/guix.texi:13434
#, no-wrap
msgid "--cores=@var{n}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:1633 guix-git/doc/guix.texi:13435
#, no-wrap
msgid "-c @var{n}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1636
msgid "Use @var{n} CPU cores to build each derivation; @code{0} means as many as available."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1640
msgid "The default value is @code{0}, but it may be overridden by clients, such as the @option{--cores} option of @command{guix build} (@pxref{Invoking guix build})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1644
msgid "The effect is to define the @env{NIX_BUILD_CORES} environment variable in the build process, which can then use it to exploit internal parallelism---for instance, by running @code{make -j$NIX_BUILD_CORES}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1645 guix-git/doc/guix.texi:13439
#, no-wrap
msgid "--max-jobs=@var{n}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:1646 guix-git/doc/guix.texi:13440
#, no-wrap
msgid "-M @var{n}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1651
msgid "Allow at most @var{n} build jobs in parallel.  The default value is @code{1}.  Setting it to @code{0} means that no builds will be performed locally; instead, the daemon will offload builds (@pxref{Daemon Offload Setup}), or simply fail."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1652 guix-git/doc/guix.texi:13409
#, no-wrap
msgid "--max-silent-time=@var{seconds}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1655 guix-git/doc/guix.texi:13412
msgid "When the build or substitution process remains silent for more than @var{seconds}, terminate it and report a build failure."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1657
msgid "The default value is @code{3600} (one hour)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1660
msgid "The value specified here can be overridden by clients (@pxref{Common Build Options, @option{--max-silent-time}})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1661 guix-git/doc/guix.texi:13416
#, no-wrap
msgid "--timeout=@var{seconds}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1664 guix-git/doc/guix.texi:13419
msgid "Likewise, when the build or substitution process lasts for more than @var{seconds}, terminate it and report a build failure."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1666
msgid "The default value is 24 hours."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1669
msgid "The value specified here can be overridden by clients (@pxref{Common Build Options, @option{--timeout}})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1670
#, no-wrap
msgid "--rounds=@var{N}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1675
msgid "Build each derivation @var{n} times in a row, and raise an error if consecutive build results are not bit-for-bit identical.  Note that this setting can be overridden by clients such as @command{guix build} (@pxref{Invoking guix build})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1679 guix-git/doc/guix.texi:13403
#: guix-git/doc/guix.texi:14139
msgid "When used in conjunction with @option{--keep-failed}, the differing output is kept in the store, under @file{/gnu/store/@dots{}-check}.  This makes it easy to look for differences between the two results."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1680
#, no-wrap
msgid "--debug"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1682
msgid "Produce debugging output."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1686
msgid "This is useful to debug daemon start-up issues, but then it may be overridden by clients, for example the @option{--verbosity} option of @command{guix build} (@pxref{Invoking guix build})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1687
#, no-wrap
msgid "--chroot-directory=@var{dir}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1689
msgid "Add @var{dir} to the build chroot."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1695
msgid "Doing this may change the result of build processes---for instance if they use optional dependencies found in @var{dir} when it is available, and not otherwise.  For that reason, it is not recommended to do so.  Instead, make sure that each derivation declares all the inputs that it needs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1696
#, no-wrap
msgid "--disable-chroot"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1698
msgid "Disable chroot builds."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:1705
msgid "Using this option is not recommended since it allows build processes to gain access to undeclared dependencies, to interfere with one another, and more generally to do anything that can be done with the authority of build users or that of the daemon---which includes at least the ability to tamper with any file in the store!"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:1709
msgid "You may find it necessary, though, when support for Linux unprivileged user namespaces is missing (@pxref{Build Environment Setup}).  Use at your own risk!"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1711
#, no-wrap
msgid "--isolate-host-loopback"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1716
msgid "Prevent fixed-output chroot builds from accessing the host loopback.  When this is used, fixed-output builds will have their own loopback interface, and attempts to connect to 127.0.0.1 or ::1 will instead attempt to connect to its local loopback interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1717
#, no-wrap
msgid "--log-compression=@var{type}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1720
msgid "Compress build logs according to @var{type}, one of @code{gzip}, @code{bzip2}, or @code{none}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1724
msgid "Unless @option{--lose-logs} is used, all the build logs are kept in the @var{localstatedir}.  To save space, the daemon automatically compresses them with gzip by default."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1725
#, no-wrap
msgid "--discover[=yes|no]"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1728 guix-git/doc/guix.texi:20443
msgid "Whether to discover substitute servers on the local network using mDNS and DNS-SD."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1731
msgid "This feature is still experimental.  However, here are a few considerations."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:1735
msgid "It might be faster/less expensive than fetching from remote servers;"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:1738
msgid "There are no security risks, only genuine substitutes will be used (@pxref{Substitute Authentication});"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:1742
msgid "An attacker advertising @command{guix publish} on your LAN cannot serve you malicious binaries, but they can learn what software you’re installing;"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:1745
msgid "Servers may serve substitute over HTTP, unencrypted, so anyone on the LAN can see what software you’re installing."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1749
msgid "It is also possible to enable or disable substitute server discovery at run-time by running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:1753
#, no-wrap
msgid ""
"herd discover guix-daemon on\n"
"herd discover guix-daemon off\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1755
#, no-wrap
msgid "--disable-deduplication"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:1756 guix-git/doc/guix.texi:4608
#, no-wrap
msgid "deduplication"
msgstr "deduplicazione"

#. type: table
#: guix-git/doc/guix.texi:1758
msgid "Disable automatic file ``deduplication'' in the store."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1765
msgid "By default, files added to the store are automatically ``deduplicated'': if a newly added file is identical to another one found in the store, the daemon makes the new file a hard link to the other file.  This can noticeably reduce disk usage, at the expense of slightly increased input/output load at the end of a build process.  This option disables this optimization."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1766
#, no-wrap
msgid "--gc-keep-outputs[=yes|no]"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1769
msgid "Tell whether the garbage collector (GC) must keep outputs of live derivations."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:1770 guix-git/doc/guix.texi:4420
#, no-wrap
msgid "GC roots"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:1771 guix-git/doc/guix.texi:4421
#, no-wrap
msgid "garbage collector roots"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1777
msgid "When set to @code{yes}, the GC will keep the outputs of any live derivation available in the store---the @file{.drv} files.  The default is @code{no}, meaning that derivation outputs are kept only if they are reachable from a GC root.  @xref{Invoking guix gc}, for more on GC roots."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1778
#, no-wrap
msgid "--gc-keep-derivations[=yes|no]"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1781
msgid "Tell whether the garbage collector (GC) must keep derivations corresponding to live outputs."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1787
msgid "When set to @code{yes}, as is the case by default, the GC keeps derivations---i.e., @file{.drv} files---as long as at least one of their outputs is live.  This allows users to keep track of the origins of items in their store.  Setting it to @code{no} saves a bit of disk space."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1796
msgid "In this way, setting @option{--gc-keep-derivations} to @code{yes} causes liveness to flow from outputs to derivations, and setting @option{--gc-keep-outputs} to @code{yes} causes liveness to flow from derivations to outputs.  When both are set to @code{yes}, the effect is to keep all the build prerequisites (the sources, compiler, libraries, and other build-time tools) of live objects in the store, regardless of whether these prerequisites are reachable from a GC root.  This is convenient for developers since it saves rebuilds or downloads."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1797
#, no-wrap
msgid "--impersonate-linux-2.6"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1800
msgid "On Linux-based systems, impersonate Linux 2.6.  This means that the kernel's @command{uname} system call will report 2.6 as the release number."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1803
msgid "This might be helpful to build programs that (usually wrongfully) depend on the kernel version number."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1804
#, no-wrap
msgid "--lose-logs"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1807
msgid "Do not keep build logs.  By default they are kept under @file{@var{localstatedir}/guix/log}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1808 guix-git/doc/guix.texi:4874
#: guix-git/doc/guix.texi:6487 guix-git/doc/guix.texi:6988
#: guix-git/doc/guix.texi:7555 guix-git/doc/guix.texi:14075
#: guix-git/doc/guix.texi:16210 guix-git/doc/guix.texi:16475
#: guix-git/doc/guix.texi:17169 guix-git/doc/guix.texi:47497
#, no-wrap
msgid "--system=@var{system}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1812
msgid "Assume @var{system} as the current system type.  By default it is the architecture/kernel pair found at configure time, such as @code{x86_64-linux}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1813 guix-git/doc/guix.texi:13048
#, no-wrap
msgid "--listen=@var{endpoint}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1818
msgid "Listen for connections on @var{endpoint}.  @var{endpoint} is interpreted as the file name of a Unix-domain socket if it starts with @code{/} (slash sign).  Otherwise, @var{endpoint} is interpreted as a host name or host name and port to listen to.  Here are a few examples:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1820
#, no-wrap
msgid "--listen=/gnu/var/daemon"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1823
msgid "Listen for connections on the @file{/gnu/var/daemon} Unix-domain socket, creating it if needed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1824
#, no-wrap
msgid "--listen=localhost"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:1825 guix-git/doc/guix.texi:11640
#, no-wrap
msgid "daemon, remote access"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:1826 guix-git/doc/guix.texi:11641
#, no-wrap
msgid "remote access to the daemon"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:1827 guix-git/doc/guix.texi:11642
#, no-wrap
msgid "daemon, cluster setup"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:1828 guix-git/doc/guix.texi:11643
#, no-wrap
msgid "clusters, daemon setup"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1831
msgid "Listen for TCP connections on the network interface corresponding to @code{localhost}, on port 44146."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1832
#, no-wrap
msgid "--listen=128.0.0.42:1234"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1835
msgid "Listen for TCP connections on the network interface corresponding to @code{128.0.0.42}, on port 1234."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1842
msgid "This option can be repeated multiple times, in which case @command{guix-daemon} accepts connections on all the specified endpoints.  Users can tell client commands what endpoint to connect to by setting the @env{GUIX_DAEMON_SOCKET} environment variable (@pxref{The Store, @env{GUIX_DAEMON_SOCKET}})."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:1849
msgid "The daemon protocol is @emph{unauthenticated and unencrypted}.  Using @option{--listen=@var{host}} is suitable on local networks, such as clusters, where only trusted nodes may connect to the build daemon.  In other cases where remote access to the daemon is needed, we recommend using Unix-domain sockets along with SSH."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1854
msgid "When @option{--listen} is omitted, @command{guix-daemon} listens for connections on the Unix-domain socket located at @file{@var{localstatedir}/guix/daemon-socket/socket}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:1864
msgid "When using Guix on top of GNU/Linux distribution other than Guix System---a so-called @dfn{foreign distro}---a few additional steps are needed to get everything in place.  Here are some of them."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:1868
msgid "locales-and-locpath"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:1868
#, no-wrap
msgid "locales, when not on Guix System"
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:1869 guix-git/doc/guix.texi:19448
#, no-wrap
msgid "LOCPATH"
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:1870
#, no-wrap
msgid "GUIX_LOCPATH"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:1875
msgid "Packages installed @i{via} Guix will not use the locale data of the host system.  Instead, you must first install one of the locale packages available with Guix and then define the @env{GUIX_LOCPATH} environment variable:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:1879
#, no-wrap
msgid ""
"$ guix install glibc-locales\n"
"$ export GUIX_LOCPATH=$HOME/.guix-profile/lib/locale\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:1891
msgid "Note that the @code{glibc-locales} package contains data for all the locales supported by the GNU@tie{}libc and weighs in at around 930@tie{}MiB@footnote{The size of the @code{glibc-locales} package is reduced down to about 213@tie{}MiB with store deduplication and further down to about 67@tie{}MiB when using a zstd-compressed Btrfs file system.}.  If you only need a few locales, you can define your custom locales package via the @code{make-glibc-utf8-locales} procedure from the @code{(gnu packages base)} module.  The following example defines a package containing the various Canadian UTF-8 locales known to the GNU@tie{}libc, that weighs around 14@tie{}MiB:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:1894
#, no-wrap
msgid ""
"(use-modules (gnu packages base))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:1900
#, no-wrap
msgid ""
"(define my-glibc-locales\n"
"  (make-glibc-utf8-locales\n"
"   glibc\n"
"   #:locales (list \"en_CA\" \"fr_CA\" \"ik_CA\" \"iu_CA\" \"shs_CA\")\n"
"   #:name \"glibc-canadian-utf8-locales\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:1905
msgid "The @env{GUIX_LOCPATH} variable plays a role similar to @env{LOCPATH} (@pxref{Locale Names, @env{LOCPATH},, libc, The GNU C Library Reference Manual}).  There are two important differences though:"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:1912
msgid "@env{GUIX_LOCPATH} is honored only by the libc in Guix, and not by the libc provided by foreign distros.  Thus, using @env{GUIX_LOCPATH} allows you to make sure the programs of the foreign distro will not end up loading incompatible locale data."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:1919
msgid "libc suffixes each entry of @env{GUIX_LOCPATH} with @code{/X.Y}, where @code{X.Y} is the libc version---e.g., @code{2.22}.  This means that, should your Guix profile contain a mixture of programs linked against different libc version, each libc version will only try to load locale data in the right format."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:1923
msgid "This is important because the locale data format used by different libc versions may be incompatible."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:1926
#, no-wrap
msgid "name service switch, glibc"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:1927
#, no-wrap
msgid "NSS (name service switch), glibc"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:1928 guix-git/doc/guix.texi:20138
#, no-wrap
msgid "@abbr{nscd, name service cache daemon}"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:1935
msgid "When using Guix on a foreign distro, we @emph{strongly recommend} that the system run the GNU C library's @dfn{name service cache daemon}, @command{nscd}, which should be listening on the @file{/var/run/nscd/socket} socket.  Failing to do that, applications installed with Guix may fail to look up host names or user accounts, or may even crash.  The next paragraphs explain why."
msgstr ""

#. type: file{#1}
#: guix-git/doc/guix.texi:1936
#, no-wrap
msgid "nsswitch.conf"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:1941
msgid "The GNU C library implements a @dfn{name service switch} (NSS), which is an extensible mechanism for ``name lookups'' in general: host name resolution, user accounts, and more (@pxref{Name Service Switch,,, libc, The GNU C Library Reference Manual})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:1942
#, no-wrap
msgid "Network information service (NIS)"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:1943
#, no-wrap
msgid "NIS (Network information service)"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:1952
msgid "Being extensible, the NSS supports @dfn{plugins}, which provide new name lookup implementations: for example, the @code{nss-mdns} plugin allow resolution of @code{.local} host names, the @code{nis} plugin allows user account lookup using the Network information service (NIS), and so on.  These extra ``lookup services'' are configured system-wide in @file{/etc/nsswitch.conf}, and all the programs running on the system honor those settings (@pxref{NSS Configuration File,,, libc, The GNU C Reference Manual})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:1962
msgid "When they perform a name lookup---for instance by calling the @code{getaddrinfo} function in C---applications first try to connect to the nscd; on success, nscd performs name lookups on their behalf.  If the nscd is not running, then they perform the name lookup by themselves, by loading the name lookup services into their own address space and running it.  These name lookup services---the @file{libnss_*.so} files---are @code{dlopen}'d, but they may come from the host system's C library, rather than from the C library the application is linked against (the C library coming from Guix)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:1967
msgid "And this is where the problem is: if your application is linked against Guix's C library (say, glibc 2.24) and tries to load NSS plugins from another C library (say, @code{libnss_mdns.so} for glibc 2.22), it will likely crash or have its name lookups fail unexpectedly."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:1972
msgid "Running @command{nscd} on the system, among other advantages, eliminates this binary incompatibility problem because those @code{libnss_*.so} files are loaded in the @command{nscd} process, not in applications themselves."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:1973
#, no-wrap
msgid "nsncd, replacement for nscd"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:1980
msgid "Note that @command{nscd} is no longer provided on some GNU/Linux distros, such as Arch Linux (as of Dec. 2024).  @command{nsncd} can be used as a drop-in-replacement.  See @uref{https://github.com/twosigma/nsncd, the nsncd repository} and @uref{https://flokli.de/posts/2022-11-18-nsncd/, this blog post} for more information."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:1981
#, no-wrap
msgid "X11 Fonts"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:1991
msgid "The majority of graphical applications use Fontconfig to locate and load fonts and perform X11-client-side rendering.  The @code{fontconfig} package in Guix looks for fonts in @file{$HOME/.guix-profile} by default.  Thus, to allow graphical applications installed with Guix to display fonts, you have to install fonts with Guix as well.  Essential font packages include @code{font-ghostscript}, @code{font-dejavu}, and @code{font-gnu-freefont}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:1992
#, no-wrap
msgid "fc-cache"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:1993
#, no-wrap
msgid "font cache"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:1997
msgid "Once you have installed or removed fonts, or when you notice an application that does not find fonts, you may need to install Fontconfig and to force an update of its font cache by running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2001
#, no-wrap
msgid ""
"guix install fontconfig\n"
"fc-cache -rv\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2009
msgid "To display text written in Chinese languages, Japanese, or Korean in graphical applications, consider installing @code{font-adobe-source-han-sans} or @code{font-wqy-zenhei}.  The former has multiple outputs, one per language family (@pxref{Packages with Multiple Outputs}).  For instance, the following command installs fonts for Chinese languages:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2012
#, no-wrap
msgid "guix install font-adobe-source-han-sans:cn\n"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:2014
#, no-wrap
msgid "xterm"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2018
msgid "Older programs such as @command{xterm} do not use Fontconfig and instead rely on server-side font rendering.  Such programs require to specify a full name of a font using XLFD (X Logical Font Description), like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2021
#, no-wrap
msgid "-*-dejavu sans-medium-r-normal-*-*-100-*-*-*-*-*-1\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2025
msgid "To be able to use such full names for the TrueType fonts installed in your Guix profile, you need to extend the font path of the X server:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2030
#, no-wrap
msgid "xset +fp $(dirname $(readlink -f ~/.guix-profile/share/fonts/truetype/fonts.dir))\n"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:2032
#, no-wrap
msgid "xlsfonts"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2035
msgid "After that, you can run @code{xlsfonts} (from @code{xlsfonts} package)  to make sure your TrueType fonts are listed there."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:2039 guix-git/doc/guix.texi:46207
#, no-wrap
msgid "nss-certs"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2042
msgid "The @code{nss-certs} package provides X.509 certificates, which allow programs to authenticate Web servers accessed over HTTPS."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2047
msgid "When using Guix on a foreign distro, you can install this package and define the relevant environment variables so that packages know where to look for certificates.  @xref{X.509 Certificates}, for detailed information."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:2050
#, no-wrap
msgid "emacs"
msgstr "emacs"

#. type: Plain text
#: guix-git/doc/guix.texi:2056
msgid "When you install Emacs packages with Guix, the Elisp files are placed under the @file{share/emacs/site-lisp/} directory of the profile in which they are installed.  The Elisp libraries are made available to Emacs through the @env{EMACSLOADPATH} environment variable, which is set when installing Emacs itself."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2057
#, no-wrap
msgid "guix-emacs-autoload-packages, refreshing Emacs packages"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2066
msgid "Additionally, autoload definitions are automatically evaluated at the initialization of Emacs, by the Guix-specific @code{guix-emacs-autoload-packages} procedure.  This procedure can be interactively invoked to have newly installed Emacs packages discovered, without having to restart Emacs.  If, for some reason, you want to avoid auto-loading the Emacs packages installed with Guix, you can do so by running Emacs with the @option{--no-site-file} option (@pxref{Init File,,, emacs, The GNU Emacs Manual})."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:2071
msgid "Most Emacs variants are now capable of doing native compilation.  The approach taken by Guix Emacs however differs greatly from the approach taken upstream."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:2078
msgid "Upstream Emacs compiles packages just-in-time and typically places shared object files in a special folder within your @code{user-emacs-directory}.  These shared objects within said folder are organized in a flat hierarchy, and their file names contain two hashes to verify the original file name and contents of the source code."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:2087
msgid "Guix Emacs on the other hand prefers to compile packages ahead-of-time.  Shared objects retain much of the original file name and no hashes are added to verify the original file name or the contents of the file.  Crucially, this allows Guix Emacs and packages built against it to be grafted (@pxref{Security Updates, grafts}), but at the same time, Guix Emacs lacks the hash-based verification of source code baked into upstream Emacs.  As this naming schema is trivial to exploit, we disable just-in-time compilation."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:2092
msgid "Further note, that @code{emacs-minimal}---the default Emacs for building packages---has been configured without native compilation.  To natively compile your emacs packages ahead of time, use a transformation like @option{--with-input=emacs-minimal=emacs}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2097
#, no-wrap
msgid "Upgrading Guix, on a foreign distro"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2100
msgid "To upgrade Guix, run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2103 guix-git/doc/guix.texi:3015
#, no-wrap
msgid "guix pull\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2106
msgid "@xref{Invoking guix pull}, for more information."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2107
#, no-wrap
msgid "upgrading Guix for the root user, on a foreign distro"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2108
#, no-wrap
msgid "upgrading the Guix daemon, on a foreign distro"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2109
#, no-wrap
msgid "@command{guix pull} for the root user, on a foreign distro"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2113
msgid "If you installed Guix on a foreign distro with @file{guix-install.sh}, you can upgrade the build daemon by running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2116
#, no-wrap
msgid "sudo -i guix pull\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2121
msgid "followed by (assuming your distro uses the systemd service management tool):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2124
#, no-wrap
msgid "systemctl restart guix-daemon.service\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2131
msgid "While this works for @file{guix-install.sh}, it will most likely not work if you installed Guix through the package manager of another distribution (for instance with sudo apt install guix, pacman -S guix, etc) because on many distributions @file{guix-daemon.service} will only run the Guix daemon provided by the distribution."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2137
msgid "Waiting for your distribution to provide security fixes sometimes work, but fixing security issues in the Guix package takes times for distributions because Guix doesn't backport the security fixes to the releases used by the distributions. On some distribution versions, the Guix package is never fixed."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2142
msgid "However since Guix updates also comes with a new daemon, so you can simply configure your distribution to use the guix-daemon provided by Guix instead. The following will assume that your distribution uses systemd."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2145
msgid "You first need to override @file{guix-daemon.service} with the following command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2150
#, no-wrap
msgid ""
"sudo install -m 644 \\\n"
"     /lib/systemd/system/guix-daemon.service \\\n"
"     /etc/systemd/system/guix-daemon.service\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2154
msgid "You will then need to edit @file{/etc/systemd/system/guix-daemon.service}. To do that open this file with a text editor that has root permissions:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2157
#, no-wrap
msgid "sudo $EDITOR /etc/systemd/system/guix-daemon.service\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2161
msgid "Then try to find a line with @emph{ExecStart=}, it should look a bit like that:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2166
#, fuzzy, no-wrap
#| msgid "# guix-daemon --build-users-group=guixbuild\n"
msgid ""
"...\n"
"[Service]\n"
"ExecStart=/usr/bin/guix-daemon --build-users-group=_guixbuild\n"
"...\n"
msgstr "# guix-daemon --build-users-group=guixbuild\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2171
#, fuzzy
#| msgid ""
#| "grep User=guix-daemon \\\n"
#| "  /var/guix/profiles/per-user/root/current-guix/lib/systemd/system/guix-daemon.service\n"
msgid "Then change @emph{/usr/bin/guix-daemon} into @emph{/var/guix/profiles/per-user/root/current-guix/bin/guix-daemon} and save the changes."
msgstr ""
"grep User=guix-daemon \\\n"
"  /var/guix/profiles/per-user/root/current-guix/lib/systemd/system/guix-daemon.service\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2174
msgid "Once done you need to tell systemd that @emph{guix-daemon.service} was overriden:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2177
#, no-wrap
msgid "sudo systemctl daemon-reload\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2181
msgid "Once done you can then update the Guix daemon in the same way than if you installed Guix with @file{guix-install.sh}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2185
#, fuzzy, no-wrap
#| msgid "systemctl restart guix-daemon\n"
msgid ""
"sudo -i guix pull\n"
"sudo systemctl restart guix-daemon.service\n"
msgstr "systemctl restart guix-daemon\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2189
msgid "On Guix System, upgrading the daemon is achieved by reconfiguring the system (@pxref{Invoking guix system, @code{guix system reconfigure}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2193
msgid "To migrate an existing installation to the @emph{unprivileged daemon} where @command{guix-daemon} does not run as root, @pxref{unprivileged-daemon-migration}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2200
#, no-wrap
msgid "installing Guix System"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2201
#, no-wrap
msgid "Guix System, installation"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2206
msgid "This section explains how to install Guix System on a machine.  Guix, as a package manager, can also be installed on top of a running GNU/Linux system, @pxref{Installation}."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:2215
msgid "You are reading this documentation with an Info reader.  For details on how to use it, hit the @key{RET} key (``return'' or ``enter'') on the link that follows: @pxref{Top, Info reader,, info-stnd, Stand-alone GNU Info}.  Hit @kbd{l} afterwards to come back here."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:2218
msgid "Alternatively, run @command{info info} in another tty to keep the manual available."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2239
msgid "We consider Guix System to be ready for a wide range of ``desktop'' and server use cases.  The reliability guarantees it provides---transactional upgrades and rollbacks, reproducibility---make it a solid foundation."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2241
msgid "More and more system services are provided (@pxref{Services})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2244
msgid "Nevertheless, before you proceed with the installation, be aware that some services you rely on may still be missing from version @value{VERSION}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2248
msgid "More than a disclaimer, this is an invitation to report issues (and success stories!), and to join us in improving it.  @xref{Contributing}, for more info."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2253
#, no-wrap
msgid "hardware support on Guix System"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2262
msgid "GNU@tie{}Guix focuses on respecting the user's computing freedom.  It builds around the kernel Linux-libre, which means that only hardware for which free software drivers and firmware exist is supported.  Nowadays, a wide range of off-the-shelf hardware is supported on GNU/Linux-libre---from keyboards to graphics cards to scanners and Ethernet controllers.  Unfortunately, there are still areas where hardware vendors deny users control over their own computing, and such hardware is not supported on Guix System."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2263
#, no-wrap
msgid "WiFi, hardware support"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2272
msgid "One of the main areas where free drivers or firmware are lacking is WiFi devices.  WiFi devices known to work include those using Atheros chips (AR9271 and AR7010), which corresponds to the @code{ath9k} Linux-libre driver, and those using Broadcom/AirForce chips (BCM43xx with Wireless-Core Revision 5), which corresponds to the @code{b43-open} Linux-libre driver.  Free firmware exists for both and is available out-of-the-box on Guix System, as part of @code{%base-firmware} (@pxref{operating-system Reference, @code{firmware}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2275
msgid "The installer warns you early on if it detects devices that are known @emph{not} to work due to the lack of free firmware or free drivers."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2276
#, no-wrap
msgid "RYF, Respects Your Freedom"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2282
msgid "The @uref{https://www.fsf.org/, Free Software Foundation} runs @uref{https://www.fsf.org/ryf, @dfn{Respects Your Freedom}} (RYF), a certification program for hardware products that respect your freedom and your privacy and ensure that you have control over your device.  We encourage you to check the list of RYF-certified devices."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2286
msgid "Another useful resource is the @uref{https://www.h-node.org/, H-Node} web site.  It contains a catalog of hardware devices with information about their support in GNU/Linux."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2295
msgid "An ISO-9660 installation image that can be written to a USB stick or burnt to a DVD can be downloaded from @indicateurl{@value{BASE-URL}/guix-system-install-@value{VERSION}.x86_64-linux.iso}, where you can replace @code{x86_64-linux} with one of:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:2299
msgid "for a GNU/Linux system on Intel/AMD-compatible 64-bit CPUs;"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:2302
msgid "for a 32-bit GNU/Linux system on Intel-compatible CPUs."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2307
msgid "Make sure to download the associated @file{.sig} file and to verify the authenticity of the image against it, along these lines:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2311
#, no-wrap
msgid ""
"$ wget @value{BASE-URL}/guix-system-install-@value{VERSION}.x86_64-linux.iso.sig\n"
"$ gpg --verify guix-system-install-@value{VERSION}.x86_64-linux.iso.sig\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2315
msgid "If that command fails because you do not have the required public key, then run this command to import it:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2319
#, no-wrap
msgid ""
"$ wget @value{OPENPGP-SIGNING-KEY-URL} \\\n"
"      -qO - | gpg --import -\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2323
msgid "and rerun the @code{gpg --verify} command."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2326
msgid "Take note that a warning like ``This key is not certified with a trusted signature!'' is normal."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2331
msgid "This image contains the tools necessary for an installation.  It is meant to be copied @emph{as is} to a large-enough USB stick or DVD."
msgstr ""

#. type: unnumberedsubsec
#: guix-git/doc/guix.texi:2332
#, no-wrap
msgid "Copying to a USB Stick"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2337
msgid "Insert a USB stick of 1@tie{}GiB or more into your machine, and determine its device name.  Assuming that the USB stick is known as @file{/dev/sdX}, copy the image with:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2341
#, no-wrap
msgid ""
"dd if=guix-system-install-@value{VERSION}.x86_64-linux.iso of=/dev/sdX status=progress\n"
"sync\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2344
msgid "Access to @file{/dev/sdX} usually requires root privileges."
msgstr ""

#. type: unnumberedsubsec
#: guix-git/doc/guix.texi:2345
#, no-wrap
msgid "Burning on a DVD"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2350
msgid "Insert a blank DVD into your machine, and determine its device name.  Assuming that the DVD drive is known as @file{/dev/srX}, copy the image with:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2353
#, no-wrap
msgid "growisofs -dvd-compat -Z /dev/srX=guix-system-install-@value{VERSION}.x86_64-linux.iso\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2356
msgid "Access to @file{/dev/srX} usually requires root privileges."
msgstr ""

#. type: unnumberedsubsec
#: guix-git/doc/guix.texi:2357
#, no-wrap
msgid "Booting"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2364
msgid "Once this is done, you should be able to reboot the system and boot from the USB stick or DVD@.  The latter usually requires you to get in the BIOS or UEFI boot menu, where you can choose to boot from the USB stick.  In order to boot from Libreboot, switch to the command mode by pressing the @kbd{c} key and type @command{search_grub usb}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2374
msgid "Sadly, on some machines, the installation medium cannot be properly booted and you only see a black screen after booting even after you waited for ten minutes.  This may indicate that your machine cannot run Guix System; perhaps you instead want to install Guix on a foreign distro (@pxref{Binary Installation}).  But don't give up just yet; a possible workaround is pressing the @kbd{e} key in the GRUB boot menu and appending @option{nomodeset} to the Linux bootline.  Sometimes the black screen issue can also be resolved by connecting a different display."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2377
msgid "@xref{Installing Guix in a VM}, if, instead, you would like to install Guix System in a virtual machine (VM)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2387
msgid "Once you have booted, you can use the guided graphical installer, which makes it easy to get started (@pxref{Guided Graphical Installation}).  Alternatively, if you are already familiar with GNU/Linux and if you want more control than what the graphical installer provides, you can choose the ``manual'' installation process (@pxref{Manual Installation})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2395
msgid "The graphical installer is available on TTY1.  You can obtain root shells on TTYs 3 to 6 by hitting @kbd{ctrl-alt-f3}, @kbd{ctrl-alt-f4}, etc.  TTY2 shows this documentation and you can reach it with @kbd{ctrl-alt-f2}.  Documentation is browsable using the Info reader commands (@pxref{Top,,, info-stnd, Stand-alone GNU Info}).  The installation system runs the GPM mouse daemon, which allows you to select text with the left mouse button and to paste it with the middle button."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:2400
msgid "Installation requires access to the Internet so that any missing dependencies of your system configuration can be downloaded.  See the ``Networking'' section below."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2407
msgid "The graphical installer is a text-based user interface.  It will guide you, with dialog boxes, through the steps needed to install GNU@tie{}Guix System."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2412
msgid "The first dialog boxes allow you to set up the system as you use it during the installation: you can choose the language, keyboard layout, and set up networking, which will be used during the installation.  The image below shows the networking dialog."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2414
msgid "@image{images/installer-network,5in,, networking setup with the graphical installer}"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2419
msgid "Later steps allow you to partition your hard disk, as shown in the image below, to choose whether or not to use encrypted file systems, to enter the host name and root password, and to create an additional account, among other things."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2421
msgid "@image{images/installer-partitions,5in,, partitioning with the graphical installer}"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2424
msgid "Note that, at any time, the installer allows you to exit the current installation step and resume at a previous step, as show in the image below."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2426
msgid "@image{images/installer-resume,5in,, resuming the installation process}"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2431
msgid "Once you're done, the installer produces an operating system configuration and displays it (@pxref{Using the Configuration System}).  At that point you can hit ``OK'' and installation will proceed.  On success, you can reboot into the new system and enjoy.  @xref{After System Installation}, for what's next!"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2441
msgid "This section describes how you would ``manually'' install GNU@tie{}Guix System on your machine.  This option requires familiarity with GNU/Linux, with the shell, and with common administration tools.  If you think this is not for you, consider using the guided graphical installer (@pxref{Guided Graphical Installation})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2447
msgid "The installation system provides root shells on TTYs 3 to 6; press @kbd{ctrl-alt-f3}, @kbd{ctrl-alt-f4}, and so on to reach them.  It includes many common tools needed to install the system, but is also a full-blown Guix System.  This means that you can install additional packages, should you need it, using @command{guix package} (@pxref{Invoking guix package})."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:2454
#, no-wrap
msgid "Keyboard Layout, Networking, and Partitioning"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2459
msgid "Before you can install the system, you may want to adjust the keyboard layout, set up networking, and partition your target hard disk.  This section will guide you through this."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2462 guix-git/doc/guix.texi:19263
#, no-wrap
msgid "keyboard layout"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2466
msgid "The installation image uses the US qwerty keyboard layout.  If you want to change it, you can use the @command{loadkeys} command.  For example, the following command selects the Dvorak keyboard layout:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2469
#, no-wrap
msgid "loadkeys dvorak\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2474
msgid "See the files under @file{/run/current-system/profile/share/keymaps} for a list of available keyboard layouts.  Run @command{man loadkeys} for more information."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:2476
msgid "manual-installation-networking"
msgstr ""

#. type: subsubsection
#: guix-git/doc/guix.texi:2476
#, no-wrap
msgid "Networking"
msgstr "Rete"

#. type: Plain text
#: guix-git/doc/guix.texi:2479
msgid "Run the following command to see what your network interfaces are called:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2482
#, no-wrap
msgid "ifconfig -a\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:2486 guix-git/doc/guix.texi:2508
msgid "@dots{} or, using the GNU/Linux-specific @command{ip} command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2489
#, no-wrap
msgid "ip address\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2496
msgid "Wired interfaces have a name starting with @samp{e}; for example, the interface corresponding to the first on-board Ethernet controller is called @samp{eno1}.  Wireless interfaces have a name starting with @samp{w}, like @samp{w1p2s0}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:2498
#, no-wrap
msgid "Wired connection"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:2501
msgid "To configure a wired network run the following command, substituting @var{interface} with the name of the wired interface you want to use."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2504
#, no-wrap
msgid "ifconfig @var{interface} up\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2511
#, no-wrap
msgid "ip link set @var{interface} up\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:2513
#, no-wrap
msgid "Wireless connection"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2514
#, no-wrap
msgid "wireless"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2515
#, no-wrap
msgid "WiFi"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:2520
msgid "To configure wireless networking, you can create a configuration file for the @command{wpa_supplicant} configuration tool (its location is not important) using one of the available text editors such as @command{nano}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2523
#, no-wrap
msgid "nano wpa_supplicant.conf\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:2528
msgid "As an example, the following stanza can go to this file and will work for many wireless networks, provided you give the actual SSID and passphrase for the network you are connecting to:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2535
#, no-wrap
msgid ""
"network=@{\n"
"  ssid=\"@var{my-ssid}\"\n"
"  key_mgmt=WPA-PSK\n"
"  psk=\"the network's secret passphrase\"\n"
"@}\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:2540
msgid "Start the wireless service and run it in the background with the following command (substitute @var{interface} with the name of the network interface you want to use):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2543
#, no-wrap
msgid "wpa_supplicant -c wpa_supplicant.conf -i @var{interface} -B\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:2546
msgid "Run @command{man wpa_supplicant} for more information."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2548
#, no-wrap
msgid "DHCP"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2551
msgid "At this point, you need to acquire an IP address.  On a network where IP addresses are automatically assigned @i{via} DHCP, you can run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2554
#, no-wrap
msgid "dhclient -v @var{interface}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2557
msgid "Try to ping a server to see if networking is up and running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2560
#, no-wrap
msgid "ping -c 3 gnu.org\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2564
msgid "Setting up network access is almost always a requirement because the image does not contain all the software and tools that may be needed."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2565
#, no-wrap
msgid "proxy, during system installation"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2568
msgid "If you need HTTP and HTTPS access to go through a proxy, run the following command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2571
#, no-wrap
msgid "herd set-http-proxy guix-daemon @var{URL}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2576
msgid "where @var{URL} is the proxy URL, for example @code{http://example.org:8118}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2577
#, no-wrap
msgid "installing over SSH"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2580
msgid "If you want to, you can continue the installation remotely by starting an SSH server:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2583
#, no-wrap
msgid "herd start ssh-daemon\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2587
msgid "Make sure to either set a password with @command{passwd}, or configure OpenSSH public key authentication before logging in."
msgstr ""

#. type: subsubsection
#: guix-git/doc/guix.texi:2588
#, no-wrap
msgid "Disk Partitioning"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2592
msgid "Unless this has already been done, the next step is to partition, and then format the target partition(s)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2597
msgid "The installation image includes several partitioning tools, including Parted (@pxref{Overview,,, parted, GNU Parted User Manual}), @command{fdisk}, and @command{cfdisk}.  Run it and set up your disk with the partition layout you want:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2600
#, no-wrap
msgid "cfdisk\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2606
msgid "If your disk uses the GUID Partition Table (GPT) format and you plan to install BIOS-based GRUB (which is the default), make sure a BIOS Boot Partition is available (@pxref{BIOS installation,,, grub, GNU GRUB manual})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2607
#, no-wrap
msgid "EFI, installation"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2608
#, no-wrap
msgid "UEFI, installation"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2609
#, no-wrap
msgid "ESP, EFI system partition"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2613
msgid "If you instead wish to use EFI-based GRUB, a FAT32 @dfn{EFI System Partition} (ESP) is required.  This partition can be mounted at @file{/boot/efi} for instance and must have the @code{esp} flag set.  E.g., for @command{parted}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2616
#, no-wrap
msgid "parted /dev/sda set 1 esp on\n"
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:2619 guix-git/doc/guix.texi:46634
#, no-wrap
msgid "grub-bootloader"
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:2620 guix-git/doc/guix.texi:46638
#, no-wrap
msgid "grub-efi-bootloader"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:2627
msgid "Unsure whether to use EFI- or BIOS-based GRUB? If the directory @file{/sys/firmware/efi} exists in the installation image, then you should probably perform an EFI installation, using @code{grub-efi-bootloader}.  Otherwise you should use the BIOS-based GRUB, known as @code{grub-bootloader}.  @xref{Bootloader Configuration}, for more info on bootloaders."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2635
msgid "Once you are done partitioning the target hard disk drive, you have to create a file system on the relevant partition(s)@footnote{Currently Guix System only supports ext4, btrfs, JFS, F2FS, and XFS file systems.  In particular, code that reads file system UUIDs and labels only works for these file system types.}.  For the ESP, if you have one and assuming it is @file{/dev/sda1}, run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2638
#, no-wrap
msgid "mkfs.fat -F32 /dev/sda1\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2645
msgid "For the root file system, ext4 is the most widely used format.  Other file systems, such as Btrfs, support compression, which is reported to nicely complement file deduplication that the daemon performs independently of the file system (@pxref{Invoking guix-daemon, deduplication})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2652
msgid "Preferably, assign file systems a label so that you can easily and reliably refer to them in @code{file-system} declarations (@pxref{File Systems}).  This is typically done using the @code{-L} option of @command{mkfs.ext4} and related commands.  So, assuming the target root partition lives at @file{/dev/sda2}, a file system with the label @code{my-root} can be created with:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2655
#, no-wrap
msgid "mkfs.ext4 -L my-root /dev/sda2\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2657 guix-git/doc/guix.texi:17941
#, no-wrap
msgid "encrypted disk"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2662
msgid "If you are instead planning to encrypt the root partition, you can use the Cryptsetup/LUKS utilities to do that (see @inlinefmtifelse{html, @uref{https://linux.die.net/man/8/cryptsetup, @code{man cryptsetup}}, @code{man cryptsetup}} for more information)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2666
msgid "Assuming you want to store the root partition on @file{/dev/sda2}, the command sequence to format it as a LUKS partition would be along these lines:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2671
#, no-wrap
msgid ""
"cryptsetup luksFormat /dev/sda2\n"
"cryptsetup open /dev/sda2 my-partition\n"
"mkfs.ext4 -L my-root /dev/mapper/my-partition\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2676
msgid "Once that is done, mount the target file system under @file{/mnt} with a command like (again, assuming @code{my-root} is the label of the root file system):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2679
#, no-wrap
msgid "mount LABEL=my-root /mnt\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2685
msgid "Also mount any other file systems you would like to use on the target system relative to this path.  If you have opted for @file{/boot/efi} as an EFI mount point for example, mount it at @file{/mnt/boot/efi} now so it is found by @code{guix system init} afterwards."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2689
msgid "Finally, if you plan to use one or more swap partitions (@pxref{Swap Space}), make sure to initialize them with @command{mkswap}.  Assuming you have one swap partition on @file{/dev/sda3}, you would run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2693
#, no-wrap
msgid ""
"mkswap /dev/sda3\n"
"swapon /dev/sda3\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2701
msgid "Alternatively, you may use a swap file.  For example, assuming that in the new system you want to use the file @file{/swapfile} as a swap file, you would run@footnote{This example will work for many types of file systems (e.g., ext4).  However, for copy-on-write file systems (e.g., btrfs), the required steps may be different.  For details, see the manual pages for @command{mkswap} and @command{swapon}.}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2709
#, no-wrap
msgid ""
"# This is 10 GiB of swap space.  Adjust \"count\" to change the size.\n"
"dd if=/dev/zero of=/mnt/swapfile bs=1MiB count=10240\n"
"# For security, make the file readable and writable only by root.\n"
"chmod 600 /mnt/swapfile\n"
"mkswap /mnt/swapfile\n"
"swapon /mnt/swapfile\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2714
msgid "Note that if you have encrypted the root partition and created a swap file in its file system as described above, then the encryption also protects the swap file, just like any other file in that file system."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2720
msgid "With the target partitions ready and the target root mounted on @file{/mnt}, we're ready to go.  First, run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2723
#, no-wrap
msgid "herd start cow-store /mnt\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2730
msgid "This makes @file{/gnu/store} copy-on-write, such that packages added to it during the installation phase are written to the target disk on @file{/mnt} rather than kept in memory.  This is necessary because the first phase of the @command{guix system init} command (see below) entails downloads or builds to @file{/gnu/store} which, initially, is an in-memory file system."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2741
msgid "Next, you have to edit a file and provide the declaration of the operating system to be installed.  To that end, the installation system comes with three text editors.  We recommend GNU nano (@pxref{Top,,, nano, GNU nano Manual}), which supports syntax highlighting and parentheses matching; other editors include mg (an Emacs clone), and nvi (a clone of the original BSD @command{vi} editor).  We strongly recommend storing that file on the target root file system, say, as @file{/mnt/etc/config.scm}.  Failing to do that, you will have lost your configuration file once you have rebooted into the newly-installed system."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2748
msgid "@xref{Using the Configuration System}, for an overview of the configuration file.  The example configurations discussed in that section are available under @file{/etc/configuration} in the installation image.  Thus, to get started with a system configuration providing a graphical display server (a ``desktop'' system), you can run something along these lines:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2753
#, no-wrap
msgid ""
"# mkdir /mnt/etc\n"
"# cp /etc/configuration/desktop.scm /mnt/etc/config.scm\n"
"# nano /mnt/etc/config.scm\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2757
msgid "You should pay attention to what your configuration file contains, and in particular:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:2769
msgid "Make sure the @code{bootloader-configuration} form refers to the targets you want to install GRUB on.  It should mention @code{grub-bootloader} if you are installing GRUB in the legacy way, or @code{grub-efi-bootloader} for newer UEFI systems.  For legacy systems, the @code{targets} field contain the names of the devices, like @code{(list \"/dev/sda\")}; for UEFI systems it names the paths to mounted EFI partitions, like @code{(list \"/boot/efi\")}; do make sure the paths are currently mounted and a @code{file-system} entry is specified in your configuration."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:2775
msgid "Be sure that your file system labels match the value of their respective @code{device} fields in your @code{file-system} configuration, assuming your @code{file-system} configuration uses the @code{file-system-label} procedure in its @code{device} field."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:2779
msgid "If there are encrypted or RAID partitions, make sure to add a @code{mapped-devices} field to describe them (@pxref{Mapped Devices})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2784
msgid "Once you are done preparing the configuration file, the new system must be initialized (remember that the target root file system is mounted under @file{/mnt}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2787
#, no-wrap
msgid "guix system init /mnt/etc/config.scm /mnt\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2794
msgid "This copies all the necessary files and installs GRUB on @file{/dev/sdX}, unless you pass the @option{--no-bootloader} option.  For more information, @pxref{Invoking guix system}.  This command may trigger downloads or builds of missing packages, which can take some time."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2802
msgid "Once that command has completed---and hopefully succeeded!---you can run @command{reboot} and boot into the new system.  The @code{root} password in the new system is initially empty; other users' passwords need to be initialized by running the @command{passwd} command as @code{root}, unless your configuration specifies otherwise (@pxref{user-account-password, user account passwords}).  @xref{After System Installation}, for what's next!"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2810
msgid "Success, you've now booted into Guix System! Login to the system using the non-@code{root} user that you created during installation.  You can upgrade the system whenever you want by running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2814 guix-git/doc/guix.texi:17728
#, no-wrap
msgid ""
"guix pull\n"
"sudo guix system reconfigure /etc/config.scm\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2819
msgid "This builds a new system @dfn{generation} with the latest packages and services."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2823
msgid "Now, @pxref{Getting Started with the System}, and join us on @code{#guix} on the Libera.Chat IRC network or on @email{guix-devel@@gnu.org} to share your experience!"
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:2826
#, no-wrap
msgid "Installing Guix in a Virtual Machine"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2828
#, no-wrap
msgid "virtual machine, Guix System installation"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2829
#, no-wrap
msgid "virtual private server (VPS)"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2830
#, no-wrap
msgid "VPS (virtual private server)"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2834
msgid "If you'd like to install Guix System in a virtual machine (VM) or on a virtual private server (VPS) rather than on your beloved machine, this section is for you."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2837
msgid "To boot a @uref{https://qemu.org/,QEMU} VM for installing Guix System in a disk image, follow these steps:"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:2842
msgid "First, retrieve and decompress the Guix system installation image as described previously (@pxref{USB Stick and DVD Installation})."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:2846
msgid "Create a disk image that will hold the installed system.  To make a qcow2-formatted disk image, use the @command{qemu-img} command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2849
#, no-wrap
msgid "qemu-img create -f qcow2 guix-system.img 50G\n"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:2853
msgid "The resulting file will be much smaller than 50 GB (typically less than 1 MB), but it will grow as the virtualized storage device is filled up."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:2856
msgid "Boot the USB installation image in a VM:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2862
#, no-wrap
msgid ""
"qemu-system-x86_64 -m 1024 -smp 1 -enable-kvm \\\n"
"  -nic user,model=virtio-net-pci -boot menu=on,order=d \\\n"
"  -drive file=guix-system.img \\\n"
"  -drive media=cdrom,readonly=on,file=guix-system-install-@value{VERSION}.@var{system}.iso\n"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:2866
msgid "@code{-enable-kvm} is optional, but significantly improves performance, @pxref{Running Guix in a VM}."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:2870
msgid "You're now root in the VM, proceed with the installation process.  @xref{Preparing for Installation}, and follow the instructions."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2875
msgid "Once installation is complete, you can boot the system that's on your @file{guix-system.img} image.  @xref{Running Guix in a VM}, for how to do that."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2879
#, no-wrap
msgid "installation image"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2882
msgid "The installation image described above was built using the @command{guix system} command, specifically:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2885
#, no-wrap
msgid "guix system image -t iso9660 gnu/system/install.scm\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2890
msgid "Have a look at @file{gnu/system/install.scm} in the source tree, and see also @ref{Invoking guix system} for more information about the installation image."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:2891
#, no-wrap
msgid "Building the Installation Image for ARM Boards"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2895
msgid "Many ARM boards require a specific variant of the @uref{https://www.denx.de/wiki/U-Boot/, U-Boot} bootloader."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2899
msgid "If you build a disk image and the bootloader is not available otherwise (on another boot drive etc), it's advisable to build an image that includes the bootloader, specifically:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2902
#, no-wrap
msgid "guix system image --system=armhf-linux -e '((@@ (gnu system install) os-with-u-boot) (@@ (gnu system install) installation-os) \"A20-OLinuXino-Lime2\")'\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2906
msgid "@code{A20-OLinuXino-Lime2} is the name of the board.  If you specify an invalid board, a list of possible boards will be printed."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2917
msgid "Presumably, you've reached this section because either you have installed Guix on top of another distribution (@pxref{Installation}), or you've installed the standalone Guix System (@pxref{System Installation}).  It's time for you to get started using Guix and this section aims to help you do that and give you a feel of what it's like."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2921
msgid "Guix is about installing software, so probably the first thing you'll want to do is to actually look for software.  Let's say you're looking for a text editor, you can run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2924
#, no-wrap
msgid "guix search text editor\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2931
msgid "This command shows you a number of matching @dfn{packages}, each time showing the package's name, version, a description, and additional info.  Once you've found out the one you want to use, let's say Emacs (ah ha!), you can go ahead and install it (run this command as a regular user, @emph{no need for root privileges}!):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2934
#, no-wrap
msgid "guix install emacs\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2936 guix-git/doc/guix.texi:3240
#: guix-git/doc/guix.texi:3293
#, no-wrap
msgid "profile"
msgstr "profilo"

#. type: Plain text
#: guix-git/doc/guix.texi:2944
msgid "You've installed your first package, congrats! The package is now visible in your default @dfn{profile}, @file{$HOME/.guix-profile}---a profile is a directory containing installed packages.  In the process, you've probably noticed that Guix downloaded pre-built binaries; or, if you explicitly chose to @emph{not} use pre-built binaries, then probably Guix is still building software (@pxref{Substitutes}, for more info)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2947
msgid "Unless you're using Guix System, the @command{guix install} command must have printed this hint:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2950
#, no-wrap
msgid ""
"hint: Consider setting the necessary environment variables by running:\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2953
#, no-wrap
msgid ""
"     GUIX_PROFILE=\"$HOME/.guix-profile\"\n"
"     . \"$GUIX_PROFILE/etc/profile\"\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2955
#, no-wrap
msgid "Alternately, see `guix package --search-paths -p \"$HOME/.guix-profile\"'.\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2969
msgid "Indeed, you must now tell your shell where @command{emacs} and other programs installed with Guix are to be found.  Pasting the two lines above will do just that: it will add @code{$HOME/.guix-profile/bin}---which is where the installed package is---to the @code{PATH} environment variable.  You can paste these two lines in your shell so they take effect right away, but more importantly you should add them to @file{~/.bash_profile} (or equivalent file if you do not use Bash) so that environment variables are set next time you spawn a shell.  You only need to do this once and other search paths environment variables will be taken care of similarly---e.g., if you eventually install @code{python} and Python libraries, @env{GUIX_PYTHONPATH} will be defined."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2972
msgid "You can go on installing packages at your will.  To list installed packages, run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2975
#, no-wrap
msgid "guix package --list-installed\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2980
msgid "To remove a package, you would unsurprisingly run @command{guix remove}.  A distinguishing feature is the ability to @dfn{roll back} any operation you made---installation, removal, upgrade---by simply typing:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2983
#, no-wrap
msgid "guix package --roll-back\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2988
msgid "This is because each operation is in fact a @dfn{transaction} that creates a new @dfn{generation}.  These generations and the difference between them can be displayed by running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:2991
#, no-wrap
msgid "guix package --list-generations\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:2994
msgid "Now you know the basics of package management!"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:2995 guix-git/doc/guix.texi:3058
#: guix-git/doc/guix.texi:8008
#, no-wrap
msgid "Going further"
msgstr "Andare oltre"

#. type: quotation
#: guix-git/doc/guix.texi:3003
msgid "@xref{Package Management}, for more about package management.  You may like @dfn{declarative} package management with @command{guix package --manifest}, managing separate @dfn{profiles} with @option{--profile}, deleting old generations, collecting garbage, and other nifty features that will come in handy as you become more familiar with Guix.  If you are a developer, @pxref{Development} for additional tools.  And if you're curious, @pxref{Features}, to peek under the hood."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:3007
msgid "You can also manage the configuration of your entire @dfn{home environment}---your user ``dot files'', services, and packages---using Guix Home.  @xref{Home Configuration}, to learn more about it!"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3012
msgid "Once you've installed a set of packages, you will want to periodically @emph{upgrade} them to the latest and greatest version.  To do that, you will first pull the latest revision of Guix and its package collection:"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3022
msgid "The end result is a new @command{guix} command, under @file{~/.config/guix/current/bin}.  Unless you're on Guix System, the first time you run @command{guix pull}, be sure to follow the hint that the command prints and, similar to what we saw above, paste these two lines in your terminal and @file{.bash_profile}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3026
#, no-wrap
msgid ""
"GUIX_PROFILE=\"$HOME/.config/guix/current\"\n"
". \"$GUIX_PROFILE/etc/profile\"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3030
msgid "You must also instruct your shell to point to this new @command{guix}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3033
#, no-wrap
msgid "hash guix\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3037
msgid "At this point, you're running a brand new Guix.  You can thus go ahead and actually upgrade all the packages you previously installed:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3040
#, no-wrap
msgid "guix upgrade\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3046
msgid "As you run this command, you will see that binaries are downloaded (or perhaps some packages are built), and eventually you end up with the upgraded packages.  Should one of these upgraded packages not be to your liking, remember you can always roll back!"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3049
msgid "You can display the exact revision of Guix you're currently using by running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3052
#, no-wrap
msgid "guix describe\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3057
msgid "The information it displays is @emph{all it takes to reproduce the exact same Guix}, be it at a different point in time or on a different machine."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:3063
msgid "@xref{Invoking guix pull}, for more information.  @xref{Channels}, on how to specify additional @dfn{channels} to pull packages from, how to replicate Guix, and more.  You may also find @command{time-machine} handy (@pxref{Invoking guix time-machine})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3068
msgid "If you installed Guix System, one of the first things you'll want to do is to upgrade your system.  Once you've run @command{guix pull} to get the latest Guix, you can upgrade the system like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3071 guix-git/doc/guix.texi:17641
#, no-wrap
msgid "sudo guix system reconfigure /etc/config.scm\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3077
msgid "Upon completion, the system runs the latest versions of its software packages.  Just like for packages, you can always @emph{roll back} to a previous generation @emph{of the whole system}.  @xref{Getting Started with the System}, to learn how to manage your system."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3079
msgid "Now you know enough to get started!"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:3080
#, no-wrap
msgid "Resources"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:3083
msgid "The rest of this manual provides a reference for all things Guix.  Here are some additional resources you may find useful:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:3088
msgid "@xref{Top,,, guix-cookbook, The GNU Guix Cookbook}, for a list of ``how-to'' style of recipes for a variety of applications."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:3093
msgid "The @uref{https://guix.gnu.org/guix-refcard.pdf, GNU Guix Reference Card} lists in two pages most of the commands and options you'll ever need."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:3098
msgid "The web site contains @uref{https://guix.gnu.org/en/videos/, instructional videos} covering topics such as everyday use of Guix, how to get help, and how to become a contributor."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:3102
msgid "@xref{Documentation}, to learn how to access documentation on your computer."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:3105
msgid "We hope you will enjoy Guix as much as the community enjoys building it!"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3116
msgid "The purpose of GNU Guix is to allow users to easily install, upgrade, and remove software packages, without having to know about their build procedures or dependencies.  Guix also goes beyond this obvious set of features."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3124
msgid "This chapter describes the main features of Guix, as well as the package management tools it provides.  Along with the command-line interface described below (@pxref{Invoking guix package, @code{guix package}}), you may also use the Emacs-Guix interface (@pxref{Top,,, emacs-guix, The Emacs-Guix Reference Manual}), after installing @code{emacs-guix} package (run @kbd{M-x guix-help} command to start with it):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3127
#, no-wrap
msgid "guix install emacs-guix\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3149
msgid "Here we assume you've already made your first steps with Guix (@pxref{Getting Started}) and would like to get an overview about what's going on under the hood."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3153
msgid "When using Guix, each package ends up in the @dfn{package store}, in its own directory---something that resembles @file{/gnu/store/xxx-package-1.2}, where @code{xxx} is a base32 string."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3158
msgid "Instead of referring to these directories, users have their own @dfn{profile}, which points to the packages that they actually want to use.  These profiles are stored within each user's home directory, at @code{$HOME/.guix-profile}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3166
msgid "For example, @code{alice} installs GCC 4.7.2.  As a result, @file{/home/alice/.guix-profile/bin/gcc} points to @file{/gnu/store/@dots{}-gcc-4.7.2/bin/gcc}.  Now, on the same machine, @code{bob} had already installed GCC 4.8.0.  The profile of @code{bob} simply continues to point to @file{/gnu/store/@dots{}-gcc-4.8.0/bin/gcc}---i.e., both versions of GCC coexist on the same system without any interference."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3170
msgid "The @command{guix package} command is the central tool to manage packages (@pxref{Invoking guix package}).  It operates on the per-user profiles, and can be used @emph{with normal user privileges}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3171 guix-git/doc/guix.texi:3255
#, no-wrap
msgid "transactions"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3178
msgid "The command provides the obvious install, remove, and upgrade operations.  Each invocation is actually a @emph{transaction}: either the specified operation succeeds, or nothing happens.  Thus, if the @command{guix package} process is terminated during the transaction, or if a power outage occurs during the transaction, then the user's profile remains in its previous state, and remains usable."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3186
msgid "In addition, any package transaction may be @emph{rolled back}.  So, if, for example, an upgrade installs a new version of a package that turns out to have a serious bug, users may roll back to the previous instance of their profile, which was known to work well.  Similarly, the global system configuration on Guix is subject to transactional upgrades and roll-back (@pxref{Getting Started with the System})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3193
msgid "All packages in the package store may be @emph{garbage-collected}.  Guix can determine which packages are still referenced by user profiles, and remove those that are provably no longer referenced (@pxref{Invoking guix gc}).  Users may also explicitly remove old generations of their profile so that the packages they refer to can be collected."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3206
msgid "Guix takes a @dfn{purely functional} approach to package management, as described in the introduction (@pxref{Introduction}).  Each @file{/gnu/store} package directory name contains a hash of all the inputs that were used to build that package---compiler, libraries, build scripts, etc.  This direct correspondence allows users to make sure a given package installation matches the current state of their distribution.  It also helps maximize @dfn{build reproducibility}: thanks to the isolated build environments that are used, a given build is likely to yield bit-identical files when performed on different machines (@pxref{Invoking guix-daemon, container})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3217
msgid "This foundation allows Guix to support @dfn{transparent binary/source deployment}.  When a pre-built binary for a @file{/gnu/store} item is available from an external source---a @dfn{substitute}, Guix just downloads it and unpacks it; otherwise, it builds the package from source, locally (@pxref{Substitutes}).  Because build results are usually bit-for-bit reproducible, users do not have to trust servers that provide substitutes: they can force a local build and @emph{challenge} providers (@pxref{Invoking guix challenge})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3223
msgid "Control over the build environment is a feature that is also useful for developers.  The @command{guix shell} command allows developers of a package to quickly set up the right development environment for their package, without having to manually install the dependencies of the package into their profile (@pxref{Invoking guix shell})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3224
#, no-wrap
msgid "replication, of software environments"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3225
#, no-wrap
msgid "provenance tracking, of software artifacts"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3232
msgid "All of Guix and its package definitions is version-controlled, and @command{guix pull} allows you to ``travel in time'' on the history of Guix itself (@pxref{Invoking guix pull}).  This makes it possible to replicate a Guix instance on a different machine or at a later point in time, which in turn allows you to @emph{replicate complete software environments}, while retaining precise @dfn{provenance tracking} of the software."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:3234
#, no-wrap
msgid "Invoking @command{guix package}"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3236
#, no-wrap
msgid "installing packages"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3237
#, no-wrap
msgid "removing packages"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3238
#, no-wrap
msgid "package installation"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3239
#, no-wrap
msgid "package removal"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:3241
#, no-wrap
msgid "guix package"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3250
msgid "The @command{guix package} command is the tool that allows users to install, upgrade, and remove packages, as well as rolling back to previous configurations.  These operations work on a user @dfn{profile}---a directory of installed packages.  Each user has a default profile in @file{$HOME/.guix-profile}.  The command operates only on the user's own profile, and works with normal user privileges (@pxref{Features}).  Its syntax is:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3253
#, no-wrap
msgid "guix package @var{options}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3260
msgid "Primarily, @var{options} specifies the operations to be performed during the transaction.  Upon completion, a new profile is created, but previous @dfn{generations} of the profile remain available, should the user want to roll back."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3263
msgid "For example, to remove @code{lua} and install @code{guile} and @code{guile-cairo} in a single transaction:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3266
#, no-wrap
msgid "guix package -r lua -i guile guile-cairo\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3268
#, no-wrap
msgid "aliases, for @command{guix package}"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3270
msgid "For your convenience, we also provide the following aliases:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:3274
msgid "@command{guix search} is an alias for @command{guix package -s},"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:3276
msgid "@command{guix install} is an alias for @command{guix package -i},"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:3278
msgid "@command{guix remove} is an alias for @command{guix package -r},"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:3280
msgid "@command{guix upgrade} is an alias for @command{guix package -u},"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:3282
msgid "and @command{guix show} is an alias for @command{guix package --show=}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3287
msgid "These aliases are less expressive than @command{guix package} and provide fewer options, so in some cases you'll probably want to use @command{guix package} directly."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3292
msgid "@command{guix package} also supports a @dfn{declarative approach} whereby the user specifies the exact set of packages to be available and passes it @i{via} the @option{--manifest} option (@pxref{profile-manifest, @option{--manifest}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3299
msgid "For each user, a symlink to the user's default profile is automatically created in @file{$HOME/.guix-profile}.  This symlink always points to the current generation of the user's default profile.  Thus, users can add @file{$HOME/.guix-profile/bin} to their @env{PATH} environment variable, and so on."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3299 guix-git/doc/guix.texi:3525
#, no-wrap
msgid "search paths"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3304
msgid "If you are not using Guix System, consider adding the following lines to your @file{~/.bash_profile} (@pxref{Bash Startup Files,,, bash, The GNU Bash Reference Manual}) so that newly-spawned shells get all the right environment variable definitions:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3308
#, no-wrap
msgid ""
"GUIX_PROFILE=\"$HOME/.guix-profile\" ; \\\n"
"source \"$GUIX_PROFILE/etc/profile\"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3319
msgid "In a multi-user setup, user profiles are stored in a place registered as a @dfn{garbage-collector root}, which @file{$HOME/.guix-profile} points to (@pxref{Invoking guix gc}).  That directory is normally @code{@var{localstatedir}/guix/profiles/per-user/@var{user}}, where @var{localstatedir} is the value passed to @code{configure} as @option{--localstatedir}, and @var{user} is the user name.  The @file{per-user} directory is created when @command{guix-daemon} is started, and the @var{user} sub-directory is created by @command{guix package}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3321
msgid "The @var{options} can be among the following:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:3324
#, no-wrap
msgid "--install=@var{package} @dots{}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:3325
#, no-wrap
msgid "-i @var{package} @dots{}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3327
msgid "Install the specified @var{package}s."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3332
msgid "Each @var{package} may specify a simple package name, such as @code{guile}, optionally followed by an at-sign and version number, such as @code{guile@@3.0.7} or simply @code{guile@@3.0}.  In the latter case, the newest version prefixed by @code{3.0} is selected."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3338
msgid "If no version number is specified, the newest available version will be selected.  In addition, such a @var{package} specification may contain a colon, followed by the name of one of the outputs of the package, as in @code{gcc:doc} or @code{binutils@@2.22:lib} (@pxref{Packages with Multiple Outputs})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3342
msgid "Packages with a corresponding name (and optionally version) are searched for among the GNU distribution modules (@pxref{Package Modules})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3346
msgid "Alternatively, a @var{package} can directly specify a store file name such as @file{/gnu/store/...-guile-3.0.7}, as produced by, e.g., @code{guix build}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3347
#, no-wrap
msgid "propagated inputs"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3353
msgid "Sometimes packages have @dfn{propagated inputs}: these are dependencies that automatically get installed along with the required package (@pxref{package-propagated-inputs, @code{propagated-inputs} in @code{package} objects}, for information about propagated inputs in package definitions)."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:3360
msgid "package-cmd-propagated-inputs"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3360
msgid "An example is the GNU MPC library: its C header files refer to those of the GNU MPFR library, which in turn refer to those of the GMP library.  Thus, when installing MPC, the MPFR and GMP libraries also get installed in the profile; removing MPC also removes MPFR and GMP---unless they had also been explicitly installed by the user."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3365
msgid "Besides, packages sometimes rely on the definition of environment variables for their search paths (see explanation of @option{--search-paths} below).  Any missing or possibly incorrect environment variable definitions are reported here."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:3366
#, no-wrap
msgid "--install-from-expression=@var{exp}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:3367
#, no-wrap
msgid "-e @var{exp}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3369
msgid "Install the package @var{exp} evaluates to."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3374
msgid "@var{exp} must be a Scheme expression that evaluates to a @code{<package>} object.  This option is notably useful to disambiguate between same-named variants of a package, with expressions such as @code{(@@ (gnu packages commencement) guile-final)}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3378
msgid "Note that this option installs the first output of the specified package, which may be insufficient when needing a specific output of a multiple-output package."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:3379
#, no-wrap
msgid "--install-from-file=@var{file}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:3380 guix-git/doc/guix.texi:6376
#: guix-git/doc/guix.texi:13916 guix-git/doc/guix.texi:14947
#, no-wrap
msgid "-f @var{file}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3382
msgid "Install the package that the code within @var{file} evaluates to."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3385 guix-git/doc/guix.texi:6382
#: guix-git/doc/guix.texi:6911
msgid "As an example, @var{file} might contain a definition like this (@pxref{Defining Packages}):"
msgstr ""

#. type: include
#: guix-git/doc/guix.texi:3387 guix-git/doc/guix.texi:13924
#, no-wrap
msgid "package-hello.scm"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3394
msgid "Developers may find it useful to include such a @file{guix.scm} file in the root of their project source tree that can be used to test development snapshots and create reproducible development environments (@pxref{Invoking guix shell})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3399
msgid "The @var{file} may also contain a JSON representation of one or more package definitions.  Running @code{guix package -f} on @file{hello.json} with the following contents would result in installing the package @code{greeter} after building @code{myhello}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3402 guix-git/doc/guix.texi:13934
#, no-wrap
msgid "@verbatiminclude package-hello.json\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:3404
#, no-wrap
msgid "--remove=@var{package} @dots{}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:3405
#, no-wrap
msgid "-r @var{package} @dots{}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3407
msgid "Remove the specified @var{package}s."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3412
msgid "As for @option{--install}, each @var{package} may specify a version number and/or output name in addition to the package name.  For instance, @samp{-r glibc:debug} would remove the @code{debug} output of @code{glibc}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:3413
#, no-wrap
msgid "--upgrade[=@var{regexp} @dots{}]"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:3414
#, no-wrap
msgid "-u [@var{regexp} @dots{}]"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3415
#, no-wrap
msgid "upgrading packages"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3419
msgid "Upgrade all the installed packages.  If one or more @var{regexp}s are specified, upgrade only installed packages whose name matches a @var{regexp}.  Also see the @option{--do-not-upgrade} option below."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3424
msgid "Note that this upgrades package to the latest version of packages found in the distribution currently installed.  To update your distribution, you should regularly run @command{guix pull} (@pxref{Invoking guix pull})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3425
#, no-wrap
msgid "package transformations, upgrades"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3430
msgid "When upgrading, package transformations that were originally applied when creating the profile are automatically re-applied (@pxref{Package Transformation Options}).  For example, assume you first installed Emacs from the tip of its development branch with:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3433
#, no-wrap
msgid "guix install emacs-next --with-branch=emacs-next=master\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3438
msgid "Next time you run @command{guix upgrade}, Guix will again pull the tip of the Emacs development branch and build @code{emacs-next} from that checkout."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3443
msgid "Note that transformation options such as @option{--with-branch} and @option{--with-source} depend on external state; it is up to you to ensure that they work as expected.  You can also discard a transformations that apply to a package by running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3446
#, no-wrap
msgid "guix install @var{package}\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:3448
#, no-wrap
msgid "--do-not-upgrade[=@var{regexp} @dots{}]"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3453
msgid "When used together with the @option{--upgrade} option, do @emph{not} upgrade any packages whose name matches a @var{regexp}.  For example, to upgrade all packages in the current profile except those containing the substring ``emacs'':"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3456
#, no-wrap
msgid "$ guix package --upgrade . --do-not-upgrade emacs\n"
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:3458
#, no-wrap
msgid "profile-manifest"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:3458 guix-git/doc/guix.texi:6395
#: guix-git/doc/guix.texi:6916 guix-git/doc/guix.texi:7536
#: guix-git/doc/guix.texi:15394 guix-git/doc/guix.texi:17175
#, no-wrap
msgid "--manifest=@var{file}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:3459 guix-git/doc/guix.texi:6396
#: guix-git/doc/guix.texi:6917 guix-git/doc/guix.texi:7537
#: guix-git/doc/guix.texi:15395
#, no-wrap
msgid "-m @var{file}"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3460
#, no-wrap
msgid "profile declaration"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3461
#, no-wrap
msgid "profile manifest"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3465
msgid "Create a new generation of the profile from the manifest object returned by the Scheme code in @var{file}.  This option can be repeated several times, in which case the manifests are concatenated."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3471
msgid "This allows you to @emph{declare} the profile's contents rather than constructing it through a sequence of @option{--install} and similar commands.  The advantage is that @var{file} can be put under version control, copied to different machines to reproduce the same profile, and so on."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3474
msgid "@var{file} must return a @dfn{manifest} object, which is roughly a list of packages:"
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:3475
#, no-wrap
msgid "packages->manifest"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:3478
#, no-wrap
msgid ""
"(use-package-modules guile emacs)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:3484
#, no-wrap
msgid ""
"(packages->manifest\n"
" (list emacs\n"
"       guile-2.0\n"
"       ;; Use a specific package output.\n"
"       (list guile-2.0 \"debug\")))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3489
msgid "@xref{Writing Manifests}, for information on how to write a manifest.  @xref{export-manifest, @option{--export-manifest}}, to learn how to obtain a manifest file from an existing profile."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:3490 guix-git/doc/guix.texi:4791
#, no-wrap
msgid "--roll-back"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3491 guix-git/doc/guix.texi:4792
#: guix-git/doc/guix.texi:47226 guix-git/doc/guix.texi:53328
#, no-wrap
msgid "rolling back"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3492 guix-git/doc/guix.texi:4793
#, no-wrap
msgid "undoing transactions"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3493 guix-git/doc/guix.texi:4794
#, no-wrap
msgid "transactions, undoing"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3496
msgid "Roll back to the previous @dfn{generation} of the profile---i.e., undo the last transaction."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3499
msgid "When combined with options such as @option{--install}, roll back occurs before any other actions."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3503
msgid "When rolling back from the first generation that actually contains installed packages, the profile is made to point to the @dfn{zeroth generation}, which contains no files apart from its own metadata."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3507
msgid "After having rolled back, installing, removing, or upgrading packages overwrites previous future generations.  Thus, the history of the generations in a profile is always linear."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:3508 guix-git/doc/guix.texi:4798
#, no-wrap
msgid "--switch-generation=@var{pattern}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:3509 guix-git/doc/guix.texi:4799
#, no-wrap
msgid "-S @var{pattern}"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3510 guix-git/doc/guix.texi:3743
#: guix-git/doc/guix.texi:4800 guix-git/doc/guix.texi:47184
#, no-wrap
msgid "generations"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3512 guix-git/doc/guix.texi:4802
msgid "Switch to a particular generation defined by @var{pattern}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3518 guix-git/doc/guix.texi:4808
msgid "@var{pattern} may be either a generation number or a number prefixed with ``+'' or ``-''.  The latter means: move forward/backward by a specified number of generations.  For example, if you want to return to the latest generation after @option{--roll-back}, use @option{--switch-generation=+1}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3523
msgid "The difference between @option{--roll-back} and @option{--switch-generation=-1} is that @option{--switch-generation} will not make a zeroth generation, so if a specified generation does not exist, the current generation will not be changed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:3524
#, no-wrap
msgid "--search-paths[=@var{kind}]"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3530
msgid "Report environment variable definitions, in Bash syntax, that may be needed in order to use the set of installed packages.  These environment variables are used to specify @dfn{search paths} for files used by some of the installed packages."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3539
msgid "For example, GCC needs the @env{CPATH} and @env{LIBRARY_PATH} environment variables to be defined so it can look for headers and libraries in the user's profile (@pxref{Environment Variables,,, gcc, Using the GNU Compiler Collection (GCC)}).  If GCC and, say, the C library are installed in the profile, then @option{--search-paths} will suggest setting these variables to @file{@var{profile}/include} and @file{@var{profile}/lib}, respectively (@pxref{Search Paths}, for info on search path specifications associated with packages.)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3542
msgid "The typical use case is to define these environment variables in the shell:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3545
#, no-wrap
msgid "$ eval $(guix package --search-paths)\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3551
msgid "@var{kind} may be one of @code{exact}, @code{prefix}, or @code{suffix}, meaning that the returned environment variable definitions will either be exact settings, or prefixes or suffixes of the current value of these variables.  When omitted, @var{kind} defaults to @code{exact}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3554
msgid "This option can also be used to compute the @emph{combined} search paths of several profiles.  Consider this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3559
#, no-wrap
msgid ""
"$ guix package -p foo -i guile\n"
"$ guix package -p bar -i guile-json\n"
"$ guix package -p foo -p bar --search-paths\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3564
msgid "The last command above reports about the @env{GUILE_LOAD_PATH} variable, even though, taken individually, neither @file{foo} nor @file{bar} would lead to that recommendation."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3566
#, no-wrap
msgid "profile, choosing"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:3567 guix-git/doc/guix.texi:4828
#: guix-git/doc/guix.texi:5234 guix-git/doc/guix.texi:6455
#: guix-git/doc/guix.texi:6956
#, no-wrap
msgid "--profile=@var{profile}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:3568 guix-git/doc/guix.texi:4829
#: guix-git/doc/guix.texi:5235 guix-git/doc/guix.texi:6456
#: guix-git/doc/guix.texi:6957
#, no-wrap
msgid "-p @var{profile}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3570
msgid "Use @var{profile} instead of the user's default profile."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3575
msgid "@var{profile} must be the name of a file that will be created upon completion.  Concretely, @var{profile} will be a mere symbolic link (``symlink'') pointing to the actual profile where packages are installed:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3581
#, no-wrap
msgid ""
"$ guix install hello -p ~/code/my-profile\n"
"@dots{}\n"
"$ ~/code/my-profile/bin/hello\n"
"Hello, world!\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3585
msgid "All it takes to get rid of the profile is to remove this symlink and its siblings that point to specific generations:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3588
#, no-wrap
msgid "$ rm ~/code/my-profile ~/code/my-profile-*-link\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:3590
#, no-wrap
msgid "--list-profiles"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3592
msgid "List all the user's profiles:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3599
#, no-wrap
msgid ""
"$ guix package --list-profiles\n"
"/home/charlie/.guix-profile\n"
"/home/charlie/code/my-profile\n"
"/home/charlie/code/devel-profile\n"
"/home/charlie/tmp/test\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3602
msgid "When running as root, list all the profiles of all the users."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3603
#, no-wrap
msgid "collisions, in a profile"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3604
#, no-wrap
msgid "colliding packages in profiles"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3605
#, no-wrap
msgid "profile collisions"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:3606
#, no-wrap
msgid "--allow-collisions"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3608
msgid "Allow colliding packages in the new profile.  Use at your own risk!"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3612
msgid "By default, @command{guix package} reports as an error @dfn{collisions} in the profile.  Collisions happen when two or more different versions or variants of a given package end up in the profile."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:3613 guix-git/doc/guix.texi:4879
#: guix-git/doc/guix.texi:7628
#, no-wrap
msgid "--bootstrap"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3616
msgid "Use the bootstrap Guile to build the profile.  This option is only useful to distribution developers."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3622
msgid "In addition to these actions, @command{guix package} supports the following options to query the current state of a profile, or the availability of packages:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:3625
#, no-wrap
msgid "--search=@var{regexp}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:3626
#, no-wrap
msgid "-s @var{regexp}"
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:3628
msgid "guix-search"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3628 guix-git/doc/guix.texi:4283
#, no-wrap
msgid "searching for packages"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3634
msgid "List the available packages whose name, synopsis, or description matches @var{regexp} (in a case-insensitive fashion), sorted by relevance.  Print all the metadata of matching packages in @code{recutils} format (@pxref{Top, GNU recutils databases,, recutils, GNU recutils manual})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3637
msgid "This allows specific fields to be extracted using the @command{recsel} command, for instance:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3643
#, no-wrap
msgid ""
"$ guix package -s malloc | recsel -p name,version,relevance\n"
"name: jemalloc\n"
"version: 4.5.0\n"
"relevance: 6\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3647
#, no-wrap
msgid ""
"name: glibc\n"
"version: 2.25\n"
"relevance: 1\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3651
#, no-wrap
msgid ""
"name: libgc\n"
"version: 7.6.0\n"
"relevance: 1\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3655
msgid "Similarly, to show the name of all the packages available under the terms of the GNU@tie{}LGPL version 3:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3659
#, no-wrap
msgid ""
"$ guix package -s \"\" | recsel -p name -e 'license ~ \"LGPL 3\"'\n"
"name: elfutils\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3662
#, no-wrap
msgid ""
"name: gmp\n"
"@dots{}\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3668
msgid "It is also possible to refine search results using several @code{-s} flags to @command{guix package}, or several arguments to @command{guix search}.  For example, the following command returns a list of board games (this time using the @command{guix search} alias):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3673
#, no-wrap
msgid ""
"$ guix search '\\<board\\>' game | recsel -p name\n"
"name: gnubg\n"
"@dots{}\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3679
msgid "If we were to omit @code{-s game}, we would also get software packages that deal with printed circuit boards; removing the angle brackets around @code{board} would further add packages that have to do with keyboards."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3683
msgid "And now for a more elaborate example.  The following command searches for cryptographic libraries, filters out Haskell, Perl, Python, and Ruby libraries, and prints the name and synopsis of the matching packages:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3687
#, no-wrap
msgid ""
"$ guix search crypto library | \\\n"
"    recsel -e '! (name ~ \"^(ghc|perl|python|ruby)\")' -p name,synopsis\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3692
msgid "@xref{Selection Expressions,,, recutils, GNU recutils manual}, for more information on @dfn{selection expressions} for @code{recsel -e}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:3693
#, no-wrap
msgid "--show=@var{package}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3697
msgid "Show details about @var{package}, taken from the list of available packages, in @code{recutils} format (@pxref{Top, GNU recutils databases,, recutils, GNU recutils manual})."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3702
#, no-wrap
msgid ""
"$ guix package --show=guile | recsel -p name,version\n"
"name: guile\n"
"version: 3.0.5\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3705
#, no-wrap
msgid ""
"name: guile\n"
"version: 3.0.2\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3709
#, no-wrap
msgid ""
"name: guile\n"
"version: 2.2.7\n"
"@dots{}\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3713
msgid "You may also specify the full name of a package to only get details about a specific version of it (this time using the @command{guix show} alias):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3717
#, no-wrap
msgid ""
"$ guix show guile@@3.0.5 | recsel -p name,version\n"
"name: guile\n"
"version: 3.0.5\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:3719
#, no-wrap
msgid "--list-installed[=@var{regexp}]"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:3720
#, no-wrap
msgid "-I [@var{regexp}]"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3724
msgid "List the currently installed packages in the specified profile, with the most recently installed packages shown last.  When @var{regexp} is specified, list only installed packages whose name matches @var{regexp}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3730
msgid "For each installed package, print the following items, separated by tabs: the package name, its version string, the part of the package that is installed (for instance, @code{out} for the default output, @code{include} for its headers, etc.), and the path of this package in the store."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:3731
#, no-wrap
msgid "--list-available[=@var{regexp}]"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:3732
#, no-wrap
msgid "-A [@var{regexp}]"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3736
msgid "List packages currently available in the distribution for this system (@pxref{GNU Distribution}).  When @var{regexp} is specified, list only available packages whose name matches @var{regexp}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3740
msgid "For each package, print the following items separated by tabs: its name, its version string, the parts of the package (@pxref{Packages with Multiple Outputs}), and the source location of its definition."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:3741 guix-git/doc/guix.texi:4774
#, no-wrap
msgid "--list-generations[=@var{pattern}]"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:3742 guix-git/doc/guix.texi:4775
#, no-wrap
msgid "-l [@var{pattern}]"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3748
msgid "Return a list of generations along with their creation dates; for each generation, show the installed packages, with the most recently installed packages shown last.  Note that the zeroth generation is never shown."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3753
msgid "For each installed package, print the following items, separated by tabs: the name of a package, its version string, the part of the package that is installed (@pxref{Packages with Multiple Outputs}), and the location of this package in the store."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3756
msgid "When @var{pattern} is used, the command returns only matching generations.  Valid patterns include:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:3758
#, no-wrap
msgid "@emph{Integers and comma-separated integers}.  Both patterns denote"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:3761
msgid "generation numbers.  For instance, @option{--list-generations=1} returns the first one."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:3764
msgid "And @option{--list-generations=1,8,2} outputs three generations in the specified order.  Neither spaces nor trailing commas are allowed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:3765
#, no-wrap
msgid "@emph{Ranges}.  @option{--list-generations=2..9} prints the"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:3768
msgid "specified generations and everything in between.  Note that the start of a range must be smaller than its end."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:3772
msgid "It is also possible to omit the endpoint.  For example, @option{--list-generations=2..}, returns all generations starting from the second one."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:3773
#, no-wrap
msgid "@emph{Durations}.  You can also get the last @emph{N}@tie{}days, weeks,"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:3777
msgid "or months by passing an integer along with the first letter of the duration.  For example, @option{--list-generations=20d} lists generations that are up to 20 days old."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:3779 guix-git/doc/guix.texi:4809
#, no-wrap
msgid "--delete-generations[=@var{pattern}]"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:3780 guix-git/doc/guix.texi:4810
#, no-wrap
msgid "-d [@var{pattern}]"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3783 guix-git/doc/guix.texi:4813
msgid "When @var{pattern} is omitted, delete all generations except the current one."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3789 guix-git/doc/guix.texi:4819
msgid "This command accepts the same patterns as @option{--list-generations}.  When @var{pattern} is specified, delete the matching generations.  When @var{pattern} specifies a duration, generations @emph{older} than the specified duration match.  For instance, @option{--delete-generations=1m} deletes generations that are more than one month old."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3792
msgid "If the current generation matches, it is @emph{not} deleted.  Also, the zeroth generation is never deleted."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3795 guix-git/doc/guix.texi:4824
msgid "Note that deleting generations prevents rolling back to them.  Consequently, this command must be used with care."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3796 guix-git/doc/guix.texi:6408
#, no-wrap
msgid "manifest, exporting"
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:3798
msgid "export-manifest"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:3798 guix-git/doc/guix.texi:6410
#, no-wrap
msgid "--export-manifest"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3801
msgid "Write to standard output a manifest suitable for @option{--manifest} corresponding to the chosen profile(s)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3805
msgid "This option is meant to help you migrate from the ``imperative'' operating mode---running @command{guix install}, @command{guix upgrade}, etc.---to the declarative mode that @option{--manifest} offers."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3810
msgid "Be aware that the resulting manifest @emph{approximates} what your profile actually contains; for instance, depending on how your profile was created, it can refer to packages or package versions that are not exactly what you specified."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3815
msgid "Keep in mind that a manifest is purely symbolic: it only contains package names and possibly versions, and their meaning varies over time.  If you wish to ``pin'' channels to the revisions that were used to build the profile(s), see @option{--export-channels} below."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3816
#, no-wrap
msgid "pinning, channel revisions of a profile"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:3817
#, no-wrap
msgid "--export-channels"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3821
msgid "Write to standard output the list of channels used by the chosen profile(s), in a format suitable for @command{guix pull --channels} or @command{guix time-machine --channels} (@pxref{Channels})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3825
msgid "Together with @option{--export-manifest}, this option provides information allowing you to replicate the current profile (@pxref{Replicating Guix})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3833
msgid "However, note that the output of this command @emph{approximates} what was actually used to build this profile.  In particular, a single profile might have been built from several different revisions of the same channel.  In that case, @option{--export-manifest} chooses the last one and writes the list of other revisions in a comment.  If you really need to pick packages from different channel revisions, you can use inferiors in your manifest to do so (@pxref{Inferiors})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:3838
msgid "Together with @option{--export-manifest}, this is a good starting point if you are willing to migrate from the ``imperative'' model to the fully declarative model consisting of a manifest file along with a channels file pinning the exact channel revision(s) you want."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3845
msgid "Finally, since @command{guix package} may actually start build processes, it supports all the common build options (@pxref{Common Build Options}).  It also supports package transformation options, such as @option{--with-source}, and preserves them across upgrades (@pxref{Package Transformation Options})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3850
#, no-wrap
msgid "pre-built binaries"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3856
msgid "Guix supports transparent source/binary deployment, which means that it can either build things locally, or download pre-built items from a server, or both.  We call these pre-built items @dfn{substitutes}---they are substitutes for local build results.  In many cases, downloading a substitute is much faster than building things locally."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3861
msgid "Substitutes can be anything resulting from a derivation build (@pxref{Derivations}).  Of course, in the common case, they are pre-built package binaries, but source tarballs, for instance, which also result from derivation builds, can be available as substitutes."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3875
#, no-wrap
msgid "build farm"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3886
msgid "@code{@value{SUBSTITUTE-SERVER-1}} and @code{@value{SUBSTITUTE-SERVER-2}} are both front-ends to official build farms that build packages from Guix continuously for some architectures, and make them available as substitutes.  These are the default source of substitutes; which can be overridden by passing the @option{--substitute-urls} option either to @command{guix-daemon} (@pxref{daemon-substitute-urls,, @code{guix-daemon --substitute-urls}})  or to client tools such as @command{guix package} (@pxref{client-substitute-urls,, client @option{--substitute-urls} option})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3892
msgid "Substitute URLs can be either HTTP or HTTPS.  HTTPS is recommended because communications are encrypted; conversely, using HTTP makes all communications visible to an eavesdropper, who could use the information gathered to determine, for instance, whether your system has unpatched security vulnerabilities."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3901
msgid "Substitutes from the official build farms are enabled by default when using Guix System (@pxref{GNU Distribution}).  However, they are disabled by default when using Guix on a foreign distribution, unless you have explicitly enabled them via one of the recommended installation steps (@pxref{Installation}).  The following paragraphs describe how to enable or disable substitutes for the official build farm; the same procedure can also be used to enable substitutes for any other substitute server."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3905
#, no-wrap
msgid "security"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3907
#, no-wrap
msgid "access control list (ACL), for substitutes"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3908
#, no-wrap
msgid "ACL (access control list), for substitutes"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3914
msgid "To allow Guix to download substitutes from @code{@value{SUBSTITUTE-SERVER-1}}, @code{@value{SUBSTITUTE-SERVER-2}} or a mirror, you must add the relevant public key to the access control list (ACL) of archive imports, using the @command{guix archive} command (@pxref{Invoking guix archive}).  Doing so implies that you trust the substitute server to not be compromised and to serve genuine substitutes."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:3919
msgid "If you are using Guix System, you can skip this section: Guix System authorizes substitutes from @code{@value{SUBSTITUTE-SERVER-1}} and @code{@value{SUBSTITUTE-SERVER-2}} by default."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3927
msgid "The public keys for each of the project maintained substitute servers are installed along with Guix, in @code{@var{prefix}/share/guix/}, where @var{prefix} is the installation prefix of Guix.  If you installed Guix from source, make sure you checked the GPG signature of @file{guix-@value{VERSION}.tar.gz}, which contains this public key file.  Then, you can run something like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3931
#, no-wrap
msgid ""
"# guix archive --authorize < @var{prefix}/share/guix/@value{SUBSTITUTE-SERVER-1}.pub\n"
"# guix archive --authorize < @var{prefix}/share/guix/@value{SUBSTITUTE-SERVER-2}.pub\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3935
msgid "Once this is in place, the output of a command like @code{guix build} should change from something like:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3944
#, no-wrap
msgid ""
"$ guix build emacs --dry-run\n"
"The following derivations would be built:\n"
"   /gnu/store/yr7bnx8xwcayd6j95r2clmkdl1qh688w-emacs-24.3.drv\n"
"   /gnu/store/x8qsh1hlhgjx6cwsjyvybnfv2i37z23w-dbus-1.6.4.tar.gz.drv\n"
"   /gnu/store/1ixwp12fl950d15h2cj11c73733jay0z-alsa-lib-1.0.27.1.tar.bz2.drv\n"
"   /gnu/store/nlma1pw0p603fpfiqy7kn4zm105r5dmw-util-linux-2.21.drv\n"
"@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3948
msgid "to something like:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:3957
#, no-wrap
msgid ""
"$ guix build emacs --dry-run\n"
"112.3 MB would be downloaded:\n"
"   /gnu/store/pk3n22lbq6ydamyymqkkz7i69wiwjiwi-emacs-24.3\n"
"   /gnu/store/2ygn4ncnhrpr61rssa6z0d9x22si0va3-libjpeg-8d\n"
"   /gnu/store/71yz6lgx4dazma9dwn2mcjxaah9w77jq-cairo-1.12.16\n"
"   /gnu/store/7zdhgp0n1518lvfn8mb96sxqfmvqrl7v-libxrender-0.9.7\n"
"@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3964
msgid "The text changed from ``The following derivations would be built'' to ``112.3 MB would be downloaded''.  This indicates that substitutes from the configured substitute servers are usable and will be downloaded, when possible, for future builds."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3965
#, no-wrap
msgid "substitutes, how to disable"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3971
msgid "The substitute mechanism can be disabled globally by running @code{guix-daemon} with @option{--no-substitutes} (@pxref{Invoking guix-daemon}).  It can also be disabled temporarily by passing the @option{--no-substitutes} option to @command{guix package}, @command{guix build}, and other command-line tools."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:3976
#, no-wrap
msgid "substitute servers, adding more"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3983
msgid "Guix can look up and fetch substitutes from several servers.  This is useful when you are using packages from additional channels for which the official server does not have substitutes but another server provides them.  Another situation where this is useful is when you would prefer to download from your organization's substitute server, resorting to the official server only as a fallback or dismissing it altogether."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3988
msgid "You can give Guix a list of substitute server URLs and it will check them in the specified order.  You also need to explicitly authorize the public keys of substitute servers to instruct Guix to accept the substitutes they sign."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:3995
msgid "On Guix System, this is achieved by modifying the configuration of the @code{guix} service.  Since the @code{guix} service is part of the default lists of services, @code{%base-services} and @code{%desktop-services}, you can use @code{modify-services} to change its configuration and add the URLs and substitute keys that you want (@pxref{Service Reference, @code{modify-services}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4001
msgid "As an example, suppose you want to fetch substitutes from @code{guix.example.org} and to authorize the signing key of that server, in addition to the default @code{@value{SUBSTITUTE-SERVER-1}} and @code{@value{SUBSTITUTE-SERVER-2}}.  The resulting operating system configuration will look something like:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:4018
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services\n"
"    ;; Assume we're starting from '%desktop-services'.  Replace it\n"
"    ;; with the list of services you're actually using.\n"
"    (modify-services %desktop-services\n"
"      (guix-service-type config =>\n"
"                        (guix-configuration\n"
"                          (inherit config)\n"
"                          (substitute-urls\n"
"                            (append (list \"https://guix.example.org\")\n"
"                                    %default-substitute-urls))\n"
"                          (authorized-keys\n"
"                            (append (list (local-file \"./key.pub\"))\n"
"                                    %default-authorized-guix-keys)))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4025
msgid "This assumes that the file @file{key.pub} contains the signing key of @code{guix.example.org}.  With this change in place in your operating system configuration file (say @file{/etc/config.scm}), you can reconfigure and restart the @code{guix-daemon} service or reboot so the changes take effect:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:4029
#, no-wrap
msgid ""
"$ sudo guix system reconfigure /etc/config.scm\n"
"$ sudo herd restart guix-daemon\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4033
msgid "If you're running Guix on a ``foreign distro'', you would instead take the following steps to get substitutes from additional servers:"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:4042
msgid "Edit the service configuration file for @code{guix-daemon}; when using systemd, this is normally @file{/etc/systemd/system/guix-daemon.service}.  Add the @option{--substitute-urls} option on the @command{guix-daemon} command line and list the URLs of interest (@pxref{daemon-substitute-urls, @code{guix-daemon --substitute-urls}}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:4045
#, no-wrap
msgid "@dots{} --substitute-urls='https://guix.example.org @value{SUBSTITUTE-URLS}'\n"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:4049
msgid "Restart the daemon.  For systemd, it goes like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:4053
#, no-wrap
msgid ""
"systemctl daemon-reload\n"
"systemctl restart guix-daemon.service\n"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:4057
msgid "Authorize the key of the new server (@pxref{Invoking guix archive}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:4060
#, no-wrap
msgid "guix archive --authorize < key.pub\n"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:4064
msgid "Again this assumes @file{key.pub} contains the public key that @code{guix.example.org} uses to sign substitutes."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4073
msgid "Now you're all set! Substitutes will be preferably taken from @code{https://guix.example.org}, using @code{@value{SUBSTITUTE-SERVER-1}} then @code{@value{SUBSTITUTE-SERVER-2}} as fallback options.  Of course you can list as many substitute servers as you like, with the caveat that substitute lookup can be slowed down if too many servers need to be contacted."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:4074 guix-git/doc/guix.texi:17782
#, no-wrap
msgid "Troubleshooting"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:4077
msgid "To diagnose problems, you can run @command{guix weather}.  For example, running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:4080
#, no-wrap
msgid "guix weather coreutils\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:4087
msgid "not only tells you which of the currently-configured servers has substitutes for the @code{coreutils} package, it also reports whether one of these servers is unauthorized.  @xref{Invoking guix weather}, for more information."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4092
msgid "Note that there are also situations where one may want to add the URL of a substitute server @emph{without} authorizing its key.  @xref{Substitute Authentication}, to understand this fine point."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4096
#, no-wrap
msgid "digital signatures"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4100
msgid "Guix detects and raises an error when attempting to use a substitute that has been tampered with.  Likewise, it ignores substitutes that are not signed, or that are not signed by one of the keys listed in the ACL."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4106
msgid "There is one exception though: if an unauthorized server provides substitutes that are @emph{bit-for-bit identical} to those provided by an authorized server, then the unauthorized server becomes eligible for downloads.  For example, assume we have chosen two substitute servers with this option:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:4109
#, no-wrap
msgid "--substitute-urls=\"https://a.example.org https://b.example.org\"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4120
msgid "If the ACL contains only the key for @samp{b.example.org}, and if @samp{a.example.org} happens to serve the @emph{exact same} substitutes, then Guix will download substitutes from @samp{a.example.org} because it comes first in the list and can be considered a mirror of @samp{b.example.org}.  In practice, independent build machines usually produce the same binaries, thanks to bit-reproducible builds (see below)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4127
msgid "When using HTTPS, the server's X.509 certificate is @emph{not} validated (in other words, the server is not authenticated), contrary to what HTTPS clients such as Web browsers usually do.  This is because Guix authenticates substitute information itself, as explained above, which is what we care about (whereas X.509 certificates are about authenticating bindings between domain names and public keys)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4139
msgid "Substitutes are downloaded over HTTP or HTTPS@.  The @env{http_proxy} and @env{https_proxy} environment variables can be set in the environment of @command{guix-daemon} and are honored for downloads of substitutes.  Note that the value of those environment variables in the environment where @command{guix build}, @command{guix package}, and other client commands are run has @emph{absolutely no effect}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4148
msgid "Even when a substitute for a derivation is available, sometimes the substitution attempt will fail.  This can happen for a variety of reasons: the substitute server might be offline, the substitute may recently have been deleted, the connection might have been interrupted, etc."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4162
msgid "When substitutes are enabled and a substitute for a derivation is available, but the substitution attempt fails, Guix will attempt to build the derivation locally depending on whether or not @option{--fallback} was given (@pxref{fallback-option,, common build option @option{--fallback}}).  Specifically, if @option{--fallback} was omitted, then no local build will be performed, and the derivation is considered to have failed.  However, if @option{--fallback} was given, then Guix will attempt to build the derivation locally, and the success or failure of the derivation depends on the success or failure of the local build.  Note that when substitutes are disabled or no substitute is available for the derivation in question, a local build will @emph{always} be performed, regardless of whether or not @option{--fallback} was given."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4167
msgid "To get an idea of how many substitutes are available right now, you can try running the @command{guix weather} command (@pxref{Invoking guix weather}).  This command provides statistics on the substitutes provided by a server."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4171
#, no-wrap
msgid "trust, of pre-built binaries"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4181
msgid "Today, each individual's control over their own computing is at the mercy of institutions, corporations, and groups with enough power and determination to subvert the computing infrastructure and exploit its weaknesses.  While using substitutes can be convenient, we encourage users to also build on their own, or even run their own build farm, such that the project run substitute servers are less of an interesting target.  One way to help is by publishing the software you build using @command{guix publish} so that others have one more choice of server to download substitutes from (@pxref{Invoking guix publish})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4200
msgid "Guix has the foundations to maximize build reproducibility (@pxref{Features}).  In most cases, independent builds of a given package or derivation should yield bit-identical results.  Thus, through a diverse set of independent package builds, we can strengthen the integrity of our systems.  The @command{guix challenge} command aims to help users assess substitute servers, and to assist developers in finding out about non-deterministic package builds (@pxref{Invoking guix challenge}).  Similarly, the @option{--check} option of @command{guix build} allows users to check whether previously-installed substitutes are genuine by rebuilding them locally (@pxref{build-check, @command{guix build --check}}).  To force a full rebuild of a package (ignoring security updates via grafts (@pxref{Security Updates}), if any grafts exist—which is not always the case), use @option{--check} together with @option{--no-grafts} (@pxref{Common Build Options, @option{--no-grafts}}).  Because grafts are built as their own derivation, if the package you want to rebuild is subject to being grafted, merely using @option{--check} will only rebuild the grafting derivation, and not actually recompile the package."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4204
msgid "In the future, we want Guix to have support to publish and retrieve binaries to/from other users, in a peer-to-peer fashion.  If you would like to discuss this project, join us on @email{guix-devel@@gnu.org}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4208
#, no-wrap
msgid "multiple-output packages"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4209
#, no-wrap
msgid "package outputs"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4210
#, no-wrap
msgid "outputs"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4220
msgid "Often, packages defined in Guix have a single @dfn{output}---i.e., the source package leads to exactly one directory in the store.  When running @command{guix install glibc}, one installs the default output of the GNU libc package; the default output is called @code{out}, but its name can be omitted as shown in this command.  In this particular case, the default output of @code{glibc} contains all the C header files, shared libraries, static libraries, Info documentation, and other supporting files."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4228
msgid "Sometimes it is more appropriate to separate the various types of files produced from a single source package into separate outputs.  For instance, the GLib C library (used by GTK+ and related packages)  installs more than 20 MiB of reference documentation as HTML pages.  To save space for users who do not need it, the documentation goes to a separate output, called @code{doc}.  To install the main GLib output, which contains everything but the documentation, one would run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:4231
#, no-wrap
msgid "guix install glib\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4235
msgid "The command to install its documentation is:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:4238
#, no-wrap
msgid "guix install glib:doc\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4247
msgid "While the colon syntax works for command-line specification of package outputs, it will not work when using a package @emph{variable} in Scheme code.  For example, to add the documentation of @code{glib} to the globally installed packages of an @code{operating-system} (see @ref{operating-system Reference}), a list of two items, the first one being the package @emph{variable} and the second one the name of the output to select (a string), must be used instead:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:4257
#, no-wrap
msgid ""
"(use-modules (gnu packages glib))\n"
";; glib-with-documentation is the Guile symbol for the glib package\n"
"(operating-system\n"
" ...\n"
" (packages\n"
"  (append\n"
"   (list (list glib-with-documentation \"doc\"))\n"
"         %base-packages)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4268
msgid "Some packages install programs with different ``dependency footprints''.  For instance, the WordNet package installs both command-line tools and graphical user interfaces (GUIs).  The former depend solely on the C library, whereas the latter depend on Tcl/Tk and the underlying X libraries.  In this case, we leave the command-line tools in the default output, whereas the GUIs are in a separate output.  This allows users who do not need the GUIs to save space.  The @command{guix size} command can help find out about such situations (@pxref{Invoking guix size}).  @command{guix graph} can also be helpful (@pxref{Invoking guix graph})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4276
msgid "There are several such multiple-output packages in the GNU distribution.  Other conventional output names include @code{lib} for libraries and possibly header files, @code{bin} for stand-alone programs, and @code{debug} for debugging information (@pxref{Installing Debugging Files}).  The outputs of a package are listed in the third column of the output of @command{guix package --list-available} (@pxref{Invoking guix package})."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:4279
#, no-wrap
msgid "Invoking @command{guix locate}"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4281
#, no-wrap
msgid "file, searching in packages"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4282 guix-git/doc/guix.texi:27856
#, no-wrap
msgid "file search"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4288
msgid "There's so much free software out there that sooner or later, you will need to search for packages.  The @command{guix search} command that we've seen before (@pxref{Invoking guix package}) lets you search by keywords:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:4291
#, no-wrap
msgid "guix search video editor\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4293
#, no-wrap
msgid "searching for packages, by file name"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4297
msgid "Sometimes, you instead want to find which package provides a given file, and this is where @command{guix locate} comes in.  Here is how you can find which package provides the @command{ls} command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:4301
#, no-wrap
msgid ""
"$ guix locate ls\n"
"coreutils@@9.1       /gnu/store/@dots{}-coreutils-9.1/bin/ls\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4304
msgid "Of course the command works for any file, not just commands:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:4309
#, no-wrap
msgid ""
"$ guix locate unistr.h\n"
"icu4c@@71.1          /gnu/store/@dots{}/include/unicode/unistr.h\n"
"libunistring@@1.0    /gnu/store/@dots{}/include/unistr.h\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4314
msgid "You may also specify @dfn{glob patterns} with wildcards.  For example, here is how you would search for packages providing @file{.service} files:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:4319
#, no-wrap
msgid ""
"$ guix locate -g '*.service'\n"
"man-db@@2.11.1        @dots{}/lib/systemd/system/man-db.service\n"
"wpa-supplicant@@2.10  @dots{}/system-services/fi.w1.wpa_supplicant1.service\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4326
msgid "The @command{guix locate} command relies on a database that maps file names to package names.  By default, it automatically creates that database if it does not exist yet by traversing packages available @emph{locally}, which can take a few minutes (depending on the size of your store and the speed of your storage device)."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:4332
msgid "For now, @command{guix locate} builds its database based on purely local knowledge---meaning that you will not find packages that never reached your store.  Eventually it will support downloading a pre-built database so you can potentially find more packages."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4342
msgid "By default, @command{guix locate} first tries to look for a system-wide database, usually under @file{/var/cache/guix/locate}; if it does not exist or is too old, it falls back to the per-user database, by default under @file{~/.cache/guix/locate}.  On a multi-user system, administrators may want to periodically update the system-wide database so that all users can benefit from it, for instance by setting up @code{package-database-service-type} (@pxref{File Search Services, @code{package-database-service-type}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4344 guix-git/doc/guix.texi:4971
#: guix-git/doc/guix.texi:6174 guix-git/doc/guix.texi:6723
#: guix-git/doc/guix.texi:7684 guix-git/doc/guix.texi:12977
#: guix-git/doc/guix.texi:13279 guix-git/doc/guix.texi:14399
#: guix-git/doc/guix.texi:14495 guix-git/doc/guix.texi:15702
#: guix-git/doc/guix.texi:16031 guix-git/doc/guix.texi:16534
#: guix-git/doc/guix.texi:16912 guix-git/doc/guix.texi:17008
#: guix-git/doc/guix.texi:17047 guix-git/doc/guix.texi:17148
msgid "The general syntax is:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:4347
#, no-wrap
msgid "guix locate [@var{options}@dots{}] @var{file}@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4353
msgid "... where @var{file} is the name of a file to search for (specifically, the ``base name'' of the file: files whose parent directories are called @var{file} are not matched)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4355 guix-git/doc/guix.texi:13030
msgid "The available options are as follows:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4357
#, no-wrap
msgid "--glob"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:4358 guix-git/doc/guix.texi:14369
#, no-wrap
msgid "-g"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4362
msgid "Interpret @var{file}@dots{} as @dfn{glob patterns}---patterns that may include wildcards, such as @samp{*.scm} to denote all files ending in @samp{.scm}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4363 guix-git/doc/guix.texi:7741
#, no-wrap
msgid "--stats"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4365
msgid "Display database statistics."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4366 guix-git/doc/guix.texi:15324
#, no-wrap
msgid "--update"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:4367 guix-git/doc/guix.texi:15325
#, no-wrap
msgid "-u"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4369
msgid "Update the file database."
msgstr "Aggiorna il database dei file."

#. type: table
#: guix-git/doc/guix.texi:4371
msgid "By default, the database is automatically updated when it is too old."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4372
#, no-wrap
msgid "--clear"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4374
msgid "Clear the database and re-populate it."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4379
msgid "This option lets you start anew, ensuring old data is removed from the database, which also avoids having an endlessly growing database.  By default @command{guix locate} automatically does that periodically, though infrequently."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4380
#, no-wrap
msgid "--database=@var{file}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4382
msgid "Use @var{file} as the database, creating it if necessary."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4386
msgid "By default, @command{guix locate} picks the database under @file{~/.cache/guix} or @file{/var/cache/guix}, whichever is the most recent one."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4387
#, no-wrap
msgid "--method=@var{method}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:4388
#, no-wrap
msgid "-m @var{method}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4391
msgid "Use @var{method} to select the set of packages to index.  Possible values are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4393
#, no-wrap
msgid "manifests"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4399
msgid "This is the default method: it works by traversing profiles on the machine and recording packages it encounters---packages you or other users of the machine installed, directly or indirectly.  It is fast but it can miss other packages available in the store but not referred to by any profile."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4404
msgid "This is a slower but more exhaustive method: it checks among all the existing packages those that are available in the store and records them."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:4409
#, no-wrap
msgid "Invoking @command{guix gc}"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4411
#, no-wrap
msgid "garbage collector"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4412
#, no-wrap
msgid "disk space"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:4413
#, no-wrap
msgid "guix gc"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4419
msgid "Packages that are installed, but not used, may be @dfn{garbage-collected}.  The @command{guix gc} command allows users to explicitly run the garbage collector to reclaim space from the @file{/gnu/store} directory.  It is the @emph{only} way to remove files from @file{/gnu/store}---removing files or directories manually may break it beyond repair!"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4430
msgid "The garbage collector has a set of known @dfn{roots}: any file under @file{/gnu/store} reachable from a root is considered @dfn{live} and cannot be deleted; any other file is considered @dfn{dead} and may be deleted.  The set of garbage collector roots (``GC roots'' for short)  includes default user profiles; by default, the symlinks under @file{/var/guix/gcroots} represent these GC roots.  New GC roots can be added with @command{guix build --root}, for example (@pxref{Invoking guix build}).  The @command{guix gc --list-roots} command lists them."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4436
msgid "Prior to running @code{guix gc --collect-garbage} to make space, it is often useful to remove old generations from user profiles; that way, old package builds referenced by those generations can be reclaimed.  This is achieved by running @code{guix package --delete-generations} (@pxref{Invoking guix package})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4440
msgid "Our recommendation is to run a garbage collection periodically, or when you are short on disk space.  For instance, to guarantee that at least 5@tie{}GB are available on your disk, simply run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:4443
#, no-wrap
msgid "guix gc -F 5G\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4452
msgid "It is perfectly safe to run as a non-interactive periodic job (@pxref{Scheduled Job Execution}, for how to set up such a job).  Running @command{guix gc} with no arguments will collect as much garbage as it can, but that is often inconvenient: you may find yourself having to rebuild or re-download software that is ``dead'' from the GC viewpoint but that is necessary to build other pieces of software---e.g., the compiler tool chain."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4458
msgid "The @command{guix gc} command has three modes of operation: it can be used to garbage-collect any dead files (the default), to delete specific files (the @option{--delete} option), to print garbage-collector information, or for more advanced queries.  The garbage collection options are as follows:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4460
#, no-wrap
msgid "--collect-garbage[=@var{min}]"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:4461
#, no-wrap
msgid "-C [@var{min}]"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4465
msgid "Collect garbage---i.e., unreachable @file{/gnu/store} files and sub-directories.  This is the default operation when no option is specified."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4470
msgid "When @var{min} is given, stop once @var{min} bytes have been collected.  @var{min} may be a number of bytes, or it may include a unit as a suffix, such as @code{MiB} for mebibytes and @code{GB} for gigabytes (@pxref{Block size, size specifications,, coreutils, GNU Coreutils})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4472
msgid "When @var{min} is omitted, collect all the garbage."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4473
#, no-wrap
msgid "--free-space=@var{free}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:4474
#, no-wrap
msgid "-F @var{free}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4478
msgid "Collect garbage until @var{free} space is available under @file{/gnu/store}, if possible; @var{free} denotes storage space, such as @code{500MiB}, as described above."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4481
msgid "When @var{free} or more is already available in @file{/gnu/store}, do nothing and exit immediately."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4482
#, no-wrap
msgid "--delete-generations[=@var{duration}]"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:4483
#, no-wrap
msgid "-d [@var{duration}]"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4488
msgid "Before starting the garbage collection process, delete all the generations older than @var{duration}, for all the user profiles and home environment generations; when run as root, this applies to all the profiles @emph{of all the users}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4492
msgid "For example, this command deletes all the generations of all your profiles that are older than 2 months (except generations that are current), and then proceeds to free space until at least 10 GiB are available:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:4495
#, no-wrap
msgid "guix gc -d 2m -F 10G\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4497
#, no-wrap
msgid "--delete"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:4498 guix-git/doc/guix.texi:6331
#: guix-git/doc/guix.texi:13958
#, no-wrap
msgid "-D"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4502
msgid "Attempt to delete all the store files and directories specified as arguments.  This fails if some of the files are not in the store, or if they are still live."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4503
#, no-wrap
msgid "--list-failures"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4505
msgid "List store items corresponding to cached build failures."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4509
msgid "This prints nothing unless the daemon was started with @option{--cache-failures} (@pxref{Invoking guix-daemon, @option{--cache-failures}})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4510
#, no-wrap
msgid "--list-roots"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4513
msgid "List the GC roots owned by the user; when run as root, list @emph{all} the GC roots."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4514
#, no-wrap
msgid "--list-busy"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4517
msgid "List store items in use by currently running processes.  These store items are effectively considered GC roots: they cannot be deleted."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4518
#, no-wrap
msgid "--clear-failures"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4520
msgid "Remove the specified store items from the failed-build cache."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4523
msgid "Again, this option only makes sense when the daemon is started with @option{--cache-failures}.  Otherwise, it does nothing."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4524
#, no-wrap
msgid "--list-dead"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4527
msgid "Show the list of dead files and directories still present in the store---i.e., files and directories no longer reachable from any root."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4528
#, no-wrap
msgid "--list-live"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4530
msgid "Show the list of live store files and directories."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4534
msgid "In addition, the references among existing store files can be queried:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4537
#, no-wrap
msgid "--references"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:4538
#, no-wrap
msgid "--referrers"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4539 guix-git/doc/guix.texi:16228
#, no-wrap
msgid "package dependencies"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4542
msgid "List the references (respectively, the referrers) of store files given as arguments."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4543
#, no-wrap
msgid "--requisites"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:4544 guix-git/doc/guix.texi:7377
#, no-wrap
msgid "-R"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4545 guix-git/doc/guix.texi:16084
#: guix-git/doc/guix.texi:16112 guix-git/doc/guix.texi:16193
#, no-wrap
msgid "closure"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4550
msgid "List the requisites of the store files passed as arguments.  Requisites include the store files themselves, their references, and the references of these, recursively.  In other words, the returned list is the @dfn{transitive closure} of the store files."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4554
msgid "@xref{Invoking guix size}, for a tool to profile the size of the closure of an element.  @xref{Invoking guix graph}, for a tool to visualize the graph of references."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4555
#, no-wrap
msgid "--derivers"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4556 guix-git/doc/guix.texi:7776
#: guix-git/doc/guix.texi:15912 guix-git/doc/guix.texi:16337
#, no-wrap
msgid "derivation"
msgstr "derivation"

#. type: table
#: guix-git/doc/guix.texi:4559
msgid "Return the derivation(s) leading to the given store items (@pxref{Derivations})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4561
msgid "For example, this command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:4564
#, no-wrap
msgid "guix gc --derivers $(guix package -I ^emacs$ | cut -f4)\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4569
msgid "returns the @file{.drv} file(s) leading to the @code{emacs} package installed in your profile."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4573
msgid "Note that there may be zero matching @file{.drv} files, for instance because these files have been garbage-collected.  There can also be more than one matching @file{.drv} due to fixed-output derivations."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4577
msgid "Lastly, the following options allow you to check the integrity of the store and to control disk usage."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4580
#, no-wrap
msgid "--verify[=@var{options}]"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4581
#, no-wrap
msgid "integrity, of the store"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4582
#, no-wrap
msgid "integrity checking"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4584
msgid "Verify the integrity of the store."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4587
msgid "By default, make sure that all the store items marked as valid in the database of the daemon actually exist in @file{/gnu/store}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4590
msgid "When provided, @var{options} must be a comma-separated list containing one or more of @code{contents} and @code{repair}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4596
msgid "When passing @option{--verify=contents}, the daemon computes the content hash of each store item and compares it against its hash in the database.  Hash mismatches are reported as data corruptions.  Because it traverses @emph{all the files in the store}, this command can take a long time, especially on systems with a slow disk drive."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4597
#, no-wrap
msgid "repairing the store"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4598 guix-git/doc/guix.texi:14142
#, no-wrap
msgid "corruption, recovering from"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4606
msgid "Using @option{--verify=repair} or @option{--verify=contents,repair} causes the daemon to try to repair corrupt store items by fetching substitutes for them (@pxref{Substitutes}).  Because repairing is not atomic, and thus potentially dangerous, it is available only to the system administrator.  A lightweight alternative, when you know exactly which items in the store are corrupt, is @command{guix build --repair} (@pxref{Invoking guix build})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4607
#, no-wrap
msgid "--optimize"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4611
msgid "Optimize the store by hard-linking identical files---this is @dfn{deduplication}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4617
msgid "The daemon performs deduplication after each successful build or archive import, unless it was started with @option{--disable-deduplication} (@pxref{Invoking guix-daemon, @option{--disable-deduplication}}).  Thus, this option is primarily useful when the daemon was running with @option{--disable-deduplication}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4618
#, no-wrap
msgid "--vacuum-database"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4619
#, no-wrap
msgid "vacuum the store database"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4629
msgid "Guix uses an sqlite database to keep track of the items in the store (@pxref{The Store}).  Over time it is possible that the database may grow to a large size and become fragmented.  As a result, one may wish to clear the freed space and join the partially used pages in the database left behind from removed packages or after running the garbage collector.  Running @command{sudo guix gc --vacuum-database} will lock the database and @code{VACUUM} the store, defragmenting the database and purging freed pages, unlocking the database when it finishes."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:4633
#, no-wrap
msgid "Invoking @command{guix pull}"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4635
#, no-wrap
msgid "upgrading Guix"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4636
#, no-wrap
msgid "updating Guix"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:4637
#, no-wrap
msgid "guix pull"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4638
#, no-wrap
msgid "pull"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4639
#, no-wrap
msgid "security, @command{guix pull}"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4640
#, no-wrap
msgid "authenticity, of code obtained with @command{guix pull}"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4650
msgid "Packages are installed or upgraded to the latest version available in the distribution currently available on your local machine.  To update that distribution, along with the Guix tools, you must run @command{guix pull}: the command downloads the latest Guix source code and package descriptions, and deploys it.  Source code is downloaded from a @uref{https://git-scm.com/book/en/, Git} repository, by default the official GNU@tie{}Guix repository, though this can be customized.  @command{guix pull} ensures that the code it downloads is @emph{authentic} by verifying that commits are signed by Guix developers."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4653
msgid "Specifically, @command{guix pull} downloads code from the @dfn{channels} (@pxref{Channels}) specified by one of the following, in this order:"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:4657
msgid "the @option{--channels} option;"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:4660
msgid "the user's @file{~/.config/guix/channels.scm} file, unless @option{-q} is passed;"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:4665
msgid "the system-wide @file{/etc/guix/channels.scm} file, unless @option{-q} is passed (on Guix System, this file can be declared in the operating system configuration, @pxref{guix-configuration-channels, @code{channels} field of @code{guix-configuration}});"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:4668
msgid "the built-in default channels specified in the @code{%default-channels} variable."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4675
msgid "On completion, @command{guix package} will use packages and package versions from this just-retrieved copy of Guix.  Not only that, but all the Guix commands and Scheme modules will also be taken from that latest version.  New @command{guix} sub-commands added by the update also become available."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4681
msgid "Any user can update their Guix copy using @command{guix pull}, and the effect is limited to the user who ran @command{guix pull}.  For instance, when user @code{root} runs @command{guix pull}, this has no effect on the version of Guix that user @code{alice} sees, and vice versa."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4684
msgid "The result of running @command{guix pull} is a @dfn{profile} available under @file{~/.config/guix/current} containing the latest Guix."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4687
msgid "The @option{--list-generations} or @option{-l} option lists past generations produced by @command{guix pull}, along with details about their provenance:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:4695
#, no-wrap
msgid ""
"$ guix pull -l\n"
"Generation 1\tJun 10 2018 00:18:18\n"
"  guix 65956ad\n"
"    repository URL: https://git.guix.gnu.org/guix.git\n"
"    branch: origin/master\n"
"    commit: 65956ad3526ba09e1f7a40722c96c6ef7c0936fe\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:4701
#, no-wrap
msgid ""
"Generation 2\tJun 11 2018 11:02:49\n"
"  guix e0cc7f6\n"
"    repository URL: https://git.guix.gnu.org/guix.git\n"
"    branch: origin/master\n"
"    commit: e0cc7f669bec22c37481dd03a7941c7d11a64f1d\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:4707
#, no-wrap
msgid ""
"Generation 3\tJun 13 2018 23:31:07\t(current)\n"
"  guix 844cc1c\n"
"    repository URL: https://git.guix.gnu.org/guix.git\n"
"    branch: origin/master\n"
"    commit: 844cc1c8f394f03b404c5bb3aee086922373490c\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4711
msgid "@xref{Invoking guix describe, @command{guix describe}}, for other ways to describe the current status of Guix."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4716
msgid "This @code{~/.config/guix/current} profile works exactly like the profiles created by @command{guix package} (@pxref{Invoking guix package}).  That is, you can list generations, roll back to the previous generation---i.e., the previous Guix---and so on:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:4722
#, no-wrap
msgid ""
"$ guix pull --roll-back\n"
"switched from generation 3 to 2\n"
"$ guix pull --delete-generations=1\n"
"deleting /var/guix/profiles/per-user/charlie/current-guix-1-link\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4726
msgid "You can also use @command{guix package} (@pxref{Invoking guix package})  to manage the profile by naming it explicitly:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:4731
#, no-wrap
msgid ""
"$ guix package -p ~/.config/guix/current --roll-back\n"
"switched from generation 3 to 2\n"
"$ guix package -p ~/.config/guix/current --delete-generations=1\n"
"deleting /var/guix/profiles/per-user/charlie/current-guix-1-link\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4735
msgid "The @command{guix pull} command is usually invoked with no arguments, but it supports the following options:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4737 guix-git/doc/guix.texi:4981
#, no-wrap
msgid "--url=@var{url}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:4738 guix-git/doc/guix.texi:4982
#, no-wrap
msgid "--commit=@var{commit}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4739 guix-git/doc/guix.texi:4983
#: guix-git/doc/guix.texi:14378
#, no-wrap
msgid "--branch=@var{branch}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4743
msgid "Download code for the @code{guix} channel from the specified @var{url}, at the given @var{commit} (a valid Git commit ID represented as a hexadecimal string or the name of a tag), or @var{branch}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4744 guix-git/doc/guix.texi:5435
#, no-wrap
msgid "@file{channels.scm}, configuration file"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4745 guix-git/doc/guix.texi:5436
#, no-wrap
msgid "configuration file for channels"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4749
msgid "These options are provided for convenience, but you can also specify your configuration in the @file{~/.config/guix/channels.scm} file or using the @option{--channels} option (see below)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4750 guix-git/doc/guix.texi:4988
#, no-wrap
msgid "--channels=@var{file}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:4751 guix-git/doc/guix.texi:4989
#, no-wrap
msgid "-C @var{file}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4757
msgid "Read the list of channels from @var{file} instead of @file{~/.config/guix/channels.scm} or @file{/etc/guix/channels.scm}.  @var{file} must contain Scheme code that evaluates to a list of channel objects.  @xref{Channels}, for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4758 guix-git/doc/guix.texi:4994
#, fuzzy, no-wrap
#| msgid "Channels"
msgid "--no-channel-files"
msgstr "Canali"

#. type: itemx
#: guix-git/doc/guix.texi:4759 guix-git/doc/guix.texi:4995
#: guix-git/doc/guix.texi:13073 guix-git/doc/guix.texi:13910
#, no-wrap
msgid "-q"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4762 guix-git/doc/guix.texi:4998
msgid "Inhibit loading of the user and system channel files, @file{~/.config/guix/channels.scm} and @file{/etc/guix/channels.scm}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4763
#, no-wrap
msgid "channel news"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4764
#, no-wrap
msgid "--news"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:4765 guix-git/doc/guix.texi:6505
#: guix-git/doc/guix.texi:7006 guix-git/doc/guix.texi:47555
#: guix-git/doc/guix.texi:53205
#, no-wrap
msgid "-N"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4770
msgid "Display news written by channel authors for their users for changes made since the previous generation (@pxref{Channels, Writing Channel News}).  When @option{--details} is passed, additionally display new and upgraded packages."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4773
msgid "You can view that information for previous generations with @command{guix pull -l}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4780
msgid "List all the generations of @file{~/.config/guix/current} or, if @var{pattern} is provided, the subset of generations that match @var{pattern}.  The syntax of @var{pattern} is the same as with @code{guix package --list-generations} (@pxref{Invoking guix package})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4785
msgid "By default, this prints information about the channels used in each revision as well as the corresponding news entries.  If you pass @option{--details}, it will also print the list of packages added and upgraded in each generation compared to the previous one."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4786
#, no-wrap
msgid "--details"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4790
msgid "Instruct @option{--list-generations} or @option{--news} to display more information about the differences between subsequent generations---see above."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4797
msgid "Roll back to the previous @dfn{generation} of @file{~/.config/guix/current}---i.e., undo the last transaction."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4821
msgid "If the current generation matches, it is @emph{not} deleted."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4827
msgid "@xref{Invoking guix describe}, for a way to display information about the current generation only."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4831
msgid "Use @var{profile} instead of @file{~/.config/guix/current}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4832 guix-git/doc/guix.texi:13359
#: guix-git/doc/guix.texi:15722
#, no-wrap
msgid "--dry-run"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:4833 guix-git/doc/guix.texi:13360
#: guix-git/doc/guix.texi:15723 guix-git/doc/guix.texi:16066
#, no-wrap
msgid "-n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4836
msgid "Show which channel commit(s) would be used and what would be built or substituted but do not actually do it."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4837 guix-git/doc/guix.texi:47574
#: guix-git/doc/guix.texi:53453
#, no-wrap
msgid "--allow-downgrades"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4840
msgid "Allow pulling older or unrelated revisions of channels than those currently in use."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4841
#, no-wrap
msgid "downgrade attacks, protection against"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4846
msgid "By default, @command{guix pull} protects against so-called ``downgrade attacks'' whereby the Git repository of a channel would be reset to an earlier or unrelated revision of itself, potentially leading you to install older, known-vulnerable versions of software packages."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:4850 guix-git/doc/guix.texi:47588
msgid "Make sure you understand its security implications before using @option{--allow-downgrades}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4852
#, no-wrap
msgid "--disable-authentication"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4854
msgid "Allow pulling channel code without authenticating it."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4855 guix-git/doc/guix.texi:5675
#, no-wrap
msgid "authentication, of channel code"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4860
msgid "By default, @command{guix pull} authenticates code downloaded from channels by verifying that its commits are signed by authorized developers, and raises an error if this is not the case.  This option instructs it to not perform any such verification."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:4864
msgid "Make sure you understand its security implications before using @option{--disable-authentication}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:4866 guix-git/doc/guix.texi:14356
#, no-wrap
msgid "--no-check-certificate"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4868 guix-git/doc/guix.texi:14358
msgid "Do not validate the X.509 certificates of HTTPS servers."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4873
msgid "When using this option, you have @emph{absolutely no guarantee} that you are communicating with the authentic server responsible for the given URL.  Unless the channel is authenticated, this makes you vulnerable to ``man-in-the-middle'' attacks."
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:4875 guix-git/doc/guix.texi:6488
#: guix-git/doc/guix.texi:6989 guix-git/doc/guix.texi:7556
#: guix-git/doc/guix.texi:14076 guix-git/doc/guix.texi:16211
#: guix-git/doc/guix.texi:16476 guix-git/doc/guix.texi:17170
#: guix-git/doc/guix.texi:47498
#, no-wrap
msgid "-s @var{system}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4878 guix-git/doc/guix.texi:7559
msgid "Attempt to build for @var{system}---e.g., @code{i686-linux}---instead of the system type of the build host."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4882
msgid "Use the bootstrap Guile to build the latest Guix.  This option is only useful to Guix developers."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4888
msgid "The @dfn{channel} mechanism allows you to instruct @command{guix pull} which repository and branch to pull from, as well as @emph{additional} repositories containing package modules that should be deployed.  @xref{Channels}, for more information."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4891
msgid "In addition, @command{guix pull} supports all the common build options (@pxref{Common Build Options})."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:4893
#, no-wrap
msgid "Invoking @command{guix time-machine}"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:4895
#, no-wrap
msgid "guix time-machine"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4896 guix-git/doc/guix.texi:5555
#, no-wrap
msgid "pinning, channels"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4897 guix-git/doc/guix.texi:5147
#: guix-git/doc/guix.texi:5556
#, no-wrap
msgid "replicating Guix"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:4898 guix-git/doc/guix.texi:5557
#, no-wrap
msgid "reproducibility, of Guix"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4906
msgid "The @command{guix time-machine} command provides access to other revisions of Guix, for example to install older versions of packages, or to reproduce a computation in an identical environment.  The revision of Guix to be used is defined by a commit or by a channel description file created by @command{guix describe} (@pxref{Invoking guix describe})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4910
msgid "Let's assume that you want to travel to those days of November 2020 when version 1.2.0 of Guix was released and, once you're there, run the @command{guile} of that time:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:4914
#, no-wrap
msgid ""
"guix time-machine --commit=v1.2.0 -- \\\n"
"  environment -C --ad-hoc guile -- guile\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4928
msgid "The command above fetches Guix@tie{}1.2.0 (and possibly other channels specified by your @file{channels.scm} configuration files---see below) and runs its @command{guix environment} command to spawn an environment in a container running @command{guile} (@command{guix environment} has since been subsumed by @command{guix shell}; @pxref{Invoking guix shell}).  It's like driving a DeLorean@footnote{If you don't know what a DeLorean is, consider traveling back to the 1980's. (@uref{https://www.imdb.com/title/tt0088763/, Back to the Future (1985)})}! The first @command{guix time-machine} invocation can be expensive: it may have to download or even build a large number of packages; the result is cached though and subsequent commands targeting the same commit are almost instantaneous."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4934
msgid "As for @command{guix pull}, in the absence of any options, @command{time-machine} fetches the latest commits of the channels specified in @file{~/.config/guix/channels.scm}, @file{/etc/guix/channels.scm}, or the default channels; the @option{-q} option lets you ignore these configuration files.  The command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:4937
#, no-wrap
msgid "guix time-machine -q -- build hello\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4943
msgid "will thus build the package @code{hello} as defined in the main branch of Guix, without any additional channel, which is in general a newer revision of Guix than you have installed.  Time travel works in both directions!"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:4951
msgid "The history of Guix is immutable and @command{guix time-machine} provides the exact same software as they are in a specific Guix revision.  Naturally, no security fixes are provided for old versions of Guix or its channels.  A careless use of @command{guix time-machine} opens the door to security vulnerabilities.  @xref{Invoking guix pull, @option{--allow-downgrades}}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4958
msgid "@command{guix time-machine} raises an error when attempting to travel to commits older than ``v0.16.0'' (commit @samp{4a0b87f0}), dated Dec.@: 2018.  This is one of the oldest commits supporting the channel mechanism that makes ``time travel'' possible."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:4968
msgid "Although it should technically be possible to travel to such an old commit, the ease to do so will largely depend on the availability of binary substitutes.  When traveling to a distant past, some packages may not easily build from source anymore.  One such example are old versions of OpenSSL whose tests would fail after a certain date.  This particular problem can be worked around by running a @dfn{virtual build machine} with its clock set to the right time (@pxref{build-vm, Virtual Build Machines})."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:4974
#, no-wrap
msgid "guix time-machine @var{options}@dots{} -- @var{command} @var {arg}@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:4979
msgid "where @var{command} and @var{arg}@dots{} are passed unmodified to the @command{guix} command of the specified revision.  The @var{options} that define this revision are the same as for @command{guix pull} (@pxref{Invoking guix pull}):"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4987
msgid "Use the @code{guix} channel from the specified @var{url}, at the given @var{commit} (a valid Git commit ID represented as a hexadecimal string or the name of a tag), or @var{branch}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4993
msgid "Read the list of channels from @var{file}.  @var{file} must contain Scheme code that evaluates to a list of channel objects.  @xref{Channels} for more information."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:5002
msgid "Thus, @command{guix time-machine -q} is equivalent to the following Bash command, using the ``process substitution'' syntax (@pxref{Process Substitution,,, bash, The GNU Bash Reference Manual}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:5005
#, no-wrap
msgid "guix time-machine -C <(echo %default-channels) @dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5012
msgid "Note that @command{guix time-machine} can trigger builds of channels and their dependencies, and these are controlled by the standard build options (@pxref{Common Build Options})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5017
msgid "If @command{guix time-machine} is executed without any command, it prints the file name of the profile that would be used to execute the command.  This is sometimes useful if you need to get store file name of the profile---e.g., when you want to @command{guix copy} it."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:5025
msgid "The functionality described here is a ``technology preview'' as of version @value{VERSION}.  As such, the interface is subject to change."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5027 guix-git/doc/guix.texi:13023
#, no-wrap
msgid "inferiors"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5028
#, no-wrap
msgid "composition of Guix revisions"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5033
msgid "Sometimes you might need to mix packages from the revision of Guix you're currently running with packages available in a different revision of Guix.  Guix @dfn{inferiors} allow you to achieve that by composing different Guix revisions in arbitrary ways."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5034 guix-git/doc/guix.texi:5097
#, no-wrap
msgid "inferior packages"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5040
msgid "Technically, an ``inferior'' is essentially a separate Guix process connected to your main Guix process through a REPL (@pxref{Invoking guix repl}).  The @code{(guix inferior)} module allows you to create inferiors and to communicate with them.  It also provides a high-level interface to browse and manipulate the packages that an inferior provides---@dfn{inferior packages}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5050
msgid "When combined with channels (@pxref{Channels}), inferiors provide a simple way to interact with a separate revision of Guix.  For example, let's assume you want to install in your profile the current @code{guile} package, along with the @code{guile-json} as it existed in an older revision of Guix---perhaps because the newer @code{guile-json} has an incompatible API and you want to run your code against the old API@.  To do that, you could write a manifest for use by @code{guix package --manifest} (@pxref{Writing Manifests}); in that manifest, you would create an inferior for that old Guix revision you care about, and you would look up the @code{guile-json} package in the inferior:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:5054
#, no-wrap
msgid ""
"(use-modules (guix inferior) (guix channels)\n"
"             (srfi srfi-1))   ;for 'first'\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:5063
#, no-wrap
msgid ""
"(define channels\n"
"  ;; This is the old revision from which we want to\n"
"  ;; extract guile-json.\n"
"  (list (channel\n"
"         (name 'guix)\n"
"         (url \"https://git.guix.gnu.org/guix.git\")\n"
"         (commit\n"
"          \"65956ad3526ba09e1f7a40722c96c6ef7c0936fe\"))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:5067
#, no-wrap
msgid ""
"(define inferior\n"
"  ;; An inferior representing the above revision.\n"
"  (inferior-for-channels channels))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:5073
#, no-wrap
msgid ""
";; Now create a manifest with the current \"guile\" package\n"
";; and the old \"guile-json\" package.\n"
"(packages->manifest\n"
" (list (first (lookup-inferior-packages inferior \"guile-json\"))\n"
"       (specification->package \"guile\")))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5078
msgid "On its first run, @command{guix package --manifest} might have to build the channel you specified before it can create the inferior; subsequent runs will be much faster because the Guix revision will be cached."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5081
msgid "The @code{(guix inferior)} module provides the following procedures to open an inferior:"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:5082
#, no-wrap
msgid "{Procedure} inferior-for-channels channels [#:cache-directory] [#:ttl]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:5086
msgid "Return an inferior for @var{channels}, a list of channels.  Use the cache at @var{cache-directory}, where entries can be reclaimed after @var{ttl} seconds.  This procedure opens a new connection to the build daemon."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:5089
msgid "As a side effect, this procedure may build or substitute binaries for @var{channels}, which can take time."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:5091
#, no-wrap
msgid "{Procedure} open-inferior directory [#:command \"bin/guix\"]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:5095
msgid "Open the inferior Guix in @var{directory}, running @code{@var{directory}/@var{command} repl} or equivalent.  Return @code{#f} if the inferior could not be launched."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5100
msgid "The procedures listed below allow you to obtain and manipulate inferior packages."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:5101
#, no-wrap
msgid "{Procedure} inferior-packages inferior"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:5103
msgid "Return the list of packages known to @var{inferior}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:5105
#, no-wrap
msgid "{Procedure} lookup-inferior-packages inferior name [version]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:5109
msgid "Return the sorted list of inferior packages matching @var{name} in @var{inferior}, with highest version numbers first.  If @var{version} is true, return only packages with a version number prefixed by @var{version}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:5111
#, no-wrap
msgid "{Procedure} inferior-package? obj"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:5113
msgid "Return true if @var{obj} is an inferior package."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:5115
#, no-wrap
msgid "{Procedure} inferior-package-name package"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:5116
#, no-wrap
msgid "{Procedure} inferior-package-version package"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:5117
#, no-wrap
msgid "{Procedure} inferior-package-synopsis package"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:5118
#, no-wrap
msgid "{Procedure} inferior-package-description package"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:5119
#, no-wrap
msgid "{Procedure} inferior-package-home-page package"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:5120
#, no-wrap
msgid "{Procedure} inferior-package-location package"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:5121
#, no-wrap
msgid "{Procedure} inferior-package-inputs package"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:5122
#, no-wrap
msgid "{Procedure} inferior-package-native-inputs package"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:5123
#, no-wrap
msgid "{Procedure} inferior-package-propagated-inputs package"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:5124
#, no-wrap
msgid "{Procedure} inferior-package-transitive-propagated-inputs package"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:5125
#, no-wrap
msgid "{Procedure} inferior-package-native-search-paths package"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:5126
#, no-wrap
msgid "{Procedure} inferior-package-transitive-native-search-paths package"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:5127
#, no-wrap
msgid "{Procedure} inferior-package-search-paths package"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:5132
msgid "These procedures are the counterpart of package record accessors (@pxref{package Reference}).  Most of them work by querying the inferior @var{package} comes from, so the inferior must still be live when you call these procedures."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5142
msgid "Inferior packages can be used transparently like any other package or file-like object in G-expressions (@pxref{G-Expressions}).  They are also transparently handled by the @code{packages->manifest} procedure, which is commonly used in manifests (@pxref{Invoking guix package, the @option{--manifest} option of @command{guix package}}).  Thus you can insert an inferior package pretty much anywhere you would insert a regular package: in manifests, in the @code{packages} field of your @code{operating-system} declaration, and so on."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:5144
#, no-wrap
msgid "Invoking @command{guix describe}"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:5148
#, no-wrap
msgid "guix describe"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5156
msgid "Often you may want to answer questions like: ``Which revision of Guix am I using?'' or ``Which channels am I using?'' This is useful information in many situations: if you want to @emph{replicate} an environment on a different machine or user account, if you want to report a bug or to determine what change in the channels you are using caused it, or if you want to record your system state for reproducibility purposes.  The @command{guix describe} command answers these questions."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5160
msgid "When run from a @command{guix pull}ed @command{guix}, @command{guix describe} displays the channel(s) that it was built from, including their repository URL and commit IDs (@pxref{Channels}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:5168
#, no-wrap
msgid ""
"$ guix describe\n"
"Generation 10\tSep 03 2018 17:32:44\t(current)\n"
"  guix e0fa68c\n"
"    repository URL: https://git.guix.gnu.org/guix.git\n"
"    branch: master\n"
"    commit: e0fa68c7718fffd33d81af415279d6ddb518f727\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5177
msgid "If you're familiar with the Git version control system, this is similar in spirit to @command{git describe}; the output is also similar to that of @command{guix pull --list-generations}, but limited to the current generation (@pxref{Invoking guix pull, the @option{--list-generations} option}).  Because the Git commit ID shown above unambiguously refers to a snapshot of Guix, this information is all it takes to describe the revision of Guix you're using, and also to replicate it."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5180
msgid "To make it easier to replicate Guix, @command{guix describe} can also be asked to return a list of channels instead of the human-readable description above:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:5193
#, no-wrap
msgid ""
"$ guix describe -f channels\n"
"(list (channel\n"
"        (name 'guix)\n"
"        (url \"https://git.guix.gnu.org/guix.git\")\n"
"        (commit\n"
"          \"e0fa68c7718fffd33d81af415279d6ddb518f727\")\n"
"        (introduction\n"
"          (make-channel-introduction\n"
"            \"9edb3f66fd807b096b48283debdcddccfea34bad\"\n"
"            (openpgp-fingerprint\n"
"              \"BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\")))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5202
msgid "You can save this to a file and feed it to @command{guix pull -C} on some other machine or at a later point in time, which will instantiate @emph{this exact Guix revision} (@pxref{Invoking guix pull, the @option{-C} option}).  From there on, since you're able to deploy the same revision of Guix, you can just as well @emph{replicate a complete software environment}.  We humbly think that this is @emph{awesome}, and we hope you'll like it too!"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5205
msgid "The details of the options supported by @command{guix describe} are as follows:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:5207 guix-git/doc/guix.texi:7218
#: guix-git/doc/guix.texi:17297
#, no-wrap
msgid "--format=@var{format}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:5208 guix-git/doc/guix.texi:7219
#: guix-git/doc/guix.texi:17298
#, no-wrap
msgid "-f @var{format}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:5210 guix-git/doc/guix.texi:17300
msgid "Produce output in the specified @var{format}, one of:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:5212
#, no-wrap
msgid "human"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:5214
msgid "produce human-readable output;"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5214 guix-git/doc/guix.texi:5434
#, no-wrap
msgid "channels"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:5218
msgid "produce a list of channel specifications that can be passed to @command{guix pull -C} or installed as @file{~/.config/guix/channels.scm} (@pxref{Invoking guix pull});"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:5218
#, no-wrap
msgid "channels-sans-intro"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:5224
msgid "like @code{channels}, but omit the @code{introduction} field; use it to produce a channel specification suitable for Guix version 1.1.0 or earlier---the @code{introduction} field has to do with channel authentication (@pxref{Channels, Channel Authentication}) and is not supported by these older versions;"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:5224 guix-git/doc/guix.texi:14752
#, no-wrap
msgid "json"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5225
#, no-wrap
msgid "JSON"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:5227
msgid "produce a list of channel specifications in JSON format;"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:5227 guix-git/doc/guix.texi:17302
#, no-wrap
msgid "recutils"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:5229
msgid "produce a list of channel specifications in Recutils format."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:5231
#, no-wrap
msgid "--list-formats"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:5233
msgid "Display available formats for @option{--format} option."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:5237
msgid "Display information about @var{profile}."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:5240
#, no-wrap
msgid "Invoking @command{guix archive}"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:5242
#, no-wrap
msgid "guix archive"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5243
#, no-wrap
msgid "archive"
msgstr "archivio"

#. type: cindex
#: guix-git/doc/guix.texi:5244
#, no-wrap
msgid "exporting files from the store"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5245
#, no-wrap
msgid "importing files to the store"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5251
msgid "The @command{guix archive} command allows users to @dfn{export} files from the store into a single archive, and to later @dfn{import} them on a machine that runs Guix.  In particular, it allows store files to be transferred from one machine to the store on another machine."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:5255
msgid "If you're looking for a way to produce archives in a format suitable for tools other than Guix, @pxref{Invoking guix pack}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5257
#, no-wrap
msgid "exporting store items"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5259
msgid "To export store files as an archive to standard output, run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:5262
#, no-wrap
msgid "guix archive --export @var{options} @var{specifications}...\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5269
msgid "@var{specifications} may be either store file names or package specifications, as for @command{guix package} (@pxref{Invoking guix package}).  For instance, the following command creates an archive containing the @code{gui} output of the @code{git} package and the main output of @code{emacs}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:5272
#, no-wrap
msgid "guix archive --export git:gui /gnu/store/...-emacs-24.3 > great.nar\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5277
msgid "If the specified packages are not built yet, @command{guix archive} automatically builds them.  The build process may be controlled with the common build options (@pxref{Common Build Options})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5280
msgid "To transfer the @code{emacs} package to a machine connected over SSH, one would run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:5283
#, no-wrap
msgid "guix archive --export -r emacs | ssh the-machine guix archive --import\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5288
msgid "Similarly, a complete user profile may be transferred from one machine to another like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:5292
#, no-wrap
msgid ""
"guix archive --export -r $(readlink -f ~/.guix-profile) | \\\n"
"  ssh the-machine guix archive --import\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5302
msgid "However, note that, in both examples, all of @code{emacs} and the profile as well as all of their dependencies are transferred (due to @option{-r}), regardless of what is already available in the store on the target machine.  The @option{--missing} option can help figure out which items are missing from the target store.  The @command{guix copy} command simplifies and optimizes this whole process, so this is probably what you should use in this case (@pxref{Invoking guix copy})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5303
#, no-wrap
msgid "nar, archive format"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5304
#, no-wrap
msgid "normalized archive (nar)"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5305
#, no-wrap
msgid "nar bundle, archive format"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5310
msgid "Each store item is written in the @dfn{normalized archive} or @dfn{nar} format (described below), and the output of @command{guix archive --export} (and input of @command{guix archive --import}) is a @dfn{nar bundle}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5320
msgid "The nar format is comparable in spirit to `tar', but with differences that make it more appropriate for our purposes.  First, rather than recording all Unix metadata for each file, the nar format only mentions the file type (regular, directory, or symbolic link); Unix permissions and owner/group are dismissed.  Second, the order in which directory entries are stored always follows the order of file names according to the C locale collation order.  This makes archive production fully deterministic."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5324
msgid "That nar bundle format is essentially the concatenation of zero or more nars along with metadata for each store item it contains: its file name, references, corresponding derivation, and a digital signature."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5330
msgid "When exporting, the daemon digitally signs the contents of the archive, and that digital signature is appended.  When importing, the daemon verifies the signature and rejects the import in case of an invalid signature or if the signing key is not authorized."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5332
msgid "The main options are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:5334
#, no-wrap
msgid "--export"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:5337
msgid "Export the specified store files or packages (see below).  Write the resulting archive to the standard output."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:5340
msgid "Dependencies are @emph{not} included in the output, unless @option{--recursive} is passed."
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:5341 guix-git/doc/guix.texi:14385
#: guix-git/doc/guix.texi:14432 guix-git/doc/guix.texi:14568
#: guix-git/doc/guix.texi:14599 guix-git/doc/guix.texi:14631
#: guix-git/doc/guix.texi:14658 guix-git/doc/guix.texi:14746
#: guix-git/doc/guix.texi:14827 guix-git/doc/guix.texi:14868
#: guix-git/doc/guix.texi:14919 guix-git/doc/guix.texi:14975
#: guix-git/doc/guix.texi:15008 guix-git/doc/guix.texi:15024
#: guix-git/doc/guix.texi:15044 guix-git/doc/guix.texi:15092
#: guix-git/doc/guix.texi:15128 guix-git/doc/guix.texi:15155
#, no-wrap
msgid "-r"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:5342 guix-git/doc/guix.texi:14384
#: guix-git/doc/guix.texi:14431 guix-git/doc/guix.texi:14567
#: guix-git/doc/guix.texi:14598 guix-git/doc/guix.texi:14630
#: guix-git/doc/guix.texi:14657 guix-git/doc/guix.texi:14745
#: guix-git/doc/guix.texi:14826 guix-git/doc/guix.texi:14867
#: guix-git/doc/guix.texi:14918 guix-git/doc/guix.texi:14974
#: guix-git/doc/guix.texi:15007 guix-git/doc/guix.texi:15023
#: guix-git/doc/guix.texi:15043 guix-git/doc/guix.texi:15091
#: guix-git/doc/guix.texi:15127 guix-git/doc/guix.texi:15154
#: guix-git/doc/guix.texi:15203
#, no-wrap
msgid "--recursive"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:5347
msgid "When combined with @option{--export}, this instructs @command{guix archive} to include dependencies of the given items in the archive.  Thus, the resulting archive is self-contained: it contains the closure of the exported store items."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:5348
#, no-wrap
msgid "--import"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:5353
msgid "Read an archive from the standard input, and import the files listed therein into the store.  Abort if the archive has an invalid digital signature, or if it is signed by a public key not among the authorized keys (see @option{--authorize} below)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:5354
#, no-wrap
msgid "--missing"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:5358
msgid "Read a list of store file names from the standard input, one per line, and write on the standard output the subset of these files missing from the store."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:5359
#, no-wrap
msgid "--generate-key[=@var{parameters}]"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5360
#, no-wrap
msgid "signing, archives"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:5367
msgid "Generate a new key pair for the daemon.  This is a prerequisite before archives can be exported with @option{--export}.  This operation is usually instantaneous but it can take time if the system's entropy pool needs to be refilled.  On Guix System, @code{guix-service-type} takes care of generating this key pair the first boot."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:5377
msgid "The generated key pair is typically stored under @file{/etc/guix}, in @file{signing-key.pub} (public key) and @file{signing-key.sec} (private key, which must be kept secret).  When @var{parameters} is omitted, an ECDSA key using the Ed25519 curve is generated, or, for Libgcrypt versions before 1.6.0, it is a 4096-bit RSA key.  Alternatively, @var{parameters} can specify @code{genkey} parameters suitable for Libgcrypt (@pxref{General public-key related Functions, @code{gcry_pk_genkey},, gcrypt, The Libgcrypt Reference Manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:5378
#, no-wrap
msgid "--authorize"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5379
#, no-wrap
msgid "authorizing, archives"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:5383
msgid "Authorize imports signed by the public key passed on standard input.  The public key must be in ``s-expression advanced format''---i.e., the same format as the @file{signing-key.pub} file."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:5390
msgid "The list of authorized keys is kept in the human-editable file @file{/etc/guix/acl}.  The file contains @url{https://people.csail.mit.edu/rivest/Sexp.txt, ``advanced-format s-expressions''} and is structured as an access-control list in the @url{https://theworld.com/~cme/spki.txt, Simple Public-Key Infrastructure (SPKI)}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:5391
#, no-wrap
msgid "--extract=@var{directory}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:5392
#, no-wrap
msgid "-x @var{directory}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:5396
msgid "Read a single-item archive as served by substitute servers (@pxref{Substitutes}) and extract it to @var{directory}.  This is a low-level operation needed in only very narrow use cases; see below."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:5399
msgid "For example, the following command extracts the substitute for Emacs served by @code{@value{SUBSTITUTE-SERVER-1}} to @file{/tmp/emacs}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:5404
#, no-wrap
msgid ""
"$ wget -O - \\\n"
"  https://@value{SUBSTITUTE-SERVER-1}/nar/gzip/@dots{}-emacs-24.5 \\\n"
"  | gunzip | guix archive -x /tmp/emacs\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:5411
msgid "Single-item archives are different from multiple-item archives produced by @command{guix archive --export}; they contain a single store item, and they do @emph{not} embed a signature.  Thus this operation does @emph{no} signature verification and its output should be considered unsafe."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:5415
msgid "The primary purpose of this operation is to facilitate inspection of archive contents coming from possibly untrusted substitute servers (@pxref{Invoking guix challenge})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:5416
#, no-wrap
msgid "--list"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:5417 guix-git/doc/guix.texi:14814
#: guix-git/doc/guix.texi:14861
#, no-wrap
msgid "-t"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:5421
msgid "Read a single-item archive as served by substitute servers (@pxref{Substitutes}) and print the list of files it contains, as in this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:5426
#, no-wrap
msgid ""
"$ wget -O - \\\n"
"  https://@value{SUBSTITUTE-SERVER-1}/nar/lzip/@dots{}-emacs-26.3 \\\n"
"  | lzip -d | guix archive -t\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5437
#, no-wrap
msgid "@command{guix pull}, configuration file"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5438
#, no-wrap
msgid "configuration of @command{guix pull}"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5449
msgid "Guix and its package collection are updated by running @command{guix pull}.  By default @command{guix pull} downloads and deploys Guix itself from the official GNU@tie{}Guix repository.  This can be customized by providing a file specifying the set of @dfn{channels} to pull from (@pxref{Invoking guix pull}).  A channel specifies the URL and branch of a Git repository to be deployed, and @command{guix pull} can be instructed to pull from one or more channels.  In other words, channels can be used to @emph{customize} and to @emph{extend} Guix, as we will see below.  Guix is able to take into account security concerns and deal with authenticated updates."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5468
#, no-wrap
msgid "extending the package collection (channels)"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5469
#, no-wrap
msgid "variant packages (channels)"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5473
msgid "You can specify @emph{additional channels} to pull from.  To use a channel, write @code{~/.config/guix/channels.scm} to instruct @command{guix pull} to pull from it @emph{in addition} to the default Guix channel(s):"
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:5474
#, no-wrap
msgid "%default-channels"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:5481
#, no-wrap
msgid ""
";; Add variant packages to those Guix provides.\n"
"(cons (channel\n"
"        (name 'variant-packages)\n"
"        (url \"https://example.org/variant-packages.git\"))\n"
"      %default-channels)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5491
msgid "Note that the snippet above is (as always!)@: Scheme code; we use @code{cons} to add a channel the list of channels that the variable @code{%default-channels} is bound to (@pxref{Pairs, @code{cons} and lists,, guile, GNU Guile Reference Manual}).  With this file in place, @command{guix pull} builds not only Guix but also the package modules from your own repository.  The result in @file{~/.config/guix/current} is the union of Guix with your own package modules:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:5503
#, no-wrap
msgid ""
"$ guix describe\n"
"Generation 19\tAug 27 2018 16:20:48\n"
"  guix d894ab8\n"
"    repository URL: https://git.guix.gnu.org/guix.git\n"
"    branch: master\n"
"    commit: d894ab8e9bfabcefa6c49d9ba2e834dd5a73a300\n"
"  variant-packages dd3df5e\n"
"    repository URL: https://example.org/variant-packages.git\n"
"    branch: master\n"
"    commit: dd3df5e2c8818760a8fc0bd699e55d3b69fef2bb\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5510
msgid "The output of @command{guix describe} above shows that we're now running Generation@tie{}19 and that it includes both Guix and packages from the @code{variant-packages} channel (@pxref{Invoking guix describe})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5519
msgid "The channel called @code{guix} specifies where Guix itself---its command-line tools as well as its package collection---should be downloaded.  For instance, suppose you want to update from another copy of the Guix repository at @code{example.org}, and specifically the @code{super-hacks} branch, you can write in @code{~/.config/guix/channels.scm} this specification:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:5526
#, no-wrap
msgid ""
";; Tell 'guix pull' to use another repo.\n"
"(list (channel\n"
"        (name 'guix)\n"
"        (url \"https://example.org/another-guix.git\")\n"
"        (branch \"super-hacks\")))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5532
msgid "From there on, @command{guix pull} will fetch code from the @code{super-hacks} branch of the repository at @code{example.org}.  The authentication concern is addressed below (@pxref{Channel Authentication})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5542
msgid "Note that you can specify a local directory on the @code{url} field above if the channel that you intend to use resides on a local file system.  However, in this case @command{guix} checks said directory for ownership before any further processing.  This means that if the user is not the directory owner, but wants to use it as their default, they will then need to set it as a safe directory in their global git configuration file.  Otherwise, @command{guix} will refuse to even read it.  Supposing your system-wide local directory is at @code{/src/guix.git}, you would then create a git configuration file at @code{~/.gitconfig} with the following contents:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:5546
#, no-wrap
msgid ""
"[safe]\n"
"        directory = /src/guix.git\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5551
msgid "This also applies to the root user unless when called with @command{sudo} by the directory owner."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5563
msgid "The @command{guix describe} command shows precisely which commits were used to build the instance of Guix we're using (@pxref{Invoking guix describe}).  We can replicate this instance on another machine or at a different point in time by providing a channel specification ``pinned'' to these commits that looks like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:5574
#, no-wrap
msgid ""
";; Deploy specific commits of my channels of interest.\n"
"(list (channel\n"
"       (name 'guix)\n"
"       (url \"https://git.guix.gnu.org/guix.git\")\n"
"       (commit \"6298c3ffd9654d3231a6f25390b056483e8f407c\"))\n"
"      (channel\n"
"       (name 'variant-packages)\n"
"       (url \"https://example.org/variant-packages.git\")\n"
"       (commit \"dd3df5e2c8818760a8fc0bd699e55d3b69fef2bb\")))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5579
msgid "To obtain this pinned channel specification, the easiest way is to run @command{guix describe} and to save its output in the @code{channels} format in a file, like so:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:5582
#, no-wrap
msgid "guix describe -f channels > channels.scm\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5588
msgid "The resulting @file{channels.scm} file can be passed to the @option{-C} option of @command{guix pull} (@pxref{Invoking guix pull}) or @command{guix time-machine} (@pxref{Invoking guix time-machine}), as in this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:5591
#, no-wrap
msgid "guix time-machine -C channels.scm -- shell python -- python3\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5597
msgid "Given the @file{channels.scm} file, the command above will always fetch the @emph{exact same Guix instance}, then use that instance to run the exact same Python (@pxref{Invoking guix shell}).  On any machine, at any time, it ends up running the exact same binaries, bit for bit."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5598
#, no-wrap
msgid "lock files"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5606
msgid "Pinned channels address a problem similar to ``lock files'' as implemented by some deployment tools---they let you pin and reproduce a set of packages.  In the case of Guix though, you are effectively pinning the entire package set as defined at the given channel commits; in fact, you are pinning all of Guix, including its core modules and command-line tools.  You're also getting strong guarantees that you are, indeed, obtaining the exact same software."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5611
msgid "This gives you super powers, allowing you to track the provenance of binary artifacts with very fine grain, and to reproduce software environments at will---some sort of ``meta reproducibility'' capabilities, if you will.  @xref{Inferiors}, for another way to take advantage of these super powers."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5615
#, no-wrap
msgid "system-wide Guix, customization"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5616
#, no-wrap
msgid "channels, for the default Guix"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5622
msgid "If you're running Guix System or building system images with it, maybe you will want to customize the system-wide @command{guix} it provides---specifically, @file{/run/current-system/profile/bin/guix}.  For example, you might want to provide additional channels or to pin its revision."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5626
msgid "This can be done using the @code{guix-for-channels} procedure, which returns a package for the given channels, and using it as part of your operating system configuration, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:5630
#, no-wrap
msgid ""
"(use-modules (gnu packages package-management)\n"
"             (guix channels))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:5640
#, no-wrap
msgid ""
"(define my-channels\n"
"  ;; Channels that should be available to\n"
"  ;; /run/current-system/profile/bin/guix.\n"
"  (append\n"
"   (list (channel\n"
"          (name 'guix-science)\n"
"          (url \"https://codeberg.org/guix-science/guix-science\")\n"
"          (branch \"master\")))\n"
"   %default-channels))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:5651
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services\n"
"    ;; Change the package used by 'guix-service-type'.\n"
"    (modify-services %base-services\n"
"      (guix-service-type\n"
"       config => (guix-configuration\n"
"                  (inherit config)\n"
"                  (channels my-channels)\n"
"                  (guix (guix-for-channels my-channels)))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5659
msgid "The resulting operating system will have both the @code{guix} and the @code{guix-science} channels visible by default.  The @code{channels} field of @code{guix-configuration} above further ensures that @file{/etc/guix/channels.scm}, which is used by @command{guix pull}, specifies the same set of channels (@pxref{guix-configuration-channels, @code{channels} field of @code{guix-configuration}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5662
msgid "The @code{(gnu packages package-management)} module exports the @code{guix-for-channels} procedure, described below."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:5663
#, no-wrap
msgid "{Procedure} guix-for-channels @var{channels}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:5665
msgid "Return a package corresponding to @var{channels}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:5669
msgid "The result is a ``regular'' package, which can be used in @code{guix-configuration} as shown above or in any other place that expects a package."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:5675
msgid "channel-authentication"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5681
msgid "The @command{guix pull} and @command{guix time-machine} commands @dfn{authenticate} the code retrieved from channels: they make sure each commit that is fetched is signed by an authorized developer.  The goal is to protect from unauthorized modifications to the channel that would lead users to run malicious code."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5686
msgid "As a user, you must provide a @dfn{channel introduction} in your channels file so that Guix knows how to authenticate its first commit.  A channel specification, including its introduction, looks something along these lines:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:5696
#, no-wrap
msgid ""
"(channel\n"
"  (name 'some-channel)\n"
"  (url \"https://example.org/some-channel.git\")\n"
"  (introduction\n"
"   (make-channel-introduction\n"
"    \"6f0d8cc0d88abb59c324b2990bfee2876016bb86\"\n"
"    (openpgp-fingerprint\n"
"     \"CABB A931 C0FF EEC6 900D  0CFB 090B 1199 3D9A EBB5\"))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5702
msgid "The specification above shows the name and URL of the channel.  The call to @code{make-channel-introduction} above specifies that authentication of this channel starts at commit @code{6f0d8cc@dots{}}, which is signed by the OpenPGP key with fingerprint @code{CABB A931@dots{}}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5708
msgid "For the main channel, called @code{guix}, you automatically get that information from your Guix installation.  For other channels, include the channel introduction provided by the channel authors in your @file{channels.scm} file.  Make sure you retrieve the channel introduction from a trusted source since that is the root of your trust."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5710
msgid "If you're curious about the authentication mechanics, read on!"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5721
msgid "When running @command{guix pull}, Guix will first compile the definitions of every available package.  This is an expensive operation for which substitutes (@pxref{Substitutes}) may be available.  The following snippet in @file{channels.scm} will ensure that @command{guix pull} uses the latest commit with available substitutes for the package definitions: this is done by querying the continuous integration server at @url{https://ci.guix.gnu.org}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:5724
#, no-wrap
msgid ""
"(use-modules (guix ci))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:5728
#, no-wrap
msgid ""
"(list (channel-with-substitutes-available\n"
"       %default-guix-channel\n"
"       \"https://ci.guix.gnu.org\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5735
msgid "Note that this does not mean that all the packages that you will install after running @command{guix pull} will have available substitutes.  It only ensures that @command{guix pull} will not try to compile package definitions.  This is particularly useful when using machines with limited resources."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5739
#, no-wrap
msgid "personal packages (channels)"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5740
#, no-wrap
msgid "channels, for personal packages"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5746
msgid "Let's say you have a bunch of custom package variants or personal packages that you think would make little sense to contribute to the Guix project, but would like to have these packages transparently available to you at the command line.  By creating a @dfn{channel}, you can use and publish such a package collection.  This involves the following steps:"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:5751
msgid "A channel lives in a Git repository so the first step, when creating a channel, is to create its repository:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:5756
#, no-wrap
msgid ""
"mkdir my-channel\n"
"cd my-channel\n"
"git init\n"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:5764
msgid "The next step is to create files containing package modules (@pxref{Package Modules}), each of which will contain one or more package definitions (@pxref{Defining Packages}).  A channel can provide things other than packages, such as build systems or services; we're using packages as it's the most common use case."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:5769
msgid "For example, Alice might want to provide a module called @code{(alice packages greetings)} that will provide her favorite ``hello world'' implementations.  To do that Alice will create a directory corresponding to that module name."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:5774
#, no-wrap
msgid ""
"mkdir -p alice/packages\n"
"$EDITOR alice/packages/greetings.scm\n"
"git add alice/packages/greetings.scm\n"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:5780
msgid "You can name your package modules however you like; the main constraint to keep in mind is to avoid name clashes with other package collections, which is why our hypothetical Alice wisely chose the @code{(alice packages @dots{})} name space."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:5784
msgid "Note that you can also place modules in a sub-directory of the repository; @pxref{Package Modules in a Sub-directory}, for more info on that."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:5791
msgid "With this first module in place, the next step is to test the packages it provides.  This can be done with @command{guix build}, which needs to be told to look for modules in the Git checkout.  For example, assuming @code{(alice packages greetings)} provides a package called @code{hi-from-alice}, Alice will run this command from the Git checkout:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:5794
#, no-wrap
msgid "guix build -L. hi-from-alice\n"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:5799
msgid "... where @code{-L.} adds the current directory to Guile's load path (@pxref{Load Paths,,, guile, GNU Guile Reference Manual})."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:5803
msgid "It might take Alice a few iterations to obtain satisfying package definitions.  Eventually Alice will commit this file:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:5806
#, no-wrap
msgid "git commit\n"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:5812
msgid "As a channel author, consider bundling authentication material with your channel so that users can authenticate it.  @xref{Channel Authentication}, and @ref{Specifying Channel Authorizations}, for info on how to do it."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:5817
msgid "To use Alice's channel, anyone can now add it to their channel file (@pxref{Specifying Additional Channels}) and run @command{guix pull} (@pxref{Invoking guix pull}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:5821
#, no-wrap
msgid ""
"$EDITOR ~/.config/guix/channels.scm\n"
"guix pull\n"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:5827
msgid "Guix will now behave as if the root directory of that channel's Git repository had been permanently added to the Guile load path.  In this example, @code{(alice packages greetings)} will automatically be found by the @command{guix} command."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5830
msgid "Voilà!"
msgstr "Ecco fatto!"

#. type: quotation
#: guix-git/doc/guix.texi:5837
msgid "Before you publish your channel, we would like to share a few words of caution:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:5845
msgid "Before publishing a channel, please consider contributing your package definitions to Guix proper (@pxref{Contributing}).  Guix as a project is open to free software of all sorts, and packages in Guix proper are readily available to all Guix users and benefit from the project's quality assurance process."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:5852
msgid "Package modules and package definitions are Scheme code that uses various programming interfaces (APIs).  We, Guix developers, never change APIs gratuitously, but we do @emph{not} commit to freezing APIs either.  When you maintain package definitions outside Guix, we consider that @emph{the compatibility burden is on you}."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:5856
msgid "Corollary: if you're using an external channel and that channel breaks, please @emph{report the issue to the channel authors}, not to the Guix project."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:5863
msgid "You've been warned! Having said this, we believe external channels are a practical way to exert your freedom to augment Guix' package collection and to share your improvements, which are basic tenets of @uref{https://www.gnu.org/philosophy/free-sw.html, free software}.  Please email us at @email{guix-devel@@gnu.org} if you'd like to discuss this."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5870
#, no-wrap
msgid "subdirectory, channels"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5874
msgid "As a channel author, you may want to keep your channel modules in a sub-directory.  If your modules are in the sub-directory @file{guix}, you must add a meta-data file @file{.guix-channel} that contains:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:5879
#, no-wrap
msgid ""
"(channel\n"
"  (version 0)\n"
"  (directory \"guix\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5886
msgid "The modules must be @b{underneath} the specified directory, as the @code{directory} changes Guile's @code{load-path}.  For example, if @file{.guix-channel} has @code{(directory \"base\")}, then a module defined as @code{(define-module (gnu packages fun))} must be located at @code{base/gnu/packages/fun.scm}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5892
msgid "Doing this allows for only parts of a repository to be used as a channel, as Guix expects valid Guile modules when pulling.  For instance, @command{guix deploy} machine configuration files are not valid Guile modules, and treating them as such would make @command{guix pull} fail."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5896
#, no-wrap
msgid "dependencies, channels"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5897
#, no-wrap
msgid "meta-data, channels"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5902
msgid "Channel authors may decide to augment a package collection provided by other channels.  They can declare their channel to be dependent on other channels in a meta-data file @file{.guix-channel}, which is to be placed in the root of the channel repository."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5904
msgid "The meta-data file should contain a simple S-expression like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:5912
#, no-wrap
msgid ""
"(channel\n"
" (version 0)\n"
" (dependencies\n"
"  (channel\n"
"   (name some-collection)\n"
"   (url \"https://example.org/first-collection.git\")\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:5924
#, no-wrap
msgid ""
"   ;; The 'introduction' bit below is optional: you would\n"
"   ;; provide it for dependencies that can be authenticated.\n"
"   (introduction\n"
"    (channel-introduction\n"
"      (version 0)\n"
"      (commit \"a8883b58dc82e167c96506cf05095f37c2c2c6cd\")\n"
"      (signer \"CABB A931 C0FF EEC6 900D  0CFB 090B 1199 3D9A EBB5\"))))\n"
"  (channel\n"
"   (name some-other-collection)\n"
"   (url \"https://example.org/second-collection.git\")\n"
"   (branch \"testing\"))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5930
msgid "In the above example this channel is declared to depend on two other channels, which will both be fetched automatically.  The modules provided by the channel will be compiled in an environment where the modules of all these declared channels are available."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5934
msgid "For the sake of reliability and maintainability, you should avoid dependencies on channels that you don't control, and you should aim to keep the number of dependencies to a minimum."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5938
#, no-wrap
msgid "channel authorizations"
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:5952
msgid "channel-authorizations"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5952
msgid "As we saw above, Guix ensures the source code it pulls from channels comes from authorized developers.  As a channel author, you need to specify the list of authorized developers in the @file{.guix-authorizations} file in the channel's Git repository.  The authentication rule is simple: each commit must be signed by a key listed in the @file{.guix-authorizations} file of its parent commit(s)@footnote{Git commits form a @dfn{directed acyclic graph} (DAG).  Each commit can have zero or more parents; ``regular'' commits have one parent and merge commits have two parent commits.  Read @uref{https://eagain.net/articles/git-for-computer-scientists/, @i{Git for Computer Scientists}} for a great overview.} The @file{.guix-authorizations} file looks like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:5955
#, no-wrap
msgid ""
";; Example '.guix-authorizations' file.\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:5958
#, no-wrap
msgid ""
"(authorizations\n"
" (version 0)               ;current file format version\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:5965
#, no-wrap
msgid ""
" ((\"AD17 A21E F8AE D8F1 CC02  DBD9 F8AE D8F1 765C 61E3\"\n"
"   (name \"alice\"))\n"
"  (\"2A39 3FFF 68F4 EF7A 3D29  12AF 68F4 EF7A 22FB B2D5\"\n"
"   (name \"bob\"))\n"
"  (\"CABB A931 C0FF EEC6 900D  0CFB 090B 1199 3D9A EBB5\"\n"
"   (name \"charlie\"))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5969
msgid "Each fingerprint is followed by optional key/value pairs, as in the example above.  Currently these key/value pairs are ignored."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5974
msgid "This authentication rule creates a chicken-and-egg issue: how do we authenticate the first commit? Related to that: how do we deal with channels whose repository history contains unsigned commits and lack @file{.guix-authorizations}? And how do we fork existing channels?"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:5975
#, no-wrap
msgid "channel introduction"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5984
msgid "Channel introductions answer these questions by describing the first commit of a channel that should be authenticated.  The first time a channel is fetched with @command{guix pull} or @command{guix time-machine}, the command looks up the introductory commit and verifies that it is signed by the specified OpenPGP key.  From then on, it authenticates commits according to the rule above.  Authentication fails if the target commit is neither a descendant nor an ancestor of the introductory commit."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5991
msgid "Additionally, your channel must provide all the OpenPGP keys that were ever mentioned in @file{.guix-authorizations}, stored as @file{.key} files, which can be either binary or ``ASCII-armored''.  By default, those @file{.key} files are searched for in the branch named @code{keyring} but you can specify a different branch name in @code{.guix-channel} like so:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:5996
#, no-wrap
msgid ""
"(channel\n"
"  (version 0)\n"
"  (keyring-reference \"my-keyring-branch\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6000
msgid "To summarize, as the author of a channel, there are three things you have to do to allow users to authenticate your code:"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:6006
msgid "Export the OpenPGP keys of past and present committers with @command{gpg --export} and store them in @file{.key} files, by default in a branch named @code{keyring} (we recommend making it an @dfn{orphan branch})."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:6011
msgid "Introduce an initial @file{.guix-authorizations} in the channel's repository.  Do that in a signed commit (@pxref{Commit Access}, for information on how to sign Git commits)."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:6017
msgid "Advertise the channel introduction, for instance on your channel's web page.  The channel introduction, as we saw above, is the commit/key pair---i.e., the commit that introduced @file{.guix-authorizations}, and the fingerprint of the OpenPGP used to sign it."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6022
msgid "Before pushing to your public Git repository, you can run @command{guix git authenticate} to verify that you did sign all the commits you are about to push with an authorized key:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6025
#, no-wrap
msgid "guix git authenticate @var{commit} @var{signer}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6030
msgid "where @var{commit} and @var{signer} are your channel introduction.  @xref{Invoking guix git authenticate}, for details."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6037
msgid "Publishing a signed channel requires discipline: any mistake, such as an unsigned commit or a commit signed by an unauthorized key, will prevent users from pulling from your channel---well, that's the whole point of authentication! Pay attention to merges in particular: merge commits are considered authentic if and only if they are signed by a key present in the @file{.guix-authorizations} file of @emph{both} branches."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:6041
#, no-wrap
msgid "primary URL, channels"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6044
msgid "Channel authors can indicate the primary URL of their channel's Git repository in the @file{.guix-channel} file, like so:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:6049
#, no-wrap
msgid ""
"(channel\n"
"  (version 0)\n"
"  (url \"https://example.org/guix.git\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6056
msgid "This allows @command{guix pull} to determine whether it is pulling code from a mirror of the channel; when that is the case, it warns the user that the mirror might be stale and displays the primary URL@.  That way, users cannot be tricked into fetching code from a stale mirror that does not receive security updates."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6060
msgid "This feature only makes sense for authenticated repositories, such as the official @code{guix} channel, for which @command{guix pull} ensures the code it fetches is authentic."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:6064
#, no-wrap
msgid "news, for channels"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6068
msgid "Channel authors may occasionally want to communicate to their users information about important changes in the channel.  You'd send them all an email, but that's not convenient."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6073
msgid "Instead, channels can provide a @dfn{news file}; when the channel users run @command{guix pull}, that news file is automatically read and @command{guix pull --news} can display the announcements that correspond to the new commits that have been pulled, if any."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6076
msgid "To do that, channel authors must first declare the name of the news file in their @file{.guix-channel} file:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:6081
#, no-wrap
msgid ""
"(channel\n"
"  (version 0)\n"
"  (news-file \"etc/news.txt\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6085
msgid "The news file itself, @file{etc/news.txt} in this example, must look something like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:6098
#, no-wrap
msgid ""
"(channel-news\n"
"  (version 0)\n"
"  (entry (tag \"the-bug-fix\")\n"
"         (title (en \"Fixed terrible bug\")\n"
"                (fr \"Oh la la\"))\n"
"         (body (en \"@@emph@{Good news@}!  It's fixed!\")\n"
"               (eo \"Certe ĝi pli bone funkcias nun!\")))\n"
"  (entry (commit \"bdcabe815cd28144a2d2b4bc3c5057b051fa9906\")\n"
"         (title (en \"Added a great package\")\n"
"                (ca \"Què vol dir guix?\"))\n"
"         (body (en \"Don't miss the @@code@{hello@} package!\"))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6105
msgid "While the news file is using the Scheme syntax, avoid naming it with a @file{.scm} extension or else it will get picked up when building the channel and yield an error since it is not a valid module.  Alternatively, you can move the channel module to a subdirectory and store the news file in another directory."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6110
msgid "The file consists of a list of @dfn{news entries}.  Each entry is associated with a commit or tag: it describes changes made in this commit, possibly in preceding commits as well.  Users see entries only the first time they obtain the commit the entry refers to."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6116
msgid "The @code{title} field should be a one-line summary while @code{body} can be arbitrarily long, and both can contain Texinfo markup (@pxref{Overview,,, texinfo, GNU Texinfo}).  Both the title and body are a list of language tag/message tuples, which allows @command{guix pull} to display news in the language that corresponds to the user's locale."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6122
msgid "If you want to translate news using a gettext-based workflow, you can extract translatable strings with @command{xgettext} (@pxref{xgettext Invocation,,, gettext, GNU Gettext Utilities}).  For example, assuming you write news entries in English first, the command below creates a PO file containing the strings to translate:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6125
#, no-wrap
msgid "xgettext -o news.po -l scheme -ken etc/news.txt\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6129
msgid "To sum up, yes, you could use your channel as a blog.  But beware, this is @emph{not quite} what your users might expect."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:6134
#, no-wrap
msgid "software development"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6138
msgid "If you are a software developer, Guix provides tools that you should find helpful---independently of the language you're developing in.  This is what this chapter is about."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6144
msgid "The @command{guix shell} command provides a convenient way to set up one-off software environments, be it for development purposes or to run a command without installing it in your profile.  The @command{guix pack} command allows you to create @dfn{application bundles} that can be easily distributed to users who do not run Guix."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:6154
#, no-wrap
msgid "Invoking @command{guix shell}"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:6156
#, no-wrap
msgid "reproducible build environments"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:6157
#, no-wrap
msgid "development environments"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:6158 guix-git/doc/guix.texi:6706
#, no-wrap
msgid "guix environment"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:6159
#, no-wrap
msgid "guix shell"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:6160
#, no-wrap
msgid "environment, package build environment"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6165
msgid "The purpose of @command{guix shell} is to make it easy to create one-off software environments, without changing one's profile.  It is typically used to create development environments; it is also a convenient way to run applications without ``polluting'' your profile."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:6171
msgid "The @command{guix shell} command was recently introduced to supersede @command{guix environment} (@pxref{Invoking guix environment}).  If you are familiar with @command{guix environment}, you will notice that it is similar but also---we hope!---more convenient."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6177
#, no-wrap
msgid "guix shell [@var{options}] [@var{package}@dots{}]\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6182
msgid "Sometimes an interactive shell session is not desired.  An arbitrary command may be invoked by placing the @code{--} token to separate the command from the rest of the arguments."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6186
msgid "The following example creates an environment containing Python and NumPy, building or downloading any missing package, and runs the @command{python3} command in that environment:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6189
#, no-wrap
msgid "guix shell python python-numpy -- python3\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6198
msgid "Note that it is necessary to include the main @code{python} package in this command even if it is already installed into your environment.  This is so that the shell environment knows to set @env{PYTHONPATH} and other related variables.  The shell environment cannot check the previously installed environment, because then it would be non-deterministic.  This is true for most libraries: their corresponding language package should be included in the shell invocation."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:6200
#, no-wrap
msgid "shebang, for @command{guix shell}"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:6204
msgid "@command{guix shell} can be also be used as a script interpreter, also known as @dfn{shebang}.  Here is an example self-contained Python script making use of this feature:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6209
#, no-wrap
msgid ""
"#!/usr/bin/env -S guix shell python python-numpy -- python3\n"
"import numpy\n"
"print(\"This is numpy\", numpy.version.version)\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:6213
msgid "You may pass any @command{guix shell} option, but there's one caveat: the Linux kernel has a limit of 127 bytes on shebang length."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6218
msgid "Development environments can be created as in the example below, which spawns an interactive shell containing all the dependencies and environment variables needed to work on Inkscape:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6221
#, no-wrap
msgid "guix shell --development inkscape\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6227
msgid "Exiting the shell places the user back in the original environment before @command{guix shell} was invoked.  The next garbage collection (@pxref{Invoking guix gc}) may clean up packages that were installed in the environment and that are no longer used outside of it."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6231
msgid "As an added convenience, @command{guix shell} will try to do what you mean when it is invoked interactively without any other arguments as in:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6234
#, no-wrap
msgid "guix shell\n"
msgstr "guix shell\n"

#. type: Plain text
#: guix-git/doc/guix.texi:6246
msgid "If it finds a @file{manifest.scm} in the current working directory or any of its parents, it uses this manifest as though it was given via @code{--manifest}.  Likewise, if it finds a @file{guix.scm} in the same directories, it uses it to build a development profile as though both @code{--development} and @code{--file} were present.  In either case, the file will only be loaded if the directory it resides in is listed in @file{~/.config/guix/shell-authorized-directories}.  This provides an easy way to define, share, and enter development environments."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6257
msgid "By default, the shell session or command runs in an @emph{augmented} environment, where the new packages are added to search path environment variables such as @code{PATH}.  You can, instead, choose to create an @emph{isolated} environment containing nothing but the packages you asked for.  Passing the @option{--pure} option clears environment variable definitions found in the parent environment@footnote{Be sure to use the @option{--check} option the first time you use @command{guix shell} interactively to make sure the shell does not undo the effect of @option{--pure}.}; passing @option{--container} goes one step further by spawning a @dfn{container} isolated from the rest of the system:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6260
#, no-wrap
msgid "guix shell --container emacs gcc-toolchain\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6268
msgid "The command above spawns an interactive shell in a container where nothing but @code{emacs}, @code{gcc-toolchain}, and their dependencies is available.  The container lacks network access and shares no files other than the current working directory with the surrounding environment.  This is useful to prevent access to system-wide resources such as @file{/usr/bin} on foreign distros."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6273
msgid "This @option{--container} option can also prove useful if you wish to run a security-sensitive application, such as a web browser, in an isolated environment.  For example, the command below launches Ungoogled-Chromium in an isolated environment, which:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6274
#, no-wrap
msgid "shares network access with the host"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6275
#, no-wrap
msgid "inherits host's environment variables @code{DISPLAY} and @code{XAUTHORITY}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6276
#, no-wrap
msgid "has access to host's authentication records from the @code{XAUTHORITY}"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:6278 guix-git/doc/guix.texi:11633
#: guix-git/doc/guix.texi:34482
#, no-wrap
msgid "file"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6278
#, no-wrap
msgid "has no information about host's current directory"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6285
#, no-wrap
msgid ""
"guix shell --container --network --no-cwd ungoogled-chromium \\\n"
"  --preserve='^XAUTHORITY$' --expose=\"$@{XAUTHORITY@}\" \\\n"
"  --preserve='^DISPLAY$' -- chromium\n"
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:6287 guix-git/doc/guix.texi:6757
#, no-wrap
msgid "GUIX_ENVIRONMENT"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6293
msgid "@command{guix shell} defines the @env{GUIX_ENVIRONMENT} variable in the shell it spawns; its value is the file name of the profile of this environment.  This allows users to, say, define a specific prompt for development environments in their @file{.bashrc} (@pxref{Bash Startup Files,,, bash, The GNU Bash Reference Manual}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6299 guix-git/doc/guix.texi:6769
#, no-wrap
msgid ""
"if [ -n \"$GUIX_ENVIRONMENT\" ]\n"
"then\n"
"    export PS1=\"\\u@@\\h \\w [dev]\\$ \"\n"
"fi\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6303 guix-git/doc/guix.texi:6773
msgid "...@: or to browse the profile:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6306 guix-git/doc/guix.texi:6776
#, no-wrap
msgid "$ ls \"$GUIX_ENVIRONMENT/bin\"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6309 guix-git/doc/guix.texi:6852
msgid "The available options are summarized below."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6311 guix-git/doc/guix.texi:6854
#: guix-git/doc/guix.texi:14124
#, no-wrap
msgid "--check"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6316
msgid "Set up the environment and check whether the shell would clobber environment variables.  It's a good idea to use this option the first time you run @command{guix shell} for an interactive session to make sure your setup is correct."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6320
msgid "For example, if the shell modifies the @env{PATH} environment variable, report it since you would get a different environment than what you asked for."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6328
msgid "Such problems usually indicate that the shell startup files are unexpectedly modifying those environment variables.  For example, if you are using Bash, make sure that environment variables are set or modified in @file{~/.bash_profile} and @emph{not} in @file{~/.bashrc}---the former is sourced only by log-in shells.  @xref{Bash Startup Files,,, bash, The GNU Bash Reference Manual}, for details on Bash start-up files."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:6330
#, fuzzy
#| msgid "Development"
msgid "shell-development-option"
msgstr "Sviluppo"

#. type: item
#: guix-git/doc/guix.texi:6330 guix-git/doc/guix.texi:13957
#, fuzzy, no-wrap
#| msgid "Development"
msgid "--development"
msgstr "Sviluppo"

#. type: table
#: guix-git/doc/guix.texi:6337
msgid "Cause @command{guix shell} to include in the environment the dependencies of the following package rather than the package itself.  This can be combined with other packages.  For instance, the command below starts an interactive shell containing the build-time dependencies of GNU@tie{}Guile, plus Autoconf, Automake, and Libtool:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6340
#, no-wrap
msgid "guix shell -D guile autoconf automake libtool\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6342 guix-git/doc/guix.texi:6875
#: guix-git/doc/guix.texi:7518 guix-git/doc/guix.texi:13941
#: guix-git/doc/guix.texi:15311 guix-git/doc/guix.texi:15818
#: guix-git/doc/guix.texi:16055 guix-git/doc/guix.texi:16465
#: guix-git/doc/guix.texi:17184 guix-git/doc/guix.texi:47489
#: guix-git/doc/guix.texi:53447
#, no-wrap
msgid "--expression=@var{expr}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:6343 guix-git/doc/guix.texi:6876
#: guix-git/doc/guix.texi:7519 guix-git/doc/guix.texi:13942
#: guix-git/doc/guix.texi:15312 guix-git/doc/guix.texi:15819
#: guix-git/doc/guix.texi:16056 guix-git/doc/guix.texi:16466
#: guix-git/doc/guix.texi:17185 guix-git/doc/guix.texi:47490
#: guix-git/doc/guix.texi:53448
#, no-wrap
msgid "-e @var{expr}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6346 guix-git/doc/guix.texi:6879
msgid "Create an environment for the package or list of packages that @var{expr} evaluates to."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6348 guix-git/doc/guix.texi:6881
#: guix-git/doc/guix.texi:15823
msgid "For example, running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6351
#, no-wrap
msgid "guix shell -D -e '(@@ (gnu packages maths) petsc-openmpi)'\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6355 guix-git/doc/guix.texi:6888
msgid "starts a shell with the environment for this specific variant of the PETSc package."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6357 guix-git/doc/guix.texi:6890
msgid "Running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6360
#, no-wrap
msgid "guix shell -e '(@@ (gnu) %base-packages)'\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6363 guix-git/doc/guix.texi:6896
msgid "starts a shell with all the base system packages available."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6366 guix-git/doc/guix.texi:6899
msgid "The above commands only use the default output of the given packages.  To select other outputs, two element tuples can be specified:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6369
#, no-wrap
msgid "guix shell -e '(list (@@ (gnu packages bash) bash) \"include\")'\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6374
msgid "@xref{package-development-manifest, @code{package->development-manifest}}, for information on how to write a manifest for the development environment of a package."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6375 guix-git/doc/guix.texi:7526
#: guix-git/doc/guix.texi:13915
#, no-wrap
msgid "--file=@var{file}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6379
msgid "Create an environment containing the package or list of packages that the code within @var{file} evaluates to."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:6385 guix-git/doc/guix.texi:6914
#, no-wrap
msgid "@verbatiminclude environment-gdb.scm\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6389
msgid "With the file above, you can enter a development environment for GDB by running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6392
#, no-wrap
msgid "guix shell -D -f gdb-devel.scm\n"
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:6395
msgid "shell-manifest"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6400 guix-git/doc/guix.texi:6921
msgid "Create an environment for the packages contained in the manifest object returned by the Scheme code in @var{file}.  This option can be repeated several times, in which case the manifests are concatenated."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6404 guix-git/doc/guix.texi:6925
msgid "This is similar to the same-named option in @command{guix package} (@pxref{profile-manifest, @option{--manifest}}) and uses the same manifest files."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6407
msgid "@xref{Writing Manifests}, for information on how to write a manifest.  See @option{--export-manifest} below on how to obtain a first manifest."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:6410
msgid "shell-export-manifest"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6413
msgid "Write to standard output a manifest suitable for @option{--manifest} corresponding to given command-line options."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6417
msgid "This is a way to ``convert'' command-line arguments into a manifest.  For example, imagine you are tired of typing long lines and would like to get a manifest equivalent to this command line:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6420
#, no-wrap
msgid "guix shell -D guile git emacs emacs-geiser emacs-geiser-guile\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6423
msgid "Just add @option{--export-manifest} to the command line above:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6427
#, no-wrap
msgid ""
"guix shell --export-manifest \\\n"
"  -D guile git emacs emacs-geiser emacs-geiser-guile\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6431
msgid "... and you get a manifest along these lines:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:6441
#, no-wrap
msgid ""
"(concatenate-manifests\n"
"  (list (specifications->manifest\n"
"          (list \"git\"\n"
"                \"emacs\"\n"
"                \"emacs-geiser\"\n"
"                \"emacs-geiser-guile\"))\n"
"        (package->development-manifest\n"
"          (specification->package \"guile\"))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6446
msgid "You can store it into a file, say @file{manifest.scm}, and from there pass it to @command{guix shell} or indeed pretty much any @command{guix} command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6449 guix-git/doc/guix.texi:9028
#, no-wrap
msgid "guix shell -m manifest.scm\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6454
msgid "Voilà, you've converted a long command line into a manifest! That conversion process honors package transformation options (@pxref{Package Transformation Options}) so it should be lossless."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6460 guix-git/doc/guix.texi:6961
msgid "Create an environment containing the packages installed in @var{profile}.  Use @command{guix package} (@pxref{Invoking guix package}) to create and manage profiles."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6461 guix-git/doc/guix.texi:6962
#, no-wrap
msgid "--pure"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6465 guix-git/doc/guix.texi:6966
msgid "Unset existing environment variables when building the new environment, except those specified with @option{--preserve} (see below).  This has the effect of creating an environment in which search paths only contain package inputs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6466 guix-git/doc/guix.texi:6967
#, no-wrap
msgid "--preserve=@var{regexp}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:6467 guix-git/doc/guix.texi:6968
#, no-wrap
msgid "-E @var{regexp}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6472 guix-git/doc/guix.texi:6973
msgid "When used alongside @option{--pure}, preserve the environment variables matching @var{regexp}---in other words, put them on a ``white list'' of environment variables that must be preserved.  This option can be repeated several times."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6476
#, no-wrap
msgid ""
"guix shell --pure --preserve=^SLURM openmpi @dots{} \\\n"
"  -- mpirun @dots{}\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6482 guix-git/doc/guix.texi:6983
msgid "This example runs @command{mpirun} in a context where the only environment variables defined are @env{PATH}, environment variables whose name starts with @samp{SLURM}, as well as the usual ``precious'' variables (@env{HOME}, @env{USER}, etc.)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6483 guix-git/doc/guix.texi:6984
#, no-wrap
msgid "--search-paths"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6486 guix-git/doc/guix.texi:6987
msgid "Display the environment variable definitions that make up the environment."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6490 guix-git/doc/guix.texi:6991
msgid "Attempt to build for @var{system}---e.g., @code{i686-linux}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6491 guix-git/doc/guix.texi:6992
#, no-wrap
msgid "--container"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:6492 guix-git/doc/guix.texi:6993
#, no-wrap
msgid "-C"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6493 guix-git/doc/guix.texi:6818
#: guix-git/doc/guix.texi:6994 guix-git/doc/guix.texi:17033
#: guix-git/doc/guix.texi:47453 guix-git/doc/guix.texi:53186
#, no-wrap
msgid "container"
msgstr "container"

#. type: table
#: guix-git/doc/guix.texi:6499 guix-git/doc/guix.texi:7000
msgid "Run @var{command} within an isolated container.  The current working directory outside the container is mapped inside the container.  Additionally, unless overridden with @option{--user}, a dummy home directory is created that matches the current user's home directory, and @file{/etc/passwd} is configured accordingly."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6503 guix-git/doc/guix.texi:7004
msgid "The spawned process runs as the current user outside the container.  Inside the container, it has the same UID and GID as the current user, unless @option{--user} is passed (see below)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6504 guix-git/doc/guix.texi:7005
#: guix-git/doc/guix.texi:47554 guix-git/doc/guix.texi:53204
#, no-wrap
msgid "--network"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6509 guix-git/doc/guix.texi:7010
msgid "For containers, share the network namespace with the host system.  Containers created without this flag only have access to the loopback device."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6510 guix-git/doc/guix.texi:7011
#, no-wrap
msgid "--link-profile"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:6511 guix-git/doc/guix.texi:7012
#, no-wrap
msgid "-P"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6519
msgid "For containers, link the environment profile to @file{~/.guix-profile} within the container and set @code{GUIX_ENVIRONMENT} to that.  This is equivalent to making @file{~/.guix-profile} a symlink to the actual profile within the container.  Linking will fail and abort the environment if the directory already exists, which will certainly be the case if @command{guix shell} was invoked in the user's home directory."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6525 guix-git/doc/guix.texi:7026
msgid "Certain packages are configured to look in @file{~/.guix-profile} for configuration files and data;@footnote{For example, the @code{fontconfig} package inspects @file{~/.guix-profile/share/fonts} for additional fonts.} @option{--link-profile} allows these programs to behave as expected within the environment."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6526 guix-git/doc/guix.texi:7027
#: guix-git/doc/guix.texi:16603
#, no-wrap
msgid "--user=@var{user}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:6527 guix-git/doc/guix.texi:7028
#: guix-git/doc/guix.texi:16604
#, no-wrap
msgid "-u @var{user}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6534 guix-git/doc/guix.texi:7035
msgid "For containers, use the username @var{user} in place of the current user.  The generated @file{/etc/passwd} entry within the container will contain the name @var{user}, the home directory will be @file{/home/@var{user}}, and no user GECOS data will be copied.  Furthermore, the UID and GID inside the container are 1000.  @var{user} need not exist on the system."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6539 guix-git/doc/guix.texi:7040
msgid "Additionally, any shared or exposed path (see @option{--share} and @option{--expose} respectively) whose target is within the current user's home directory will be remapped relative to @file{/home/USER}; this includes the automatic mapping of the current working directory."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6546
#, no-wrap
msgid ""
"# will expose paths as /home/foo/wd, /home/foo/test, and /home/foo/target\n"
"cd $HOME/wd\n"
"guix shell --container --user=foo \\\n"
"     --expose=$HOME/test \\\n"
"     --expose=/tmp/target=$HOME/target\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6551 guix-git/doc/guix.texi:7052
msgid "While this will limit the leaking of user identity through home paths and each of the user fields, this is only one useful component of a broader privacy/anonymity solution---not one in and of itself."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6552 guix-git/doc/guix.texi:7053
#, no-wrap
msgid "--no-cwd"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6559 guix-git/doc/guix.texi:7060
msgid "For containers, the default behavior is to share the current working directory with the isolated container and immediately change to that directory within the container.  If this is undesirable, @option{--no-cwd} will cause the current working directory to @emph{not} be automatically shared and will change to the user's home directory within the container instead.  See also @option{--user}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6560
#, no-wrap
msgid "--writable-root"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6563
msgid "When using @option{--container}, this option makes the root file system writable (it is read-only by default)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6564 guix-git/doc/guix.texi:7061
#: guix-git/doc/guix.texi:53208
#, no-wrap
msgid "--expose=@var{source}[=@var{target}]"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:6565 guix-git/doc/guix.texi:7062
#: guix-git/doc/guix.texi:53209
#, no-wrap
msgid "--share=@var{source}[=@var{target}]"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6571 guix-git/doc/guix.texi:7068
msgid "For containers, @option{--expose} (resp. @option{--share}) exposes the file system @var{source} from the host system as the read-only (resp. writable) file system @var{target} within the container.  If @var{target} is not specified, @var{source} is used as the target mount point in the container."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6575 guix-git/doc/guix.texi:7072
msgid "The example below spawns a Guile REPL in a container in which the user's home directory is accessible read-only via the @file{/exchange} directory:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6578
#, no-wrap
msgid "guix shell --container --expose=$HOME=/exchange guile -- guile\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:6580
#, no-wrap
msgid "symbolic links, guix shell"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6581 guix-git/doc/guix.texi:7573
#, no-wrap
msgid "--symlink=@var{spec}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:6582 guix-git/doc/guix.texi:7574
#, no-wrap
msgid "-S @var{spec}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6585
msgid "For containers, create the symbolic links specified by @var{spec}, as documented in @ref{pack-symlink-option}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:6586
#, no-wrap
msgid "file system hierarchy standard (FHS)"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:6587
#, no-wrap
msgid "FHS (file system hierarchy standard)"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6588 guix-git/doc/guix.texi:7077
#, fuzzy, no-wrap
#| msgid "templates"
msgid "--emulate-fhs"
msgstr "modelli"

#. type: item
#: guix-git/doc/guix.texi:6589 guix-git/doc/guix.texi:7078
#, no-wrap
msgid "-F"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6595
msgid "When used with @option{--container}, emulate a @uref{https://refspecs.linuxfoundation.org/fhs.shtml, Filesystem Hierarchy Standard (FHS)} configuration within the container, providing @file{/bin}, @file{/lib}, and other directories and files specified by the FHS."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6606
msgid "As Guix deviates from the FHS specification, this option sets up the container to more closely mimic that of other GNU/Linux distributions.  This is useful for reproducing other development environments, testing, and using programs which expect the FHS specification to be followed.  With this option, the container will include a version of glibc that will read @file{/etc/ld.so.cache} within the container for the shared library cache (contrary to glibc in regular Guix usage) and set up the expected FHS directories: @file{/bin}, @file{/etc}, @file{/lib}, and @file{/usr} from the container's profile."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:6607
#, no-wrap
msgid "nested containers, for @command{guix shell}"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:6608
#, no-wrap
msgid "container nesting, for @command{guix shell}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6609
#, no-wrap
msgid "--nesting"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:6610
#, no-wrap
msgid "-W"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6616
msgid "When used with @option{--container}, provide Guix @emph{inside} the container and arrange so that it can interact with the build daemon that runs outside the container.  This is useful if you want, within your isolated container, to create other containers, as in this sample session:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6622
#, no-wrap
msgid ""
"$ guix shell -CW coreutils\n"
"[env]$ guix shell -C guile -- guile -c '(display \"hello!\\n\")'\n"
"hello!\n"
"[env]$ exit\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6627
msgid "The session above starts a container with @code{coreutils} programs available in @env{PATH}.  From there, we spawn @command{guix shell} to create a @emph{nested} container that provides nothing but Guile."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6630
msgid "Another example is evaluating a @file{guix.scm} file that is untrusted, as shown here:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6633
#, no-wrap
msgid "guix shell -CW -- guix build -f guix.scm\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6637
msgid "The @command{guix build} command as executed above can only access the current directory."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6639
msgid "Under the hood, the @option{-W} option does several things:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:6644
msgid "map the daemon's socket (by default @file{/var/guix/daemon-socket/socket}) inside the container;"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:6648
msgid "map the whole store (by default @file{/gnu/store}) inside the container such that store items made available by nested @command{guix} invocations are visible;"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:6652
msgid "add the currently-used @command{guix} command to the profile in the container, such that @command{guix describe} returns the same state inside and outside the container;"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:6656
msgid "share the cache (by default @file{~/.cache/guix}) with the host, to speed up operations such as @command{guix time-machine} and @command{guix shell}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6658
#, no-wrap
msgid "--rebuild-cache"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:6659
#, no-wrap
msgid "caching, of profiles"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:6660
#, no-wrap
msgid "caching, in @command{guix shell}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6666
msgid "In most cases, @command{guix shell} caches the environment so that subsequent uses are instantaneous.  Least-recently used cache entries are periodically removed.  The cache is also invalidated, when using @option{--file} or @option{--manifest}, anytime the corresponding file is modified."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6672
msgid "The @option{--rebuild-cache} forces the cached environment to be refreshed.  This is useful when using @option{--file} or @option{--manifest} and the @command{guix.scm} or @command{manifest.scm} file has external dependencies, or if its behavior depends, say, on environment variables."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6673 guix-git/doc/guix.texi:6859
#: guix-git/doc/guix.texi:7602 guix-git/doc/guix.texi:14153
#: guix-git/doc/guix.texi:47559
#, no-wrap
msgid "--root=@var{file}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:6674 guix-git/doc/guix.texi:6860
#: guix-git/doc/guix.texi:7603 guix-git/doc/guix.texi:14154
#: guix-git/doc/guix.texi:47560
#, no-wrap
msgid "-r @var{file}"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:6675 guix-git/doc/guix.texi:6861
#, no-wrap
msgid "persistent environment"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:6676 guix-git/doc/guix.texi:6862
#, no-wrap
msgid "garbage collector root, for environments"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6679 guix-git/doc/guix.texi:6865
msgid "Make @var{file} a symlink to the profile for this environment, and register it as a garbage collector root."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6682 guix-git/doc/guix.texi:6868
msgid "This is useful if you want to protect your environment from garbage collection, to make it ``persistent''."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6688
msgid "When this option is omitted, @command{guix shell} caches profiles so that subsequent uses of the same environment are instantaneous---this is comparable to using @option{--root} except that @command{guix shell} takes care of periodically removing the least-recently used garbage collector roots."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6695
msgid "In some cases, @command{guix shell} does not cache profiles---e.g., if transformation options such as @option{--with-latest} are used.  In those cases, the environment is protected from garbage collection only for the duration of the @command{guix shell} session.  This means that next time you recreate the same environment, you could have to rebuild or re-download packages."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6697
msgid "@xref{Invoking guix gc}, for more on GC roots."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6702
msgid "@command{guix shell} also supports all of the common build options that @command{guix build} supports (@pxref{Common Build Options}) as well as package transformation options (@pxref{Package Transformation Options})."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:6704
#, no-wrap
msgid "Invoking @command{guix environment}"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6710
msgid "The purpose of @command{guix environment} is to assist in creating development environments."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:6711 guix-git/doc/guix.texi:9557
#, no-wrap
msgid "Deprecation warning"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:6715
msgid "The @command{guix environment} command is deprecated in favor of @command{guix shell}, which performs similar functions but is more convenient to use.  @xref{Invoking guix shell}."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:6720
msgid "Being deprecated, @command{guix environment} is slated for eventual removal, but the Guix project is committed to keeping it until May 1st, 2023.  Please get in touch with us at @email{guix-devel@@gnu.org} if you would like to discuss it."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6726
#, no-wrap
msgid "guix environment @var{options} @var{package}@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6730
msgid "The following example spawns a new shell set up for the development of GNU@tie{}Guile:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6733
#, no-wrap
msgid "guix environment guile\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6750
msgid "If the needed dependencies are not built yet, @command{guix environment} automatically builds them.  The environment of the new shell is an augmented version of the environment that @command{guix environment} was run in.  It contains the necessary search paths for building the given package added to the existing environment variables.  To create a ``pure'' environment, in which the original environment variables have been unset, use the @option{--pure} option@footnote{Users sometimes wrongfully augment environment variables such as @env{PATH} in their @file{~/.bashrc} file.  As a consequence, when @command{guix environment} launches it, Bash may read @file{~/.bashrc}, thereby introducing ``impurities'' in these environment variables.  It is an error to define such environment variables in @file{.bashrc}; instead, they should be defined in @file{.bash_profile}, which is sourced only by log-in shells.  @xref{Bash Startup Files,,, bash, The GNU Bash Reference Manual}, for details on Bash start-up files.}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6756
msgid "Exiting from a Guix environment is the same as exiting from the shell, and will place the user back in the old environment before @command{guix environment} was invoked.  The next garbage collection (@pxref{Invoking guix gc}) will clean up packages that were installed from within the environment and are no longer used outside of it."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6763
msgid "@command{guix environment} defines the @env{GUIX_ENVIRONMENT} variable in the shell it spawns; its value is the file name of the profile of this environment.  This allows users to, say, define a specific prompt for development environments in their @file{.bashrc} (@pxref{Bash Startup Files,,, bash, The GNU Bash Reference Manual}):"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6782
msgid "Additionally, more than one package may be specified, in which case the union of the inputs for the given packages are used.  For example, the command below spawns a shell where all of the dependencies of both Guile and Emacs are available:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6785
#, no-wrap
msgid "guix environment guile emacs\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6790
msgid "Sometimes an interactive shell session is not desired.  An arbitrary command may be invoked by placing the @code{--} token to separate the command from the rest of the arguments:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6793
#, no-wrap
msgid "guix environment guile -- make -j4\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6799
msgid "In other situations, it is more convenient to specify the list of packages needed in the environment.  For example, the following command runs @command{python} from an environment containing Python@tie{}3 and NumPy:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6802
#, no-wrap
msgid "guix environment --ad-hoc python-numpy python -- python3\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6813
msgid "Furthermore, one might want the dependencies of a package and also some additional packages that are not build-time or runtime dependencies, but are useful when developing nonetheless.  Because of this, the @option{--ad-hoc} flag is positional.  Packages appearing before @option{--ad-hoc} are interpreted as packages whose dependencies will be added to the environment.  Packages appearing after are interpreted as packages that will be added to the environment directly.  For example, the following command creates a Guix development environment that additionally includes Git and strace:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6816
#, no-wrap
msgid "guix environment --pure guix --ad-hoc git strace\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6826
msgid "Sometimes it is desirable to isolate the environment as much as possible, for maximal purity and reproducibility.  In particular, when using Guix on a host distro that is not Guix System, it is desirable to prevent access to @file{/usr/bin} and other system-wide resources from the development environment.  For example, the following command spawns a Guile REPL in a ``container'' where only the store and the current working directory are mounted:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6829
#, no-wrap
msgid "guix environment --ad-hoc --container guile -- guile\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:6833
msgid "The @option{--container} option requires Linux-libre 3.19 or newer."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:6835
#, no-wrap
msgid "certificates"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:6842
msgid "Another typical use case for containers is to run security-sensitive applications such as a web browser.  To run Eolie, we must expose and share some files and directories; we include @code{nss-certs} and expose @file{/etc/ssl/certs/} for HTTPS authentication; finally we preserve the @env{DISPLAY} environment variable since containerized graphical applications won't display without it."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6849
#, no-wrap
msgid ""
"guix environment --preserve='^DISPLAY$' --container --network \\\n"
"  --expose=/etc/machine-id \\\n"
"  --expose=/etc/ssl/certs/ \\\n"
"  --share=$HOME/.local/share/eolie/=$HOME/.local/share/eolie/ \\\n"
"  --ad-hoc eolie nss-certs dbus --  eolie\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6858
msgid "Set up the environment and check whether the shell would clobber environment variables.  @xref{Invoking guix shell, @option{--check}}, for more info."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6874
msgid "When this option is omitted, the environment is protected from garbage collection only for the duration of the @command{guix environment} session.  This means that next time you recreate the same environment, you could have to rebuild or re-download packages.  @xref{Invoking guix gc}, for more on GC roots."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6884
#, no-wrap
msgid "guix environment -e '(@@ (gnu packages maths) petsc-openmpi)'\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6893
#, no-wrap
msgid "guix environment --ad-hoc -e '(@@ (gnu) %base-packages)'\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6902
#, no-wrap
msgid "guix environment --ad-hoc -e '(list (@@ (gnu packages bash) bash) \"include\")'\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6904
#, no-wrap
msgid "--load=@var{file}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:6905
#, no-wrap
msgid "-l @var{file}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6908
msgid "Create an environment for the package or list of packages that the code within @var{file} evaluates to."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6929
msgid "@xref{shell-export-manifest, @command{guix shell --export-manifest}}, for information on how to ``convert'' command-line options into a manifest."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6930
#, no-wrap
msgid "--ad-hoc"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6935
msgid "Include all specified packages in the resulting environment, as if an @i{ad hoc} package were defined with them as inputs.  This option is useful for quickly creating an environment without having to write a package expression to contain the desired inputs."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6937
msgid "For instance, the command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6940
#, no-wrap
msgid "guix environment --ad-hoc guile guile-sdl -- guile\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6944
msgid "runs @command{guile} in an environment where Guile and Guile-SDL are available."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6949
msgid "Note that this example implicitly asks for the default output of @code{guile} and @code{guile-sdl}, but it is possible to ask for a specific output---e.g., @code{glib:bin} asks for the @code{bin} output of @code{glib} (@pxref{Packages with Multiple Outputs})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6955
msgid "This option may be composed with the default behavior of @command{guix environment}.  Packages appearing before @option{--ad-hoc} are interpreted as packages whose dependencies will be added to the environment, the default behavior.  Packages appearing after are interpreted as packages that will be added to the environment directly."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:6977
#, no-wrap
msgid ""
"guix environment --pure --preserve=^SLURM --ad-hoc openmpi @dots{} \\\n"
"  -- mpirun @dots{}\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7020
msgid "For containers, link the environment profile to @file{~/.guix-profile} within the container and set @code{GUIX_ENVIRONMENT} to that.  This is equivalent to making @file{~/.guix-profile} a symlink to the actual profile within the container.  Linking will fail and abort the environment if the directory already exists, which will certainly be the case if @command{guix environment} was invoked in the user's home directory."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:7047
#, no-wrap
msgid ""
"# will expose paths as /home/foo/wd, /home/foo/test, and /home/foo/target\n"
"cd $HOME/wd\n"
"guix environment --container --user=foo \\\n"
"     --expose=$HOME/test \\\n"
"     --expose=/tmp/target=$HOME/target\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:7075
#, no-wrap
msgid "guix environment --container --expose=$HOME=/exchange --ad-hoc guile -- guile\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7092
msgid "For containers, emulate a Filesystem Hierarchy Standard (FHS)  configuration within the container, see @uref{https://refspecs.linuxfoundation.org/fhs.shtml, the official specification}.  As Guix deviates from the FHS specification, this option sets up the container to more closely mimic that of other GNU/Linux distributions.  This is useful for reproducing other development environments, testing, and using programs which expect the FHS specification to be followed.  With this option, the container will include a version of @code{glibc} which will read @code{/etc/ld.so.cache} within the container for the shared library cache (contrary to @code{glibc} in regular Guix usage) and set up the expected FHS directories: @code{/bin}, @code{/etc}, @code{/lib}, and @code{/usr} from the container's profile."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7099
msgid "@command{guix environment} also supports all of the common build options that @command{guix build} supports (@pxref{Common Build Options}) as well as package transformation options (@pxref{Package Transformation Options})."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:7101
#, no-wrap
msgid "Invoking @command{guix pack}"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:7103
#, no-wrap
msgid "guix pack"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7109
msgid "Occasionally you want to pass software to people who are not (yet!)  lucky enough to be using Guix.  You'd tell them to run @command{guix package -i @var{something}}, but that's not possible in this case.  This is where @command{guix pack} comes in."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:7114
msgid "If you are looking for ways to exchange binaries among machines that already run Guix, @pxref{Invoking guix copy}, @ref{Invoking guix publish}, and @ref{Invoking guix archive}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7116
#, no-wrap
msgid "pack"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7117
#, no-wrap
msgid "bundle"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7118
#, no-wrap
msgid "application bundle"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7119
#, no-wrap
msgid "software bundle"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7128
msgid "The @command{guix pack} command creates a shrink-wrapped @dfn{pack} or @dfn{software bundle}: it creates a tarball or some other archive containing the binaries of the software you're interested in, and all its dependencies.  The resulting archive can be used on any machine that does not have Guix, and people can run the exact same binaries as those you have with Guix.  The pack itself is created in a bit-reproducible fashion, so anyone can verify that it really contains the build results that you pretend to be shipping."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7131
msgid "For example, to create a bundle containing Guile, Emacs, Geiser, and all their dependencies, you can run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:7136
#, no-wrap
msgid ""
"$ guix pack guile emacs emacs-geiser\n"
"@dots{}\n"
"/gnu/store/@dots{}-pack.tar.gz\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7144
msgid "The result here is a tarball containing a @file{/gnu/store} directory with all the relevant packages.  The resulting tarball contains a @dfn{profile} with the three packages of interest; the profile is the same as would be created by @command{guix package -i}.  It is this mechanism that is used to create Guix's own standalone binary tarball (@pxref{Binary Installation})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7149
msgid "Users of this pack would have to run @file{/gnu/store/@dots{}-profile/bin/guile} to run Guile, which you may find inconvenient.  To work around it, you can create, say, a @file{/opt/gnu/bin} symlink to the profile:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:7152
#, no-wrap
msgid "guix pack -S /opt/gnu/bin=bin guile emacs emacs-geiser\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7156
msgid "That way, users can happily type @file{/opt/gnu/bin/guile} and enjoy."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7157
#, no-wrap
msgid "relocatable binaries, with @command{guix pack}"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7165
msgid "What if the recipient of your pack does not have root privileges on their machine, and thus cannot unpack it in the root file system? In that case, you will want to use the @option{--relocatable} option (see below).  This option produces @dfn{relocatable binaries}, meaning they can be placed anywhere in the file system hierarchy: in the example above, users can unpack your tarball in their home directory and directly run @file{./opt/gnu/bin/guile}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7166
#, no-wrap
msgid "Docker, build an image with guix pack"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7169
msgid "Alternatively, you can produce a pack in the Docker image format using the following command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:7172
#, no-wrap
msgid "guix pack -f docker -S /bin=bin guile guile-readline\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7177
msgid "The result is a tarball that can be passed to the @command{docker load} command, followed by @code{docker run}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:7181
#, no-wrap
msgid ""
"docker load < @var{file}\n"
"docker run -ti guile-guile-readline /bin/guile\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7188
msgid "where @var{file} is the image returned by @command{guix pack}, and @code{guile-guile-readline} is its ``image tag''.  See the @uref{https://docs.docker.com/engine/reference/commandline/load/, Docker documentation} for more information."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7189
#, no-wrap
msgid "Singularity, build an image with guix pack"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7190
#, no-wrap
msgid "SquashFS, build an image with guix pack"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7193
msgid "Yet another option is to produce a SquashFS image with the following command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:7196
#, no-wrap
msgid "guix pack -f squashfs bash guile emacs emacs-geiser\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7204
msgid "The result is a SquashFS file system image that can either be mounted or directly be used as a file system container image with the @uref{https://www.sylabs.io/docs/, Singularity container execution environment}, using commands like @command{singularity shell} or @command{singularity exec}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7205 guix-git/doc/guix.texi:7332
#, no-wrap
msgid "AppImage, create an AppImage file with @command{guix pack}"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7209
msgid "Another format internally based on SquashFS is @uref{https://appimage.org/, AppImage}. An AppImage file can be created and executed without any special privileges:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:7213
#, no-wrap
msgid ""
"file=$(guix pack -f appimage --entry-point=bin/guile guile)\n"
"$file --help\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7216
msgid "Several command-line options allow you to customize your pack:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7221
msgid "Produce a pack in the given @var{format}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7223
msgid "The available formats are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7225
#, no-wrap
msgid "tarball"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7228
msgid "This is the default format.  It produces a tarball containing all the specified binaries and symlinks."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7229
#, no-wrap
msgid "docker"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7238
msgid "This produces a tarball that follows the @uref{https://github.com/docker/docker/blob/master/image/spec/v1.2.md, Docker Image Specification}.  By default, the ``repository name'' as it appears in the output of the @command{docker images} command is computed from package names passed on the command line or in the manifest file.  Alternatively, the ``repository name'' can also be configured via the @option{--image-tag} option.  Refer to @option{--help-docker-format} for more information on such advanced options."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7239
#, no-wrap
msgid "squashfs"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7243
msgid "This produces a SquashFS image containing all the specified binaries and symlinks, as well as empty mount points for virtual file systems like procfs."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:7249
msgid "Singularity @emph{requires} you to provide @file{/bin/sh} in the image.  For that reason, @command{guix pack -f squashfs} always implies @code{-S /bin=bin}.  Thus, your @command{guix pack} invocation must always start with something like:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:7252
#, no-wrap
msgid "guix pack -f squashfs bash @dots{}\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:7257
msgid "If you forget the @code{bash} (or similar) package, @command{singularity run} and @command{singularity exec} will fail with an unhelpful ``no such file or directory'' message."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7259
#, no-wrap
msgid "deb"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7260
#, no-wrap
msgid "Debian, build a .deb package with guix pack"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7268
msgid "This produces a Debian archive (a package with the @samp{.deb} file extension) containing all the specified binaries and symbolic links, that can be installed on top of any dpkg-based GNU(/Linux) distribution.  Advanced options can be revealed via the @option{--help-deb-format} option.  They allow embedding control files for more fine-grained control, such as activating specific triggers or providing a maintainer configure script to run arbitrary setup code upon installation."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:7271
#, no-wrap
msgid "guix pack -f deb -C xz -S /usr/bin/hello=bin/hello hello\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:7279
msgid "Because archives produced with @command{guix pack} contain a collection of store items and because each @command{dpkg} package must not have conflicting files, in practice that means you likely won't be able to install more than one such archive on a given system.  You can nonetheless pack as many Guix packages as you want in one such archive."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:7287
msgid "@command{dpkg} will assume ownership of any files contained in the pack that it does @emph{not} know about.  It is unwise to install Guix-produced @samp{.deb} files on a system where @file{/gnu/store} is shared by other software, such as a Guix installation or other, non-deb packs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7289
#, no-wrap
msgid "rpm"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7290
#, no-wrap
msgid "RPM, build an RPM archive with guix pack"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7296
msgid "This produces an RPM archive (a package with the @samp{.rpm} file extension) containing all the specified binaries and symbolic links, that can be installed on top of any RPM-based GNU/Linux distribution.  The RPM format embeds checksums for every file it contains, which the @command{rpm} command uses to validate the integrity of the archive."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7301
msgid "Advanced RPM-related options are revealed via the @option{--help-rpm-format} option.  These options allow embedding maintainer scripts that can run before or after the installation of the RPM archive, for example."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7305
msgid "The RPM format supports relocatable packages via the @option{--prefix} option of the @command{rpm} command, which can be handy to install an RPM package to a specific prefix."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:7308
#, no-wrap
msgid "guix pack -f rpm -R -C xz -S /usr/bin/hello=bin/hello hello\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:7312
#, no-wrap
msgid "sudo rpm --install --prefix=/opt /gnu/store/...-hello.rpm\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:7319
msgid "Contrary to Debian packages, conflicting but @emph{identical} files in RPM packages can be installed simultaneously, which means multiple @command{guix pack}-produced RPM packages can usually be installed side by side without any problem."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:7329
msgid "@command{rpm} assumes ownership of any files contained in the pack, which means it will remove @file{/gnu/store} upon uninstalling a Guix-generated RPM package, unless the RPM package was installed with the @option{--prefix} option of the @command{rpm} command.  It is unwise to install Guix-produced @samp{.rpm} packages on a system where @file{/gnu/store} is shared by other software, such as a Guix installation or other, non-rpm packs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7331
#, fuzzy, no-wrap
#| msgid "image"
msgid "appimage"
msgstr "image"

#. type: table
#: guix-git/doc/guix.texi:7339
msgid "This produces an @uref{https://appimage.org/, AppImage file} with the @samp{.AppImage} extension.  AppImage is a SquashFS volume prefixed with a runtime that mounts the SquashFS file system and executes the binary provided with @option{--entry-point}.  This results in a self-contained archive that bundles the software and all its requirements into a single file.  When the file is made executable it runs the packaged software."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:7342
#, no-wrap
msgid "guix pack -f appimage --entry-point=bin/vlc vlc\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7348
msgid "The runtime used by AppImages invokes the @command{fusermount3} command to mount the image quickly.  If that command is unavailable, the AppImage fails to run, but it can still be started by passing the @option{--appimage-extract-and-run} flag."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:7354
msgid "When building an AppImage, always @emph{pass} the @option{--relocatable} option (or @option{-R}, or @option{-RR}) to make sure the image can be used on systems where Guix is not installed.  A warning is printed when this option is not used."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:7358
#, no-wrap
msgid "guix pack -f appimage --entry-point=bin/hello --relocatable hello\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:7365
msgid "The resulting AppImage does not conform to the complete standard as it currently does not contain a @file{.DirIcon} file.  This does not impact functionality of the AppImage itself, but possibly that of software used to manage AppImages."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:7371
msgid "As the generated AppImage packages the complete dependency graph, it will be larger than comparable AppImage files found online, which depend on host system libraries."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7375
#, no-wrap
msgid "relocatable binaries"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7376
#, no-wrap
msgid "--relocatable"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7380
msgid "Produce @dfn{relocatable binaries}---i.e., binaries that can be placed anywhere in the file system hierarchy and run from there."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7388
msgid "When this option is passed once, the resulting binaries require support for @dfn{user namespaces} in the kernel Linux; when passed @emph{twice}@footnote{Here's a trick to memorize it: @code{-RR}, which adds PRoot support, can be thought of as the abbreviation of ``Really Relocatable''.  Neat, isn't it?}, relocatable binaries fall to back to other techniques if user namespaces are unavailable, and essentially work anywhere---see below for the implications."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7390
msgid "For example, if you create a pack containing Bash with:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:7393
#, no-wrap
msgid "guix pack -RR -S /mybin=bin bash\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7398
msgid "...@: you can copy that pack to a machine that lacks Guix, and from your home directory as a normal user, run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:7402
#, no-wrap
msgid ""
"tar xf pack.tar.gz\n"
"./mybin/sh\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7410
msgid "In that shell, if you type @code{ls /gnu/store}, you'll notice that @file{/gnu/store} shows up and contains all the dependencies of @code{bash}, even though the machine actually lacks @file{/gnu/store} altogether! That is probably the simplest way to deploy Guix-built software on a non-Guix machine."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:7416
msgid "By default, relocatable binaries rely on the @dfn{user namespace} feature of the kernel Linux, which allows unprivileged users to mount or change root.  Old versions of Linux did not support it, and some GNU/Linux distributions turn it off."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:7422
msgid "To produce relocatable binaries that work even in the absence of user namespaces, pass @option{--relocatable} or @option{-R} @emph{twice}.  In that case, binaries will try user namespace support and fall back to another @dfn{execution engine} if user namespaces are not supported.  The following execution engines are supported:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7424 guix-git/doc/guix.texi:22220
#, no-wrap
msgid "default"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7427
msgid "Try user namespaces and fall back to PRoot if user namespaces are not supported (see below)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7428
#, no-wrap
msgid "performance"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7431
msgid "Try user namespaces and fall back to Fakechroot if user namespaces are not supported (see below)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7432
#, no-wrap
msgid "userns"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7435
msgid "Run the program through user namespaces and abort if they are not supported."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7436
#, no-wrap
msgid "proot"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7443
msgid "Run through PRoot.  The @uref{https://proot-me.github.io/, PRoot} program provides the necessary support for file system virtualization.  It achieves that by using the @code{ptrace} system call on the running program.  This approach has the advantage to work without requiring special kernel support, but it incurs run-time overhead every time a system call is made."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7444
#, no-wrap
msgid "fakechroot"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7452
msgid "Run through Fakechroot.  @uref{https://github.com/dex4er/fakechroot/, Fakechroot} virtualizes file system accesses by intercepting calls to C library functions such as @code{open}, @code{stat}, @code{exec}, and so on.  Unlike PRoot, it incurs very little overhead.  However, it does not always work: for example, some file system accesses made from within the C library are not intercepted, and file system accesses made @i{via} direct syscalls are not intercepted either, leading to erratic behavior."
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:7454
#, no-wrap
msgid "GUIX_EXECUTION_ENGINE"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:7458
msgid "When running a wrapped program, you can explicitly request one of the execution engines listed above by setting the @env{GUIX_EXECUTION_ENGINE} environment variable accordingly."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7460
#, no-wrap
msgid "entry point, for Docker and Singularity images"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7461
#, no-wrap
msgid "--entry-point=@var{command}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7466
msgid "Use @var{command} as the @dfn{entry point} of the resulting pack, if the pack format supports it---currently @code{docker}, @code{appimage}, and @code{squashfs} (Singularity) support it.  @var{command} must be relative to the profile contained in the pack."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7470
msgid "The entry point specifies the command that tools like @code{docker run} or @code{singularity run} automatically start by default.  For example, you can do:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:7473
#, no-wrap
msgid "guix pack -f docker --entry-point=bin/guile guile\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7477
msgid "The resulting pack can easily be loaded and @code{docker run} with no extra arguments will spawn @code{bin/guile}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:7481
#, no-wrap
msgid ""
"docker load -i pack.tar.gz\n"
"docker run @var{image-id}\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7483
#, no-wrap
msgid "entry point arguments, for docker images"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7484
#, no-wrap
msgid "--entry-point-argument=@var{command}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:7485
#, no-wrap
msgid "-A @var{command}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7489
msgid "Use @var{command} as an argument to @dfn{entry point} of the resulting pack.  This option is only valid in conjunction with @code{--entry-point} and can appear multiple times on the command line."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:7492
#, no-wrap
msgid "guix pack -f docker --entry-point=bin/guile --entry-point-argument=\"--help\" guile\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7494
#, no-wrap
msgid "maximum layers argument, for docker images"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7495
#, no-wrap
msgid "--max-layers=@code{n}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7498
msgid "Specifies the maximum number of Docker image layers allowed when building an image."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:7501
#, no-wrap
msgid "guix pack -f docker --max-layers=100 guile\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7507
msgid "This option allows you to limit the number of layers in a Docker image.  Docker images are comprised of multiple layers, and each layer adds to the overall size and complexity of the image.  By setting a maximum number of layers, you can control the following effects:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7509
#, no-wrap
msgid "Disk Usage:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:7512
msgid "Increasing the number of layers can help optimize the disk space required to store multiple images built with a similar package graph."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7513
#, no-wrap
msgid "Pulling:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:7516
msgid "When transferring images between different nodes or systems, having more layers can reduce the time required to pull the image."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7521 guix-git/doc/guix.texi:15314
#: guix-git/doc/guix.texi:16058 guix-git/doc/guix.texi:16468
#: guix-git/doc/guix.texi:17187
msgid "Consider the package @var{expr} evaluates to."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7525
msgid "This has the same purpose as the same-named option in @command{guix build} (@pxref{Additional Build Options, @option{--expression} in @command{guix build}})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7529
msgid "Build a pack containing the package or other object the code within @var{file} evaluates to."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7534
msgid "This has the same purpose as the same-named option in @command{guix build} (@pxref{Additional Build Options, @option{--file} in @command{guix build}}), but it has no shorthand, because @option{-f} already means @option{--format}."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:7536
msgid "pack-manifest"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7541
msgid "Use the packages contained in the manifest object returned by the Scheme code in @var{file}.  This option can be repeated several times, in which case the manifests are concatenated."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7549
msgid "This has a similar purpose as the same-named option in @command{guix package} (@pxref{profile-manifest, @option{--manifest}}) and uses the same manifest files.  It allows you to define a collection of packages once and use it both for creating profiles and for creating archives for use on machines that do not have Guix installed.  Note that you can specify @emph{either} a manifest file @emph{or} a list of packages, but not both."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7554
msgid "@xref{Writing Manifests}, for information on how to write a manifest.  @xref{shell-export-manifest, @command{guix shell --export-manifest}}, for information on how to ``convert'' command-line options into a manifest."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7560 guix-git/doc/guix.texi:14109
#: guix-git/doc/guix.texi:47502
#, no-wrap
msgid "--target=@var{triplet}"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7561 guix-git/doc/guix.texi:8053
#: guix-git/doc/guix.texi:14110
#, no-wrap
msgid "cross-compilation"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7565 guix-git/doc/guix.texi:47506
msgid "Cross-build for @var{triplet}, which must be a valid GNU triplet, such as @code{\"aarch64-linux-gnu\"} (@pxref{Specifying target triplets, GNU configuration triplets,, autoconf, Autoconf})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7566
#, no-wrap
msgid "--compression=@var{tool}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:7567
#, no-wrap
msgid "-C @var{tool}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7571
msgid "Compress the resulting tarball using @var{tool}---one of @code{gzip}, @code{zstd}, @code{bzip2}, @code{xz}, @code{lzip}, or @code{none} for no compression."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:7573
msgid "pack-symlink-option"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7577
msgid "Add the symlinks specified by @var{spec} to the pack.  This option can appear several times."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7581
msgid "@var{spec} has the form @code{@var{source}=@var{target}}, where @var{source} is the symlink that will be created and @var{target} is the symlink target."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7584
msgid "For instance, @code{-S /opt/gnu/bin=bin} creates a @file{/opt/gnu/bin} symlink pointing to the @file{bin} sub-directory of the profile."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7585 guix-git/doc/guix.texi:47513
#, no-wrap
msgid "--save-provenance"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7589
msgid "Save provenance information for the packages passed on the command line.  Provenance information includes the URL and commit of the channels in use (@pxref{Channels})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7595
msgid "Provenance information is saved in the @file{/gnu/store/@dots{}-profile/manifest} file in the pack, along with the usual package metadata---the name and version of each package, their propagated inputs, and so on.  It is useful information to the recipient of the pack, who then knows how the pack was (supposedly) obtained."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7601
msgid "This option is not enabled by default because, like timestamps, provenance information contributes nothing to the build process.  In other words, there is an infinity of channel URLs and commit IDs that can lead to the same pack.  Recording such ``silent'' metadata in the output thus potentially breaks the source-to-binary bitwise reproducibility property."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7604
#, no-wrap
msgid "garbage collector root, for packs"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7607
msgid "Make @var{file} a symlink to the resulting pack, and register it as a garbage collector root."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7608
#, no-wrap
msgid "--localstatedir"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:7609
#, no-wrap
msgid "--profile-name=@var{name}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7614
msgid "Include the ``local state directory'', @file{/var/guix}, in the resulting pack, and notably the @file{/var/guix/profiles/per-user/root/@var{name}} profile---by default @var{name} is @code{guix-profile}, which corresponds to @file{~root/.guix-profile}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7620
msgid "@file{/var/guix} contains the store database (@pxref{The Store}) as well as garbage-collector roots (@pxref{Invoking guix gc}).  Providing it in the pack means that the store is ``complete'' and manageable by Guix; not providing it in the pack means that the store is ``dead'': items cannot be added to it or removed from it after extraction of the pack."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7623
msgid "One use case for this is the Guix self-contained binary tarball (@pxref{Binary Installation})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7624 guix-git/doc/guix.texi:47507
#, no-wrap
msgid "--derivation"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:7625 guix-git/doc/guix.texi:14149
#: guix-git/doc/guix.texi:47508
#, no-wrap
msgid "-d"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7627
msgid "Print the name of the derivation that builds the pack."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7631
msgid "Use the bootstrap binaries to build the pack.  This option is only useful to Guix developers."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7636
msgid "In addition, @command{guix pack} supports all the common build options (@pxref{Common Build Options}) and all the package transformation options (@pxref{Package Transformation Options})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7641
#, no-wrap
msgid "GCC"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7642
#, no-wrap
msgid "ld-wrapper"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7643
#, no-wrap
msgid "linker wrapper"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7644
#, no-wrap
msgid "toolchain, for C development"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7645
#, no-wrap
msgid "toolchain, for Fortran development"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7652
msgid "If you need a complete toolchain for compiling and linking C or C++ source code, use the @code{gcc-toolchain} package.  This package provides a complete GCC toolchain for C/C++ development, including GCC itself, the GNU C Library (headers and binaries, plus debugging symbols in the @code{debug} output), Binutils, and a linker wrapper."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7658
msgid "The wrapper's purpose is to inspect the @code{-L} and @code{-l} switches passed to the linker, add corresponding @code{-rpath} arguments, and invoke the actual linker with this new set of arguments.  You can instruct the wrapper to refuse to link against libraries not in the store by setting the @env{GUIX_LD_WRAPPER_ALLOW_IMPURITIES} environment variable to @code{no}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7662
msgid "The package @code{gfortran-toolchain} provides a complete GCC toolchain for Fortran development.  For other languages, please use @samp{guix search gcc toolchain} (@pxref{guix-search,, Invoking guix package})."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:7665
#, no-wrap
msgid "Invoking @command{guix git authenticate}"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:7667
#, fuzzy, no-wrap
msgid "guix git authenticate"
msgstr "Documentazione"

#. type: cindex
#: guix-git/doc/guix.texi:7668
#, fuzzy, no-wrap
#| msgid "authentication, of a Guix checkout"
msgid "authentication, of Git checkouts"
msgstr "autenticazione, di un checkout Guix"

#. type: cindex
#: guix-git/doc/guix.texi:7669
#, fuzzy, no-wrap
msgid "Git checkout authentication"
msgstr "Documentazione"

#. type: Plain text
#: guix-git/doc/guix.texi:7677
msgid "The @command{guix git authenticate} command authenticates a Git checkout following the same rule as for channels (@pxref{channel-authentication, channel authentication}).  That is, starting from a given commit, it ensures that all subsequent commits are signed by an OpenPGP key whose fingerprint appears in the @file{.guix-authorizations} file of its parent commit(s)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7682
msgid "You will find this command useful if you maintain a channel.  But in fact, this authentication mechanism is useful in a broader context, so you might want to use it for Git repositories that have nothing to do with Guix."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:7687
#, no-wrap
msgid "guix git authenticate @var{commit} @var{signer} [@var{options}@dots{}]\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7689
#, no-wrap
msgid "introduction, for Git authentication"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7699
msgid "By default, this command authenticates the Git checkout in the current directory; it outputs nothing and exits with exit code zero on success and non-zero on failure.  @var{commit} above denotes the first commit where authentication takes place, and @var{signer} is the OpenPGP fingerprint of public key used to sign @var{commit}.  Together, they form a @dfn{channel introduction} (@pxref{channel-authentication, channel introduction}).  On your first successful run, the introduction is recorded in the @file{.git/config} file of your checkout, allowing you to omit them from subsequent invocations:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:7702
#, fuzzy, no-wrap
msgid "guix git authenticate [@var{options}@dots{}]\n"
msgstr "Documentazione"

#. type: Plain text
#: guix-git/doc/guix.texi:7708
msgid "Should you have branches that require different introductions, you can specify them directly in @file{.git/config}.  For example, if the branch called @code{personal-fork} has a different introduction than other branches, you can extend @file{.git/config} along these lines:"
msgstr ""

#. type: smallexample
#: guix-git/doc/guix.texi:7714
#, no-wrap
msgid ""
"[guix \"authentication-personal-fork\"]\n"
"\tintroduction-commit = cabba936fd807b096b48283debdcddccfea3900d\n"
"\tintroduction-signer = C0FF EECA BBA9 E6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\n"
"\tkeyring = keyring\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7720
msgid "The first run also attempts to install pre-push and post-merge hooks, such that @command{guix git authenticate} is invoked as soon as you run @command{git push}, @command{git pull}, and related commands; it does not overwrite preexisting hooks though."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7723
msgid "The command-line options described below allow you to fine-tune the process."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7725
#, no-wrap
msgid "--repository=@var{directory}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:7726
#, no-wrap
msgid "-r @var{directory}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7729
msgid "Open the Git repository in @var{directory} instead of the current directory."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7730
#, no-wrap
msgid "--keyring=@var{reference}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:7731
#, no-wrap
msgid "-k @var{reference}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7737
msgid "Load OpenPGP keyring from @var{reference}, the reference of a branch such as @code{origin/keyring} or @code{my-keyring}.  The branch must contain OpenPGP public keys in @file{.key} files, either in binary form or ``ASCII-armored''.  By default the keyring is loaded from the branch named @code{keyring}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7738
#, no-wrap
msgid "--end=@var{commit}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7740
msgid "Authenticate revisions up to @var{commit}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7743
msgid "Display commit signing statistics upon completion."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7744
#, no-wrap
msgid "--cache-key=@var{key}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7748
msgid "Previously-authenticated commits are cached in a file under @file{~/.cache/guix/authentication}.  This option forces the cache to be stored in file @var{key} in that directory."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:7749
#, no-wrap
msgid "--historical-authorizations=@var{file}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:7756
msgid "By default, any commit whose parent commit(s) lack the @file{.guix-authorizations} file is considered inauthentic.  In contrast, this option considers the authorizations in @var{file} for any commit that lacks @file{.guix-authorizations}.  The format of @var{file} is the same as that of @file{.guix-authorizations} (@pxref{channel-authorizations, @file{.guix-authorizations} format})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7769
msgid "GNU Guix provides several Scheme programming interfaces (APIs) to define, build, and query packages.  The first interface allows users to write high-level package definitions.  These definitions refer to familiar packaging concepts, such as the name and version of a package, its build system, and its dependencies.  These definitions can then be turned into concrete build actions."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7775
msgid "Build actions are performed by the Guix daemon, on behalf of users.  In a standard setup, the daemon has write access to the store---the @file{/gnu/store} directory---whereas users do not.  The recommended setup also has the daemon perform builds in chroots, under specific build users, to minimize interference with the rest of the system."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7784
msgid "Lower-level APIs are available to interact with the daemon and the store.  To instruct the daemon to perform a build action, users actually provide it with a @dfn{derivation}.  A derivation is a low-level representation of the build actions to be taken, and the environment in which they should occur---derivations are to package definitions what assembly is to C programs.  The term ``derivation'' comes from the fact that build results @emph{derive} from them."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7788
msgid "This chapter describes all these APIs in turn, starting from high-level package definitions.  @xref{Source Tree Structure}, for a more general overview of the source code."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7820
msgid "From a programming viewpoint, the package definitions of the GNU distribution are provided by Guile modules in the @code{(gnu packages @dots{})} name space@footnote{Note that packages under the @code{(gnu packages @dots{})} module name space are not necessarily ``GNU packages''.  This module naming scheme follows the usual Guile module naming convention: @code{gnu} means that these modules are distributed as part of the GNU system, and @code{packages} identifies modules that define packages.} (@pxref{Modules, Guile modules,, guile, GNU Guile Reference Manual}).  For instance, the @code{(gnu packages emacs)} module exports a variable named @code{emacs}, which is bound to a @code{<package>} object (@pxref{Defining Packages})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7827
msgid "The @code{(gnu packages @dots{})} module name space is automatically scanned for packages by the command-line tools.  For instance, when running @code{guix install emacs}, all the @code{(gnu packages @dots{})} modules are scanned until one that exports a package object whose name is @code{emacs} is found.  This package search facility is implemented in the @code{(gnu packages)} module."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7829
#, no-wrap
msgid "package module search path"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7838
msgid "Users can store package definitions in modules with different names---e.g., @code{(my-packages emacs)}@footnote{Note that the file name and module name must match.  For instance, the @code{(my-packages emacs)} module must be stored in a @file{my-packages/emacs.scm} file relative to the load path specified with @option{--load-path} or @env{GUIX_PACKAGE_PATH}.  @xref{Modules and the File System,,, guile, GNU Guile Reference Manual}, for details.}.  There are two ways to make these package definitions visible to the user interfaces:"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:7845
msgid "By adding the directory containing your package modules to the search path with the @code{-L} flag of @command{guix package} and other commands (@pxref{Common Build Options}), or by setting the @env{GUIX_PACKAGE_PATH} environment variable described below."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:7851
msgid "By defining a @dfn{channel} and configuring @command{guix pull} so that it pulls from it.  A channel is essentially a Git repository containing package modules.  @xref{Channels}, for more information on how to define and use channels."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7854
msgid "@env{GUIX_PACKAGE_PATH} works similarly to other search path variables:"
msgstr ""

#. type: defvr
#: guix-git/doc/guix.texi:7855
#, no-wrap
msgid "{Environment Variable} GUIX_PACKAGE_PATH"
msgstr ""

#. type: defvr
#: guix-git/doc/guix.texi:7859
msgid "This is a colon-separated list of directories to search for additional package modules.  Directories listed in this variable take precedence over the own modules of the distribution."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7867
msgid "The distribution is fully @dfn{bootstrapped} and @dfn{self-contained}: each package is built based solely on other packages in the distribution.  The root of this dependency graph is a small set of @dfn{bootstrap binaries}, provided by the @code{(gnu packages bootstrap)} module.  For more information on bootstrapping, @pxref{Bootstrapping}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7875
msgid "The high-level interface to package definitions is implemented in the @code{(guix packages)} and @code{(guix build-system)} modules.  As an example, the package definition, or @dfn{recipe}, for the GNU Hello package looks like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:7883
#, no-wrap
msgid ""
"(define-module (gnu packages hello)\n"
"  #:use-module (guix packages)\n"
"  #:use-module (guix download)\n"
"  #:use-module (guix build-system gnu)\n"
"  #:use-module (guix licenses)\n"
"  #:use-module (gnu packages gawk))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:7902
#, no-wrap
msgid ""
"(define-public hello\n"
"  (package\n"
"    (name \"hello\")\n"
"    (version \"2.10\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"    (build-system gnu-build-system)\n"
"    (arguments '(#:configure-flags '(\"--enable-silent-rules\")))\n"
"    (inputs (list gawk))\n"
"    (synopsis \"Hello, GNU world: An example GNU package\")\n"
"    (description \"Guess what GNU Hello prints!\")\n"
"    (home-page \"https://www.gnu.org/software/hello/\")\n"
"    (license gpl3+)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7912
msgid "Without being a Scheme expert, the reader may have guessed the meaning of the various fields here.  This expression binds the variable @code{hello} to a @code{<package>} object, which is essentially a record (@pxref{SRFI-9, Scheme records,, guile, GNU Guile Reference Manual}).  This package object can be inspected using procedures found in the @code{(guix packages)} module; for instance, @code{(package-name hello)} returns---surprise!---@code{\"hello\"}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7916
msgid "With luck, you may be able to import part or all of the definition of the package you are interested in from another repository, using the @code{guix import} command (@pxref{Invoking guix import})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7922
msgid "In the example above, @code{hello} is defined in a module of its own, @code{(gnu packages hello)}.  Technically, this is not strictly necessary, but it is convenient to do so: all the packages defined in modules under @code{(gnu packages @dots{})} are automatically known to the command-line tools (@pxref{Package Modules})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7924
msgid "There are a few points worth noting in the above package definition:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:7931
msgid "The @code{source} field of the package is an @code{<origin>} object (@pxref{origin Reference}, for the complete reference).  Here, the @code{url-fetch} method from @code{(guix download)} is used, meaning that the source is a file to be downloaded over FTP or HTTP."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:7934
msgid "The @code{mirror://gnu} prefix instructs @code{url-fetch} to use one of the GNU mirrors defined in @code{(guix download)}."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:7941
msgid "The @code{sha256} field specifies the expected SHA256 hash of the file being downloaded.  It is mandatory, and allows Guix to check the integrity of the file.  The @code{(base32 @dots{})} form introduces the base32 representation of the hash.  You can obtain this information with @code{guix download} (@pxref{Invoking guix download}) and @code{guix hash} (@pxref{Invoking guix hash})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7942
#, no-wrap
msgid "patches"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:7946
msgid "When needed, the @code{origin} form can also have a @code{patches} field listing patches to be applied, and a @code{snippet} field giving a Scheme expression to modify the source code."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7948
#, no-wrap
msgid "GNU Build System"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:7954
msgid "The @code{build-system} field specifies the procedure to build the package (@pxref{Build Systems}).  Here, @code{gnu-build-system} represents the familiar GNU Build System, where packages may be configured, built, and installed with the usual @code{./configure && make && make check && make install} command sequence."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:7958
msgid "When you start packaging non-trivial software, you may need tools to manipulate those build phases, manipulate files, and so on.  @xref{Build Utilities}, for more on this."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:7964
msgid "The @code{arguments} field specifies options for the build system (@pxref{Build Systems}).  Here it is interpreted by @code{gnu-build-system} as a request run @file{configure} with the @option{--enable-silent-rules} flag."
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:7965 guix-git/doc/guix.texi:7968
#, no-wrap
msgid "quote"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7966
#, no-wrap
msgid "quoting"
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:7967
#, no-wrap
msgid "'"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7969
#, no-wrap
msgid "backquote (quasiquote)"
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:7970
#, no-wrap
msgid "`"
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:7971
#, no-wrap
msgid "quasiquote"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7972
#, no-wrap
msgid "comma (unquote)"
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:7973
#, no-wrap
msgid ","
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:7974
#, no-wrap
msgid "unquote"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:7984
msgid "What about these quote (@code{'}) characters? They are Scheme syntax to introduce a literal list; @code{'} is synonymous with @code{quote}.  Sometimes you'll also see @code{`} (a backquote, synonymous with @code{quasiquote}) and @code{,} (a comma, synonymous with @code{unquote}).  @xref{Expression Syntax, quoting,, guile, GNU Guile Reference Manual}, for details.  Here the value of the @code{arguments} field is a list of arguments passed to the build system down the road, as with @code{apply} (@pxref{Fly Evaluation, @code{apply},, guile, GNU Guile Reference Manual})."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:7990
msgid "The hash-colon (@code{#:}) sequence defines a Scheme @dfn{keyword} (@pxref{Keywords,,, guile, GNU Guile Reference Manual}), and @code{#:configure-flags} is a keyword used to pass a keyword argument to the build system (@pxref{Coding With Keywords,,, guile, GNU Guile Reference Manual})."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:7996
msgid "The @code{inputs} field specifies inputs to the build process---i.e., build-time or run-time dependencies of the package.  Here, we add an input, a reference to the @code{gawk} variable; @code{gawk} is itself bound to a @code{<package>} object."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:8000
msgid "Note that GCC, Coreutils, Bash, and other essential tools do not need to be specified as inputs here.  Instead, @code{gnu-build-system} takes care of ensuring that they are present (@pxref{Build Systems})."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:8004
msgid "However, any other dependencies need to be specified in the @code{inputs} field.  Any dependency not specified here will simply be unavailable to the build process, possibly leading to a build failure."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8007
msgid "@xref{package Reference}, for a full description of possible fields."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:8009
#, no-wrap
msgid "Scheme programming language, getting started"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:8014
msgid "Intimidated by the Scheme language or curious about it? The Cookbook has a short section to get started that recaps some of the things shown above and explains the fundamentals.  @xref{A Scheme Crash Course,,, guix-cookbook, GNU Guix Cookbook}, for more information."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8026
msgid "Once a package definition is in place, the package may actually be built using the @code{guix build} command-line tool (@pxref{Invoking guix build}), troubleshooting any build failures you encounter (@pxref{Debugging Build Failures}).  You can easily jump back to the package definition using the @command{guix edit} command (@pxref{Invoking guix edit}).  @xref{Packaging Guidelines}, for more information on how to test package definitions, and @ref{Invoking guix lint}, for information on how to check a definition for style conformance."
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:8026
#, no-wrap
msgid "GUIX_PACKAGE_PATH"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8030
msgid "Lastly, @pxref{Channels}, for information on how to extend the distribution by adding your own package definitions in a ``channel''."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8034
msgid "Finally, updating the package definition to a new upstream version can be partly automated by the @command{guix refresh} command (@pxref{Invoking guix refresh})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8040
msgid "Behind the scenes, a derivation corresponding to the @code{<package>} object is first computed by the @code{package-derivation} procedure.  That derivation is stored in a @file{.drv} file under @file{/gnu/store}.  The build actions it prescribes may then be realized by using the @code{build-derivations} procedure (@pxref{The Store})."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8041
#, no-wrap
msgid "{Procedure} package-derivation store package [system]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8044
msgid "Return the @code{<derivation>} object of @var{package} for @var{system} (@pxref{Derivations})."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8050
msgid "@var{package} must be a valid @code{<package>} object, and @var{system} must be a string denoting the target system type---e.g., @code{\"x86_64-linux\"} for an x86_64 Linux-based GNU system.  @var{store} must be a connection to the daemon, which operates on the store (@pxref{The Store})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8056
msgid "Similarly, it is possible to compute a derivation that cross-builds a package for some other system:"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8057
#, no-wrap
msgid "{Procedure} package-cross-derivation store package target [system]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8060
msgid "Return the @code{<derivation>} object of @var{package} cross-built from @var{system} to @var{target}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8064
msgid "@var{target} must be a valid GNU triplet denoting the target hardware and operating system, such as @code{\"aarch64-linux-gnu\"} (@pxref{Specifying Target Triplets,,, autoconf, Autoconf})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8068
msgid "Once you have package definitions, you can easily define @emph{variants} of those packages.  @xref{Defining Package Variants}, for more on that."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:8076
#, no-wrap
msgid "@code{package} Reference"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8080
msgid "This section summarizes all the options available in @code{package} declarations (@pxref{Defining Packages})."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:8081
#, no-wrap
msgid "{Data Type} package"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:8083
msgid "This is the data type representing a package recipe."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8087
msgid "The name of the package, as a string."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:8088 guix-git/doc/guix.texi:9155
#, no-wrap
msgid "version"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8091
msgid "The version of the package, as a string.  @xref{Version Numbers}, for guidelines."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:8092 guix-git/doc/guix.texi:15874
#: guix-git/doc/guix.texi:18733 guix-git/doc/guix.texi:19468
#: guix-git/doc/guix.texi:43765
#, no-wrap
msgid "source"
msgstr "source"

#. type: table
#: guix-git/doc/guix.texi:8099
msgid "An object telling how the source code for the package should be acquired.  Most of the time, this is an @code{origin} object, which denotes a file fetched from the Internet (@pxref{origin Reference}).  It can also be any other ``file-like'' object such as a @code{local-file}, which denotes a file from the local file system (@pxref{G-Expressions, @code{local-file}})."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:8100
#, no-wrap
msgid "build-system"
msgstr "build-system"

#. type: table
#: guix-git/doc/guix.texi:8103
msgid "The build system that should be used to build the package (@pxref{Build Systems})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8104 guix-git/doc/guix.texi:23203
#, no-wrap
msgid "@code{arguments} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8108
msgid "The arguments that should be passed to the build system (@pxref{Build Systems}).  This is a list, typically containing sequential keyword-value pairs, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8117
#, no-wrap
msgid ""
"(package\n"
"  (name \"example\")\n"
"  ;; several fields omitted\n"
"  (arguments\n"
"    (list #:tests? #f                     ;skip tests\n"
"          #:make-flags #~'(\"VERBOSE=1\")   ;pass flags to 'make'\n"
"          #:configure-flags #~'(\"--enable-frobbing\"))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8124
msgid "The exact set of supported keywords depends on the build system (@pxref{Build Systems}), but you will find that almost all of them honor @code{#:configure-flags}, @code{#:make-flags}, @code{#:tests?}, and @code{#:phases}.  The @code{#:phases} keyword in particular lets you modify the set of build phases for your package (@pxref{Build Phases})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8128
msgid "The REPL has dedicated commands to interactively inspect values of some of these arguments, as a convenient debugging aid (@pxref{Using Guix Interactively})."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:8129 guix-git/doc/guix.texi:8166
#, no-wrap
msgid "Compatibility Note"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:8133
msgid "Until version 1.3.0, the @code{arguments} field would typically use @code{quote} (@code{'}) or @code{quasiquote} (@code{`}) and no G-expressions, like so:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8140
#, no-wrap
msgid ""
"(package\n"
"  ;; several fields omitted\n"
"  (arguments   ;old-style quoted arguments\n"
"   '(#:tests? #f\n"
"     #:configure-flags '(\"--enable-frobbing\"))))\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:8145
msgid "To convert from that style to the one shown above, you can run @code{guix style -S arguments @var{package}} (@pxref{Invoking guix style})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8147 guix-git/doc/guix.texi:52576
#, no-wrap
msgid "@code{inputs} (default: @code{'()})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:8148
#, no-wrap
msgid "@code{native-inputs} (default: @code{'()})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:8149
#, no-wrap
msgid "@code{propagated-inputs} (default: @code{'()})"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:8150
#, no-wrap
msgid "inputs, of packages"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8157
msgid "These fields list dependencies of the package.  Each element of these lists is either a package, origin, or other ``file-like object'' (@pxref{G-Expressions}); to specify the output of that file-like object that should be used, pass a two-element list where the second element is the output (@pxref{Packages with Multiple Outputs}, for more on package outputs).  For example, the list below specifies three inputs:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8161
#, no-wrap
msgid ""
"(list libffi libunistring\n"
"      `(,glib \"bin\"))      ;the \"bin\" output of GLib\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8165
msgid "In the example above, the @code{\"out\"} output of @code{libffi} and @code{libunistring} is used."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:8173
msgid "Until version 1.3.0, input lists were a list of tuples, where each tuple has a label for the input (a string) as its first element, a package, origin, or derivation as its second element, and optionally the name of the output thereof that should be used, which defaults to @code{\"out\"}.  For example, the list below is equivalent to the one above, but using the @dfn{old input style}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8179
#, no-wrap
msgid ""
";; Old input style (deprecated).\n"
"`((\"libffi\" ,libffi)\n"
"  (\"libunistring\" ,libunistring)\n"
"  (\"glib:bin\" ,glib \"bin\"))  ;the \"bin\" output of GLib\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:8185
msgid "This style is now deprecated; it is still supported but support will be removed in a future version.  It should not be used for new package definitions.  @xref{Invoking guix style}, on how to migrate to the new style."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:8187
#, no-wrap
msgid "cross compilation, package dependencies"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8193
msgid "The distinction between @code{native-inputs} and @code{inputs} is necessary when considering cross-compilation.  When cross-compiling, dependencies listed in @code{inputs} are built for the @emph{target} architecture; conversely, dependencies listed in @code{native-inputs} are built for the architecture of the @emph{build} machine."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8198
msgid "@code{native-inputs} is typically used to list tools needed at build time, but not at run time, such as Autoconf, Automake, pkg-config, Gettext, or Bison.  @command{guix lint} can report likely mistakes in this area (@pxref{Invoking guix lint})."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:8206
msgid "package-propagated-inputs"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8206
msgid "Lastly, @code{propagated-inputs} is similar to @code{inputs}, but the specified packages will be automatically installed to profiles (@pxref{Features, the role of profiles in Guix}) alongside the package they belong to (@pxref{package-cmd-propagated-inputs, @command{guix package}}, for information on how @command{guix package} deals with propagated inputs)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8210
msgid "For example this is necessary when packaging a C/C++ library that needs headers of another library to compile, or when a pkg-config file refers to another one @i{via} its @code{Requires} field."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8217
msgid "Another example where @code{propagated-inputs} is useful is for languages that lack a facility to record the run-time search path akin to the @code{RUNPATH} of ELF files; this includes Guile, Python, Perl, and more.  When packaging libraries written in those languages, ensure they can find library code they depend on at run time by listing run-time dependencies in @code{propagated-inputs} rather than @code{inputs}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8218
#, no-wrap
msgid "@code{outputs} (default: @code{'(\"out\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8221
msgid "The list of output names of the package.  @xref{Packages with Multiple Outputs}, for typical uses of additional outputs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8222
#, no-wrap
msgid "@code{native-search-paths} (default: @code{'()})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8223 guix-git/doc/guix.texi:9174
#, no-wrap
msgid "@code{search-paths} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8227
msgid "A list of @code{search-path-specification} objects describing search-path environment variables honored by the package.  @xref{Search Paths}, for more on search path specifications."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8233
msgid "As for inputs, the distinction between @code{native-search-paths} and @code{search-paths} only matters when cross-compiling.  In a cross-compilation context, @code{native-search-paths} applies exclusively to native inputs whereas @code{search-paths} applies only to host inputs."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8240
msgid "Packages such as cross-compilers care about target inputs---for instance, our (modified) GCC cross-compiler has @env{CROSS_C_INCLUDE_PATH} in @code{search-paths}, which allows it to pick @file{.h} files for the target system and @emph{not} those of native inputs.  For the majority of packages though, only @code{native-search-paths} makes sense."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8241
#, no-wrap
msgid "@code{replacement} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8245
msgid "This must be either @code{#f} or a package object that will be used as a @dfn{replacement} for this package.  @xref{Security Updates, grafts}, for details."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8246 guix-git/doc/guix.texi:15866
#, no-wrap
msgid "synopsis"
msgstr "synopsis"

#. type: table
#: guix-git/doc/guix.texi:8248
msgid "A one-line description of the package."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:8249 guix-git/doc/guix.texi:15867
#: guix-git/doc/guix.texi:48423 guix-git/doc/guix.texi:48583
#, no-wrap
msgid "description"
msgstr "description"

#. type: table
#: guix-git/doc/guix.texi:8252
msgid "A more elaborate description of the package, as a string in Texinfo syntax."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:8253
#, no-wrap
msgid "license"
msgstr "license"

#. type: cindex
#: guix-git/doc/guix.texi:8254
#, no-wrap
msgid "license, of packages"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8257
msgid "The license of the package; a value from @code{(guix licenses)}, or a list of such values."
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:8258 guix-git/doc/guix.texi:15875
#, no-wrap
msgid "home-page"
msgstr "home-page"

#. type: table
#: guix-git/doc/guix.texi:8260
msgid "The URL to the home-page of the package, as a string."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8261
#, no-wrap
msgid "@code{supported-systems} (default: @code{%supported-systems})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8264
msgid "The list of systems supported by the package, as strings of the form @code{architecture-kernel}, for example @code{\"x86_64-linux\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8265
#, no-wrap
msgid "@code{location} (default: source location of the @code{package} form)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8269
msgid "The source location of the package.  It is useful to override this when inheriting from another package, in which case this field is not automatically corrected."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:8272
#, no-wrap
msgid "this-package"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:8275
msgid "When used in the @emph{lexical scope} of a package field definition, this identifier resolves to the package being defined."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:8278
msgid "The example below shows how to add a package as a native input of itself when cross-compiling:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8283
#, no-wrap
msgid ""
"(package\n"
"  (name \"guile\")\n"
"  ;; ...\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8289
#, no-wrap
msgid ""
"  ;; When cross-compiled, Guile, for example, depends on\n"
"  ;; a native version of itself.  Add it here.\n"
"  (native-inputs (if (%current-target-system)\n"
"                     (list this-package)\n"
"                     '())))\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:8292
msgid "It is an error to refer to @code{this-package} outside a package definition."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8296
msgid "The following helper procedures are provided to help deal with package inputs."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8297
#, no-wrap
msgid "{Procedure} lookup-package-input package name"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:8298
#, no-wrap
msgid "{Procedure} lookup-package-native-input package name"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:8299
#, no-wrap
msgid "{Procedure} lookup-package-propagated-input package name"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:8300
#, no-wrap
msgid "{Procedure} lookup-package-direct-input package name"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8303
msgid "Look up @var{name} among @var{package}'s inputs (or native, propagated, or direct inputs).  Return it if found, @code{#f} otherwise."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8306
msgid "@var{name} is the name of a package or the file name of an origin depended on.  Here's how you might use it:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8309
#, no-wrap
msgid ""
"(use-modules (guix packages) (gnu packages base))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8312
#, no-wrap
msgid ""
"(lookup-package-direct-input coreutils \"gmp\")\n"
"@result{} #<package gmp@@6.2.1 @dots{}>\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8316
msgid "In this example we obtain the @code{gmp} package that is among the direct inputs of @code{coreutils}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8320
msgid "When looking up an origin, use the name that appears in the origin's @code{file-name} field or its default file name---e.g., @code{\"foo-1.2.tar.gz\"}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:8322
#, no-wrap
msgid "development inputs, of a package"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:8323
#, no-wrap
msgid "implicit inputs, of a package"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8328
msgid "Sometimes you will want to obtain the list of inputs needed to @emph{develop} a package---all the inputs that are visible when the package is compiled.  This is what the @code{package-development-inputs} procedure returns."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8329
#, no-wrap
msgid "{Procedure} package-development-inputs package [system] [#:target #f]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8335
msgid "Return the list of inputs required by @var{package} for development purposes on @var{system}.  When @var{target} is true, return the inputs needed to cross-compile @var{package} from @var{system} to @var{target}, where @var{target} is a triplet such as @code{\"aarch64-linux-gnu\"}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8339
msgid "Note that the result includes both explicit inputs and implicit inputs---inputs automatically added by the build system (@pxref{Build Systems}).  Let us take the @code{hello} package to illustrate that:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8342
#, no-wrap
msgid ""
"(use-modules (gnu packages base) (guix packages))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8345
#, no-wrap
msgid ""
"hello\n"
"@result{} #<package hello@@2.10 gnu/packages/base.scm:79 7f585d4f6790>\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8348
#, no-wrap
msgid ""
"(package-direct-inputs hello)\n"
"@result{} ()\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8351
#, no-wrap
msgid ""
"(package-development-inputs hello)\n"
"@result{} ((\"source\" @dots{}) (\"tar\" #<package tar@@1.32 @dots{}>) @dots{})\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8360
msgid "In this example, @code{package-direct-inputs} returns the empty list, because @code{hello} has zero explicit dependencies.  Conversely, @code{package-development-inputs} includes inputs implicitly added by @code{gnu-build-system} that are required to build @code{hello}: tar, gzip, GCC, libc, Bash, and more.  To visualize it, @command{guix graph hello} would show you explicit inputs, whereas @command{guix graph -t bag hello} would include implicit inputs (@pxref{Invoking guix graph})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8366
msgid "Because packages are regular Scheme objects that capture a complete dependency graph and associated build procedures, it is often useful to write procedures that take a package and return a modified version thereof according to some parameters.  Below are a few examples."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:8367
#, no-wrap
msgid "tool chain, choosing a package's tool chain"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8368
#, no-wrap
msgid "{Procedure} package-with-c-toolchain package toolchain"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8373
msgid "Return a variant of @var{package} that uses @var{toolchain} instead of the default GNU C/C++ toolchain.  @var{toolchain} must be a list of inputs (label/package tuples) providing equivalent functionality, such as the @code{gcc-toolchain} package."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8377
msgid "The example below returns a variant of the @code{hello} package built with GCC@tie{}10.x and the rest of the GNU tool chain (Binutils and the GNU C Library) instead of the default tool chain:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8381
#, no-wrap
msgid ""
"(let ((toolchain (specification->package \"gcc-toolchain@@10\")))\n"
"  (package-with-c-toolchain hello `((\"toolchain\" ,toolchain))))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8389
msgid "The build tool chain is part of the @dfn{implicit inputs} of packages---it's usually not listed as part of the various ``inputs'' fields and is instead pulled in by the build system.  Consequently, this procedure works by changing the build system of @var{package} so that it pulls in @var{toolchain} instead of the defaults.  @xref{Build Systems}, for more on build systems."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:8392
#, no-wrap
msgid "@code{origin} Reference"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8400
msgid "This section documents @dfn{origins}.  An @code{origin} declaration specifies data that must be ``produced''---downloaded, usually---and whose content hash is known in advance.  Origins are primarily used to represent the source code of packages (@pxref{Defining Packages}).  For that reason, the @code{origin} form allows you to declare patches to apply to the original source code as well as code snippets to modify it."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:8401
#, no-wrap
msgid "{Data Type} origin"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:8403
msgid "This is the data type representing a source code origin."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:8405 guix-git/doc/guix.texi:34922
#, no-wrap
msgid "uri"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8410
msgid "An object containing the URI of the source.  The object type depends on the @code{method} (see below).  For example, when using the @var{url-fetch} method of @code{(guix download)}, the valid @code{uri} values are: a URL represented as a string, or a list thereof."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:8411
#, no-wrap
msgid "fixed-output derivations, for download"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:8412
#, no-wrap
msgid "method"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8419
msgid "A monadic procedure that handles the given URI@.  The procedure must accept at least three arguments: the value of the @code{uri} field and the hash algorithm and hash value specified by the @code{hash} field.  It must return a store item or a derivation in the store monad (@pxref{The Store Monad}); most methods return a fixed-output derivation (@pxref{Derivations})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8423
msgid "Commonly used methods include @code{url-fetch}, which fetches data from a URL, and @code{git-fetch}, which fetches data from a Git repository (see below)."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:8424
#, no-wrap
msgid "sha256"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8428
msgid "A bytevector containing the SHA-256 hash of the source.  This is equivalent to providing a @code{content-hash} SHA256 object in the @code{hash} field described below."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:8429
#, no-wrap
msgid "hash"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8432
msgid "The @code{content-hash} object of the source---see below for how to use @code{content-hash}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8436
msgid "You can obtain this information using @code{guix download} (@pxref{Invoking guix download}) or @code{guix hash} (@pxref{Invoking guix hash})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8437
#, no-wrap
msgid "@code{file-name} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8443
msgid "The file name under which the source code should be saved.  When this is @code{#f}, a sensible default value will be used in most cases.  In case the source is fetched from a URL, the file name from the URL will be used.  For version control checkouts, it is recommended to provide the file name explicitly because the default is not very descriptive."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8444
#, no-wrap
msgid "@code{patches} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8447
msgid "A list of file names, origins, or file-like objects (@pxref{G-Expressions, file-like objects}) pointing to patches to be applied to the source."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8451
msgid "This list of patches must be unconditional.  In particular, it cannot depend on the value of @code{%current-system} or @code{%current-target-system}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8452
#, no-wrap
msgid "@code{snippet} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8456
msgid "A G-expression (@pxref{G-Expressions}) or S-expression that will be run in the source directory.  This is a convenient way to modify the source, sometimes more convenient than a patch."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8457
#, no-wrap
msgid "@code{patch-flags} (default: @code{'(\"-p1\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8460
msgid "A list of command-line flags that should be passed to the @code{patch} command."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8461
#, no-wrap
msgid "@code{patch-inputs} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8465
msgid "Input packages or derivations to the patching process.  When this is @code{#f}, the usual set of inputs necessary for patching are provided, such as GNU@tie{}Patch."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8466 guix-git/doc/guix.texi:34746
#, no-wrap
msgid "@code{modules} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8469
msgid "A list of Guile modules that should be loaded during the patching process and while running the code in the @code{snippet} field."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8470
#, no-wrap
msgid "@code{patch-guile} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8473
msgid "The Guile package that should be used in the patching process.  When this is @code{#f}, a sensible default is used."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:8476
#, no-wrap
msgid "{Data Type} content-hash @var{value} [@var{algorithm}]"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:8480
msgid "Construct a content hash object for the given @var{algorithm}, and with @var{value} as its hash value.  When @var{algorithm} is omitted, assume it is @code{sha256}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:8483
msgid "@var{value} can be a literal string, in which case it is base32-decoded, or it can be a bytevector."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:8485
msgid "The following forms are all equivalent:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8494
#, no-wrap
msgid ""
"(content-hash \"05zxkyz9bv3j9h0xyid1rhvh3klhsmrpkf3bcs6frvlgyr2gwilj\")\n"
"(content-hash \"05zxkyz9bv3j9h0xyid1rhvh3klhsmrpkf3bcs6frvlgyr2gwilj\"\n"
"              sha256)\n"
"(content-hash (base32\n"
"               \"05zxkyz9bv3j9h0xyid1rhvh3klhsmrpkf3bcs6frvlgyr2gwilj\"))\n"
"(content-hash (base64 \"kkb+RPaP7uyMZmu4eXPVkM4BN8yhRd8BTHLslb6f/Rc=\")\n"
"              sha256)\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:8499
msgid "Technically, @code{content-hash} is currently implemented as a macro.  It performs sanity checks at macro-expansion time, when possible, such as ensuring that @var{value} has the right size for @var{algorithm}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8505
msgid "As we have seen above, how exactly the data an origin refers to is retrieved is determined by its @code{method} field.  The @code{(guix download)} module provides the most common method, @code{url-fetch}, described below."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8506
#, no-wrap
msgid "{Procedure} url-fetch url hash-algo hash [name] [#:executable? #f]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8513
msgid "Return a fixed-output derivation that fetches data from @var{url} (a string, or a list of strings denoting alternate URLs), which is expected to have hash @var{hash} of type @var{hash-algo} (a symbol).  By default, the file name is the base name of URL; optionally, @var{name} can specify a different file name.  When @var{executable?} is true, make the downloaded file executable."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8516
msgid "When one of the URL starts with @code{mirror://}, then its host part is interpreted as the name of a mirror scheme, taken from @file{%mirror-file}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8519
msgid "Alternatively, when URL starts with @code{file://}, return the corresponding file name in the store."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8525
msgid "Likewise, the @code{(guix git-download)} module defines the @code{git-fetch} origin method, which fetches data from a Git version control repository, and the @code{git-reference} data type to describe the repository and revision to fetch."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8526
#, no-wrap
msgid "{Procedure} git-fetch ref hash-algo hash [name]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8531
msgid "Return a fixed-output derivation that fetches @var{ref}, a @code{<git-reference>} object.  The output is expected to have recursive hash @var{hash} of type @var{hash-algo} (a symbol).  Use @var{name} as the file name, or a generic name if @code{#f}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8533
#, no-wrap
msgid "{Procedure} git-fetch/lfs ref hash-algo hash [name]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8538
msgid "This is a variant of the @code{git-fetch} procedure that supports the Git @acronym{LFS, Large File Storage} extension.  This may be useful to pull some binary test data to run the test suite of a package, for example."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:8540
#, no-wrap
msgid "{Data Type} git-reference"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:8543
msgid "This data type represents a Git reference for @code{git-fetch} to retrieve."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8545 guix-git/doc/guix.texi:8593
#: guix-git/doc/guix.texi:8617 guix-git/doc/guix.texi:8652
#: guix-git/doc/guix.texi:32148 guix-git/doc/guix.texi:38139
#, no-wrap
msgid "url"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8547
msgid "The URL of the Git repository to clone."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:8548
#, no-wrap
msgid "commit"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8553
msgid "This string denotes either the commit to fetch (a hexadecimal string), or the tag to fetch.  You can also use a ``short'' commit ID or a @command{git describe} style identifier such as @code{v1.0.1-10-g58d7909c97}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8554 guix-git/doc/guix.texi:8623
#, no-wrap
msgid "@code{recursive?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8556
msgid "This Boolean indicates whether to recursively fetch Git sub-modules."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:8560
msgid "The example below denotes the @code{v2.10} tag of the GNU@tie{}Hello repository:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8565
#, no-wrap
msgid ""
"(git-reference\n"
"  (url \"https://git.savannah.gnu.org/git/hello.git\")\n"
"  (commit \"v2.10\"))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:8569
msgid "This is equivalent to the reference below, which explicitly names the commit:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8574
#, no-wrap
msgid ""
"(git-reference\n"
"  (url \"https://git.savannah.gnu.org/git/hello.git\")\n"
"  (commit \"dc7dc56a00e48fe6f231a58f6537139fe2908fb9\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8580
msgid "For Mercurial repositories, the module @code{(guix hg-download)} defines the @code{hg-fetch} origin method and @code{hg-reference} data type for support of the Mercurial version control system."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8581
#, no-wrap
msgid "{Procedure} hg-fetch ref hash-algo hash [name]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8586
msgid "Return a fixed-output derivation that fetches @var{ref}, a @code{<hg-reference>} object.  The output is expected to have recursive hash @var{hash} of type @var{hash-algo} (a symbol).  Use @var{name} as the file name, or a generic name if @code{#f}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:8588
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} hg-reference"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:8591
msgid "This data type represents a Mercurial reference for @code{hg-fetch} to retrieve."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8595
#, fuzzy
#| msgid "Pushing to the official repository."
msgid "The URL of the Mercurial repository to clone."
msgstr "Esegui il Pushing sul repository ufficiale."

#. type: code{#1}
#: guix-git/doc/guix.texi:8596
#, no-wrap
msgid "changeset"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8598
msgid "This string denotes the changeset to fetch."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8604
msgid "For Subversion repositories, the module @code{(guix svn-download)} defines the @code{svn-fetch} origin method and @code{svn-reference} data type for support of the Subversion version control system."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8605
#, no-wrap
msgid "{Procedure} svn-fetch ref hash-algo hash [name]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8610
msgid "Return a fixed-output derivation that fetches @var{ref}, a @code{<svn-reference>} object.  The output is expected to have recursive hash @var{hash} of type @var{hash-algo} (a symbol).  Use @var{name} as the file name, or a generic name if @code{#f}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:8612
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} svn-reference"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:8615
msgid "This data type represents a Subversion reference for @code{svn-fetch} to retrieve."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8619
msgid "The URL of the Subversion repository to clone."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:8620 guix-git/doc/guix.texi:8655
#: guix-git/doc/guix.texi:8682
#, no-wrap
msgid "revision"
msgstr "revision"

#. type: table
#: guix-git/doc/guix.texi:8622
msgid "This string denotes the revision to fetch specified as a number."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8626
msgid "This Boolean indicates whether to recursively fetch Subversion ``externals''."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8627
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{user-name} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:8630
msgid "The name of an account that has read-access to the repository, if the repository isn't public."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8631 guix-git/doc/guix.texi:19173
#: guix-git/doc/guix.texi:19228
#, no-wrap
msgid "@code{password} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8633
msgid "Password to access the Subversion repository, if required."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8639
msgid "For Bazaar repositories, the module @code{(guix bzr-download)} defines the @code{bzr-fetch} origin method and @code{bzr-reference} data type for support of the Bazaar version control system."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8640
#, no-wrap
msgid "{Procedure} bzr-fetch ref hash-algo hash [name]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8645
msgid "Return a fixed-output derivation that fetches @var{ref}, a @code{<bzr-reference>} object.  The output is expected to have recursive hash @var{hash} of type @var{hash-algo} (a symbol).  Use @var{name} as the file name, or a generic name if @code{#f}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:8647
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} bzr-reference"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:8650
msgid "This data type represents a Bazaar reference for @code{bzr-fetch} to retrieve."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8654
msgid "The URL of the Bazaar repository to clone."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8657
msgid "This string denotes revision to fetch specified as a number."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8663
msgid "For CVS repositories, the module @code{(guix cvs-download)} defines the @code{cvs-fetch} origin method and @code{cvs-reference} data type for support of the Concurrent Versions System (CVS)."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8664
#, no-wrap
msgid "{Procedure} cvs-fetch ref hash-algo hash [name]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8669
msgid "Return a fixed-output derivation that fetches @var{ref}, a @code{<cvs-reference>} object.  The output is expected to have recursive hash @var{hash} of type @var{hash-algo} (a symbol).  Use @var{name} as the file name, or a generic name if @code{#f}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:8671
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} cvs-reference"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:8674
msgid "This data type represents a CVS reference for @code{cvs-fetch} to retrieve."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:8676
#, no-wrap
msgid "root-directory"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8678
msgid "The CVS root directory."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8679 guix-git/doc/guix.texi:16350
#, no-wrap
msgid "module"
msgstr "module"

#. type: table
#: guix-git/doc/guix.texi:8681
msgid "Module to fetch."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8684
msgid "Revision to fetch."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:8687
msgid "The example below denotes a version of gnu-standards to fetch:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8693
#, no-wrap
msgid ""
"(cvs-reference\n"
"  (root-directory \":pserver:anonymous@@cvs.savannah.gnu.org:/sources/gnustandards\")\n"
"  (module \"gnustandards\")\n"
"  (revision \"2020-11-25\"))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:8700
#, no-wrap
msgid "customizing packages"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:8701
#, no-wrap
msgid "variants, of packages"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8711
msgid "One of the nice things with Guix is that, given a package definition, you can easily @emph{derive} variants of that package---for a different upstream version, with different dependencies, different compilation options, and so on.  Some of these custom packages can be defined straight from the command line (@pxref{Package Transformation Options}).  This section describes how to define package variants in code.  This can be useful in ``manifests'' (@pxref{Writing Manifests})  and in your own package collection (@pxref{Creating a Channel}), among others!"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:8712
#, no-wrap
msgid "inherit, for package definitions"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8719
msgid "As discussed earlier, packages are first-class objects in the Scheme language.  The @code{(guix packages)} module provides the @code{package} construct to define new package objects (@pxref{package Reference}).  The easiest way to define a package variant is using the @code{inherit} keyword together with @code{package}.  This allows you to inherit from a package definition while overriding the fields you want."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8724
msgid "For example, given the @code{hello} variable, which contains a definition for the current version of GNU@tie{}Hello, here's how you would define a variant for version 2.2 (released in 2006, it's vintage!):"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8727
#, no-wrap
msgid ""
"(use-modules (gnu packages base))    ;for 'hello'\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8739
#, no-wrap
msgid ""
"(define hello-2.2\n"
"  (package\n"
"    (inherit hello)\n"
"    (version \"2.2\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0lappv4slgb5spyqbh6yl5r013zv72yqg2pcl30mginf3wdqd8k9\"))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8749
msgid "The example above corresponds to what the @option{--with-version} or @option{--with-source} package transformations option do.  Essentially @code{hello-2.2} preserves all the fields of @code{hello}, except @code{version} and @code{source}, which it overrides.  Note that the original @code{hello} variable is still there, in the @code{(gnu packages base)} module, unchanged.  When you define a custom package like this, you are really @emph{adding} a new package definition; the original one remains available."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8755
msgid "You can just as well define variants with a different set of dependencies than the original package.  For example, the default @code{gdb} package depends on @code{guile}, but since that is an optional dependency, you can define a variant that removes that dependency like so:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8758
#, no-wrap
msgid ""
"(use-modules (gnu packages gdb))   ;for 'gdb'\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8764
#, no-wrap
msgid ""
"(define gdb-sans-guile\n"
"  (package\n"
"    (inherit gdb)\n"
"    (inputs (modify-inputs (package-inputs gdb)\n"
"              (delete \"guile\")))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8770
msgid "The @code{modify-inputs} form above removes the @code{\"guile\"} package from the @code{inputs} field of @code{gdb}.  The @code{modify-inputs} macro is a helper that can prove useful anytime you want to remove, add, or replace package inputs."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:8771
#, no-wrap
msgid "modify-inputs inputs clauses"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:8775
msgid "Modify the given package inputs, as returned by @code{package-inputs} & co., according to the given clauses.  Each clause must have one of the following forms:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8777
#, no-wrap
msgid "(delete @var{name}@dots{})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8779
msgid "Delete from the inputs packages with the given @var{name}s (strings)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8780
#, no-wrap
msgid "(prepend @var{package}@dots{})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8782
msgid "Add @var{package}s to the front of the input list."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8783
#, no-wrap
msgid "(append @var{package}@dots{})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8785
msgid "Add @var{package}s to the end of the input list."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8786
#, no-wrap
msgid "(replace @var{name} @var{replacement})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8788
msgid "Replace the package called @var{name} with @var{replacement}."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:8792
msgid "The example below removes the GMP and ACL inputs of Coreutils and adds libcap to the front of the input list:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8797
#, no-wrap
msgid ""
"(modify-inputs (package-inputs coreutils)\n"
"  (delete \"gmp\" \"acl\")\n"
"  (prepend libcap))\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:8801
msgid "The example below replaces the @code{guile} package from the inputs of @code{guile-redis} with @code{guile-2.2}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8805
#, no-wrap
msgid ""
"(modify-inputs (package-inputs guile-redis)\n"
"  (replace \"guile\" guile-2.2))\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:8809
msgid "The last type of clause is @code{append}, to add inputs at the back of the list."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8818
msgid "In some cases, you may find it useful to write functions (``procedures'', in Scheme parlance) that return a package based on some parameters.  For example, consider the @code{luasocket} library for the Lua programming language.  We want to create @code{luasocket} packages for major versions of Lua.  One way to do that is to define a procedure that takes a Lua package and returns a @code{luasocket} package that depends on it:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8828
#, no-wrap
msgid ""
"(define (make-lua-socket name lua)\n"
"  ;; Return a luasocket package built with LUA.\n"
"  (package\n"
"    (name name)\n"
"    (version \"3.0\")\n"
"    ;; several fields omitted\n"
"    (inputs (list lua))\n"
"    (synopsis \"Socket library for Lua\")))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8831
#, no-wrap
msgid ""
"(define-public lua5.1-socket\n"
"  (make-lua-socket \"lua5.1-socket\" lua-5.1))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8834
#, no-wrap
msgid ""
"(define-public lua5.2-socket\n"
"  (make-lua-socket \"lua5.2-socket\" lua-5.2))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8842
msgid "Here we have defined packages @code{lua5.1-socket} and @code{lua5.2-socket} by calling @code{make-lua-socket} with different arguments.  @xref{Procedures,,, guile, GNU Guile Reference Manual}, for more info on procedures.  Having top-level public definitions for these two packages means that they can be referred to from the command line (@pxref{Package Modules})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:8843
#, no-wrap
msgid "package transformations"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8848
msgid "These are pretty simple package variants.  As a convenience, the @code{(guix transformations)} module provides a high-level interface that directly maps to the more sophisticated package transformation options (@pxref{Package Transformation Options}):"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8849
#, no-wrap
msgid "{Procedure} options->transformation opts"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8853
msgid "Return a procedure that, when passed an object to build (package, derivation, etc.), applies the transformations specified by @var{opts} and returns the resulting objects.  @var{opts} must be a list of symbol/string pairs such as:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8857
#, no-wrap
msgid ""
"((with-branch . \"guile-gcrypt=master\")\n"
" (without-tests . \"libgcrypt\"))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8861
msgid "Each symbol names a transformation and the corresponding string is an argument to that transformation."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8864
msgid "For instance, a manifest equivalent to this command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:8869
#, no-wrap
msgid ""
"guix build guix \\\n"
"  --with-branch=guile-gcrypt=master \\\n"
"  --with-debug-info=zlib\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8873
msgid "... would look like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8876
#, no-wrap
msgid ""
"(use-modules (guix transformations))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8882
#, no-wrap
msgid ""
"(define transform\n"
"  ;; The package transformation procedure.\n"
"  (options->transformation\n"
"   '((with-branch . \"guile-gcrypt=master\")\n"
"     (with-debug-info . \"zlib\"))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8885
#, no-wrap
msgid ""
"(packages->manifest\n"
" (list (transform (specification->package \"guix\"))))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:8887
#, no-wrap
msgid "input rewriting"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:8888
#, no-wrap
msgid "dependency graph rewriting"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8895
msgid "The @code{options->transformation} procedure is convenient, but it's perhaps also not as flexible as you may like.  How is it implemented? The astute reader probably noticed that most package transformation options go beyond the superficial changes shown in the first examples of this section: they involve @dfn{input rewriting}, whereby the dependency graph of a package is rewritten by replacing specific inputs by others."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8899
msgid "Dependency graph rewriting, for the purposes of swapping packages in the graph, is what the @code{package-input-rewriting} procedure in @code{(guix packages)} implements."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8900
#, no-wrap
msgid "{Procedure} package-input-rewriting replacements [rewrite-name] @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8907
msgid "[#:deep? #t] [#:recursive? #f] Return a procedure that, when passed a package, replaces its direct and indirect dependencies, including implicit inputs when @var{deep?} is true, according to @var{replacements}.  @var{replacements} is a list of package pairs; the first element of each pair is the package to replace, and the second one is the replacement."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8910
msgid "When @var{recursive?} is true, apply replacements to the right-hand sides of @var{replacements} as well, recursively."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8913
msgid "Optionally, @var{rewrite-name} is a one-argument procedure that takes the name of a package and returns its new name after rewrite."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8917 guix-git/doc/guix.texi:13683
msgid "Consider this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8923
#, no-wrap
msgid ""
"(define libressl-instead-of-openssl\n"
"  ;; This is a procedure to replace OPENSSL by LIBRESSL,\n"
"  ;; recursively.\n"
"  (package-input-rewriting `((,openssl . ,libressl))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8926
#, no-wrap
msgid ""
"(define git-with-libressl\n"
"  (libressl-instead-of-openssl git))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8934
msgid "Here we first define a rewriting procedure that replaces @var{openssl} with @var{libressl}.  Then we use it to define a @dfn{variant} of the @var{git} package that uses @var{libressl} instead of @var{openssl}.  This is exactly what the @option{--with-input} command-line option does (@pxref{Package Transformation Options, @option{--with-input}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8937
msgid "The following variant of @code{package-input-rewriting} can match packages to be replaced by name rather than by identity."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8938
#, no-wrap
msgid "{Procedure} package-input-rewriting/spec @var{replacements} @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8943
msgid "[#:deep? #t] [#:replace-hidden? #t] Return a procedure that, given a package, applies the given @var{replacements} to all the package graph, including implicit inputs unless @var{deep?} is false."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8949
msgid "@var{replacements} is a list of spec/procedures pair; each spec is a package specification such as @code{\"gcc\"} or @code{\"guile@@2\"}, and each procedure takes a matching package and returns a replacement for that package.  Matching packages that have the @code{hidden?} property set are not replaced unless @var{replace-hidden?} is set to true."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8952
msgid "The example above could be rewritten this way:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8957
#, no-wrap
msgid ""
"(define libressl-instead-of-openssl\n"
"  ;; Replace all the packages called \"openssl\" with LibreSSL.\n"
"  (package-input-rewriting/spec `((\"openssl\" . ,(const libressl)))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8962
msgid "The key difference here is that, this time, packages are matched by spec and not by identity.  In other words, any package in the graph that is called @code{openssl} will be replaced."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8966
msgid "A more generic procedure to rewrite a package dependency graph is @code{package-mapping}: it supports arbitrary changes to nodes in the graph."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8967
#, no-wrap
msgid "{Procedure} package-mapping proc [cut?] [#:deep? #f]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8972
msgid "Return a procedure that, given a package, applies @var{proc} to all the packages depended on and returns the resulting package.  The procedure stops recursion when @var{cut?} returns true for a given package.  When @var{deep?} is true, @var{proc} is applied to implicit inputs as well."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:8974
#, no-wrap
msgid "Tips"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:8978
msgid "Understanding what a variant really looks like can be difficult as one starts combining the tools shown above.  There are several ways to inspect a package before attempting to build it that can prove handy:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:8984
msgid "You can inspect the package interactively at the REPL, for instance to view its inputs, the code of its build phases, or its configure flags (@pxref{Using Guix Interactively})."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:8988
msgid "When rewriting dependencies, @command{guix graph} can often help visualize the changes that are made (@pxref{Invoking guix graph})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:8994
#, no-wrap
msgid "manifest"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:8995
#, no-wrap
msgid "bill of materials (manifests)"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:9006
msgid "@command{guix} commands let you specify package lists on the command line.  This is convenient, but as the command line becomes longer and less trivial, it quickly becomes more convenient to have that package list in what we call a @dfn{manifest}.  A manifest is some sort of a ``bill of materials'' that defines a package set.  You would typically come up with a code snippet that builds the manifest, store it in a file, say @file{manifest.scm}, and then pass that file to the @option{-m} (or @option{--manifest}) option that many @command{guix} commands support.  For example, here's what a manifest for a simple package set might look like:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:9010
#, no-wrap
msgid ""
";; Manifest for three packages.\n"
"(specifications->manifest '(\"gcc-toolchain\" \"make\" \"git\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:9016
msgid "Once you have that manifest, you can pass it, for example, to @command{guix package} to install just those three packages to your profile (@pxref{profile-manifest, @option{-m} option of @command{guix package}}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:9019
#, no-wrap
msgid "guix package -m manifest.scm\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:9025
msgid "... or you can pass it to @command{guix shell} (@pxref{shell-manifest, @command{-m} option of @command{guix shell}}) to spawn an ephemeral environment:"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:9035
msgid "... or you can pass it to @command{guix pack} in pretty much the same way (@pxref{pack-manifest, @option{-m} option of @command{guix pack}}).  You can store the manifest under version control, share it with others so they can easily get set up, etc."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:9041
msgid "But how do you write your first manifest? To get started, maybe you'll want to write a manifest that mirrors what you already have in a profile.  Rather than start from a blank page, @command{guix package} can generate a manifest for you (@pxref{export-manifest, @command{guix package --export-manifest}}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:9046
#, no-wrap
msgid ""
"# Write to 'manifest.scm' a manifest corresponding to the\n"
"# default profile, ~/.guix-profile.\n"
"guix package --export-manifest > manifest.scm\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:9051
msgid "Or maybe you'll want to ``translate'' command-line arguments into a manifest.  In that case, @command{guix shell} can help (@pxref{shell-export-manifest, @command{guix shell --export-manifest}}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:9055
#, no-wrap
msgid ""
"# Write a manifest for the packages specified on the command line.\n"
"guix shell --export-manifest gcc-toolchain make git > manifest.scm\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:9061
msgid "In both cases, the @option{--export-manifest} option tries hard to generate a faithful manifest; in particular, it takes package transformation options into account (@pxref{Package Transformation Options})."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:9067
msgid "Manifests are @emph{symbolic}: they refer to packages of the channels @emph{currently in use} (@pxref{Channels}).  In the example above, @code{gcc-toolchain} might refer to version 14 today, but it might refer to version 16 two years from now."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:9072
msgid "If you want to ``pin'' your software environment to specific package versions and variants, you need an additional piece of information: the list of channel revisions in use, as returned by @command{guix describe}.  @xref{Replicating Guix}, for more information."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:9077
msgid "Once you've obtained your first manifest, perhaps you'll want to customize it.  Since your manifest is code, you now have access to all the Guix programming interfaces!"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:9083
msgid "Let's assume you want a manifest to deploy a custom variant of GDB, the GNU Debugger, that does not depend on Guile, together with another package.  Building on the example seen in the previous section (@pxref{Defining Package Variants}), you can write a manifest along these lines:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:9088
#, no-wrap
msgid ""
"(use-modules (guix packages)\n"
"             (gnu packages gdb)               ;for 'gdb'\n"
"             (gnu packages version-control))  ;for 'git'\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:9095
#, no-wrap
msgid ""
";; Define a variant of GDB without a dependency on Guile.\n"
"(define gdb-sans-guile\n"
"  (package\n"
"    (inherit gdb)\n"
"    (inputs (modify-inputs (package-inputs gdb)\n"
"              (delete \"guile\")))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:9098
#, no-wrap
msgid ""
";; Return a manifest containing that one package plus Git.\n"
"(packages->manifest (list gdb-sans-guile git))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:9109
msgid "Note that in this example, the manifest directly refers to the @code{gdb} and @code{git} variables, which are bound to a @code{package} object (@pxref{package Reference}), instead of calling @code{specifications->manifest} to look up packages by name as we did before.  The @code{use-modules} form at the top lets us access the core package interface (@pxref{Defining Packages}) and the modules that define @code{gdb} and @code{git} (@pxref{Package Modules}).  Seamlessly, we're weaving all this together---the possibilities are endless, unleash your creativity!"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:9113
msgid "The data type for manifests as well as supporting procedures are defined in the @code{(guix profiles)} module, which is automatically available to code passed to @option{-m}.  The reference follows."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:9114
#, no-wrap
msgid "{Data Type} manifest"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:9116
msgid "Data type representing a manifest."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:9118
msgid "It currently has one field:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9120
#, no-wrap
msgid "entries"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9122
msgid "This must be a list of @code{manifest-entry} records---see below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:9125
#, no-wrap
msgid "{Data Type} manifest-entry"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:9131
msgid "Data type representing a manifest entry.  A manifest entry contains essential metadata: a name and version string, the object (usually a package) for that entry, the desired output (@pxref{Packages with Multiple Outputs}), and a number of optional pieces of information detailed below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:9136
msgid "Most of the time, you won't build a manifest entry directly; instead, you will pass a package to @code{package->manifest-entry}, described below.  In some unusual cases though, you might want to create manifest entries for things that are @emph{not} packages, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:9149
#, no-wrap
msgid ""
";; Manually build a single manifest entry for a non-package object.\n"
"(let ((hello (program-file \"hello\" #~(display \"Hi!\"))))\n"
"  (manifest-entry\n"
"    (name \"foo\")\n"
"    (version \"42\")\n"
"    (item\n"
"     (computed-file \"hello-directory\"\n"
"                     #~(let ((bin (string-append #$output \"/bin\")))\n"
"                         (mkdir #$output) (mkdir bin)\n"
"                          (symlink #$hello\n"
"                                   (string-append bin \"/hello\")))))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:9152
msgid "The available fields are the following:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9157
msgid "Name and version string for this entry."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:9158
#, no-wrap
msgid "item"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9161
msgid "A package or other file-like object (@pxref{G-Expressions, file-like objects})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9162
#, no-wrap
msgid "@code{output} (default: @code{\"out\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9165
msgid "Output of @code{item} to use, in case @code{item} has multiple outputs (@pxref{Packages with Multiple Outputs})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9166 guix-git/doc/guix.texi:18457
#: guix-git/doc/guix.texi:18950
#, no-wrap
msgid "@code{dependencies} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9169
msgid "List of manifest entries this entry depends on.  When building a profile, dependencies are added to the profile."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9173
msgid "Typically, the propagated inputs of a package (@pxref{package Reference, @code{propagated-inputs}}) end up having a corresponding manifest entry in among the dependencies of the package's own manifest entry."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9177
msgid "The list of search path specifications honored by this entry (@pxref{Search Paths})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9178
#, no-wrap
msgid "@code{properties} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9181
msgid "List of symbol/value pairs.  When building a profile, those properties get serialized."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9185
msgid "This can be used to piggyback additional metadata---e.g., the transformations applied to a package (@pxref{Package Transformation Options})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9186
#, no-wrap
msgid "@code{parent} (default: @code{(delay #f)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9188
msgid "A promise pointing to the ``parent'' manifest entry."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9191
msgid "This is used as a hint to provide context when reporting an error related to a manifest entry coming from a @code{dependencies} field."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9194
#, no-wrap
msgid "{Procedure} concatenate-manifests lst"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9197
msgid "Concatenate the manifests listed in @var{lst} and return the resulting manifest."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9201
#, no-wrap
msgid "{Procedure} package->manifest-entry package [output] [#:properties]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9209
msgid "Return a manifest entry for the @var{output} of package @var{package}, where @var{output} defaults to @code{\"out\"}, and with the given @var{properties}.  By default @var{properties} is the empty list or, if one or more package transformations were applied to @var{package}, it is an association list representing those transformations, suitable as an argument to @code{options->transformation} (@pxref{Defining Package Variants, @code{options->transformation}})."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9212
msgid "The code snippet below builds a manifest with an entry for the default output and the @code{send-email} output of the @code{git} package:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:9215 guix-git/doc/guix.texi:9232
#, no-wrap
msgid ""
"(use-modules (gnu packages version-control))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:9218
#, no-wrap
msgid ""
"(manifest (list (package->manifest-entry git)\n"
"                (package->manifest-entry git \"send-email\")))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9221
#, no-wrap
msgid "{Procedure} packages->manifest packages"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9226
msgid "Return a list of manifest entries, one for each item listed in @var{packages}.  Elements of @var{packages} can be either package objects or package/string tuples denoting a specific output of a package."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9229
msgid "Using this procedure, the manifest above may be rewritten more concisely:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:9234
#, no-wrap
msgid "(packages->manifest (list git `(,git \"send-email\")))\n"
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:9238
msgid "package-development-manifest"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9238
#, no-wrap
msgid "{Procedure} package->development-manifest package [system] [#:target]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9243
msgid "Return a manifest for the @dfn{development inputs} of @var{package} for @var{system}, optionally when cross-compiling to @var{target}.  Development inputs include both explicit and implicit inputs of @var{package}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9251
msgid "Like the @option{-D} option of @command{guix shell} (@pxref{shell-development-option, @command{guix shell -D}}), the resulting manifest describes the environment in which one can develop @var{package}.  For example, suppose you're willing to set up a development environment for Inkscape, with the addition of Git for version control; you can describe that ``bill of materials'' with the following manifest:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:9255
#, no-wrap
msgid ""
"(use-modules (gnu packages inkscape)          ;for 'inkscape'\n"
"             (gnu packages version-control))  ;for 'git'\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:9259
#, no-wrap
msgid ""
"(concatenate-manifests\n"
" (list (package->development-manifest inkscape)\n"
"       (packages->manifest (list git))))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9266
msgid "In this example, the development manifest that @code{package->development-manifest} returns includes the compiler (GCC), the many supporting libraries (Boost, GLib, GTK, etc.), and a couple of additional development tools---these are the dependencies @command{guix show inkscape} lists."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:9273
msgid "Last, the @code{(gnu packages)} module provides higher-level facilities to build manifests.  In particular, it lets you look up packages by name---see below."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9274
#, no-wrap
msgid "{Procedure} specifications->manifest specs"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9279
msgid "Given @var{specs}, a list of specifications such as @code{\"emacs@@25.2\"} or @code{\"guile:debug\"}, return a manifest.  Specs have the format that command-line tools such as @command{guix install} and @command{guix package} understand (@pxref{Invoking guix package})."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9282
msgid "As an example, it lets you rewrite the Git manifest that we saw earlier like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:9285
#, no-wrap
msgid "(specifications->manifest '(\"git\" \"git:send-email\"))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9291
msgid "Notice that we do not need to worry about @code{use-modules}, importing the right set of modules, and referring to the right variables.  Instead, we directly refer to packages in the same way as on the command line, which can often be more convenient."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:9299
#, no-wrap
msgid "build system"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:9304
msgid "Each package definition specifies a @dfn{build system} and arguments for that build system (@pxref{Defining Packages}).  This @code{build-system} field represents the build procedure of the package, as well as implicit dependencies of that build procedure."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:9308
msgid "Build systems are @code{<build-system>} objects.  The interface to create and manipulate them is provided by the @code{(guix build-system)} module, and actual build systems are exported by specific modules."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:9309
#, no-wrap
msgid "bag (low-level package representation)"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:9319
msgid "Under the hood, build systems first compile package objects to @dfn{bags}.  A @dfn{bag} is like a package, but with less ornamentation---in other words, a bag is a lower-level representation of a package, which includes all the inputs of that package, including some that were implicitly added by the build system.  This intermediate representation is then compiled to a derivation (@pxref{Derivations}).  The @code{package-with-c-toolchain} is an example of a way to change the implicit inputs that a package's build system pulls in (@pxref{package Reference, @code{package-with-c-toolchain}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:9327
msgid "Build systems accept an optional list of @dfn{arguments}.  In package definitions, these are passed @i{via} the @code{arguments} field (@pxref{Defining Packages}).  They are typically keyword arguments (@pxref{Optional Arguments, keyword arguments in Guile,, guile, GNU Guile Reference Manual}).  The value of these arguments is usually evaluated in the @dfn{build stratum}---i.e., by a Guile process launched by the daemon (@pxref{Derivations})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:9331
msgid "The main build system is @code{gnu-build-system}, which implements the standard build procedure for GNU and many other packages.  It is provided by the @code{(guix build-system gnu)} module."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9332
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "gnu-build-system"
msgstr "Filesystem"

#. type: defvar
#: guix-git/doc/guix.texi:9336
msgid "@code{gnu-build-system} represents the GNU Build System, and variants thereof (@pxref{Configuration, configuration and makefile conventions,, standards, GNU Coding Standards})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:9337 guix-git/doc/guix.texi:10600
#: guix-git/doc/guix.texi:11229
#, no-wrap
msgid "build phases"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9344
msgid "In a nutshell, packages using it are configured, built, and installed with the usual @code{./configure && make && make check && make install} command sequence.  In practice, a few additional steps are often needed.  All these steps are split up in separate @dfn{phases}.  @xref{Build Phases}, for more info on build phases and ways to customize them."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9351
msgid "In addition, this build system ensures that the ``standard'' environment for GNU packages is available.  This includes tools such as GCC, libc, Coreutils, Bash, Make, Diffutils, grep, and sed (see the @code{(guix build-system gnu)} module for a complete list).  We call these the @dfn{implicit inputs} of a package, because package definitions do not have to mention them."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9355
msgid "This build system supports a number of keyword arguments, which can be passed @i{via} the @code{arguments} field of a package.  Here are some of the main parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9357
#, no-wrap
msgid "#:phases"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9360
msgid "This argument specifies build-side code that evaluates to an alist of build phases.  @xref{Build Phases}, for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9361
#, no-wrap
msgid "#:configure-flags"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9364
msgid "This is a list of flags (strings) passed to the @command{configure} script.  @xref{Defining Packages}, for an example."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9365
#, no-wrap
msgid "#:make-flags"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9369
msgid "This list of strings contains flags passed as arguments to @command{make} invocations in the @code{build}, @code{check}, and @code{install} phases."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9370
#, no-wrap
msgid "#:out-of-source?"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9373
msgid "This Boolean, @code{#f} by default, indicates whether to run builds in a build directory separate from the source tree."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9378
msgid "When it is true, the @code{configure} phase creates a separate build directory, changes to that directory, and runs the @code{configure} script from there.  This is useful for packages that require it, such as @code{glibc}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9379
#, no-wrap
msgid "#:tests?"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9382
msgid "This Boolean, @code{#t} by default, indicates whether the @code{check} phase should run the package's test suite."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9383
#, no-wrap
msgid "#:test-target"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9386
msgid "This string, @code{\"check\"} by default, gives the name of the makefile target used by the @code{check} phase."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9387
#, no-wrap
msgid "#:parallel-build?"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:9388
#, no-wrap
msgid "#:parallel-tests?"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9395
msgid "These Boolean values specify whether to build, respectively run the test suite, in parallel, with the @code{-j} flag of @command{make}.  When they are true, @code{make} is passed @code{-j@var{n}}, where @var{n} is the number specified as the @option{--cores} option of @command{guix-daemon} or that of the @command{guix} client command (@pxref{Common Build Options, @option{--cores}})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:9396 guix-git/doc/guix.texi:10740
#, no-wrap
msgid "RUNPATH, validation"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9397
#, no-wrap
msgid "#:validate-runpath?"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9403
msgid "This Boolean, @code{#t} by default, determines whether to ``validate'' the @code{RUNPATH} of ELF binaries (@code{.so} shared libraries as well as executables) previously installed by the @code{install} phase.  @xref{phase-validate-runpath, the @code{validate-runpath} phase}, for details."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9404
#, no-wrap
msgid "#:substitutable?"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9408
msgid "This Boolean, @code{#t} by default, tells whether the package outputs should be substitutable---i.e., whether users should be able to obtain substitutes for them instead of building locally (@pxref{Substitutes})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9409
#, no-wrap
msgid "#:allowed-references"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:9410
#, no-wrap
msgid "#:disallowed-references"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9415
msgid "When true, these arguments must be a list of dependencies that must not appear among the references of the build results.  If, upon build completion, some of these references are retained, the build process fails."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9420
msgid "This is useful to ensure that a package does not erroneously keep a reference to some of it build-time inputs, in cases where doing so would, for example, unnecessarily increase its size (@pxref{Invoking guix size})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9423
msgid "Most other build systems support these keyword arguments."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:9430
msgid "Other @code{<build-system>} objects are defined to support other conventions and tools used by free software packages.  They inherit most of @code{gnu-build-system}, and differ mainly in the set of inputs implicitly added to the build process, and in the list of phases executed.  Some of these build systems are listed below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9431
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "agda-build-system"
msgstr "Filesystem"

#. type: defvar
#: guix-git/doc/guix.texi:9434
msgid "This variable is exported by @code{(guix build-system agda)}.  It implements a build procedure for Agda libraries."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9437
msgid "It adds @code{agda} to the set of inputs.  A different Agda can be specified with the @code{#:agda} key."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9443
msgid "The @code{#:plan} key is a list of cons cells @code{(@var{regexp} . @var{parameters})}, where @var{regexp} is a regexp that should match the @code{.agda} files to build, and @var{parameters} is an optional list of parameters that will be passed to @code{agda} when type-checking it."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9449
msgid "When the library uses Haskell to generate a file containing all imports, the convenience @code{#:gnu-and-haskell?} can be set to @code{#t} to add @code{ghc} and the standard inputs of @code{gnu-build-system} to the input list.  You will still need to manually add a phase or tweak the @code{'build} phase, as in the definition of @code{agda-stdlib}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9452
#, no-wrap
msgid "ant-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9456
msgid "This variable is exported by @code{(guix build-system ant)}.  It implements the build procedure for Java packages that can be built with @url{https://ant.apache.org/, Ant build tool}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9461
msgid "It adds both @code{ant} and the @dfn{Java Development Kit} (JDK) as provided by the @code{icedtea} package to the set of inputs.  Different packages can be specified with the @code{#:ant} and @code{#:jdk} parameters, respectively."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9467
msgid "When the original package does not provide a suitable Ant build file, the parameter @code{#:jar-name} can be used to generate a minimal Ant build file @file{build.xml} with tasks to build the specified jar archive.  In this case the parameter @code{#:source-dir} can be used to specify the source sub-directory, defaulting to ``src''."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9475
msgid "The @code{#:main-class} parameter can be used with the minimal ant buildfile to specify the main class of the resulting jar.  This makes the jar file executable.  The @code{#:test-include} parameter can be used to specify the list of junit tests to run.  It defaults to @code{(list \"**/*Test.java\")}.  The @code{#:test-exclude} can be used to disable some tests.  It defaults to @code{(list \"**/Abstract*.java\")}, because abstract classes cannot be run as tests."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9479
msgid "The parameter @code{#:build-target} can be used to specify the Ant task that should be run during the @code{build} phase.  By default the ``jar'' task will be run."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9482
#, no-wrap
msgid "android-ndk-build-system"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:9483
#, no-wrap
msgid "Android distribution"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:9484
#, no-wrap
msgid "Android NDK build system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9488
msgid "This variable is exported by @code{(guix build-system android-ndk)}.  It implements a build procedure for Android NDK (native development kit)  packages using a Guix-specific build process."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9492
msgid "The build system assumes that packages install their public interface (header) files to the subdirectory @file{include} of the @code{out} output and their libraries to the subdirectory @file{lib} the @code{out} output."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9495
msgid "It's also assumed that the union of all the dependencies of a package has no conflicting files."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9498
msgid "For the time being, cross-compilation is not supported - so right now the libraries and header files are assumed to be host tools."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9501
#, no-wrap
msgid "asdf-build-system/source"
msgstr ""

#. type: defvarx
#: guix-git/doc/guix.texi:9502
#, no-wrap
msgid "asdf-build-system/sbcl"
msgstr ""

#. type: defvarx
#: guix-git/doc/guix.texi:9503
#, no-wrap
msgid "asdf-build-system/ecl"
msgstr ""

#. type: defvarx
#: guix-git/doc/guix.texi:9504
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "asdf-build-system/clasp"
msgstr "Filesystem"

#. type: defvar
#: guix-git/doc/guix.texi:9510
msgid "These variables, exported by @code{(guix build-system asdf)}, implement build procedures for Common Lisp packages using @url{https://common-lisp.net/project/asdf/, ``ASDF''}.  ASDF is a system definition facility for Common Lisp programs and libraries."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9517
msgid "The @code{asdf-build-system/source} system installs the packages in source form, and can be loaded using any common lisp implementation, via ASDF@.  The others, such as @code{asdf-build-system/sbcl}, install binary systems in the format which a particular implementation understands.  These build systems can also be used to produce executable programs, or lisp images which contain a set of packages pre-loaded."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9521
msgid "The build system uses naming conventions.  For binary packages, the package name should be prefixed with the lisp implementation, such as @code{sbcl-} for @code{asdf-build-system/sbcl}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9525
msgid "Additionally, the corresponding source package should be labeled using the same convention as Python packages (@pxref{Python Modules}), using the @code{cl-} prefix."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9533
msgid "In order to create executable programs and images, the build-side procedures @code{build-program} and @code{build-image} can be used.  They should be called in a build phase after the @code{create-asdf-configuration} phase, so that the system which was just built can be used within the resulting image.  @code{build-program} requires a list of Common Lisp expressions to be passed as the @code{#:entry-program} argument."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9542
msgid "By default, all the @file{.asd} files present in the sources are read to find system definitions.  The @code{#:asd-files} parameter can be used to specify the list of @file{.asd} files to read.  Furthermore, if the package defines a system for its tests in a separate file, it will be loaded before the tests are run if it is specified by the @code{#:test-asd-file} parameter.  If it is not set, the files @code{<system>-tests.asd}, @code{<system>-test.asd}, @code{tests.asd}, and @code{test.asd} will be tried if they exist."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9547
msgid "If for some reason the package must be named in a different way than the naming conventions suggest, or if several systems must be compiled, the @code{#:asd-systems} parameter can be used to specify the list of system names."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9550
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "cargo-build-system"
msgstr "Filesystem"

#. type: cindex
#: guix-git/doc/guix.texi:9551
#, no-wrap
msgid "Rust programming language"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:9552
#, no-wrap
msgid "Cargo (Rust build system)"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9556
msgid "This variable is exported by @code{(guix build-system cargo)}.  It supports builds of packages using Cargo, the build tool of the @uref{https://www.rust-lang.org, Rust programming language}."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:9561
msgid "Parameters @code{#:cargo-inputs} and @code{#:cargo-development-inputs}, previously used for specifying source inputs, are deprecated.  Their support will be removed after Dec. 31, 2026."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9565
msgid "It adds @code{rust} and @code{rust:cargo} to the set of inputs.  A different Rust package can be specified with the @code{#:rust} parameter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9575
msgid "In its @code{unpack-rust-crates}, @code{configure} and @code{patch-cargo-checksums} phases, this build system will make any source inputs available to Cargo.  It will also remove an included @code{Cargo.lock} file to be recreated by @command{cargo} during the @code{build} phase.  The @code{package} phase will run @command{cargo package} to create a source crate for future use.  The @code{install} phase installs the binaries defined by the crate.  Unless @code{install-source? #f} is defined it will also install a source crate repository of itself and unpacked sources, to ease in future hacking on Rust packages."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9586
msgid "This build system supports @url{https://doc.rust-lang.org/cargo/reference/workspaces.html, Cargo workspaces}.  Parameter @code{#:cargo-package-crates} (default: @code{''()})  allows specifying names of library crates to package in the @code{package} phase.  Specified crates are packaged from left to right, in case there's dependency among them.  For example, specifying @code{''(\"pcre2-sys\" \"pcre2\")} will package @code{\"pcre2-sys\"} first and then @code{\"pcre2\"}.  Parameter @code{#:cargo-install-paths} (default: @code{''()}) allows specifying paths of binary crates to install in the @code{install} phase, @code{''(\"crates/atuin\")}, for example."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9588
msgid "@xref{Rust Crates}, for packaging guidelines."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9590
#, no-wrap
msgid "chicken-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9595
msgid "This variable is exported by @code{(guix build-system chicken)}.  It builds @uref{https://call-cc.org/, CHICKEN Scheme} modules, also called ``eggs'' or ``extensions''.  CHICKEN generates C source code, which then gets compiled by a C compiler, in this case GCC."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9598
msgid "This build system adds @code{chicken} to the package inputs, as well as the packages of @code{gnu-build-system}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9602
msgid "The build system can't (yet) deduce the egg's name automatically, so just like with @code{go-build-system} and its @code{#:import-path}, you should define @code{#:egg-name} in the package's @code{arguments} field."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9604
msgid "For example, if you are packaging the @code{srfi-1} egg:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:9607
#, no-wrap
msgid "(arguments '(#:egg-name \"srfi-1\"))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9612
msgid "Egg dependencies must be defined in @code{propagated-inputs}, not @code{inputs} because CHICKEN doesn't embed absolute references in compiled eggs.  Test dependencies should go to @code{native-inputs}, as usual."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9614
#, no-wrap
msgid "copy-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9618
msgid "This variable is exported by @code{(guix build-system copy)}.  It supports builds of simple packages that don't require much compiling, mostly just moving files around."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9623
msgid "It adds much of the @code{gnu-build-system} packages to the set of inputs.  Because of this, the @code{copy-build-system} does not require all the boilerplate code often needed for the @code{trivial-build-system}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9628
msgid "To further simplify the file installation process, an @code{#:install-plan} argument is exposed to let the packager specify which files go where.  The install plan is a list of @code{(@var{source} @var{target} [@var{filters}])}.  @var{filters} are optional."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9630
#, no-wrap
msgid "When @var{source} matches a file or directory without trailing slash, install it to @var{target}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9632
#, no-wrap
msgid "If @var{target} has a trailing slash, install @var{source} basename beneath @var{target}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9633
#, no-wrap
msgid "Otherwise install @var{source} as @var{target}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9636
#, no-wrap
msgid "When @var{source} is a directory with a trailing slash, or when @var{filters} are used,"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9639
msgid "the trailing slash of @var{target} is implied with the same meaning as above."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9640
#, no-wrap
msgid "Without @var{filters}, install the full @var{source} @emph{content} to @var{target}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9641
#, no-wrap
msgid "With @var{filters} among @code{#:include}, @code{#:include-regexp}, @code{#:exclude},"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9644
msgid "@code{#:exclude-regexp}, only select files are installed depending on the filters.  Each filters is specified by a list of strings."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9645
#, no-wrap
msgid "With @code{#:include}, install all the files which the path suffix matches"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9647
msgid "at least one of the elements in the given list."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9647
#, no-wrap
msgid "With @code{#:include-regexp}, install all the files which the"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9650
msgid "subpaths match at least one of the regular expressions in the given list."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9650
#, no-wrap
msgid "The @code{#:exclude} and @code{#:exclude-regexp} filters"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9655
msgid "are the complement of their inclusion counterpart.  Without @code{#:include} flags, install all files but those matching the exclusion filters.  If both inclusions and exclusions are specified, the exclusions are done on top of the inclusions."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9656
#, no-wrap
msgid "When a package has multiple outputs, the @code{#:output} argument"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9659
msgid "can be used to specify which output label the files should be installed to."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9662
msgid "In all cases, the paths relative to @var{source} are preserved within @var{target}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9665
msgid "Examples:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9667
#, no-wrap
msgid "@code{(\"foo/bar\" \"share/my-app/\")}: Install @file{bar} to @file{share/my-app/bar}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9668
#, no-wrap
msgid "@code{(\"foo/bar\" \"share/my-app/baz\")}: Install @file{bar} to @file{share/my-app/baz}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9669
#, no-wrap
msgid "@code{(\"foo/\" \"share/my-app\")}: Install the content of @file{foo} inside @file{share/my-app},"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9671
msgid "e.g., install @file{foo/sub/file} to @file{share/my-app/sub/file}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9671
#, no-wrap
msgid "@code{(\"foo/\" \"share/my-app\" #:include (\"sub/file\"))}: Install only @file{foo/sub/file} to"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9673
msgid "@file{share/my-app/sub/file}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9673
#, no-wrap
msgid "@code{(\"foo/sub\" \"share/my-app\" #:include (\"file\"))}: Install @file{foo/sub/file} to"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9675
msgid "@file{share/my-app/file}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9675
#, no-wrap
msgid "@code{(\"foo/doc\" \"share/my-app/doc\" #:output \"doc\")}: Install"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9678
msgid "@file{\"foo/doc\"} to @file{\"share/my-app/doc\"} within the @code{\"doc\"} output."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9681
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "vim-build-system"
msgstr "Filesystem"

#. type: defvar
#: guix-git/doc/guix.texi:9686
msgid "This variable is exported by @code{(guix build-system vim)}.  It is an extension of the @code{copy-build-system}, installing Vim and Neovim plugins into locations where these two text editors know to find their plugins, using their packpaths."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9691
msgid "Packages which are prefixed with @code{vim-} will be installed in Vim's packpath, while those prefixed with @code{neovim-} will be installed in Neovim's packpath.  If there is a @code{doc} directory with the plugin then helptags will be generated automatically."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9693
msgid "There are a couple of keywords added with the @code{vim-build-system}:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9694
#, no-wrap
msgid "With @code{plugin-name} it is possible to set the name of the plugin."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9698
msgid "While by default this is set to the name and version of the package, it is often more helpful to set this to name which the upstream author calls their plugin.  This is the name used for @command{:packadd} from inside Vim."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9698
#, no-wrap
msgid "With @code{install-plan} it is possible to augment the built-in"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9703
msgid "install-plan of the @code{vim-build-system}.  This is particularly helpful if you have files which should be installed in other locations.  For more information about using the @code{install-plan}, see the @code{copy-build-system} (@pxref{Build Systems, @code{copy-build-system}})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9703
#, no-wrap
msgid "With @code{#:vim} it is possible to add this package to Vim's packpath,"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9706
msgid "in addition to if it is added automatically because of the @code{vim-} prefix in the package's name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9706
#, no-wrap
msgid "With @code{#:neovim} it is possible to add this package to Neovim's"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9709
msgid "packpath, in addition to if it is added automatically because of the @code{neovim-} prefix in the package's name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9709
#, no-wrap
msgid "With @code{#:mode} it is possible to adjust the path which the plugin is"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9714
msgid "installed into.  By default the plugin is installed into @code{start} and other options are available, including @code{opt}.  Adding a plugin into @code{opt} will mean you will need to run, for example, @command{:packadd foo} to load the @code{foo} plugin from inside of Vim."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:9717
#, no-wrap
msgid "Clojure (programming language)"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:9718
#, no-wrap
msgid "simple Clojure build system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9719
#, no-wrap
msgid "clojure-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9724
msgid "This variable is exported by @code{(guix build-system clojure)}.  It implements a simple build procedure for @uref{https://clojure.org/, Clojure} packages using plain old @code{compile} in Clojure.  Cross-compilation is not supported yet."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9728
msgid "It adds @code{clojure}, @code{icedtea} and @code{zip} to the set of inputs.  Different packages can be specified with the @code{#:clojure}, @code{#:jdk} and @code{#:zip} parameters, respectively."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9734
msgid "A list of source directories, test directories and jar names can be specified with the @code{#:source-dirs}, @code{#:test-dirs} and @code{#:jar-names} parameters, respectively.  Compile directory and main class can be specified with the @code{#:compile-dir} and @code{#:main-class} parameters, respectively.  Other parameters are documented below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9737
msgid "This build system is an extension of @code{ant-build-system}, but with the following phases changed:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9740 guix-git/doc/guix.texi:10363
#: guix-git/doc/guix.texi:10561 guix-git/doc/guix.texi:10610
#: guix-git/doc/guix.texi:10718 guix-git/doc/guix.texi:47262
#: guix-git/doc/guix.texi:53355
#, no-wrap
msgid "build"
msgstr "build"

#. type: table
#: guix-git/doc/guix.texi:9749
msgid "This phase calls @code{compile} in Clojure to compile source files and runs @command{jar} to create jars from both source files and compiled files according to the include list and exclude list specified in @code{#:aot-include} and @code{#:aot-exclude}, respectively.  The exclude list has priority over the include list.  These lists consist of symbols representing Clojure libraries or the special keyword @code{#:all} representing all Clojure libraries found under the source directories.  The parameter @code{#:omit-source?} decides if source should be included into the jars."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9750 guix-git/doc/guix.texi:10367
#: guix-git/doc/guix.texi:10565 guix-git/doc/guix.texi:10723
#, no-wrap
msgid "check"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9757
msgid "This phase runs tests according to the include list and exclude list specified in @code{#:test-include} and @code{#:test-exclude}, respectively.  Their meanings are analogous to that of @code{#:aot-include} and @code{#:aot-exclude}, except that the special keyword @code{#:all} now stands for all Clojure libraries found under the test directories.  The parameter @code{#:tests?} decides if tests should be run."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9758 guix-git/doc/guix.texi:10373
#: guix-git/doc/guix.texi:10571 guix-git/doc/guix.texi:10614
#: guix-git/doc/guix.texi:10729
#, no-wrap
msgid "install"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9760
msgid "This phase installs all jars built previously."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9763
msgid "Apart from the above, this build system also contains an additional phase:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9766
#, no-wrap
msgid "install-doc"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9771
msgid "This phase installs all top-level files with base name matching @code{%doc-regex}.  A different regex can be specified with the @code{#:doc-regex} parameter.  All files (recursively) inside the documentation directories specified in @code{#:doc-dirs} are installed as well."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9774
#, no-wrap
msgid "cmake-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9778
msgid "This variable is exported by @code{(guix build-system cmake)}.  It implements the build procedure for packages using the @url{https://www.cmake.org, CMake build tool}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9781
msgid "This build system adds the following keyword parameters to the ones defined by @code{gnu-build-system}:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9783
#, no-wrap
msgid "#:cmake"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9786
msgid "The @code{cmake} package is added to the set of inputs. Which package is used can be specified with the @code{#:cmake} parameter."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9787
#, fuzzy, no-wrap
#| msgid "build-system"
msgid "#:build-type"
msgstr "build-system"

#. type: table
#: guix-git/doc/guix.texi:9793
msgid "The @code{#:build-type} parameter specifies in abstract terms the flags passed to the compiler; it defaults to @code{\"RelWithDebInfo\"} (short for ``release mode with debugging information''), which roughly means that code is compiled with @code{-O2 -g}, as is the case for Autoconf-based packages by default."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9794
#, no-wrap
msgid "#:generator"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9798
msgid "This parameter specifies the @url{https://cmake.org/cmake/help/latest/manual/cmake-generators.7.html, CMake generator} responsible for writing the input files for the native build system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9799
#, no-wrap
msgid "#:test-exclude"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9802
msgid "Tests matching this regular expression are excluded from testing by @url{https://cmake.org/cmake/help/latest/manual/ctest.1.html, ctest}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9803
#, no-wrap
msgid "#:test-repeat-until-pass?"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9808
msgid "Directs @url{https://cmake.org/cmake/help/latest/manual/ctest.1.html, ctest} to @url{https://cmake.org/cmake/help/latest/manual/ctest.1.html#cmdoption-ctest-repeat, repeat} failed tests up to @code{#:test-repeat-until-pass-count} times and is enabled by default."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9809
#, no-wrap
msgid "#:test-repeat-until-pass-count"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9812
msgid "When @code{#:test-repeat-until-pass?} is enabled this parameter sets the maximum number of failures for each test. The default is @code{5}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9815
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "composer-build-system"
msgstr "Filesystem"

#. type: defvar
#: guix-git/doc/guix.texi:9819
msgid "This variable is exported by @code{(guix build-system composer)}.  It implements the build procedure for packages using @url{https://getcomposer.org/, Composer}, the PHP package manager."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9822
msgid "It automatically adds the @code{php} package to the set of inputs.  Which package is used can be specified with the @code{#:php} parameter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9827
msgid "The @code{#:test-target} parameter is used to control which script is run for the tests.  By default, the @code{test} script is run if it exists.  If the script does not exist, the build system will run @code{phpunit} from the source directory, assuming there is a @file{phpunit.xml} file."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9829
#, no-wrap
msgid "dune-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9836
msgid "This variable is exported by @code{(guix build-system dune)}.  It supports builds of packages using @uref{https://dune.build/, Dune}, a build tool for the OCaml programming language.  It is implemented as an extension of the @code{ocaml-build-system} which is described below.  As such, the @code{#:ocaml} and @code{#:findlib} parameters can be passed to this build system."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9840
msgid "It automatically adds the @code{dune} package to the set of inputs.  Which package is used can be specified with the @code{#:dune} parameter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9844
msgid "There is no @code{configure} phase because dune packages typically don't need to be configured.  The @code{#:build-flags} parameter is taken as a list of flags passed to the @code{dune} command during the build."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9848
msgid "The @code{#:jbuild?} parameter can be passed to use the @code{jbuild} command instead of the more recent @code{dune} command while building a package.  Its default value is @code{#f}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9853
msgid "The @code{#:package} parameter can be passed to specify a package name, which is useful when a package contains multiple packages and you want to build only one of them.  This is equivalent to passing the @code{-p} argument to @code{dune}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9856
#, no-wrap
msgid "elm-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9860
msgid "This variable is exported by @code{(guix build-system elm)}.  It implements a build procedure for @url{https://elm-lang.org, Elm} packages similar to @samp{elm install}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9868
msgid "The build system adds an Elm compiler package to the set of inputs.  The default compiler package (currently @code{elm-sans-reactor}) can be overridden using the @code{#:elm} argument.  Additionally, Elm packages needed by the build system itself are added as implicit inputs if they are not already present: to suppress this behavior, use the @code{#:implicit-elm-package-inputs?} argument, which is primarily useful for bootstrapping."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9872
msgid "The @code{\"dependencies\"} and @code{\"test-dependencies\"} in an Elm package's @file{elm.json} file correspond to @code{propagated-inputs} and @code{inputs}, respectively."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9876
msgid "Elm requires a particular structure for package names: @pxref{Elm Packages} for more details, including utilities provided by @code{(guix build-system elm)}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9878
msgid "There are currently a few noteworthy limitations to @code{elm-build-system}:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9889
msgid "The build system is focused on @dfn{packages} in the Elm sense of the word: Elm @dfn{projects} which declare @code{@{ \"type\": \"package\" @}} in their @file{elm.json} files.  Using @code{elm-build-system} to build Elm @dfn{applications} (which declare @code{@{ \"type\": \"application\" @}}) is possible, but requires ad-hoc modifications to the build phases.  For examples, see the definitions of the @code{elm-todomvc} example application and the @code{elm} package itself (because the front-end for the @samp{elm reactor} command is an Elm application)."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9901
msgid "Elm supports multiple versions of a package coexisting simultaneously under @env{ELM_HOME}, but this does not yet work well with @code{elm-build-system}.  This limitation primarily affects Elm applications, because they specify exact versions for their dependencies, whereas Elm packages specify supported version ranges.  As a workaround, the example applications mentioned above use the @code{patch-application-dependencies} procedure provided by @code{(guix build elm-build-system)} to rewrite their @file{elm.json} files to refer to the package versions actually present in the build environment.  Alternatively, Guix package transformations (@pxref{Defining Package Variants}) could be used to rewrite an application's entire dependency graph."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9907
msgid "We are not yet able to run tests for Elm projects because neither @url{https://github.com/mpizenberg/elm-test-rs, @command{elm-test-rs}} nor the Node.js-based @url{https://github.com/rtfeldman/node-test-runner, @command{elm-test}} runner has been packaged for Guix yet."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9910
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "go-build-system"
msgstr "Filesystem"

#. type: defvar
#: guix-git/doc/guix.texi:9915
msgid "This variable is exported by @code{(guix build-system go)}.  It implements a build procedure for Go packages using the standard @url{https://golang.org/cmd/go/#hdr-Compile_packages_and_dependencies, Go build mechanisms}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9926
msgid "The user is expected to provide a value for the key @code{#:import-path} and, in some cases, @code{#:unpack-path}.  The @url{https://golang.org/doc/code.html#ImportPaths, import path} corresponds to the file system path expected by the package's build scripts and any referring packages, and provides a unique way to refer to a Go package.  It is typically based on a combination of the package source code's remote URI and file system hierarchy structure.  In some cases, you will need to unpack the package's source code to a different directory structure than the one indicated by the import path, and @code{#:unpack-path} should be used in such cases."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9931
msgid "Packages that provide Go libraries should install their source code into the built output.  The key @code{#:install-source?}, which defaults to @code{#t}, controls whether or not the source code is installed.  It can be set to @code{#f} for packages that only provide executable files."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9938
msgid "Packages can be cross-built, and if a specific architecture or operating system is desired then the keywords @code{#:goarch} and @code{#:goos} can be used to force the package to be built for that architecture and operating system.  The combinations known to Go can be found @url{https://golang.org/doc/install/source#environment, in their documentation}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9941
msgid "The key @code{#:go} can be used to specify the Go compiler package with which to build the package."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9947
msgid "The phase @code{check} provides a wrapper for @code{go test} which builds a test binary (or multiple binaries), vets the code and then runs the test binary.  Build, test and test binary flags can be provided as @code{#:test-flags} parameter, default is @code{'()}.  See @code{go help test} and @code{go help testflag} for more details."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9952
msgid "The key @code{#:embed-files}, default is @code{'()}, provides a list of future embedded files or regexps matching files.  They will be copied to build directory after @code{unpack} phase.  See @url{https://pkg.go.dev/embed} for more details."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9955
#, no-wrap
msgid "glib-or-gtk-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9958
msgid "This variable is exported by @code{(guix build-system glib-or-gtk)}.  It is intended for use with packages making use of GLib or GTK+."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9961
msgid "This build system adds the following two phases to the ones defined by @code{gnu-build-system}:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9963 guix-git/doc/guix.texi:10587
#, no-wrap
msgid "glib-or-gtk-wrap"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9970
msgid "The phase @code{glib-or-gtk-wrap} ensures that programs in @file{bin/} are able to find GLib ``schemas'' and @uref{https://developer.gnome.org/gtk3/stable/gtk-running.html, GTK+ modules}.  This is achieved by wrapping the programs in launch scripts that appropriately set the @env{XDG_DATA_DIRS} and @env{GTK_PATH} environment variables."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9977
msgid "It is possible to exclude specific package outputs from that wrapping process by listing their names in the @code{#:glib-or-gtk-wrap-excluded-outputs} parameter.  This is useful when an output is known not to contain any GLib or GTK+ binaries, and where wrapping would gratuitously add a dependency of that output on GLib and GTK+."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9978 guix-git/doc/guix.texi:10591
#, no-wrap
msgid "glib-or-gtk-compile-schemas"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9986
msgid "The phase @code{glib-or-gtk-compile-schemas} makes sure that all @uref{https://developer.gnome.org/gio/stable/glib-compile-schemas.html, GSettings schemas} of GLib are compiled.  Compilation is performed by the @command{glib-compile-schemas} program.  It is provided by the package @code{glib:bin} which is automatically imported by the build system.  The @code{glib} package providing @command{glib-compile-schemas} can be specified with the @code{#:glib} parameter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9989
msgid "Both phases are executed after the @code{install} phase."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9991
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "guile-build-system"
msgstr "Filesystem"

#. type: defvar
#: guix-git/doc/guix.texi:9998
msgid "This build system is for Guile packages that consist exclusively of Scheme code and that are so lean that they don't even have a makefile, let alone a @file{configure} script.  It compiles Scheme code using @command{guild compile} (@pxref{Compilation,,, guile, GNU Guile Reference Manual}) and installs the @file{.scm} and @file{.go} files in the right place.  It also installs documentation."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10001
msgid "This build system supports cross-compilation by using the @option{--target} option of @samp{guild compile}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10004
msgid "Packages built with @code{guile-build-system} must provide a Guile package in their @code{native-inputs} field."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10006
#, no-wrap
msgid "julia-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10013
msgid "This variable is exported by @code{(guix build-system julia)}.  It implements the build procedure used by @uref{https://julialang.org/, julia} packages, which essentially is similar to running @samp{julia -e 'using Pkg; Pkg.add(package)'} in an environment where @env{JULIA_LOAD_PATH} contains the paths to all Julia package inputs.  Tests are run by calling @code{/test/runtests.jl}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10018
msgid "The Julia package name and uuid is read from the file @file{Project.toml}.  These values can be overridden by passing the argument @code{#:julia-package-name} (which must be correctly capitalized) or @code{#:julia-package-uuid}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10022
msgid "Julia packages usually manage their binary dependencies via @code{JLLWrappers.jl}, a Julia package that creates a module (named after the wrapped library followed by @code{_jll.jl}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10027
msgid "To add the binary path @code{_jll.jl} packages, you need to patch the files under @file{src/wrappers/}, replacing the call to the macro @code{JLLWrappers.@@generate_wrapper_header}, adding as a second argument containing the store path the binary."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10031
msgid "As an example, in the MbedTLS Julia package, we add a build phase (@pxref{Build Phases}) to insert the absolute file name of the wrapped MbedTLS package:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:10043
#, no-wrap
msgid ""
"(add-after 'unpack 'override-binary-path\n"
"  (lambda* (#:key inputs #:allow-other-keys)\n"
"    (for-each (lambda (wrapper)\n"
"                (substitute* wrapper\n"
"                  ((\"generate_wrapper_header.*\")\n"
"                   (string-append\n"
"                    \"generate_wrapper_header(\\\"MbedTLS\\\", \\\"\"\n"
"                    (assoc-ref inputs \"mbedtls\") \"\\\")\\n\"))))\n"
"              ;; There's a Julia file for each platform, override them all.\n"
"              (find-files \"src/wrappers/\" \"\\\\.jl$\"))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10049
msgid "Some older packages that aren't using @file{Project.toml} yet, will require this file to be created, too.  It is internally done if the arguments @code{#:julia-package-name} and @code{#:julia-package-uuid} are provided."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10051
#, no-wrap
msgid "maven-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10058
msgid "This variable is exported by @code{(guix build-system maven)}.  It implements a build procedure for @uref{https://maven.apache.org, Maven} packages.  Maven is a dependency and lifecycle management tool for Java.  A user of Maven specifies dependencies and plugins in a @file{pom.xml} file that Maven reads.  When Maven does not have one of the dependencies or plugins in its repository, it will download them and use them to build the package."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10068
msgid "The maven build system ensures that maven will not try to download any dependency by running in offline mode.  Maven will fail if a dependency is missing.  Before running Maven, the @file{pom.xml} (and subprojects) are modified to specify the version of dependencies and plugins that match the versions available in the guix build environment.  Dependencies and plugins must be installed in the fake maven repository at @file{lib/m2}, and are symlinked into a proper repository before maven is run.  Maven is instructed to use that repository for the build and installs built artifacts there.  Changed files are copied to the @file{lib/m2} directory of the package output."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10071
msgid "You can specify a @file{pom.xml} file with the @code{#:pom-file} argument, or let the build system use the default @file{pom.xml} file in the sources."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10077
msgid "In case you need to specify a dependency's version manually, you can use the @code{#:local-packages} argument.  It takes an association list where the key is the groupId of the package and its value is an association list where the key is the artifactId of the package and its value is the version you want to override in the @file{pom.xml}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10083
msgid "Some packages use dependencies or plugins that are not useful at runtime nor at build time in Guix.  You can alter the @file{pom.xml} file to remove them using the @code{#:exclude} argument.  Its value is an association list where the key is the groupId of the plugin or dependency you want to remove, and the value is a list of artifactId you want to remove."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10086
msgid "You can override the default @code{jdk} and @code{maven} packages with the corresponding argument, @code{#:jdk} and @code{#:maven}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10091
msgid "The @code{#:maven-plugins} argument is a list of maven plugins used during the build, with the same format as the @code{inputs} fields of the package declaration.  Its default value is @code{(default-maven-plugins)} which is also exported."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10093
#, no-wrap
msgid "minetest-mod-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10099
msgid "This variable is exported by @code{(guix build-system minetest)}.  It implements a build procedure for @uref{https://www.minetest.net, Minetest} mods, which consists of copying Lua code, images and other resources to the location Minetest searches for mods.  The build system also minimises PNG images and verifies that Minetest can load the mod without errors."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10101
#, no-wrap
msgid "minify-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10104
msgid "This variable is exported by @code{(guix build-system minify)}.  It implements a minification procedure for simple JavaScript packages."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10110
msgid "It adds @code{uglify-js} to the set of inputs and uses it to compress all JavaScript files in the @file{src} directory.  A different minifier package can be specified with the @code{#:uglify-js} parameter, but it is expected that the package writes the minified code to the standard output."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10114
msgid "When the input JavaScript files are not all located in the @file{src} directory, the parameter @code{#:javascript-files} can be used to specify a list of file names to feed to the minifier."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10116
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "mozilla-build-system"
msgstr "Filesystem"

#. type: defvar
#: guix-git/doc/guix.texi:10123
msgid "This variable is exported by @code{(guix build-system mozilla)}.  It sets the @code{--target} and @code{--host} configuration flags to what software developed by Mozilla expects -- due to historical reasons, Mozilla software expects @code{--host} to be the system that is cross-compiled from and @code{--target} to be the system that is cross-compiled to, contrary to the standard Autotools conventions."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10125
#, no-wrap
msgid "ocaml-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10131
msgid "This variable is exported by @code{(guix build-system ocaml)}.  It implements a build procedure for @uref{https://ocaml.org, OCaml} packages, which consists of choosing the correct set of commands to run for each package.  OCaml packages can expect many different commands to be run.  This build system will try some of them."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10141
msgid "When the package has a @file{setup.ml} file present at the top-level, it will run @code{ocaml setup.ml -configure}, @code{ocaml setup.ml -build} and @code{ocaml setup.ml -install}.  The build system will assume that this file was generated by @uref{http://oasis.forge.ocamlcore.org/, OASIS} and will take care of setting the prefix and enabling tests if they are not disabled.  You can pass configure and build flags with the @code{#:configure-flags} and @code{#:build-flags}.  The @code{#:test-flags} key can be passed to change the set of flags used to enable tests.  The @code{#:use-make?} key can be used to bypass this system in the build and install phases."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10146
msgid "When the package has a @file{configure} file, it is assumed that it is a hand-made configure script that requires a different argument format than in the @code{gnu-build-system}.  You can add more flags with the @code{#:configure-flags} key."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10150
msgid "When the package has a @file{Makefile} file (or @code{#:use-make?} is @code{#t}), it will be used and more flags can be passed to the build and install phases with the @code{#:make-flags} key."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10158
msgid "Finally, some packages do not have these files and use a somewhat standard location for its build system.  In that case, the build system will run @code{ocaml pkg/pkg.ml} or @code{ocaml pkg/build.ml} and take care of providing the path to the required findlib module.  Additional flags can be passed via the @code{#:build-flags} key.  Install is taken care of by @command{opam-installer}.  In this case, the @code{opam} package must be added to the @code{native-inputs} field of the package definition."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10166
msgid "Note that most OCaml packages assume they will be installed in the same directory as OCaml, which is not what we want in guix.  In particular, they will install @file{.so} files in their module's directory, which is usually fine because it is in the OCaml compiler directory.  In guix though, these libraries cannot be found and we use @env{CAML_LD_LIBRARY_PATH}.  This variable points to @file{lib/ocaml/site-lib/stubslibs} and this is where @file{.so} libraries should be installed."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10168
#, no-wrap
msgid "python-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10173
msgid "This variable is exported by @code{(guix build-system python)}.  It implements the more or less standard build procedure used by Python packages, which consists in running @code{python setup.py build} and then @code{python setup.py install --prefix=/gnu/store/@dots{}}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10178
msgid "For packages that install stand-alone Python programs under @code{bin/}, it takes care of wrapping these programs so that their @env{GUIX_PYTHONPATH} environment variable points to all the Python libraries they depend on."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10184
msgid "Which Python package is used to perform the build can be specified with the @code{#:python} parameter.  This is a useful way to force a package to be built for a specific version of the Python interpreter, which might be necessary if the package is only compatible with a single interpreter version."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10189
msgid "By default guix calls @code{setup.py} under control of @code{setuptools}, much like @command{pip} does.  Some packages are not compatible with setuptools (and pip), thus you can disable this by setting the @code{#:use-setuptools?} parameter to @code{#f}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10195
msgid "If a @code{\"python\"} output is available, the package is installed into it instead of the default @code{\"out\"} output. This is useful for packages that include a Python package as only a part of the software, and thus want to combine the phases of @code{python-build-system} with another build system.  Python bindings are a common usecase."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10197
#, no-wrap
msgid "pyproject-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10202
msgid "This is a variable exported by @code{guix build-system pyproject}.  It is based on @var{python-build-system}, and adds support for @file{pyproject.toml} and @url{https://peps.python.org/pep-0517/, PEP 517}.  It also supports a variety of build backends and test frameworks."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10204
msgid "The API is slightly different from @var{python-build-system}:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:10207
msgid "@code{#:use-setuptools?} and @code{#:test-target} is removed."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:10215
msgid "@code{#:configure-flags} is changed. Instead of a list this option must be a JSON object, whose interpretation depends on the build backend. For instance the example from @url{https://peps.python.org/pep-0517/#config-settings,PEP 517} should be written as @code{'(@@ (\"CC\" \"gcc\") (\"--global-option\" (\"--some-global-option\")) (\"--build-option\" (\"--build-option1\" \"--build-option2\")))}"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:10219
msgid "@code{#:backend-path} is added.  It defaults to @code{#false}, but when set to a list it will be appended to Python’s search path and overrides the definition in @file{pyproject.toml}."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:10222
msgid "@code{#:build-backend} is added.  It defaults to @code{#false} and will try to guess the appropriate backend based on @file{pyproject.toml}."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:10225
msgid "@code{#:test-backend} is added.  It defaults to @code{#false} and will guess an appropriate test backend based on what is available in package inputs."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:10229
msgid "@code{#:test-flags} is added.  The default is @code{'()}.  These flags are passed as arguments to the test command.  Note that flags for verbose output is always enabled on supported backends."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10235
msgid "It is considered ``experimental'' in that the implementation details are not set in stone yet, however users are encouraged to try it for new Python projects (even those using @file{setup.py}).  The API is subject to change, but any breaking changes in the Guix channel will be dealt with."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10238
msgid "Eventually this build system will be deprecated and merged back into @var{python-build-system}, probably some time in 2024."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10240
#, no-wrap
msgid "perl-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10252
msgid "This variable is exported by @code{(guix build-system perl)}.  It implements the standard build procedure for Perl packages, which either consists in running @code{perl Build.PL --prefix=/gnu/store/@dots{}}, followed by @code{Build} and @code{Build install}; or in running @code{perl Makefile.PL PREFIX=/gnu/store/@dots{}}, followed by @code{make} and @code{make install}, depending on which of @code{Build.PL} or @code{Makefile.PL} is present in the package distribution.  Preference is given to the former if both @code{Build.PL} and @code{Makefile.PL} exist in the package distribution.  This preference can be reversed by specifying @code{#t} for the @code{#:make-maker?} parameter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10256
msgid "The initial @code{perl Makefile.PL} or @code{perl Build.PL} invocation passes flags specified by the @code{#:make-maker-flags} or @code{#:module-build-flags} parameter, respectively."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10258
msgid "Which Perl package is used can be specified with @code{#:perl}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10260
#, no-wrap
msgid "renpy-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10264
msgid "This variable is exported by @code{(guix build-system renpy)}.  It implements the more or less standard build procedure used by Ren'py games, which consists of loading @code{#:game} once, thereby creating bytecode for it."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10267
msgid "It further creates a wrapper script in @code{bin/} and a desktop entry in @code{share/applications}, both of which can be used to launch the game."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10271
msgid "Which Ren'py package is used can be specified with @code{#:renpy}.  Games can also be installed in outputs other than ``out'' by using @code{#:output}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10273
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "qt-build-system"
msgstr "Filesystem"

#. type: defvar
#: guix-git/doc/guix.texi:10276
msgid "This variable is exported by @code{(guix build-system qt)}.  It is intended for use with applications using Qt or KDE."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10279
msgid "This build system adds the following two phases to the ones defined by @code{cmake-build-system}:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:10281
#, no-wrap
msgid "check-setup"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10288
msgid "The phase @code{check-setup} prepares the environment for running the checks as commonly used by Qt test programs.  For now this only sets some environment variables: @code{QT_QPA_PLATFORM=offscreen}, @code{DBUS_FATAL_WARNINGS=0} and @code{CTEST_OUTPUT_ON_FAILURE=1}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10291
msgid "This phase is added before the @code{check} phase.  It's a separate phase to ease adjusting if necessary."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:10292
#, no-wrap
msgid "qt-wrap"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10298
msgid "The phase @code{qt-wrap} searches for Qt5 plugin paths, QML paths and some XDG in the inputs and output.  In case some path is found, all programs in the output's @file{bin/}, @file{sbin/}, @file{libexec/} and @file{lib/libexec/} directories are wrapped in scripts defining the necessary environment variables."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10304
msgid "It is possible to exclude specific package outputs from that wrapping process by listing their names in the @code{#:qt-wrap-excluded-outputs} parameter.  This is useful when an output is known not to contain any Qt binaries, and where wrapping would gratuitously add a dependency of that output on Qt, KDE, or such."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10306
msgid "This phase is added after the @code{install} phase."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10309
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "r-build-system"
msgstr "Filesystem"

#. type: defvar
#: guix-git/doc/guix.texi:10317
msgid "This variable is exported by @code{(guix build-system r)}.  It implements the build procedure used by @uref{https://r-project.org, R} packages, which essentially is little more than running @samp{R CMD INSTALL --library=/gnu/store/@dots{}} in an environment where @env{R_LIBS_SITE} contains the paths to all R package inputs.  Tests are run after installation using the R function @code{tools::testInstalledPackage}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10319
#, no-wrap
msgid "rakudo-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10327
msgid "This variable is exported by @code{(guix build-system rakudo)}.  It implements the build procedure used by @uref{https://rakudo.org/, Rakudo} for @uref{https://perl6.org/, Perl6} packages.  It installs the package to @code{/gnu/store/@dots{}/NAME-VERSION/share/perl6} and installs the binaries, library files and the resources, as well as wrap the files under the @code{bin/} directory.  Tests can be skipped by passing @code{#f} to the @code{tests?} parameter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10335
msgid "Which rakudo package is used can be specified with @code{rakudo}.  Which perl6-tap-harness package used for the tests can be specified with @code{#:prove6} or removed by passing @code{#f} to the @code{with-prove6?} parameter.  Which perl6-zef package used for tests and installing can be specified with @code{#:zef} or removed by passing @code{#f} to the @code{with-zef?} parameter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10337
#, no-wrap
msgid "rebar-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10341
msgid "This variable is exported by @code{(guix build-system rebar)}.  It implements a build procedure around @uref{https://rebar3.org,rebar3}, a build system for programs written in the Erlang language."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10345
msgid "It adds both @code{rebar3} and the @code{erlang} to the set of inputs.  Different packages can be specified with the @code{#:rebar} and @code{#:erlang} parameters, respectively."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10348
msgid "This build system is based on @code{gnu-build-system}, but with the following phases changed:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:10351 guix-git/doc/guix.texi:10703
#, no-wrap
msgid "unpack"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10357
msgid "This phase, after unpacking the source like the @code{gnu-build-system} does, checks for a file @code{contents.tar.gz} at the top-level of the source.  If this file exists, it will be unpacked, too.  This eases handling of package hosted at @uref{https://hex.pm/}, the Erlang and Elixir package repository."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:10358
#, no-wrap
msgid "bootstrap"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:10359 guix-git/doc/guix.texi:10555
#: guix-git/doc/guix.texi:10606 guix-git/doc/guix.texi:10713
#, no-wrap
msgid "configure"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10362
msgid "There are no @code{bootstrap} and @code{configure} phase because erlang packages typically don’t need to be configured."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10366
msgid "This phase runs @code{rebar3 compile} with the flags listed in @code{#:rebar-flags}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10372
msgid "Unless @code{#:tests? #f} is passed, this phase runs @code{rebar3 eunit}, or some other target specified with @code{#:test-target}, with the flags listed in @code{#:rebar-flags},"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10376
msgid "This installs the files created in the @i{default} profile, or some other profile specified with @code{#:install-profile}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10380
#, no-wrap
msgid "texlive-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10385
msgid "This variable is exported by @code{(guix build-system texlive)}.  It is used to build TeX packages in batch mode with a specified engine.  The build system sets the @env{TEXINPUTS} variable to find all TeX source files in the inputs."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10392
msgid "By default it tries to run @code{luatex} on all @file{.ins} files, and if it fails to find any, on all @file{.dtx} files.  A different engine and format can be specified with, respectively, the @code{#:tex-engine} and @code{#:tex-format} arguments.  Different build targets can be specified with the @code{#:build-targets} argument, which expects a list of file names."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10399
msgid "It also generates font metrics (i.e., @file{.tfm} files) out of Metafont files whenever possible.  Likewise, it can also create TeX formats (i.e., @file{.fmt} files) listed in the @code{#:create-formats} argument, and generate a symbolic link from @file{bin/} directory to any script located in @file{texmf-dist/scripts/}, provided its file name is listed in @code{#:link-scripts} argument."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10403
msgid "The build system adds @code{texlive-bin} from @code{(gnu packages tex)} to the native inputs.  It can be overridden with the @code{#:texlive-bin} argument."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10410
msgid "The package @code{texlive-latex-bin}, from the same module, contains most of the tools for building TeX Live packages; for convenience, it is also added by default to the native inputs.  However, this can be troublesome when building a dependency of @code{texlive-latex-bin} itself.  In this particular situation, the @code{#:texlive-latex-bin?} argument should be set to @code{#f}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10412
#, no-wrap
msgid "ruby-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10416
msgid "This variable is exported by @code{(guix build-system ruby)}.  It implements the RubyGems build procedure used by Ruby packages, which involves running @code{gem build} followed by @code{gem install}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10424
msgid "The @code{source} field of a package that uses this build system typically references a gem archive, since this is the format that Ruby developers use when releasing their software.  The build system unpacks the gem archive, potentially patches the source, runs the test suite, repackages the gem, and installs it.  Additionally, directories and tarballs may be referenced to allow building unreleased gems from Git or a traditional source release tarball."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10428
msgid "Which Ruby package is used can be specified with the @code{#:ruby} parameter.  A list of additional flags to be passed to the @command{gem} command can be specified with the @code{#:gem-flags} parameter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10430
#, no-wrap
msgid "waf-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10436
msgid "This variable is exported by @code{(guix build-system waf)}.  It implements a build procedure around the @code{waf} script.  The common phases---@code{configure}, @code{build}, and @code{install}---are implemented by passing their names as arguments to the @code{waf} script."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10440
msgid "The @code{waf} script is executed by the Python interpreter.  Which Python package is used to run the script can be specified with the @code{#:python} parameter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10442
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "zig-build-system"
msgstr "Filesystem"

#. type: defvar
#: guix-git/doc/guix.texi:10446
msgid "This variable is exported by @code{(guix build-system zig)}.  It implements the build procedures for the @uref{https://ziglang.org/, Zig} build system (@command{zig build} command)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10449
msgid "Selecting this build system adds @code{zig} to the package inputs, in addition to the packages of @code{gnu-build-system}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10453
msgid "This build system by default installs package source to output.  This behavior can be disabled by setting @code{#:install-source?} parameter to @code{#f}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10458
msgid "For packages that don't install anything and don't come with a test suite (likely library packages to be used by other Zig packages), you can set @code{#:skip-build?} parameter to @code{#t}, which skips @code{build} and @code{check} phases."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10462
msgid "The @code{configure} phase sets up environment for @command{zig build}.  You need to add custom phases after it if you want to invoke @command{zig}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10468
msgid "The @code{#:zig-build-flags} parameter is a list of flags that are passed to @command{zig build} in @code{build} phase.  The @code{#:zig-test-flags} parameter is a list of flags that are passed to @command{zig build test} in @code{check} phase.  The default compiler package can be overridden with the @code{#:zig} parameter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10474
msgid "The optional @code{#:zig-release-type} parameter declares the type of release.  Possible values are: @code{\"safe\"}, @code{\"fast\"}, or @code{\"small\"}.  The default value is @code{#f}, which causes the release flag to be omitted from the @code{zig} command and results in a @code{\"debug\"} build."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10476
#, no-wrap
msgid "scons-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10482
msgid "This variable is exported by @code{(guix build-system scons)}.  It implements the build procedure used by the SCons software construction tool.  This build system runs @code{scons} to build the package, @code{scons test} to run tests, and then @code{scons install} to install the package."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10489
msgid "Additional flags to be passed to @code{scons} can be specified with the @code{#:scons-flags} parameter.  The default build and install targets can be overridden with @code{#:build-targets} and @code{#:install-targets} respectively.  The version of Python used to run SCons can be specified by selecting the appropriate SCons package with the @code{#:scons} parameter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10491
#, no-wrap
msgid "haskell-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10505
msgid "This variable is exported by @code{(guix build-system haskell)}.  It implements the Cabal build procedure used by Haskell packages, which involves running @code{runhaskell Setup.hs configure --prefix=/gnu/store/@dots{}} and @code{runhaskell Setup.hs build}.  Instead of installing the package by running @code{runhaskell Setup.hs install}, to avoid trying to register libraries in the read-only compiler store directory, the build system uses @code{runhaskell Setup.hs copy}, followed by @code{runhaskell Setup.hs register}.  In addition, the build system generates the package documentation by running @code{runhaskell Setup.hs haddock}, unless @code{#:haddock? #f} is passed.  Optional Haddock parameters can be passed with the help of the @code{#:haddock-flags} parameter.  If the file @code{Setup.hs} is not found, the build system looks for @code{Setup.lhs} instead."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10508
msgid "Which Haskell compiler is used can be specified with the @code{#:haskell} parameter which defaults to @code{ghc}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10510
#, no-wrap
msgid "dub-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10515
msgid "This variable is exported by @code{(guix build-system dub)}.  It implements the Dub build procedure used by D packages, which involves running @code{dub build} and @code{dub run}.  Installation is done by copying the files manually."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10518
msgid "Which D compiler is used can be specified with the @code{#:ldc} parameter which defaults to @code{ldc}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10521
#, no-wrap
msgid "emacs-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10525
msgid "This variable is exported by @code{(guix build-system emacs)}.  It implements an installation procedure similar to the packaging system of Emacs itself (@pxref{Packages,,, emacs, The GNU Emacs Manual})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10531
msgid "It first creates the @code{@code{package}-autoloads.el} file, then it byte compiles all Emacs Lisp files.  Differently from the Emacs packaging system, the Info documentation files are moved to the standard documentation directory and the @file{dir} file is deleted.  The Elisp package files are installed directly under @file{share/emacs/site-lisp}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10533
#, no-wrap
msgid "font-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10539
msgid "This variable is exported by @code{(guix build-system font)}.  It implements an installation procedure for font packages where upstream provides pre-compiled TrueType, OpenType, etc.@: font files that merely need to be copied into place.  It copies font files to standard locations in the output directory."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10541
#, no-wrap
msgid "meson-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10545
msgid "This variable is exported by @code{(guix build-system meson)}.  It implements the build procedure for packages that use @url{https://mesonbuild.com, Meson} as their build system."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10549
msgid "It adds both Meson and @uref{https://ninja-build.org/, Ninja} to the set of inputs, and they can be changed with the parameters @code{#:meson} and @code{#:ninja} if needed."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10552
msgid "This build system is an extension of @code{gnu-build-system}, but with the following phases changed to some specific for Meson:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10560
msgid "The phase runs @code{meson} with the flags specified in @code{#:configure-flags}.  The flag @option{--buildtype} is always set to @code{debugoptimized} unless something else is specified in @code{#:build-type}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10564
msgid "The phase runs @code{ninja} to build the package in parallel by default, but this can be changed with @code{#:parallel-build?}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10570
msgid "The phase runs @samp{meson test} with a base set of options that cannot be overridden.  This base set of options can be extended via the @code{#:test-options} argument, for example to select or skip a specific test suite."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10573
msgid "The phase runs @code{ninja install} and can not be changed."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10576
msgid "Apart from that, the build system also adds the following phases:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:10579
#, no-wrap
msgid "fix-runpath"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10586
msgid "This phase ensures that all binaries can find the libraries they need.  It searches for required libraries in subdirectories of the package being built, and adds those to @code{RUNPATH} where needed.  It also removes references to libraries left over from the build phase by @code{meson}, such as test dependencies, that aren't actually required for the program to run."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10590 guix-git/doc/guix.texi:10594
msgid "This phase is the phase provided by @code{glib-or-gtk-build-system}, and it is not enabled by default.  It can be enabled with @code{#:glib-or-gtk?}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10597
#, no-wrap
msgid "linux-module-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10599
msgid "@code{linux-module-build-system} allows building Linux kernel modules."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10603
msgid "This build system is an extension of @code{gnu-build-system}, but with the following phases changed:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10609
msgid "This phase configures the environment so that the Linux kernel's Makefile can be used to build the external kernel module."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10613
msgid "This phase uses the Linux kernel's Makefile in order to build the external kernel module."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10617
msgid "This phase uses the Linux kernel's Makefile in order to install the external kernel module."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10622
msgid "It is possible and useful to specify the Linux kernel to use for building the module (in the @code{arguments} form of a package using the @code{linux-module-build-system}, use the key @code{#:linux} to specify it)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10624
#, no-wrap
msgid "node-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10629
msgid "This variable is exported by @code{(guix build-system node)}.  It implements the build procedure used by @uref{https://nodejs.org, Node.js}, which implements an approximation of the @code{npm install} command, followed by an @code{npm test} command."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10633
msgid "Which Node.js package is used to interpret the @code{npm} commands can be specified with the @code{#:node} parameter which defaults to @code{node}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10635
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "tree-sitter-build-system"
msgstr "Filesystem"

#. type: defvar
#: guix-git/doc/guix.texi:10643
msgid "This variable is exported by @code{(guix build-system tree-sitter)}.  It implements procedures to compile grammars for the @url{https://tree-sitter.github.io/tree-sitter/, Tree-sitter} parsing library.  It essentially runs @code{tree-sitter generate} to translate @code{grammar.js} grammars to JSON and then to C.  Which it then compiles to native code."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10647
msgid "Tree-sitter packages may support multiple grammars, so this build system supports a @code{#:grammar-directories} keyword to specify a list of locations where a @code{grammar.js} file may be found."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10651
msgid "Grammars sometimes depend on each other, such as C++ depending on C and TypeScript depending on JavaScript.  You may use inputs to declare such dependencies."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10658
msgid "Lastly, for packages that do not need anything as sophisticated, a ``trivial'' build system is provided.  It is trivial in the sense that it provides basically no support: it does not pull any implicit inputs, and does not have a notion of build phases."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10659
#, no-wrap
msgid "trivial-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10661
msgid "This variable is exported by @code{(guix build-system trivial)}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10666
msgid "This build system requires a @code{#:builder} argument.  This argument must be a Scheme expression that builds the package output(s)---as with @code{build-expression->derivation} (@pxref{Derivations, @code{build-expression->derivation}})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10668
#, no-wrap
msgid "channel-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10670
msgid "This variable is exported by @code{(guix build-system channel)}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10676
msgid "This build system is meant primarily for internal use.  A package using this build system must have a channel specification as its @code{source} field (@pxref{Channels}); alternatively, its source can be a directory name, in which case an additional @code{#:commit} argument must be supplied to specify the commit being built (a hexadecimal string)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10679
msgid "Optionally, a @code{#:channels} argument specifying additional channels can be provided."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10682
msgid "The resulting package is a Guix instance of the given channel(s), similar to how @command{guix time-machine} would build it."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:10687
#, no-wrap
msgid "build phases, for packages"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10693
msgid "Almost all package build systems implement a notion @dfn{build phases}: a sequence of actions that the build system executes, when you build the package, leading to the installed byproducts in the store.  A notable exception is the ``bare-bones'' @code{trivial-build-system} (@pxref{Build Systems})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10697
msgid "As discussed in the previous section, those build systems provide a standard list of phases.  For @code{gnu-build-system}, the main build phases are the following:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:10699
#, no-wrap
msgid "set-paths"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10702
msgid "Define search path environment variables for all the input packages, including @env{PATH} (@pxref{Search Paths})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10707
msgid "Unpack the source tarball, and change the current directory to the extracted source tree.  If the source is actually a directory, copy it to the build tree, and enter that directory."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:10708
#, no-wrap
msgid "patch-source-shebangs"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10712
msgid "Patch shebangs encountered in source files so they refer to the right store file names.  For instance, this changes @code{#!/bin/sh} to @code{#!/gnu/store/@dots{}-bash-4.3/bin/sh}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10717
msgid "Run the @file{configure} script with a number of default options, such as @option{--prefix=/gnu/store/@dots{}}, as well as the options specified by the @code{#:configure-flags} argument."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10722
msgid "Run @code{make} with the list of flags specified with @code{#:make-flags}.  If the @code{#:parallel-build?} argument is true (the default), build with @code{make -j}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10728
msgid "Run @code{make check}, or some other target specified with @code{#:test-target}, unless @code{#:tests? #f} is passed.  If the @code{#:parallel-tests?} argument is true (the default), run @code{make check -j}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10731
msgid "Run @code{make install} with the flags listed in @code{#:make-flags}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:10732
#, no-wrap
msgid "patch-shebangs"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10734
msgid "Patch shebangs on the installed executable files."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:10735
#, no-wrap
msgid "strip"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10739
msgid "Strip debugging symbols from ELF files (unless @code{#:strip-binaries?} is false), copying them to the @code{debug} output when available (@pxref{Installing Debugging Files})."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:10742
msgid "phase-validate-runpath"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:10742
#, no-wrap
msgid "validate-runpath"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10745
msgid "Validate the @code{RUNPATH} of ELF binaries, unless @code{#:validate-runpath?} is false (@pxref{Build Systems})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10753
msgid "This validation step consists in making sure that all the shared libraries needed by an ELF binary, which are listed as @code{DT_NEEDED} entries in its @code{PT_DYNAMIC} segment, appear in the @code{DT_RUNPATH} entry of that binary.  In other words, it ensures that running or using those binaries will not result in a ``file not found'' error at run time.  @xref{Options, @option{-rpath},, ld, The GNU Linker}, for more information on @code{RUNPATH}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10763
msgid "Other build systems have similar phases, with some variations.  For example, @code{cmake-build-system} has same-named phases but its @code{configure} phases runs @code{cmake} instead of @code{./configure}.  Others, such as @code{python-build-system}, have a wholly different list of standard phases.  All this code runs on the @dfn{build side}: it is evaluated when you actually build the package, in a dedicated build process spawned by the build daemon (@pxref{Invoking guix-daemon})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10770
msgid "Build phases are represented as association lists or ``alists'' (@pxref{Association Lists,,, guile, GNU Guile Reference Manual}) where each key is a symbol for the name of the phase and the associated value is a procedure that accepts an arbitrary number of arguments.  By convention, those procedures receive information about the build in the form of @dfn{keyword parameters}, which they can use or ignore."
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:10771
#, no-wrap
msgid "%standard-phases"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10777
msgid "For example, here is how @code{(guix build gnu-build-system)} defines @code{%standard-phases}, the variable holding its alist of build phases@footnote{We present a simplified view of those build phases, but do take a look at @code{(guix build gnu-build-system)} to see all the details!}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:10780
#, no-wrap
msgid ""
";; The build phases of 'gnu-build-system'.\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:10784
#, no-wrap
msgid ""
"(define* (unpack #:key source #:allow-other-keys)\n"
"  ;; Extract the source tarball.\n"
"  (invoke \"tar\" \"xvf\" source))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:10790
#, no-wrap
msgid ""
"(define* (configure #:key outputs #:allow-other-keys)\n"
"  ;; Run the 'configure' script.  Install to output \"out\".\n"
"  (let ((out (assoc-ref outputs \"out\")))\n"
"    (invoke \"./configure\"\n"
"            (string-append \"--prefix=\" out))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:10794
#, no-wrap
msgid ""
"(define* (build #:allow-other-keys)\n"
"  ;; Compile.\n"
"  (invoke \"make\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:10801
#, no-wrap
msgid ""
"(define* (check #:key (test-target \"check\") (tests? #true)\n"
"                #:allow-other-keys)\n"
"  ;; Run the test suite.\n"
"  (if tests?\n"
"      (invoke \"make\" test-target)\n"
"      (display \"test suite not run\\n\")))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:10805
#, no-wrap
msgid ""
"(define* (install #:allow-other-keys)\n"
"  ;; Install files to the prefix 'configure' specified.\n"
"  (invoke \"make\" \"install\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:10814
#, no-wrap
msgid ""
"(define %standard-phases\n"
"  ;; The list of standard phases (quite a few are omitted\n"
"  ;; for brevity).  Each element is a symbol/procedure pair.\n"
"  (list (cons 'unpack unpack)\n"
"        (cons 'configure configure)\n"
"        (cons 'build build)\n"
"        (cons 'check check)\n"
"        (cons 'install install)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10824
msgid "This shows how @code{%standard-phases} is defined as a list of symbol/procedure pairs (@pxref{Pairs,,, guile, GNU Guile Reference Manual}).  The first pair associates the @code{unpack} procedure with the @code{unpack} symbol---a name; the second pair defines the @code{configure} phase similarly, and so on.  When building a package that uses @code{gnu-build-system} with its default list of phases, those phases are executed sequentially.  You can see the name of each phase started and completed in the build log of packages that you build."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10830
msgid "Let's now look at the procedures themselves.  Each one is defined with @code{define*}: @code{#:key} lists keyword parameters the procedure accepts, possibly with a default value, and @code{#:allow-other-keys} specifies that other keyword parameters are ignored (@pxref{Optional Arguments,,, guile, GNU Guile Reference Manual})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10846
msgid "The @code{unpack} procedure honors the @code{source} parameter, which the build system uses to pass the file name of the source tarball (or version control checkout), and it ignores other parameters.  The @code{configure} phase only cares about the @code{outputs} parameter, an alist mapping package output names to their store file name (@pxref{Packages with Multiple Outputs}).  It extracts the file name of for @code{out}, the default output, and passes it to @command{./configure} as the installation prefix, meaning that @command{make install} will eventually copy all the files in that directory (@pxref{Configuration, configuration and makefile conventions,, standards, GNU Coding Standards}).  @code{build} and @code{install} ignore all their arguments.  @code{check} honors the @code{test-target} argument, which specifies the name of the Makefile target to run tests; it prints a message and skips tests when @code{tests?} is false."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:10847
#, no-wrap
msgid "build phases, customizing"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10856
msgid "The list of phases used for a particular package can be changed with the @code{#:phases} parameter of the build system.  Changing the set of build phases boils down to building a new alist of phases based on the @code{%standard-phases} alist described above.  This can be done with standard alist procedures such as @code{alist-delete} (@pxref{SRFI-1 Association Lists,,, guile, GNU Guile Reference Manual}); however, it is more convenient to do so with @code{modify-phases} (@pxref{Build Utilities, @code{modify-phases}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10861
msgid "Here is an example of a package definition that removes the @code{configure} phase of @code{%standard-phases} and inserts a new phase before the @code{build} phase, called @code{set-prefix-in-makefile}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:10885
#, no-wrap
msgid ""
"(define-public example\n"
"  (package\n"
"    (name \"example\")\n"
"    ;; other fields omitted\n"
"    (build-system gnu-build-system)\n"
"    (arguments\n"
"     (list\n"
"      #:phases\n"
"      #~(modify-phases %standard-phases\n"
"          (delete 'configure)\n"
"          (add-before 'build 'set-prefix-in-makefile\n"
"            (lambda* (#:key inputs #:allow-other-keys)\n"
"              ;; Modify the makefile so that its\n"
"              ;; 'PREFIX' variable points to #$output and\n"
"              ;; 'XMLLINT' points to the correct path.\n"
"              (substitute* \"Makefile\"\n"
"                ((\"PREFIX =.*\")\n"
"                 (string-append \"PREFIX = \" #$output \"\\n\"))\n"
"                ((\"XMLLINT =.*\")\n"
"                 (string-append \"XMLLINT = \"\n"
"                                (search-input-file inputs \"/bin/xmllint\")\n"
"                                \"\\n\"))))))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10894
msgid "The new phase that is inserted is written as an anonymous procedure, introduced with @code{lambda*}; it looks for the @file{xmllint} executable under a @file{/bin} directory among the package's inputs (@pxref{package Reference}).  It also honors the @code{outputs} parameter we have seen before.  @xref{Build Utilities}, for more about the helpers used by this phase, and for more examples of @code{modify-phases}."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:10898
msgid "You can inspect the code associated with a package's @code{#:phases} argument interactively, at the REPL (@pxref{Using Guix Interactively})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:10900 guix-git/doc/guix.texi:12266
#, no-wrap
msgid "code staging"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:10901 guix-git/doc/guix.texi:12267
#, no-wrap
msgid "staging, of code"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10908
msgid "Keep in mind that build phases are code evaluated at the time the package is actually built.  This explains why the whole @code{modify-phases} expression above is quoted (it comes after the @code{#~} or hash-tilde): it is @dfn{staged} for later execution.  @xref{G-Expressions}, for an explanation of code staging and the @dfn{code strata} involved."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10918
msgid "As soon as you start writing non-trivial package definitions (@pxref{Defining Packages}) or other build actions (@pxref{G-Expressions}), you will likely start looking for helpers for ``shell-like'' actions---creating directories, copying and deleting files recursively, manipulating build phases, and so on.  The @code{(guix build utils)} module provides such utility procedures."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10922
msgid "Most build systems load @code{(guix build utils)} (@pxref{Build Systems}).  Thus, when writing custom build phases for your package definitions, you can usually assume those procedures are in scope."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10927
msgid "When writing G-expressions, you can import @code{(guix build utils)} on the ``build side'' using @code{with-imported-modules} and then put it in scope with the @code{use-modules} form (@pxref{Using Guile Modules,,, guile, GNU Guile Reference Manual}):"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:10934
#, no-wrap
msgid ""
"(with-imported-modules '((guix build utils))  ;import it\n"
"  (computed-file \"empty-tree\"\n"
"                 #~(begin\n"
"                     ;; Put it in scope.\n"
"                     (use-modules (guix build utils))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:10937
#, no-wrap
msgid ""
"                     ;; Happily use its 'mkdir-p' procedure.\n"
"                     (mkdir-p (string-append #$output \"/a/b/c\")))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10941
msgid "The remainder of this section is the reference for most of the utility procedures provided by @code{(guix build utils)}."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:10944
#, no-wrap
msgid "Dealing with Store File Names"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10947
msgid "This section documents procedures that deal with store file names."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10948
#, no-wrap
msgid "{Procedure} %store-directory"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10950
msgid "Return the directory name of the store."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10952
#, fuzzy, no-wrap
msgid "{Procedure} store-file-name? file"
msgstr "Canali"

#. type: deffn
#: guix-git/doc/guix.texi:10954
msgid "Return true if @var{file} is in the store."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10956
#, fuzzy, no-wrap
msgid "{Procedure} strip-store-file-name file"
msgstr "Canali"

#. type: deffn
#: guix-git/doc/guix.texi:10959
msgid "Strip the @file{/gnu/store} and hash from @var{file}, a store file name.  The result is typically a @code{\"@var{package}-@var{version}\"} string."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10961
#, no-wrap
msgid "{Procedure} package-name->name+version name"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10966
msgid "Given @var{name}, a package name like @code{\"foo-0.9.1b\"}, return two values: @code{\"foo\"} and @code{\"0.9.1b\"}.  When the version part is unavailable, @var{name} and @code{#f} are returned.  The first hyphen followed by a digit is considered to introduce the version part."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:10968
#, no-wrap
msgid "File Types"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10971
msgid "The procedures below deal with files and file types."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10972
#, no-wrap
msgid "{Procedure} directory-exists? dir"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10974
msgid "Return @code{#t} if @var{dir} exists and is a directory."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10976
#, no-wrap
msgid "{Procedure} executable-file? file"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10978
msgid "Return @code{#t} if @var{file} exists and is executable."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10980
#, no-wrap
msgid "{Procedure} symbolic-link? file"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10982
msgid "Return @code{#t} if @var{file} is a symbolic link (aka. a ``symlink'')."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10984
#, no-wrap
msgid "{Procedure} elf-file? file"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:10985
#, fuzzy, no-wrap
msgid "{Procedure} ar-file? file"
msgstr "Canali"

#. type: deffnx
#: guix-git/doc/guix.texi:10986
#, no-wrap
msgid "{Procedure} gzip-file? file"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10989
msgid "Return @code{#t} if @var{file} is, respectively, an ELF file, an @code{ar} archive (such as a @file{.a} static library), or a gzip file."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10991
#, no-wrap
msgid "{Procedure} reset-gzip-timestamp file [#:keep-mtime? #t]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10995
msgid "If @var{file} is a gzip file, reset its embedded timestamp (as with @command{gzip --no-name}) and return true.  Otherwise return @code{#f}.  When @var{keep-mtime?} is true, preserve @var{file}'s modification time."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:10997
#, no-wrap
msgid "File Manipulation"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11004
msgid "The following procedures and macros help create, modify, and delete files.  They provide functionality comparable to common shell utilities such as @command{mkdir -p}, @command{cp -r}, @command{rm -r}, and @command{sed}.  They complement Guile's extensive, but low-level, file system interface (@pxref{POSIX,,, guile, GNU Guile Reference Manual})."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:11005
#, no-wrap
msgid "with-directory-excursion directory body @dots{}"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:11007
msgid "Run @var{body} with @var{directory} as the process's current directory."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:11014
msgid "Essentially, this macro changes the current directory to @var{directory} before evaluating @var{body}, using @code{chdir} (@pxref{Processes,,, guile, GNU Guile Reference Manual}).  It changes back to the initial directory when the dynamic extent of @var{body} is left, be it @i{via} normal procedure return or @i{via} a non-local exit such as an exception."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11016
#, no-wrap
msgid "{Procedure} mkdir-p dir"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11018
msgid "Create directory @var{dir} and all its ancestors."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11020
#, no-wrap
msgid "{Procedure} install-file file directory"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11023
msgid "Create @var{directory} if it does not exist and copy @var{file} in there under the same name."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11025
#, no-wrap
msgid "{Procedure} make-file-writable file"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11027
msgid "Make @var{file} writable for its owner."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11029
#, no-wrap
msgid "{Procedure} copy-recursively source destination @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11044
msgid "[#:log (current-output-port)] [#:follow-symlinks? #f] @ [#:copy-file copy-file] [#:keep-mtime? #f] [#:keep-permissions? #t] @ [#:select? (const #t)] Copy @var{source} directory to @var{destination}.  Follow symlinks if @var{follow-symlinks?} is true; otherwise, just preserve them.  Call @var{copy-file} to copy regular files.  Call @var{select?}, taking two arguments, @var{file} and @var{stat}, for each entry in @var{source}, where @var{file} is the entry's absolute file name and @var{stat} is the result of @code{lstat} (or @code{stat} if @var{follow-symlinks?} is true); exclude entries for which @var{select?} does not return true.  When @var{keep-mtime?} is true, keep the modification time of the files in @var{source} on those of @var{destination}.  When @var{keep-permissions?} is true, preserve file permissions.  Write verbose output to the @var{log} port."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11046
#, no-wrap
msgid "{Procedure} delete-file-recursively dir [#:follow-mounts? #f]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11050
msgid "Delete @var{dir} recursively, like @command{rm -rf}, without following symlinks.  Don't follow mount points either, unless @var{follow-mounts?} is true.  Report but ignore errors."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:11052
#, no-wrap
msgid "substitute* file @"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:11057
msgid "((regexp match-var@dots{}) body@dots{}) @dots{} Substitute @var{regexp} in @var{file} by the string returned by @var{body}.  @var{body} is evaluated with each @var{match-var} bound to the corresponding positional regexp sub-expression.  For example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11064
#, no-wrap
msgid ""
"(substitute* file\n"
"  ((\"hello\")\n"
"   \"good morning\\n\")\n"
"  ((\"foo([a-z]+)bar(.*)$\" all letters end)\n"
"   (string-append \"baz\" letters end)))\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:11070
msgid "Here, anytime a line of @var{file} contains @code{hello}, it is replaced by @code{good morning}.  Anytime a line of @var{file} matches the second regexp, @code{all} is bound to the complete match, @code{letters} is bound to the first sub-expression, and @code{end} is bound to the last one."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:11073
msgid "When one of the @var{match-var} is @code{_}, no variable is bound to the corresponding match substring."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:11076
msgid "Alternatively, @var{file} may be a list of file names, in which case they are all subject to the substitutions."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:11081
msgid "Be careful about using @code{$} to match the end of a line; by itself it won't match the terminating newline of a line.  For example, to match a whole line ending with a backslash, one needs a regex like @code{\"(.*)\\\\\\\\\\n$\"}."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:11083
#, no-wrap
msgid "File Search"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11085
#, no-wrap
msgid "file, searching"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11087
msgid "This section documents procedures to search and filter files."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11088
#, no-wrap
msgid "{Procedure} file-name-predicate regexp"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11091
msgid "Return a predicate that returns true when passed a file name whose base name matches @var{regexp}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11093
#, no-wrap
msgid "{Procedure} find-files dir [pred] @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11104
msgid "[#:stat lstat] [#:directories? #f] [#:fail-on-error? #f] Return the lexicographically sorted list of files under @var{dir} for which @var{pred} returns true.  @var{pred} is passed two arguments: the absolute file name, and its stat buffer; the default predicate always returns true.  @var{pred} can also be a regular expression, in which case it is equivalent to @code{(file-name-predicate @var{pred})}.  @var{stat} is used to obtain file information; using @code{lstat} means that symlinks are not followed.  If @var{directories?} is true, then directories will also be included.  If @var{fail-on-error?} is true, raise an exception upon error."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11108
msgid "Here are a few examples where we assume that the current directory is the root of the Guix source tree:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11113
#, no-wrap
msgid ""
";; List all the regular files in the current directory.\n"
"(find-files \".\")\n"
"@result{} (\"./.dir-locals.el\" \"./.gitignore\" @dots{})\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11117
#, no-wrap
msgid ""
";; List all the .scm files under gnu/services.\n"
"(find-files \"gnu/services\" \"\\\\.scm$\")\n"
"@result{} (\"gnu/services/admin.scm\" \"gnu/services/audio.scm\" @dots{})\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11121
#, no-wrap
msgid ""
";; List ar files in the current directory.\n"
"(find-files \".\" (lambda (file stat) (ar-file? file)))\n"
"@result{} (\"./libformat.a\" \"./libstore.a\" @dots{})\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11123
#, no-wrap
msgid "{Procedure} which program"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11126
msgid "Return the complete file name for @var{program} as found in @code{$PATH}, or @code{#f} if @var{program} could not be found."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11128
#, no-wrap
msgid "{Procedure} search-input-file inputs name"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:11129
#, no-wrap
msgid "{Procedure} search-input-directory inputs name"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11134
msgid "Return the complete file name for @var{name} as found in @var{inputs}; @code{search-input-file} searches for a regular file and @code{search-input-directory} searches for a directory.  If @var{name} could not be found, an exception is raised."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11138
msgid "Here, @var{inputs} must be an association list like @code{inputs} and @code{native-inputs} as available to build phases (@pxref{Build Phases})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11142
msgid "Here is a (simplified) example of how @code{search-input-file} is used in a build phase of the @code{wireguard-tools} package:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11151
#, no-wrap
msgid ""
"(add-after 'install 'wrap-wg-quick\n"
"  (lambda* (#:key inputs outputs #:allow-other-keys)\n"
"    (let ((coreutils (string-append (assoc-ref inputs \"coreutils\")\n"
"                                    \"/bin\")))\n"
"      (wrap-program (search-input-file outputs \"bin/wg-quick\")\n"
"        #:sh (search-input-file inputs \"bin/bash\")\n"
"        `(\"PATH\" \":\" prefix ,(list coreutils))))))\n"
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:11153
#, no-wrap
msgid "Program Invocation"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11155
#, no-wrap
msgid "program invocation, from Scheme"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11156
#, no-wrap
msgid "invoking programs, from Scheme"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11160
msgid "You'll find handy procedures to spawn processes in this module, essentially convenient wrappers around Guile's @code{system*} (@pxref{Processes, @code{system*},, guile, GNU Guile Reference Manual})."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11161
#, no-wrap
msgid "{Procedure} invoke program args@dots{}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11165
msgid "Invoke @var{program} with the given @var{args}.  Raise an @code{&invoke-error} exception if the exit code is non-zero; otherwise return @code{#t}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11169
msgid "The advantage compared to @code{system*} is that you do not need to check the return value.  This reduces boilerplate in shell-script-like snippets for instance in package build phases."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11171
#, no-wrap
msgid "{Procedure} invoke-error? c"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11173
msgid "Return true if @var{c} is an @code{&invoke-error} condition."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11175
#, no-wrap
msgid "{Procedure} invoke-error-program c"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:11176
#, no-wrap
msgid "{Procedure} invoke-error-arguments c"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:11177
#, no-wrap
msgid "{Procedure} invoke-error-exit-status c"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:11178
#, no-wrap
msgid "{Procedure} invoke-error-term-signal c"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:11179
#, no-wrap
msgid "{Procedure} invoke-error-stop-signal c"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11181
msgid "Access specific fields of @var{c}, an @code{&invoke-error} condition."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11183
#, no-wrap
msgid "{Procedure} report-invoke-error c [port]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11186
msgid "Report to @var{port} (by default the current error port) about @var{c}, an @code{&invoke-error} condition, in a human-friendly way."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11188
msgid "Typical usage would look like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11192
#, no-wrap
msgid ""
"(use-modules (srfi srfi-34) ;for 'guard'\n"
"             (guix build utils))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11196
#, no-wrap
msgid ""
"(guard (c ((invoke-error? c)\n"
"           (report-invoke-error c)))\n"
"  (invoke \"date\" \"--imaginary-option\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11198
#, no-wrap
msgid "@print{} command \"date\" \"--imaginary-option\" failed with status 1\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11201
#, no-wrap
msgid "{Procedure} invoke/quiet program args@dots{}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11207
msgid "Invoke @var{program} with @var{args} and capture @var{program}'s standard output and standard error.  If @var{program} succeeds, print nothing and return the unspecified value; otherwise, raise a @code{&message} error condition that includes the status code and the output of @var{program}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11209
msgid "Here's an example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11214
#, no-wrap
msgid ""
"(use-modules (srfi srfi-34) ;for 'guard'\n"
"             (srfi srfi-35) ;for 'message-condition?'\n"
"             (guix build utils))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11219
#, no-wrap
msgid ""
"(guard (c ((message-condition? c)\n"
"           (display (condition-message c))))\n"
"  (invoke/quiet \"date\")  ;all is fine\n"
"  (invoke/quiet \"date\" \"--imaginary-option\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11221
#, no-wrap
msgid ""
"@print{} 'date --imaginary-option' exited with status 1; output follows:\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11224
#, no-wrap
msgid ""
"    date: unrecognized option '--imaginary-option'\n"
"    Try 'date --help' for more information.\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11236
msgid "The @code{(guix build utils)} also contains tools to manipulate build phases as used by build systems (@pxref{Build Systems}).  Build phases are represented as association lists or ``alists'' (@pxref{Association Lists,,, guile, GNU Guile Reference Manual}) where each key is a symbol naming the phase and the associated value is a procedure (@pxref{Build Phases})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11240
msgid "Guile core and the @code{(srfi srfi-1)} module both provide tools to manipulate alists.  The @code{(guix build utils)} module complements those with tools written with build phases in mind."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11241
#, no-wrap
msgid "build phases, modifying"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:11242
#, no-wrap
msgid "modify-phases phases clause@dots{}"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:11245
msgid "Modify @var{phases} sequentially as per each @var{clause}, which may have one of the following forms:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11251
#, no-wrap
msgid ""
"(delete @var{old-phase-name})\n"
"(replace @var{old-phase-name} @var{new-phase})\n"
"(add-before @var{old-phase-name} @var{new-phase-name} @var{new-phase})\n"
"(add-after @var{old-phase-name} @var{new-phase-name} @var{new-phase})\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:11255
msgid "Where every @var{phase-name} above is an expression evaluating to a symbol, and @var{new-phase} an expression evaluating to a procedure."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11266
msgid "The example below is taken from the definition of the @code{grep} package.  It adds a phase to run after the @code{install} phase, called @code{fix-egrep-and-fgrep}.  That phase is a procedure (@code{lambda*} is for anonymous procedures) that takes a @code{#:outputs} keyword argument and ignores extra keyword arguments (@pxref{Optional Arguments,,, guile, GNU Guile Reference Manual}, for more on @code{lambda*} and optional and keyword arguments.)  The phase uses @code{substitute*} to modify the installed @file{egrep} and @file{fgrep} scripts so that they refer to @code{grep} by its absolute file name:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11279
#, no-wrap
msgid ""
"(modify-phases %standard-phases\n"
"  (add-after 'install 'fix-egrep-and-fgrep\n"
"    ;; Patch 'egrep' and 'fgrep' to execute 'grep' via its\n"
"    ;; absolute file name instead of searching for it in $PATH.\n"
"    (lambda* (#:key outputs #:allow-other-keys)\n"
"      (let* ((out (assoc-ref outputs \"out\"))\n"
"             (bin (string-append out \"/bin\")))\n"
"        (substitute* (list (string-append bin \"/egrep\")\n"
"                           (string-append bin \"/fgrep\"))\n"
"          ((\"^exec grep\")\n"
"           (string-append \"exec \" bin \"/grep\")))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11286
msgid "In the example below, phases are modified in two ways: the standard @code{configure} phase is deleted, presumably because the package does not have a @file{configure} script or anything similar, and the default @code{install} phase is replaced by one that manually copies the executable files to be installed:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11298
#, no-wrap
msgid ""
"(modify-phases %standard-phases\n"
"  (delete 'configure)      ;no 'configure' script\n"
"  (replace 'install\n"
"    (lambda* (#:key outputs #:allow-other-keys)\n"
"      ;; The package's Makefile doesn't provide an \"install\"\n"
"      ;; rule so do it by ourselves.\n"
"      (let ((bin (string-append (assoc-ref outputs \"out\")\n"
"                                \"/bin\")))\n"
"        (install-file \"footswitch\" bin)\n"
"        (install-file \"scythe\" bin)))))\n"
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:11302
#, no-wrap
msgid "Wrappers"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11304
#, no-wrap
msgid "program wrappers"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11305
#, no-wrap
msgid "wrapping programs"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11311
msgid "It is not unusual for a command to require certain environment variables to be set for proper functioning, typically search paths (@pxref{Search Paths}).  Failing to do that, the command might fail to find files or other commands it relies on, or it might pick the ``wrong'' ones---depending on the environment in which it runs.  Examples include:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:11315
msgid "a shell script that assumes all the commands it uses are in @env{PATH};"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:11319
msgid "a Guile program that assumes all its modules are in @env{GUILE_LOAD_PATH} and @env{GUILE_LOAD_COMPILED_PATH};"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:11323
msgid "a Qt application that expects to find certain plugins in @env{QT_PLUGIN_PATH}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11331
msgid "For a package writer, the goal is to make sure commands always work the same rather than depend on some external settings.  One way to achieve that is to @dfn{wrap} commands in a thin script that sets those environment variables, thereby ensuring that those run-time dependencies are always found.  The wrapper would be used to set @env{PATH}, @env{GUILE_LOAD_PATH}, or @env{QT_PLUGIN_PATH} in the examples above."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11334
msgid "To ease that task, the @code{(guix build utils)} module provides a couple of helpers to wrap commands."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11335
#, no-wrap
msgid "{Procedure} wrap-program program [#:sh sh] [#:rest variables]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11337
msgid "Make a wrapper for @var{program}.  @var{variables} should look like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11340
#, no-wrap
msgid "'(@var{variable} @var{delimiter} @var{position} @var{list-of-directories})\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11344
msgid "where @var{delimiter} is optional.  @code{:} will be used if @var{delimiter} is not given."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11346
msgid "For example, this call:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11352
#, no-wrap
msgid ""
"(wrap-program \"foo\"\n"
"              '(\"PATH\" \":\" = (\"/gnu/.../bar/bin\"))\n"
"              '(\"CERT_PATH\" suffix (\"/gnu/.../baz/certs\"\n"
"                                    \"/qux/certs\")))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11356
msgid "will copy @file{foo} to @file{.foo-real} and create the file @file{foo} with the following contents:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:11362
#, no-wrap
msgid ""
"#!location/of/bin/bash\n"
"export PATH=\"/gnu/.../bar/bin\"\n"
"export CERT_PATH=\"$CERT_PATH$@{CERT_PATH:+:@}/gnu/.../baz/certs:/qux/certs\"\n"
"exec -a $0 location/of/.foo-real \"$@@\"\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11367
msgid "If @var{program} has previously been wrapped by @code{wrap-program}, the wrapper is extended with definitions for @var{variables}.  If it is not, @var{sh} will be used as the interpreter."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11369
#, no-wrap
msgid "{Procedure} wrap-script program [#:guile guile] [#:rest variables]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11376
msgid "Wrap the script @var{program} such that @var{variables} are set first.  The format of @var{variables} is the same as in the @code{wrap-program} procedure.  This procedure differs from @code{wrap-program} in that it does not create a separate shell script.  Instead, @var{program} is modified directly by prepending a Guile script, which is interpreted as a comment in the script's language."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11379
msgid "Special encoding comments as supported by Python are recreated on the second line."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11382
msgid "Note that this procedure can only be used once per file as Guile scripts are not supported."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11387
#, no-wrap
msgid "search path"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11394
msgid "Many programs and libraries look for input data in a @dfn{search path}, a list of directories: shells like Bash look for executables in the command search path, a C compiler looks for @file{.h} files in its header search path, the Python interpreter looks for @file{.py} files in its search path, the spell checker has a search path for dictionaries, and so on."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11402
msgid "Search paths can usually be defined or overridden @i{via} environment variables (@pxref{Environment Variables,,, libc, The GNU C Library Reference Manual}).  For example, the search paths mentioned above can be changed by defining the @env{PATH}, @env{C_INCLUDE_PATH}, @env{PYTHONPATH} (or @env{GUIX_PYTHONPATH}), and @env{DICPATH} environment variables---you know, all these something-PATH variables that you need to get right or things ``won't be found''."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11412
msgid "You may have noticed from the command line that Guix ``knows'' which search path environment variables should be defined, and how.  When you install packages in your default profile, the file @file{~/.guix-profile/etc/profile} is created, which you can ``source'' from the shell to set those variables.  Likewise, if you ask @command{guix shell} to create an environment containing Python and NumPy, a Python library, and if you pass it the @option{--search-paths} option, it will tell you about @env{PATH} and @env{GUIX_PYTHONPATH} (@pxref{Invoking guix shell}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:11417
#, no-wrap
msgid ""
"$ guix shell python python-numpy --pure --search-paths\n"
"export PATH=\"/gnu/store/@dots{}-profile/bin\"\n"
"export GUIX_PYTHONPATH=\"/gnu/store/@dots{}-profile/lib/python3.9/site-packages\"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11421
msgid "When you omit @option{--search-paths}, it defines these environment variables right away, such that Python can readily find NumPy:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:11430
#, no-wrap
msgid ""
"$ guix shell python python-numpy -- python3\n"
"Python 3.9.6 (default, Jan  1 1970, 00:00:01)\n"
"[GCC 10.3.0] on linux\n"
"Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n"
">>> import numpy\n"
">>> numpy.version.version\n"
"'1.20.3'\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11435
msgid "For this to work, the definition of the @code{python} package @emph{declares} the search path it cares about and its associated environment variable, @env{GUIX_PYTHONPATH}.  It looks like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11445
#, no-wrap
msgid ""
"(package\n"
"  (name \"python\")\n"
"  (version \"3.9.9\")\n"
"  ;; some fields omitted...\n"
"  (native-search-paths\n"
"   (list (search-path-specification\n"
"          (variable \"GUIX_PYTHONPATH\")\n"
"          (files (list \"lib/python/3.9/site-packages\"))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11460
msgid "What this @code{native-search-paths} field says is that, when the @code{python} package is used, the @env{GUIX_PYTHONPATH} environment variable must be defined to include all the @file{lib/python/3.9/site-packages} sub-directories encountered in its environment.  (The @code{native-} bit means that, if we are in a cross-compilation environment, only native inputs may be added to the search path; @pxref{package Reference, @code{search-paths}}.)  In the NumPy example above, the profile where @code{python} appears contains exactly one such sub-directory, and @env{GUIX_PYTHONPATH} is set to that.  When there are several @file{lib/python/3.9/site-packages}---this is the case in package build environments---they are all added to @env{GUIX_PYTHONPATH}, separated by colons (@code{:})."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:11467
msgid "Notice that @env{GUIX_PYTHONPATH} is specified as part of the definition of the @code{python} package, and @emph{not} as part of that of @code{python-numpy}.  This is because this environment variable ``belongs'' to Python, not NumPy: Python actually reads the value of that variable and honors it."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:11471
msgid "Corollary: if you create a profile that does not contain @code{python}, @code{GUIX_PYTHONPATH} will @emph{not} be defined, even if it contains packages that provide @file{.py} files:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:11475
#, no-wrap
msgid ""
"$ guix shell python-numpy --search-paths --pure\n"
"export PATH=\"/gnu/store/@dots{}-profile/bin\"\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:11479
msgid "This makes a lot of sense if we look at this profile in isolation: no software in this profile would read @env{GUIX_PYTHONPATH}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11489
msgid "Of course, there are many variations on that theme: some packages honor more than one search path, some use separators other than colon, some accumulate several directories in their search path, and so on.  A more complex example is the search path of libxml2: the value of the @env{XML_CATALOG_FILES} environment variable is space-separated, it must contain a list of @file{catalog.xml} files (not directories), which are to be found in @file{xml} sub-directories---nothing less.  The search path specification looks like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11498
#, no-wrap
msgid ""
"(search-path-specification\n"
" (variable \"XML_CATALOG_FILES\")\n"
" (separator \" \")\n"
" (files '(\"xml\"))\n"
" (file-pattern \"^catalog\\\\.xml$\")\n"
" (file-type 'regular))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11501
msgid "Worry not, search path specifications are usually not this tricky."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11505
msgid "The @code{(guix search-paths)} module defines the data type of search path specifications and a number of helper procedures.  Below is the reference of search path specifications."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:11506
#, no-wrap
msgid "{Data Type} search-path-specification"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:11508
msgid "The data type for search path specifications."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:11510
#, no-wrap
msgid "variable"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:11512
msgid "The name of the environment variable for this search path (a string)."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:11513 guix-git/doc/guix.texi:21663
#, no-wrap
msgid "files"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:11516
msgid "The list of sub-directories (strings) that should be added to the search path."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:11517
#, no-wrap
msgid "@code{separator} (default: @code{\":\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:11519
msgid "The string used to separate search path components."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:11527
msgid "As a special case, a @code{separator} value of @code{#f} specifies a ``single-component search path''---in other words, a search path that cannot contain more than one element.  This is useful in some cases, such as the @code{SSL_CERT_DIR} variable (honored by OpenSSL, cURL, and a few other packages) or the @code{ASPELL_DICT_DIR} variable (honored by the GNU Aspell spell checker), both of which must point to a single directory."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:11528
#, no-wrap
msgid "@code{file-type} (default: @code{'directory})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:11532
msgid "The type of file being matched---@code{'directory} or @code{'regular}, though it can be any symbol returned by @code{stat:type} (@pxref{File System, @code{stat},, guile, GNU Guile Reference Manual})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:11535
msgid "In the @env{XML_CATALOG_FILES} example above, we would match regular files; in the Python example, we would match directories."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:11536
#, no-wrap
msgid "@code{file-pattern} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:11540
msgid "This must be either @code{#f} or a regular expression specifying files to be matched @emph{within} the sub-directories specified by the @code{files} field."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:11543
msgid "Again, the @env{XML_CATALOG_FILES} example shows a situation where this is needed."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11549
msgid "Some search paths are not tied by a single package but to many packages.  To reduce duplications, some of them are pre-defined in @code{(guix search-paths)}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:11550
#, no-wrap
msgid "$SGML_CATALOG_FILES"
msgstr ""

#. type: defvarx
#: guix-git/doc/guix.texi:11551
#, no-wrap
msgid "$XML_CATALOG_FILES"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:11557
msgid "These two search paths indicate where the @url{https://www.oasis-open.org/specs/a401.htm,TR9401 catalog}@footnote{ Alternatively known as SGML catalog.} or @url{https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html, XML catalog} files can be found."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:11559
#, no-wrap
msgid "$SSL_CERT_DIR"
msgstr ""

#. type: defvarx
#: guix-git/doc/guix.texi:11560
#, no-wrap
msgid "$SSL_CERT_FILE"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:11563
msgid "These two search paths indicate where X.509 certificates can be found (@pxref{X.509 Certificates})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11566
msgid "These pre-defined search paths can be used as in the following example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11572
#, no-wrap
msgid ""
"(package\n"
"  (name \"curl\")\n"
"  ;; some fields omitted ...\n"
"  (native-search-paths (list $SSL_CERT_DIR $SSL_CERT_FILE)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11577
msgid "How do you turn search path specifications on one hand and a bunch of directories on the other hand in a set of environment variable definitions? That's the job of @code{evaluate-search-paths}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11578
#, no-wrap
msgid "{Procedure} evaluate-search-paths search-paths directories [getenv]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11583
msgid "Evaluate @var{search-paths}, a list of search-path specifications, for @var{directories}, a list of directory names, and return a list of specification/value pairs.  Use @var{getenv} to determine the current settings and report only settings not already effective."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11587
msgid "The @code{(guix profiles)} provides a higher-level helper procedure, @code{load-profile}, that sets the environment variables of a profile."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11592
#, no-wrap
msgid "store items"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11593
#, no-wrap
msgid "store paths"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11604
msgid "Conceptually, the @dfn{store} is the place where derivations that have been built successfully are stored---by default, @file{/gnu/store}.  Sub-directories in the store are referred to as @dfn{store items} or sometimes @dfn{store paths}.  The store has an associated database that contains information such as the store paths referred to by each store path, and the list of @emph{valid} store items---results of successful builds.  This database resides in @file{@var{localstatedir}/guix/db}, where @var{localstatedir} is the state directory specified @i{via} @option{--localstatedir} at configure time, usually @file{/var}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11609
msgid "The store is @emph{always} accessed by the daemon on behalf of its clients (@pxref{Invoking guix-daemon}).  To manipulate the store, clients connect to the daemon over a Unix-domain socket, send requests to it, and read the result---these are remote procedure calls, or RPCs."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:11614
msgid "Users must @emph{never} modify files under @file{/gnu/store} directly.  This would lead to inconsistencies and break the immutability assumptions of Guix's functional model (@pxref{Introduction})."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:11618
msgid "@xref{Invoking guix gc, @command{guix gc --verify}}, for information on how to check the integrity of the store and attempt recovery from accidental modifications."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11625
msgid "The @code{(guix store)} module provides procedures to connect to the daemon, and to perform RPCs.  These are described below.  By default, @code{open-connection}, and thus all the @command{guix} commands, connect to the local daemon or to the URI specified by the @env{GUIX_DAEMON_SOCKET} environment variable."
msgstr ""

#. type: defvr
#: guix-git/doc/guix.texi:11626
#, no-wrap
msgid "{Environment Variable} GUIX_DAEMON_SOCKET"
msgstr ""

#. type: defvr
#: guix-git/doc/guix.texi:11631
msgid "When set, the value of this variable should be a file name or a URI designating the daemon endpoint.  When it is a file name, it denotes a Unix-domain socket to connect to.  In addition to file names, the supported URI schemes are:"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:11634
#, no-wrap
msgid "unix"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:11638
msgid "These are for Unix-domain sockets.  @code{file:///var/guix/daemon-socket/socket} is equivalent to @file{/var/guix/daemon-socket/socket}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:11647
msgid "These URIs denote connections over TCP/IP, without encryption nor authentication of the remote host.  The URI must specify the host name and optionally a port number (by default port 44146 is used):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:11650
#, no-wrap
msgid "guix://master.guix.example.org:1234\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:11655
msgid "This setup is suitable on local networks, such as clusters, where only trusted nodes may connect to the build daemon at @code{master.guix.example.org}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:11659
msgid "The @option{--listen} option of @command{guix-daemon} can be used to instruct it to listen for TCP connections (@pxref{Invoking guix-daemon, @option{--listen}})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:11660
#, no-wrap
msgid "ssh"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11661
#, no-wrap
msgid "SSH access to build daemons"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:11667
msgid "These URIs allow you to connect to a remote daemon over SSH@.  This feature requires Guile-SSH (@pxref{Requirements}) and a working @command{guile} binary in @env{PATH} on the destination machine.  It supports public key and GSSAPI authentication.  A typical URL might look like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:11670
#, no-wrap
msgid "ssh://charlie@@guix.example.org:22\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:11674
msgid "As for @command{guix copy}, the usual OpenSSH client configuration files are honored (@pxref{Invoking guix copy})."
msgstr ""

#. type: defvr
#: guix-git/doc/guix.texi:11677
msgid "Additional URI schemes may be supported in the future."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:11684
msgid "The ability to connect to remote build daemons is considered experimental as of @value{VERSION}.  Please get in touch with us to share any problems or suggestions you may have (@pxref{Contributing})."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11687
#, no-wrap
msgid "{Procedure} open-connection [uri] [#:reserve-space? #t]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11692
msgid "Connect to the daemon over the Unix-domain socket at @var{uri} (a string).  When @var{reserve-space?} is true, instruct it to reserve a little bit of extra space on the file system so that the garbage collector can still operate should the disk become full.  Return a server object."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11695
msgid "@var{file} defaults to @code{%default-socket-path}, which is the normal location given the options that were passed to @command{configure}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11697
#, no-wrap
msgid "{Procedure} close-connection server"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11699
msgid "Close the connection to @var{server}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:11701
#, no-wrap
msgid "current-build-output-port"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:11704
msgid "This variable is bound to a SRFI-39 parameter, which refers to the port where build and error logs sent by the daemon should be written."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11708
msgid "Procedures that make RPCs all take a server object as their first argument."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11709
#, no-wrap
msgid "invalid store items"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11710
#, no-wrap
msgid "{Procedure} valid-path? server path"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11715
msgid "Return @code{#t} when @var{path} designates a valid store item and @code{#f} otherwise (an invalid item may exist on disk but still be invalid, for instance because it is the result of an aborted or failed build)."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11718
msgid "A @code{&store-protocol-error} condition is raised if @var{path} is not prefixed by the store directory (@file{/gnu/store})."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11720
#, no-wrap
msgid "{Procedure} add-text-to-store server name text [references]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11724
msgid "Add @var{text} under file @var{name} in the store, and return its store path.  @var{references} is the list of store paths referred to by the resulting store path."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11726
#, no-wrap
msgid "{Procedure} build-derivations store derivations [mode]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11730
msgid "Build @var{derivations}, a list of @code{<derivation>} objects, @file{.drv} file names, or derivation/output pairs, using the specified @var{mode}---@code{(build-mode normal)} by default."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11736
msgid "Note that the @code{(guix monads)} module provides a monad as well as monadic versions of the above procedures, with the goal of making it more convenient to work with code that accesses the store (@pxref{The Store Monad})."
msgstr ""

#. type: i{#1}
#: guix-git/doc/guix.texi:11739
msgid "This section is currently incomplete."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11743
#, no-wrap
msgid "derivations"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11747
msgid "Low-level build actions and the environment in which they are performed are represented by @dfn{derivations}.  A derivation contains the following pieces of information:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:11752
msgid "The outputs of the derivation---derivations produce at least one file or directory in the store, but may produce more."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11754
#, no-wrap
msgid "build-time dependencies"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11755
#, no-wrap
msgid "dependencies, build-time"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:11759
msgid "The inputs of the derivation---i.e., its build-time dependencies---which may be other derivations or plain files in the store (patches, build scripts, etc.)."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:11762
msgid "The system type targeted by the derivation---e.g., @code{x86_64-linux}."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:11766
msgid "The file name of a build script in the store, along with the arguments to be passed."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:11769
msgid "A list of environment variables to be defined."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11772
#, no-wrap
msgid "derivation path"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11780
msgid "Derivations allow clients of the daemon to communicate build actions to the store.  They exist in two forms: as an in-memory representation, both on the client- and daemon-side, and as files in the store whose name end in @file{.drv}---these files are referred to as @dfn{derivation paths}.  Derivations paths can be passed to the @code{build-derivations} procedure to perform the build actions they prescribe (@pxref{The Store})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11781
#, no-wrap
msgid "fixed-output derivations"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11788
msgid "Operations such as file downloads and version-control checkouts for which the expected content hash is known in advance are modeled as @dfn{fixed-output derivations}.  Unlike regular derivations, the outputs of a fixed-output derivation are independent of its inputs---e.g., a source code download produces the same result regardless of the download method and tools being used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:11789 guix-git/doc/guix.texi:16364
#, no-wrap
msgid "references"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11790
#, no-wrap
msgid "run-time dependencies"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11791
#, no-wrap
msgid "dependencies, run-time"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11798
msgid "The outputs of derivations---i.e., the build results---have a set of @dfn{references}, as reported by the @code{references} RPC or the @command{guix gc --references} command (@pxref{Invoking guix gc}).  References are the set of run-time dependencies of the build results.  References are a subset of the inputs of the derivation; this subset is automatically computed by the build daemon by scanning all the files in the outputs."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11803
msgid "The @code{(guix derivations)} module provides a representation of derivations as Scheme objects, along with procedures to create and otherwise manipulate derivations.  The lowest-level primitive to create a derivation is the @code{derivation} procedure:"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11804
#, no-wrap
msgid "{Procedure} derivation store name builder args @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11813
msgid "[#:outputs '(\"out\")] [#:hash #f] [#:hash-algo #f] @ [#:recursive? #f] [#:inputs '()] [#:env-vars '()] @ [#:system (%current-system)] [#:references-graphs #f] @ [#:allowed-references #f] [#:disallowed-references #f] @ [#:leaked-env-vars #f] [#:local-build? #f] @ [#:substitutable? #t] [#:properties '()] Build a derivation with the given arguments, and return the resulting @code{<derivation>} object."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11820
msgid "When @var{hash} and @var{hash-algo} are given, a @dfn{fixed-output derivation} is created---i.e., one whose result is known in advance, such as a file download.  If, in addition, @var{recursive?} is true, then that fixed output may be an executable file or a directory and @var{hash} must be the hash of an archive containing this output."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11825
msgid "When @var{references-graphs} is true, it must be a list of file name/store path pairs.  In that case, the reference graph of each store path is exported in the build environment in the corresponding file, in a simple text format."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11830
msgid "When @var{allowed-references} is true, it must be a list of store items or outputs that the derivation's output may refer to.  Likewise, @var{disallowed-references}, if true, must be a list of things the outputs may @emph{not} refer to."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11837
msgid "When @var{leaked-env-vars} is true, it must be a list of strings denoting environment variables that are allowed to ``leak'' from the daemon's environment to the build environment.  This is only applicable to fixed-output derivations---i.e., when @var{hash} is true.  The main use is to allow variables such as @code{http_proxy} to be passed to derivations that download files."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11842
msgid "When @var{local-build?} is true, declare that the derivation is not a good candidate for offloading and should rather be built locally (@pxref{Daemon Offload Setup}).  This is the case for small derivations where the costs of data transfers would outweigh the benefits."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11847
msgid "When @var{substitutable?} is false, declare that substitutes of the derivation's output should not be used (@pxref{Substitutes}).  This is useful, for instance, when building packages that capture details of the host CPU instruction set."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11850
msgid "@var{properties} must be an association list describing ``properties'' of the derivation.  It is kept as-is, uninterpreted, in the derivation."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11856
msgid "Here's an example with a shell script as its builder, assuming @var{store} is an open connection to the daemon, and @var{bash} points to a Bash executable in the store:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11861
#, no-wrap
msgid ""
"(use-modules (guix utils)\n"
"             (guix store)\n"
"             (guix derivations))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11870
#, no-wrap
msgid ""
"(let ((builder   ; add the Bash script to the store\n"
"        (add-text-to-store store \"my-builder.sh\"\n"
"                           \"echo hello world > $out\\n\" '())))\n"
"  (derivation store \"foo\"\n"
"              bash `(\"-e\" ,builder)\n"
"              #:inputs `((,bash) (,builder))\n"
"              #:env-vars '((\"HOME\" . \"/homeless\"))))\n"
"@result{} #<derivation /gnu/store/@dots{}-foo.drv => /gnu/store/@dots{}-foo>\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11877
msgid "As can be guessed, this primitive is cumbersome to use directly.  A better approach is to write build scripts in Scheme, of course! The best course of action for that is to write the build code as a ``G-expression'', and to pass it to @code{gexp->derivation}.  For more information, @pxref{G-Expressions}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11882
msgid "Once upon a time, @code{gexp->derivation} did not exist and constructing derivations with build code written in Scheme was achieved with @code{build-expression->derivation}, documented below.  This procedure is now deprecated in favor of the much nicer @code{gexp->derivation}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11883
#, no-wrap
msgid "{Procedure} build-expression->derivation store name exp @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11898
msgid "[#:system (%current-system)] [#:inputs '()] @ [#:outputs '(\"out\")] [#:hash #f] [#:hash-algo #f] @ [#:recursive? #f] [#:env-vars '()] [#:modules '()] @ [#:references-graphs #f] [#:allowed-references #f] @ [#:disallowed-references #f] @ [#:local-build? #f] [#:substitutable? #t] [#:guile-for-build #f] Return a derivation that executes Scheme expression @var{exp} as a builder for derivation @var{name}.  @var{inputs} must be a list of @code{(name drv-path sub-drv)} tuples; when @var{sub-drv} is omitted, @code{\"out\"} is assumed.  @var{modules} is a list of names of Guile modules from the current search path to be copied in the store, compiled, and made available in the load path during the execution of @var{exp}---e.g., @code{((guix build utils) (guix build gnu-build-system))}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11906
msgid "@var{exp} is evaluated in an environment where @code{%outputs} is bound to a list of output/path pairs, and where @code{%build-inputs} is bound to a list of string/output-path pairs made from @var{inputs}.  Optionally, @var{env-vars} is a list of string pairs specifying the name and value of environment variables visible to the builder.  The builder terminates by passing the result of @var{exp} to @code{exit}; thus, when @var{exp} returns @code{#f}, the build is considered to have failed."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11910
msgid "@var{exp} is built using @var{guile-for-build} (a derivation).  When @var{guile-for-build} is omitted or is @code{#f}, the value of the @code{%guile-for-build} fluid is used instead."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11915
msgid "See the @code{derivation} procedure for the meaning of @var{references-graphs}, @var{allowed-references}, @var{disallowed-references}, @var{local-build?}, and @var{substitutable?}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11920
msgid "Here's an example of a single-output derivation that creates a directory containing one file:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11928
#, no-wrap
msgid ""
"(let ((builder '(let ((out (assoc-ref %outputs \"out\")))\n"
"                  (mkdir out)    ; create /gnu/store/@dots{}-goo\n"
"                  (call-with-output-file (string-append out \"/test\")\n"
"                    (lambda (p)\n"
"                      (display '(hello guix) p))))))\n"
"  (build-expression->derivation store \"goo\" builder))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11930
#, no-wrap
msgid "@result{} #<derivation /gnu/store/@dots{}-goo.drv => @dots{}>\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11936
#, no-wrap
msgid "monad"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11942
msgid "The procedures that operate on the store described in the previous sections all take an open connection to the build daemon as their first argument.  Although the underlying model is functional, they either have side effects or depend on the current state of the store."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11948
msgid "The former is inconvenient: the connection to the build daemon has to be carried around in all those functions, making it impossible to compose functions that do not take that parameter with functions that do.  The latter can be problematic: since store operations have side effects and/or depend on external state, they have to be properly sequenced."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11949
#, no-wrap
msgid "monadic values"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11950
#, no-wrap
msgid "monadic functions"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11960
msgid "This is where the @code{(guix monads)} module comes in.  This module provides a framework for working with @dfn{monads}, and a particularly useful monad for our uses, the @dfn{store monad}.  Monads are a construct that allows two things: associating ``context'' with values (in our case, the context is the store), and building sequences of computations (here computations include accesses to the store).  Values in a monad---values that carry this additional context---are called @dfn{monadic values}; procedures that return such values are called @dfn{monadic procedures}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11962
msgid "Consider this ``normal'' procedure:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11971
#, no-wrap
msgid ""
"(define (sh-symlink store)\n"
"  ;; Return a derivation that symlinks the 'bash' executable.\n"
"  (let* ((drv (package-derivation store bash))\n"
"         (out (derivation->output-path drv))\n"
"         (sh  (string-append out \"/bin/bash\")))\n"
"    (build-expression->derivation store \"sh\"\n"
"                                  `(symlink ,sh %output))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11975
msgid "Using @code{(guix monads)} and @code{(guix gexp)}, it may be rewritten as a monadic function:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11983
#, no-wrap
msgid ""
"(define (sh-symlink)\n"
"  ;; Same, but return a monadic value.\n"
"  (mlet %store-monad ((drv (package->derivation bash)))\n"
"    (gexp->derivation \"sh\"\n"
"                      #~(symlink (string-append #$drv \"/bin/bash\")\n"
"                                 #$output))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11990
msgid "There are several things to note in the second version: the @code{store} parameter is now implicit and is ``threaded'' in the calls to the @code{package->derivation} and @code{gexp->derivation} monadic procedures, and the monadic value returned by @code{package->derivation} is @dfn{bound} using @code{mlet} instead of plain @code{let}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11994
msgid "As it turns out, the call to @code{package->derivation} can even be omitted since it will take place implicitly, as we will see later (@pxref{G-Expressions}):"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12000
#, no-wrap
msgid ""
"(define (sh-symlink)\n"
"  (gexp->derivation \"sh\"\n"
"                    #~(symlink (string-append #$bash \"/bin/bash\")\n"
"                               #$output)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12009
msgid "Calling the monadic @code{sh-symlink} has no effect.  As someone once said, ``you exit a monad like you exit a building on fire: by running''.  So, to exit the monad and get the desired effect, one must use @code{run-with-store}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12013
#, no-wrap
msgid ""
"(run-with-store (open-connection) (sh-symlink))\n"
"@result{} /gnu/store/...-sh-symlink\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12020
msgid "Note that the @code{(guix monad-repl)} module extends the Guile REPL with new ``commands'' to make it easier to deal with monadic procedures: @code{run-in-store}, and @code{enter-store-monad} (@pxref{Using Guix Interactively}).  The former is used to ``run'' a single monadic value through the store:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:12024
#, no-wrap
msgid ""
"scheme@@(guile-user)> ,run-in-store (package->derivation hello)\n"
"$1 = #<derivation /gnu/store/@dots{}-hello-2.9.drv => @dots{}>\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12028
msgid "The latter enters a recursive REPL, where all the return values are automatically run through the store:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:12037
#, no-wrap
msgid ""
"scheme@@(guile-user)> ,enter-store-monad\n"
"store-monad@@(guile-user) [1]> (package->derivation hello)\n"
"$2 = #<derivation /gnu/store/@dots{}-hello-2.9.drv => @dots{}>\n"
"store-monad@@(guile-user) [1]> (text-file \"foo\" \"Hello!\")\n"
"$3 = \"/gnu/store/@dots{}-foo\"\n"
"store-monad@@(guile-user) [1]> ,q\n"
"scheme@@(guile-user)>\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12042
msgid "Note that non-monadic values cannot be returned in the @code{store-monad} REPL."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12045
msgid "Other meta-commands are available at the REPL, such as @code{,build} to build a file-like object (@pxref{Using Guix Interactively})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12048
msgid "The main syntactic forms to deal with monads in general are provided by the @code{(guix monads)} module and are described below."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12049
#, no-wrap
msgid "with-monad monad body @dots{}"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12052
msgid "Evaluate any @code{>>=} or @code{return} forms in @var{body} as being in @var{monad}."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12054
#, no-wrap
msgid "return val"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12056
msgid "Return a monadic value that encapsulates @var{val}."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12058
#, no-wrap
msgid ">>= mval mproc @dots{}"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12065
msgid "@dfn{Bind} monadic value @var{mval}, passing its ``contents'' to monadic procedures @var{mproc}@dots{}@footnote{This operation is commonly referred to as ``bind'', but that name denotes an unrelated procedure in Guile.  Thus we use this somewhat cryptic symbol inherited from the Haskell language.}.  There can be one @var{mproc} or several of them, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12073
#, no-wrap
msgid ""
"(run-with-state\n"
"    (with-monad %state-monad\n"
"      (>>= (return 1)\n"
"           (lambda (x) (return (+ 1 x)))\n"
"           (lambda (x) (return (* 2 x)))))\n"
"  'some-state)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12076
#, no-wrap
msgid ""
"@result{} 4\n"
"@result{} some-state\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12079
#, no-wrap
msgid "mlet monad ((var mval) @dots{}) body @dots{}"
msgstr ""

#. type: defmacx
#: guix-git/doc/guix.texi:12080
#, no-wrap
msgid "mlet* monad ((var mval) @dots{}) body @dots{}"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12091
msgid "Bind the variables @var{var} to the monadic values @var{mval} in @var{body}, which is a sequence of expressions.  As with the bind operator, this can be thought of as ``unpacking'' the raw, non-monadic value ``contained'' in @var{mval} and making @var{var} refer to that raw, non-monadic value within the scope of the @var{body}.  The form (@var{var} -> @var{val}) binds @var{var} to the ``normal'' value @var{val}, as per @code{let}.  The binding operations occur in sequence from left to right.  The last expression of @var{body} must be a monadic expression, and its result will become the result of the @code{mlet} or @code{mlet*} when run in the @var{monad}."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12094
msgid "@code{mlet*} is to @code{mlet} what @code{let*} is to @code{let} (@pxref{Local Bindings,,, guile, GNU Guile Reference Manual})."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12096
#, no-wrap
msgid "mbegin monad mexp @dots{}"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12100
msgid "Bind @var{mexp} and the following monadic expressions in sequence, returning the result of the last expression.  Every expression in the sequence must be a monadic expression."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12104
msgid "This is akin to @code{mlet}, except that the return values of the monadic expressions are ignored.  In that sense, it is analogous to @code{begin}, but applied to monadic expressions."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12106
#, no-wrap
msgid "mwhen condition mexp0 mexp* @dots{}"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12111
msgid "When @var{condition} is true, evaluate the sequence of monadic expressions @var{mexp0}..@var{mexp*} as in an @code{mbegin}.  When @var{condition} is false, return @code{*unspecified*} in the current monad.  Every expression in the sequence must be a monadic expression."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12113
#, no-wrap
msgid "munless condition mexp0 mexp* @dots{}"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12118
msgid "When @var{condition} is false, evaluate the sequence of monadic expressions @var{mexp0}..@var{mexp*} as in an @code{mbegin}.  When @var{condition} is true, return @code{*unspecified*} in the current monad.  Every expression in the sequence must be a monadic expression."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:12120
#, no-wrap
msgid "state monad"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12124
msgid "The @code{(guix monads)} module provides the @dfn{state monad}, which allows an additional value---the state---to be @emph{threaded} through monadic procedure calls."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:12125
#, no-wrap
msgid "%state-monad"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:12128
msgid "The state monad.  Procedures in the state monad can access and change the state that is threaded."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:12132
msgid "Consider the example below.  The @code{square} procedure returns a value in the state monad.  It returns the square of its argument, but also increments the current state value:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12139
#, no-wrap
msgid ""
"(define (square x)\n"
"  (mlet %state-monad ((count (current-state)))\n"
"    (mbegin %state-monad\n"
"      (set-current-state (+ 1 count))\n"
"      (return (* x x)))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12143
#, no-wrap
msgid ""
"(run-with-state (sequence %state-monad (map square (iota 3))) 0)\n"
"@result{} (0 1 4)\n"
"@result{} 3\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:12147
msgid "When ``run'' through @code{%state-monad}, we obtain that additional state value, which is the number of @code{square} calls."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12149
#, no-wrap
msgid "{Monadic Procedure} current-state"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12151
msgid "Return the current state as a monadic value."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12153
#, no-wrap
msgid "{Monadic Procedure} set-current-state @var{value}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12156
msgid "Set the current state to @var{value} and return the previous state as a monadic value."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12158
#, no-wrap
msgid "{Monadic Procedure} state-push @var{value}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12161
msgid "Push @var{value} to the current state, which is assumed to be a list, and return the previous state as a monadic value."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12163
#, no-wrap
msgid "{Monadic Procedure} state-pop"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12166
msgid "Pop a value from the current state and return it as a monadic value.  The state is assumed to be a list."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12168
#, no-wrap
msgid "{Procedure} run-with-state mval [state]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12171
msgid "Run monadic value @var{mval} starting with @var{state} as the initial state.  Return two values: the resulting value, and the resulting state."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12175
msgid "The main interface to the store monad, provided by the @code{(guix store)} module, is as follows."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:12176
#, no-wrap
msgid "%store-monad"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:12178
msgid "The store monad---an alias for @code{%state-monad}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:12182
msgid "Values in the store monad encapsulate accesses to the store.  When its effect is needed, a value of the store monad must be ``evaluated'' by passing it to the @code{run-with-store} procedure (see below)."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12184
#, no-wrap
msgid "{Procedure} run-with-store store mval @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12188
msgid "[#:guile-for-build] [#:system (%current-system)] Run @var{mval}, a monadic value in the store monad, in @var{store}, an open store connection."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12190
#, no-wrap
msgid "{Monadic Procedure} text-file @var{name} @var{text} [@var{references}]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12194
msgid "Return as a monadic value the absolute file name in the store of the file containing @var{text}, a string.  @var{references} is a list of store items that the resulting text file refers to; it defaults to the empty list."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12196
#, no-wrap
msgid "{Monadic Procedure} binary-file @var{name} @var{data} [@var{references}]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12200
msgid "Return as a monadic value the absolute file name in the store of the file containing @var{data}, a bytevector.  @var{references} is a list of store items that the resulting binary file refers to; it defaults to the empty list."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12202
#, no-wrap
msgid "{Monadic Procedure} interned-file @var{file} [@var{name}] @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12207
msgid "[#:recursive? #t] [#:select? (const #t)] Return the name of @var{file} once interned in the store.  Use @var{name} as its store name, or the basename of @var{file} if @var{name} is omitted."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12211 guix-git/doc/guix.texi:12637
msgid "When @var{recursive?} is true, the contents of @var{file} are added recursively; if @var{file} designates a flat file and @var{recursive?} is true, its contents are added, and its permission bits are kept."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12216 guix-git/doc/guix.texi:12642
msgid "When @var{recursive?} is true, call @code{(@var{select?} @var{file} @var{stat})} for each directory entry, where @var{file} is the entry's absolute file name and @var{stat} is the result of @code{lstat}; exclude entries for which @var{select?} does not return true."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12218
msgid "The example below adds a file to the store, under two different names:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12224
#, no-wrap
msgid ""
"(run-with-store (open-connection)\n"
"  (mlet %store-monad ((a (interned-file \"README\"))\n"
"                      (b (interned-file \"README\" \"LEGU-MIN\")))\n"
"    (return (list a b))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12226
#, no-wrap
msgid "@result{} (\"/gnu/store/rwm@dots{}-README\" \"/gnu/store/44i@dots{}-LEGU-MIN\")\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12232
msgid "The @code{(guix packages)} module exports the following package-related monadic procedures:"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12233
#, no-wrap
msgid "{Monadic Procedure} package-file @var{package} [@var{file}] @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12241
msgid "[#:system (%current-system)] [#:target #f] @ [#:output \"out\"] Return as a monadic value in the absolute file name of @var{file} within the @var{output} directory of @var{package}.  When @var{file} is omitted, return the name of the @var{output} directory of @var{package}.  When @var{target} is true, use it as a cross-compilation target triplet."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12245
msgid "Note that this procedure does @emph{not} build @var{package}.  Thus, the result might or might not designate an existing file.  We recommend not using this procedure unless you know what you are doing."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12247
#, no-wrap
msgid "{Monadic Procedure} package->derivation @var{package} [@var{system}]"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:12248
#, no-wrap
msgid "{Monadic Procedure} package->cross-derivation @var{package} @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12252
msgid "@var{target} [@var{system}] Monadic version of @code{package-derivation} and @code{package-cross-derivation} (@pxref{Defining Packages})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:12258
#, no-wrap
msgid "G-expression"
msgstr "espressione-G"

#. type: cindex
#: guix-git/doc/guix.texi:12259
#, no-wrap
msgid "build code quoting"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12265
msgid "So we have ``derivations'', which represent a sequence of build actions to be performed to produce an item in the store (@pxref{Derivations}).  These build actions are performed when asking the daemon to actually build the derivations; they are run by the daemon in a container (@pxref{Invoking guix-daemon})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:12268
#, no-wrap
msgid "strata of code"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12280
msgid "It should come as no surprise that we like to write these build actions in Scheme.  When we do that, we end up with two @dfn{strata} of Scheme code@footnote{The term @dfn{stratum} in this context was coined by Manuel Serrano et al.@: in the context of their work on Hop.  Oleg Kiselyov, who has written insightful @url{http://okmij.org/ftp/meta-programming/#meta-scheme, essays and code on this topic}, refers to this kind of code generation as @dfn{staging}.}: the ``host code''---code that defines packages, talks to the daemon, etc.---and the ``build code''---code that actually performs build actions, such as making directories, invoking @command{make}, and so on (@pxref{Build Phases})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12287
msgid "To describe a derivation and its build actions, one typically needs to embed build code inside host code.  It boils down to manipulating build code as data, and the homoiconicity of Scheme---code has a direct representation as data---comes in handy for that.  But we need more than the normal @code{quasiquote} mechanism in Scheme to construct build expressions."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12296
msgid "The @code{(guix gexp)} module implements @dfn{G-expressions}, a form of S-expressions adapted to build expressions.  G-expressions, or @dfn{gexps}, consist essentially of three syntactic forms: @code{gexp}, @code{ungexp}, and @code{ungexp-splicing} (or simply: @code{#~}, @code{#$}, and @code{#$@@}), which are comparable to @code{quasiquote}, @code{unquote}, and @code{unquote-splicing}, respectively (@pxref{Expression Syntax, @code{quasiquote},, guile, GNU Guile Reference Manual}).  However, there are major differences:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:12301
msgid "Gexps are meant to be written to a file and run or manipulated by other processes."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:12306
msgid "When a high-level object such as a package or derivation is unquoted inside a gexp, the result is as if its output file name had been introduced."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:12311
msgid "Gexps carry information about the packages or derivations they refer to, and these dependencies are automatically added as inputs to the build processes that use them."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:12313 guix-git/doc/guix.texi:12937
#, no-wrap
msgid "lowering, of high-level objects in gexps"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12323
msgid "This mechanism is not limited to package and derivation objects: @dfn{compilers} able to ``lower'' other high-level objects to derivations or files in the store can be defined, such that these objects can also be inserted into gexps.  For example, a useful type of high-level objects that can be inserted in a gexp is ``file-like objects'', which make it easy to add files to the store and to refer to them in derivations and such (see @code{local-file} and @code{plain-file} below)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12325
msgid "To illustrate the idea, here is an example of a gexp:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12333
#, no-wrap
msgid ""
"(define build-exp\n"
"  #~(begin\n"
"      (mkdir #$output)\n"
"      (chdir #$output)\n"
"      (symlink (string-append #$coreutils \"/bin/ls\")\n"
"               \"list-files\")))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12338
msgid "This gexp can be passed to @code{gexp->derivation}; we obtain a derivation that builds a directory containing exactly one symlink to @file{/gnu/store/@dots{}-coreutils-8.22/bin/ls}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12341
#, no-wrap
msgid "(gexp->derivation \"the-thing\" build-exp)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12349
msgid "As one would expect, the @code{\"/gnu/store/@dots{}-coreutils-8.22\"} string is substituted to the reference to the @var{coreutils} package in the actual build code, and @var{coreutils} is automatically made an input to the derivation.  Likewise, @code{#$output} (equivalent to @code{(ungexp output)}) is replaced by a string containing the directory name of the output of the derivation."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:12350
#, no-wrap
msgid "cross compilation"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12356
msgid "In a cross-compilation context, it is useful to distinguish between references to the @emph{native} build of a package---that can run on the host---versus references to cross builds of a package.  To that end, the @code{#+} plays the same role as @code{#$}, but is a reference to a native package build:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12367
#, no-wrap
msgid ""
"(gexp->derivation \"vi\"\n"
"   #~(begin\n"
"       (mkdir #$output)\n"
"       (mkdir (string-append #$output \"/bin\"))\n"
"       (system* (string-append #+coreutils \"/bin/ln\")\n"
"                \"-s\"\n"
"                (string-append #$emacs \"/bin/emacs\")\n"
"                (string-append #$output \"/bin/vi\")))\n"
"   #:target \"aarch64-linux-gnu\")\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12373
msgid "In the example above, the native build of @var{coreutils} is used, so that @command{ln} can actually run on the host; but then the cross-compiled build of @var{emacs} is referenced."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:12374
#, no-wrap
msgid "imported modules, for gexps"
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:12375
#, no-wrap
msgid "with-imported-modules"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12380
msgid "Another gexp feature is @dfn{imported modules}: sometimes you want to be able to use certain Guile modules from the ``host environment'' in the gexp, so those modules should be imported in the ``build environment''.  The @code{with-imported-modules} form allows you to express that:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12391
#, no-wrap
msgid ""
"(let ((build (with-imported-modules '((guix build utils))\n"
"               #~(begin\n"
"                   (use-modules (guix build utils))\n"
"                   (mkdir-p (string-append #$output \"/bin\"))))))\n"
"  (gexp->derivation \"empty-dir\"\n"
"                    #~(begin\n"
"                        #$build\n"
"                        (display \"success!\\n\")\n"
"                        #t)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12397
msgid "In this example, the @code{(guix build utils)} module is automatically pulled into the isolated build environment of our gexp, such that @code{(use-modules (guix build utils))} works as expected."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:12398
#, no-wrap
msgid "module closure"
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:12399
#, no-wrap
msgid "source-module-closure"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12406
msgid "Usually you want the @emph{closure} of the module to be imported---i.e., the module itself and all the modules it depends on---rather than just the module; failing to do that, attempts to use the module will fail because of missing dependent modules.  The @code{source-module-closure} procedure computes the closure of a module by looking at its source file headers, which comes in handy in this case:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12409
#, no-wrap
msgid ""
"(use-modules (guix modules))   ;for 'source-module-closure'\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12418
#, no-wrap
msgid ""
"(with-imported-modules (source-module-closure\n"
"                         '((guix build utils)\n"
"                           (gnu build image)))\n"
"  (gexp->derivation \"something-with-vms\"\n"
"                    #~(begin\n"
"                        (use-modules (guix build utils)\n"
"                                     (gnu build image))\n"
"                        @dots{})))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:12420
#, no-wrap
msgid "extensions, for gexps"
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:12421
#, no-wrap
msgid "with-extensions"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12426
msgid "In the same vein, sometimes you want to import not just pure-Scheme modules, but also ``extensions'' such as Guile bindings to C libraries or other ``full-blown'' packages.  Say you need the @code{guile-json} package available on the build side, here's how you would do it:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12429
#, no-wrap
msgid ""
"(use-modules (gnu packages guile))  ;for 'guile-json'\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12435
#, no-wrap
msgid ""
"(with-extensions (list guile-json)\n"
"  (gexp->derivation \"something-with-json\"\n"
"                    #~(begin\n"
"                        (use-modules (json))\n"
"                        @dots{})))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12438
msgid "The syntactic form to construct gexps is summarized below."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12439
#, no-wrap
msgid "#~@var{exp}"
msgstr ""

#. type: defmacx
#: guix-git/doc/guix.texi:12440
#, no-wrap
msgid "(gexp @var{exp})"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12443
msgid "Return a G-expression containing @var{exp}.  @var{exp} may contain one or more of the following forms:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:12445
#, no-wrap
msgid "#$@var{obj}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:12446
#, no-wrap
msgid "(ungexp @var{obj})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12451
msgid "Introduce a reference to @var{obj}.  @var{obj} may have one of the supported types, for example a package or a derivation, in which case the @code{ungexp} form is replaced by its output file name---e.g., @code{\"/gnu/store/@dots{}-coreutils-8.22}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12454
msgid "If @var{obj} is a list, it is traversed and references to supported objects are substituted similarly."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12457
msgid "If @var{obj} is another gexp, its contents are inserted and its dependencies are added to those of the containing gexp."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12459
msgid "If @var{obj} is another kind of object, it is inserted as is."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:12460
#, no-wrap
msgid "#$@var{obj}:@var{output}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:12461
#, no-wrap
msgid "(ungexp @var{obj} @var{output})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12465
msgid "This is like the form above, but referring explicitly to the @var{output} of @var{obj}---this is useful when @var{obj} produces multiple outputs (@pxref{Packages with Multiple Outputs})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12470
msgid "Sometimes a gexp unconditionally refers to the @code{\"out\"} output, but the user of that gexp would still like to insert a reference to another output.  The @code{gexp-input} procedure aims to address that.  @xref{gexp-input}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:12471
#, no-wrap
msgid "#+@var{obj}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:12472
#, no-wrap
msgid "#+@var{obj}:output"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:12473
#, no-wrap
msgid "(ungexp-native @var{obj})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:12474
#, no-wrap
msgid "(ungexp-native @var{obj} @var{output})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12477
msgid "Same as @code{ungexp}, but produces a reference to the @emph{native} build of @var{obj} when used in a cross compilation context."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:12478
#, no-wrap
msgid "#$output[:@var{output}]"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:12479
#, no-wrap
msgid "(ungexp output [@var{output}])"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12482
msgid "Insert a reference to derivation output @var{output}, or to the main output when @var{output} is omitted."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12484
msgid "This only makes sense for gexps passed to @code{gexp->derivation}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:12485
#, no-wrap
msgid "#$@@@var{lst}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:12486
#, no-wrap
msgid "(ungexp-splicing @var{lst})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12489
msgid "Like the above, but splices the contents of @var{lst} inside the containing list."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:12490
#, no-wrap
msgid "#+@@@var{lst}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:12491
#, no-wrap
msgid "(ungexp-native-splicing @var{lst})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12494
msgid "Like the above, but refers to native builds of the objects listed in @var{lst}."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12499
msgid "G-expressions created by @code{gexp} or @code{#~} are run-time objects of the @code{gexp?} type (see below)."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12501
#, no-wrap
msgid "with-imported-modules modules body@dots{}"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12504
msgid "Mark the gexps defined in @var{body}@dots{} as requiring @var{modules} in their execution environment."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12508
msgid "Each item in @var{modules} can be the name of a module, such as @code{(guix build utils)}, or it can be a module name, followed by an arrow, followed by a file-like object:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12514
#, no-wrap
msgid ""
"`((guix build utils)\n"
"  (guix gcrypt)\n"
"  ((guix config) => ,(scheme-file \"config.scm\"\n"
"                                  #~(define-module @dots{}))))\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12519
msgid "In the example above, the first two modules are taken from the search path, and the last one is created from the given file-like object."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12523
msgid "This form has @emph{lexical} scope: it has an effect on the gexps directly defined in @var{body}@dots{}, but not on those defined, say, in procedures called from @var{body}@dots{}."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12525
#, no-wrap
msgid "with-extensions extensions body@dots{}"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12530
msgid "Mark the gexps defined in @var{body}@dots{} as requiring @var{extensions} in their build and execution environment.  @var{extensions} is typically a list of package objects such as those defined in the @code{(gnu packages guile)} module."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12535
msgid "Concretely, the packages listed in @var{extensions} are added to the load path while compiling imported modules in @var{body}@dots{}; they are also added to the load path of the gexp returned by @var{body}@dots{}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12537
#, no-wrap
msgid "{Procedure} gexp? obj"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12539
msgid "Return @code{#t} if @var{obj} is a G-expression."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12545
msgid "G-expressions are meant to be written to disk, either as code building some derivation, or as plain files in the store.  The monadic procedures below allow you to do that (@pxref{The Store Monad}, for more information about monads)."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12546
#, no-wrap
msgid "{Monadic Procedure} gexp->derivation @var{name} @var{exp} @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12564
msgid "[#:system (%current-system)] [#:target #f] [#:graft? #t] @ [#:hash #f] [#:hash-algo #f] @ [#:recursive? #f] [#:env-vars '()] [#:modules '()] @ [#:module-path @code{%load-path}] @ [#:effective-version \"2.2\"] @ [#:references-graphs #f] [#:allowed-references #f] @ [#:disallowed-references #f] @ [#:leaked-env-vars #f] @ [#:script-name (string-append @var{name} \"-builder\")] @ [#:deprecation-warnings #f] @ [#:local-build? #f] [#:substitutable? #t] @ [#:properties '()] [#:guile-for-build #f] Return a derivation @var{name} that runs @var{exp} (a gexp) with @var{guile-for-build} (a derivation) on @var{system}; @var{exp} is stored in a file called @var{script-name}.  When @var{target} is true, it is used as the cross-compilation target triplet for packages referred to by @var{exp}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12572
msgid "@var{modules} is deprecated in favor of @code{with-imported-modules}.  Its meaning is to make @var{modules} available in the evaluation context of @var{exp}; @var{modules} is a list of names of Guile modules searched in @var{module-path} to be copied in the store, compiled, and made available in the load path during the execution of @var{exp}---e.g., @code{((guix build utils) (guix build gnu-build-system))}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12575
msgid "@var{effective-version} determines the string to use when adding extensions of @var{exp} (see @code{with-extensions}) to the search path---e.g., @code{\"2.2\"}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12578
msgid "@var{graft?} determines whether packages referred to by @var{exp} should be grafted when applicable."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12581
msgid "When @var{references-graphs} is true, it must be a list of tuples of one of the following forms:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:12587
#, no-wrap
msgid ""
"(@var{file-name} @var{obj})\n"
"(@var{file-name} @var{obj} @var{output})\n"
"(@var{file-name} @var{gexp-input})\n"
"(@var{file-name} @var{store-item})\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12593
msgid "The right-hand-side of each element of @var{references-graphs} is automatically made an input of the build process of @var{exp}.  In the build environment, each @var{file-name} contains the reference graph of the corresponding item, in a simple text format."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12599
msgid "@var{allowed-references} must be either @code{#f} or a list of output names and packages.  In the latter case, the list denotes store items that the result is allowed to refer to.  Any reference to another store item will lead to a build error.  Similarly for @var{disallowed-references}, which can list items that must not be referenced by the outputs."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12602
msgid "@var{deprecation-warnings} determines whether to show deprecation warnings while compiling modules.  It can be @code{#f}, @code{#t}, or @code{'detailed}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12604
msgid "The other arguments are as for @code{derivation} (@pxref{Derivations})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:12606
#, no-wrap
msgid "file-like objects"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12611
msgid "The @code{local-file}, @code{plain-file}, @code{computed-file}, @code{program-file}, and @code{scheme-file} procedures below return @dfn{file-like objects}.  That is, when unquoted in a G-expression, these objects lead to a file in the store.  Consider this G-expression:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12615
#, no-wrap
msgid ""
"#~(system* #$(file-append glibc \"/sbin/nscd\") \"-f\"\n"
"           #$(local-file \"/tmp/my-nscd.conf\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12624
msgid "The effect here is to ``intern'' @file{/tmp/my-nscd.conf} by copying it to the store.  Once expanded, for instance @i{via} @code{gexp->derivation}, the G-expression refers to that copy under @file{/gnu/store}; thus, modifying or removing the file in @file{/tmp} does not have any effect on what the G-expression does.  @code{plain-file} can be used similarly; it differs in that the file content is directly passed as a string."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12625
#, no-wrap
msgid "{Procedure} local-file file [name] [#:recursive? #f] [#:select? (const #t)]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12633
msgid "Return an object representing local file @var{file} to add to the store; this object can be used in a gexp.  If @var{file} is a literal string denoting a relative file name, it is looked up relative to the source file where it appears; if @var{file} is not a literal string, it is looked up relative to the current working directory at run time.  @var{file} will be added to the store under @var{name}--by default the base name of @var{file}."
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:12643
#, fuzzy, no-wrap
msgid "assume-valid-file-name"
msgstr "Canali"

#. type: deffn
#: guix-git/doc/guix.texi:12649
msgid "@var{file} can be wrapped in the @code{assume-valid-file-name} syntactic keyword. When this is done, there will not be a warning when @code{local-file} is used with a non-literal path.  The path is still looked up relative to the current working directory at run time.  Wrapping is done like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12654
#, no-wrap
msgid ""
"(define alice-key-file-path \"alice.pub\")\n"
";; ...\n"
"(local-file (assume-valid-file-name alice-key-file-path))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:12656
#, no-wrap
msgid "relative file name, in @code{local-file}"
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:12657
#, no-wrap
msgid "assume-source-relative-file-name"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12662
msgid "@var{file} can be wrapped in the @code{assume-source-relative-file-name} syntactic keyword.  When this is done, the file name will be looked up relative to the source file where it appears even when it is not a string literal."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12665
msgid "This is the declarative counterpart of the @code{interned-file} monadic procedure (@pxref{The Store Monad, @code{interned-file}})."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12667
#, no-wrap
msgid "{Procedure} plain-file name content"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12670
msgid "Return an object representing a text file called @var{name} with the given @var{content} (a string or a bytevector) to be added to the store."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12672
msgid "This is the declarative counterpart of @code{text-file}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12674
#, fuzzy, no-wrap
#| msgid "{Procedure} elm-package-origin @var{elm-name} @var{version} @"
msgid "{Procedure} computed-file @var{name} @var{gexp} @"
msgstr "{Procedure} elm-package-origin @var{elm-name} @var{version} @"

#. type: deffn
#: guix-git/doc/guix.texi:12680
msgid "[#:guile] [#:local-build? #t] [#:options '()] Return an object representing the store item @var{name}, a file or directory computed by @var{gexp}.  When @var{local-build?} is true (the default), the derivation is built locally.  @var{options} is a list of additional arguments to pass to @code{gexp->derivation}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12682
msgid "This is the declarative counterpart of @code{gexp->derivation}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12684
#, no-wrap
msgid "{Monadic Procedure} gexp->script @var{name} @var{exp} @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12690
msgid "[#:guile (default-guile)] [#:module-path %load-path] @ [#:system (%current-system)] [#:target 'current] Return an executable script @var{name} that runs @var{exp} using @var{guile}, with @var{exp}'s imported modules in its search path.  Look up @var{exp}'s modules in @var{module-path}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12693
msgid "The example below builds a script that simply invokes the @command{ls} command:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12696
#, no-wrap
msgid ""
"(use-modules (guix gexp) (gnu packages base))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12700
#, no-wrap
msgid ""
"(gexp->script \"list-files\"\n"
"              #~(execl #$(file-append coreutils \"/bin/ls\")\n"
"                       \"ls\"))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12705
msgid "When ``running'' it through the store (@pxref{The Store Monad, @code{run-with-store}}), we obtain a derivation that produces an executable file @file{/gnu/store/@dots{}-list-files} along these lines:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:12710
#, no-wrap
msgid ""
"#!/gnu/store/@dots{}-guile-2.0.11/bin/guile -ds\n"
"!#\n"
"(execl \"/gnu/store/@dots{}-coreutils-8.22\"/bin/ls\" \"ls\")\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12713
#, no-wrap
msgid "{Procedure} program-file name exp [#:guile #f] [#:module-path %load-path]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12717
msgid "Return an object representing the executable store item @var{name} that runs @var{gexp}.  @var{guile} is the Guile package used to execute that script.  Imported modules of @var{gexp} are looked up in @var{module-path}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12719
msgid "This is the declarative counterpart of @code{gexp->script}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12721
#, no-wrap
msgid "{Monadic Procedure} gexp->file @var{name} @var{exp} @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12728
msgid "[#:set-load-path? #t] [#:module-path %load-path] @ [#:splice? #f] [#:guile (default-guile)] @ [#:system (%current-system)] [#:target 'current] Return a derivation that builds a file @var{name} containing @var{exp}.  When @var{splice?} is true, @var{exp} is considered to be a list of expressions that will be spliced in the resulting file."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12733
msgid "When @var{set-load-path?} is true, emit code in the resulting file to set @code{%load-path} and @code{%load-compiled-path} to honor @var{exp}'s imported modules.  Look up @var{exp}'s modules in @var{module-path}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12736
msgid "The resulting file holds references to all the dependencies of @var{exp} or a subset thereof."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12738
#, fuzzy, no-wrap
msgid "{Procedure} scheme-file name exp [#:splice? #f] @"
msgstr "Canali"

#. type: deffn
#: guix-git/doc/guix.texi:12742
msgid "[#:guile #f] [#:set-load-path? #t] Return an object representing the Scheme file @var{name} that contains @var{exp}.  @var{guile} is the Guile package used to produce that file."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12744
msgid "This is the declarative counterpart of @code{gexp->file}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12746
#, no-wrap
msgid "{Monadic Procedure} text-file* @var{name} @var{text} @dots{}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12752
msgid "Return as a monadic value a derivation that builds a text file containing all of @var{text}.  @var{text} may list, in addition to strings, objects of any type that can be used in a gexp: packages, derivations, local file objects, etc.  The resulting store file holds references to all these."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12757
msgid "This variant should be preferred over @code{text-file} anytime the file to create will reference items from the store.  This is typically the case when building a configuration file that embeds store file names, like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12765
#, no-wrap
msgid ""
"(define (profile.sh)\n"
"  ;; Return the name of a shell script in the store that\n"
"  ;; initializes the 'PATH' environment variable.\n"
"  (text-file* \"profile.sh\"\n"
"              \"export PATH=\" coreutils \"/bin:\"\n"
"              grep \"/bin:\" sed \"/bin\\n\"))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12770
msgid "In this example, the resulting @file{/gnu/store/@dots{}-profile.sh} file will reference @var{coreutils}, @var{grep}, and @var{sed}, thereby preventing them from being garbage-collected during its lifetime."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12772
#, no-wrap
msgid "{Procedure} mixed-text-file name text @dots{}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12776
msgid "Return an object representing store file @var{name} containing @var{text}.  @var{text} is a sequence of strings and file-like objects, as in:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12780
#, no-wrap
msgid ""
"(mixed-text-file \"profile\"\n"
"                 \"export PATH=\" coreutils \"/bin:\" grep \"/bin\")\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12783
msgid "This is the declarative counterpart of @code{text-file*}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12785
#, fuzzy, no-wrap
msgid "{Procedure} file-union name files [#:dangling-symlinks? #f]"
msgstr "Canali"

#. type: deffn
#: guix-git/doc/guix.texi:12792
msgid "Return a @code{<computed-file>} that builds a directory containing all of @var{files}.  Each item in @var{files} must be a two-element list where the first element is the file name to use in the new directory, and the second element is a gexp denoting the target file.  @code{#:dangling-symlinks?} controls if gexps must lower to an existing file.  Here's an example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12799
#, no-wrap
msgid ""
"(file-union \"etc\"\n"
"            `((\"hosts\" ,(plain-file \"hosts\"\n"
"                                    \"127.0.0.1 localhost\"))\n"
"              (\"bashrc\" ,(plain-file \"bashrc\"\n"
"                                     \"alias ls='ls --color=auto'\"))))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12802
msgid "This yields an @code{etc} directory containing these two files."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12804
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "{Procedure} symlink-to target"
msgstr "Filesystem"

#. type: deffn
#: guix-git/doc/guix.texi:12808
msgid "Return a @code{<computed-file>} that is a symbolic link to target.  Note, that the target does not need to exist at the build time.  One of uses is to put arbitrary symlinks into user's home:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12812
#, no-wrap
msgid ""
"(service home-files-service-type\n"
"  `((\"Sync\" ,(symlink-to \"/storage/Sync\"))))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12815
#, no-wrap
msgid "{Procedure} directory-union name things"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12818
msgid "Return a directory that is the union of @var{things}, where @var{things} is a list of file-like objects denoting directories.  For example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12821
#, no-wrap
msgid "(directory-union \"guile+emacs\" (list guile emacs))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12824
msgid "yields a directory that is the union of the @code{guile} and @code{emacs} packages."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12826
#, no-wrap
msgid "{Procedure} file-append obj suffix @dots{}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12830
msgid "Return a file-like object that expands to the concatenation of @var{obj} and @var{suffix}, where @var{obj} is a lowerable object and each @var{suffix} is a string."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12832
msgid "As an example, consider this gexp:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12837
#, no-wrap
msgid ""
"(gexp->script \"run-uname\"\n"
"              #~(system* #$(file-append coreutils\n"
"                                        \"/bin/uname\")))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12840
msgid "The same effect could be achieved with:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12845
#, no-wrap
msgid ""
"(gexp->script \"run-uname\"\n"
"              #~(system* (string-append #$coreutils\n"
"                                        \"/bin/uname\")))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12851
msgid "There is one difference though: in the @code{file-append} case, the resulting script contains the absolute file name as a string, whereas in the second case, the resulting script contains a @code{(string-append @dots{})} expression to construct the file name @emph{at run time}."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12853
#, no-wrap
msgid "let-system system body@dots{}"
msgstr ""

#. type: defmacx
#: guix-git/doc/guix.texi:12854
#, no-wrap
msgid "let-system (system target) body@dots{}"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12857
msgid "Bind @var{system} to the currently targeted system---e.g., @code{\"x86_64-linux\"}---within @var{body}."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12862
msgid "In the second case, additionally bind @var{target} to the current cross-compilation target---a GNU triplet such as @code{\"arm-linux-gnueabihf\"}---or @code{#f} if we are not cross-compiling."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12865
msgid "@code{let-system} is useful in the occasional case where the object spliced into the gexp depends on the target system, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12876
#, no-wrap
msgid ""
"#~(system*\n"
"   #+(let-system system\n"
"       (cond ((string-prefix? \"armhf-\" system)\n"
"              (file-append qemu \"/bin/qemu-system-arm\"))\n"
"             ((string-prefix? \"x86_64-\" system)\n"
"              (file-append qemu \"/bin/qemu-system-x86_64\"))\n"
"             (else\n"
"              (error \"dunno!\"))))\n"
"   \"-net\" \"user\" #$image)\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12879
#, no-wrap
msgid "with-parameters ((parameter value) @dots{}) exp"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12885
msgid "This macro is similar to the @code{parameterize} form for dynamically-bound @dfn{parameters} (@pxref{Parameters,,, guile, GNU Guile Reference Manual}).  The key difference is that it takes effect when the file-like object returned by @var{exp} is lowered to a derivation or store item."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12888
msgid "A typical use of @code{with-parameters} is to force the system in effect for a given object:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12892
#, no-wrap
msgid ""
"(with-parameters ((%current-system \"i686-linux\"))\n"
"  coreutils)\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12896
msgid "The example above returns an object that corresponds to the i686 build of Coreutils, regardless of the current value of @code{%current-system}."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:12899
msgid "gexp-input"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12899
#, no-wrap
msgid "{Procedure} gexp-input @var{obj} [@var{output}] [#:native? #f]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12903
msgid "Return a @dfn{gexp input} record for the given @var{output} of file-like object @var{obj}, with @code{#:native?} determining whether this is a native reference (as with @code{ungexp-native}) or not."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12908
msgid "This procedure is helpful when you want to pass a reference to a specific output of an object to some procedure that may not know about that output.  For example, assume you have this procedure, which takes one file-like object:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12913
#, no-wrap
msgid ""
"(define (make-symlink target)\n"
"  (computed-file \"the-symlink\"\n"
"                 #~(symlink #$target #$output)))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12919
msgid "Here @code{make-symlink} can only ever refer to the default output of @var{target}---the @code{\"out\"} output (@pxref{Packages with Multiple Outputs}).  To have it refer to, say, the @code{\"lib\"} output of the @code{hwloc} package, you can call it like so:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12922
#, no-wrap
msgid "(make-symlink (gexp-input hwloc \"lib\"))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12925
msgid "You can also compose it like any other file-like object:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12929
#, no-wrap
msgid ""
"(make-symlink\n"
"  (file-append (gexp-input hwloc \"lib\") \"/lib/libhwloc.so\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12936
msgid "Of course, in addition to gexps embedded in ``host'' code, there are also modules containing build tools.  To make it clear that they are meant to be used in the build stratum, these modules are kept in the @code{(guix build @dots{})} name space."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12942
msgid "Internally, high-level objects are @dfn{lowered}, using their compiler, to either derivations or store items.  For instance, lowering a package yields a derivation, and lowering a @code{plain-file} yields a store item.  This is achieved using the @code{lower-object} monadic procedure."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12943
#, no-wrap
msgid "{Monadic Procedure} lower-object @var{obj} [@var{system}] @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12949
msgid "[#:target #f] Return as a value in @code{%store-monad} the derivation or store item corresponding to @var{obj} for @var{system}, cross-compiling for @var{target} if @var{target} is true.  @var{obj} must be an object that has an associated gexp compiler, such as a @code{<package>}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12951
#, no-wrap
msgid "{Procedure} gexp->approximate-sexp gexp"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12959
msgid "Sometimes, it may be useful to convert a G-exp into a S-exp.  For example, some linters (@pxref{Invoking guix lint}) peek into the build phases of a package to detect potential problems.  This conversion can be achieved with this procedure.  However, some information can be lost in the process.  More specifically, lowerable objects will be silently replaced with some arbitrary object -- currently the list @code{(*approximate*)}, but this may change."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:12962
#, no-wrap
msgid "Invoking @command{guix repl}"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:12964
#, no-wrap
msgid "guix repl"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:12965
#, no-wrap
msgid "REPL, read-eval-print loop, script"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12975
msgid "The @command{guix repl} command makes it easier to program Guix in Guile by launching a Guile @dfn{read-eval-print loop} (REPL) for interactive programming (@pxref{Using Guile Interactively,,, guile, GNU Guile Reference Manual}), or by running Guile scripts (@pxref{Running Guile Scripts,,, guile, GNU Guile Reference Manual}).  Compared to just launching the @command{guile} command, @command{guix repl} guarantees that all the Guix modules and all its dependencies are available in the search path."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:12980
#, no-wrap
msgid "guix repl @var{options} [@var{file} @var{args}]\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12984
msgid "When a @var{file} argument is provided, @var{file} is executed as a Guile script:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:12987
#, no-wrap
msgid "guix repl my-script.scm\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12991
msgid "To pass arguments to the script, use @code{--} to prevent them from being interpreted as arguments to @command{guix repl} itself:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:12994
#, no-wrap
msgid "guix repl -- my-script.scm --input=foo.txt\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12999
msgid "To make a script executable directly from the shell, using the guix executable that is on the user's search path, add the following two lines at the top of the script:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13003
#, no-wrap
msgid ""
"@code{#!/usr/bin/env -S guix repl --}\n"
"@code{!#}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13007
msgid "To make a script that launches an interactive REPL directly from the shell, use the @code{--interactive} flag:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13011
#, no-wrap
msgid ""
"@code{#!/usr/bin/env -S guix repl --interactive}\n"
"@code{!#}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13015
msgid "Without a file name argument, a Guile REPL is started, allowing for interactive use (@pxref{Using Guix Interactively}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13021
#, no-wrap
msgid ""
"$ guix repl\n"
"scheme@@(guile-user)> ,use (gnu packages base)\n"
"scheme@@(guile-user)> coreutils\n"
"$1 = #<package coreutils@@8.29 gnu/packages/base.scm:327 3e28300>\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13028
msgid "In addition, @command{guix repl} implements a simple machine-readable REPL protocol for use by @code{(guix inferior)}, a facility to interact with @dfn{inferiors}, separate processes running a potentially different revision of Guix."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13032 guix-git/doc/guix.texi:16439
#, no-wrap
msgid "--list-types"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13035
msgid "Display the @var{TYPE} options for @command{guix repl --type=TYPE} and exit."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13036 guix-git/doc/guix.texi:16434
#, no-wrap
msgid "--type=@var{type}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:13037 guix-git/doc/guix.texi:16435
#: guix-git/doc/guix.texi:47532
#, no-wrap
msgid "-t @var{type}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13039
msgid "Start a REPL of the given @var{TYPE}, which can be one of the following:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13041
#, no-wrap
msgid "guile"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13043
msgid "This is default, and it spawns a standard full-featured Guile REPL."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13043
#, no-wrap
msgid "machine"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13046
msgid "Spawn a REPL that uses the machine-readable protocol.  This is the protocol that the @code{(guix inferior)} module speaks."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13052
msgid "By default, @command{guix repl} reads from standard input and writes to standard output.  When this option is passed, it will instead listen for connections on @var{endpoint}.  Here are examples of valid options:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13054
#, no-wrap
msgid "--listen=tcp:37146"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13056
msgid "Accept connections on localhost on port 37146."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13057
#, no-wrap
msgid "--listen=unix:/tmp/socket"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13059
msgid "Accept connections on the Unix-domain socket @file{/tmp/socket}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13061
#, no-wrap
msgid "--interactive"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:13062
#, no-wrap
msgid "-i"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13064
msgid "Launch the interactive REPL after @var{file} is executed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13065 guix-git/doc/guix.texi:13331
#: guix-git/doc/guix.texi:15623 guix-git/doc/guix.texi:15813
#: guix-git/doc/guix.texi:16069 guix-git/doc/guix.texi:16214
#: guix-git/doc/guix.texi:16482
#, no-wrap
msgid "--load-path=@var{directory}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:13066 guix-git/doc/guix.texi:13332
#: guix-git/doc/guix.texi:15624 guix-git/doc/guix.texi:15814
#: guix-git/doc/guix.texi:16070 guix-git/doc/guix.texi:16215
#: guix-git/doc/guix.texi:16483
#, no-wrap
msgid "-L @var{directory}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13069 guix-git/doc/guix.texi:13335
#: guix-git/doc/guix.texi:15627 guix-git/doc/guix.texi:15817
#: guix-git/doc/guix.texi:16073 guix-git/doc/guix.texi:16218
#: guix-git/doc/guix.texi:16486
msgid "Add @var{directory} to the front of the package module search path (@pxref{Package Modules})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13072
msgid "This allows users to define their own packages and make them visible to the script or REPL."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13076
msgid "Inhibit loading of the @file{~/.guile} file.  By default, that configuration file is loaded when spawning a @code{guile} REPL."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13081
#, no-wrap
msgid "interactive use"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13082
#, no-wrap
msgid "REPL, read-eval-print loop"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13088
msgid "The @command{guix repl} command gives you access to a warm and friendly @dfn{read-eval-print loop} (REPL) (@pxref{Invoking guix repl}).  If you're getting into Guix programming---defining your own packages, writing manifests, defining services for Guix System or Guix Home, etc.---you will surely find it convenient to toy with ideas at the REPL."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13094
msgid "If you use Emacs, the most convenient way to do that is with Geiser (@pxref{The Perfect Setup}), but you do not have to use Emacs to enjoy the REPL@.  When using @command{guix repl} or @command{guile} in the terminal, we recommend using Readline for completion and Colorized to get colorful output.  To do that, you can run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13097
#, no-wrap
msgid "guix install guile guile-readline guile-colorized\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13102
msgid "... and then create a @file{.guile} file in your home directory containing this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:13105
#, no-wrap
msgid ""
"(use-modules (ice-9 readline) (ice-9 colorized))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:13108
#, no-wrap
msgid ""
"(activate-readline)\n"
"(activate-colorized)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13112
msgid "The REPL lets you evaluate Scheme code; you type a Scheme expression at the prompt, and the REPL prints what it evaluates to:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13119
#, no-wrap
msgid ""
"$ guix repl\n"
"scheme@@(guix-user)> (+ 2 3)\n"
"$1 = 5\n"
"scheme@@(guix-user)> (string-append \"a\" \"b\")\n"
"$2 = \"ab\"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13130
msgid "It becomes interesting when you start fiddling with Guix at the REPL.  The first thing you'll want to do is to ``import'' the @code{(guix)} module, which gives access to the main part of the programming interface, and perhaps a bunch of useful Guix modules.  You could type @code{(use-modules (guix))}, which is valid Scheme code to import a module (@pxref{Using Guile Modules,,, guile, GNU Guile Reference Manual}), but the REPL provides the @code{use} @dfn{command} as a shorthand notation (@pxref{REPL Commands,,, guile, GNU Guile Reference Manual}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13134
#, no-wrap
msgid ""
"scheme@@(guix-user)> ,use (guix)\n"
"scheme@@(guix-user)> ,use (gnu packages base)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13139
msgid "Notice that REPL commands are introduced by a leading comma.  A REPL command like @code{use} is not valid Scheme code; it's interpreted specially by the REPL."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13148
msgid "Guix extends the Guile REPL with additional commands for convenience.  Among those, the @code{build} command comes in handy: it ensures that the given file-like object is built, building it if needed, and returns its output file name(s).  In the example below, we build the @code{coreutils} and @code{grep} packages, as well as a ``computed file'' (@pxref{G-Expressions, @code{computed-file}}), and we use the @code{scandir} procedure to list the files in Grep's @code{/bin} directory:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13161
#, no-wrap
msgid ""
"scheme@@(guix-user)> ,build coreutils\n"
"$1 = \"/gnu/store/@dots{}-coreutils-8.32-debug\"\n"
"$2 = \"/gnu/store/@dots{}-coreutils-8.32\"\n"
"scheme@@(guix-user)> ,build grep\n"
"$3 = \"/gnu/store/@dots{}-grep-3.6\"\n"
"scheme@@(guix-user)> ,build (computed-file \"x\" #~(mkdir #$output))\n"
"building /gnu/store/@dots{}-x.drv...\n"
"$4 = \"/gnu/store/@dots{}-x\"\n"
"scheme@@(guix-user)> ,use(ice-9 ftw)\n"
"scheme@@(guix-user)> (scandir (string-append $3 \"/bin\"))\n"
"$5 = (\".\" \"..\" \"egrep\" \"fgrep\" \"grep\")\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13169
msgid "As a packager, you may be willing to inspect the build phases or flags of a given package; this is particularly useful when relying a lot on inheritance to define package variants (@pxref{Defining Package Variants}) or when package arguments are a result of some computation, both of which can make it harder to foresee what ends up in the package arguments.  Additional commands let you inspect those package arguments:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13185
#, no-wrap
msgid ""
"scheme@@(guix-user)> ,phases grep\n"
"$1 = (modify-phases %standard-phases\n"
"       (add-after 'install 'fix-egrep-and-fgrep\n"
"         (lambda* (#:key outputs #:allow-other-keys)\n"
"           (let* ((out (assoc-ref outputs \"out\"))\n"
"                  (bin (string-append out \"/bin\")))\n"
"             (substitute* (list (string-append bin \"/egrep\")\n"
"                                (string-append bin \"/fgrep\"))\n"
"               ((\"^exec grep\")\n"
"                (string-append \"exec \" bin \"/grep\")))))))\n"
"scheme@@(guix-user)> ,configure-flags findutils\n"
"$2 = (list \"--localstatedir=/var\")\n"
"scheme@@(guix-user)> ,make-flags binutils\n"
"$3 = '(\"MAKEINFO=true\")\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13190
msgid "At a lower-level, a useful command is @code{lower}: it takes a file-like object and ``lowers'' it into a derivation (@pxref{Derivations}) or a store file:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13196
#, no-wrap
msgid ""
"scheme@@(guix-user)> ,lower grep\n"
"$6 = #<derivation /gnu/store/@dots{}-grep-3.6.drv => /gnu/store/@dots{}-grep-3.6 7f0e639115f0>\n"
"scheme@@(guix-user)> ,lower (plain-file \"x\" \"Hello!\")\n"
"$7 = \"/gnu/store/@dots{}-x\"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13200
msgid "The full list of REPL commands can be seen by typing @code{,help guix} and is given below for reference."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13201
#, no-wrap
msgid "{REPL command} build @var{object}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13204
msgid "Lower @var{object} and build it if it's not already built, returning its output file name(s)."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13206
#, no-wrap
msgid "{REPL command} lower @var{object}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13208
msgid "Lower @var{object} into a derivation or store file name and return it."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13210
#, no-wrap
msgid "{REPL command} verbosity @var{level}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13212
msgid "Change build verbosity to @var{level}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13216
msgid "This is similar to the @option{--verbosity} command-line option (@pxref{Common Build Options}): level 0 means total silence, level 1 shows build events only, and higher levels print build logs."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13218
#, no-wrap
msgid "{REPL command} phases @var{package}"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:13219
#, no-wrap
msgid "{REPL command} configure-flags @var{package}"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:13220
#, no-wrap
msgid "{REPL command} make-flags @var{package}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13227
msgid "These REPL commands return the value of one element of the @code{arguments} field of @var{package} (@pxref{package Reference}): the first one show the staged code associated with @code{#:phases} (@pxref{Build Phases}), the second shows the code for @code{#:configure-flags}, and @code{,make-flags} returns the code for @code{#:make-flags}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13229
#, no-wrap
msgid "{REPL command} run-in-store @var{exp}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13232
msgid "Run @var{exp}, a monadic expression, through the store monad.  @xref{The Store Monad}, for more information."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13234
#, no-wrap
msgid "{REPL command} enter-store-monad"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13237
msgid "Enter a new REPL to evaluate monadic expressions (@pxref{The Store Monad}).  You can quit this ``inner'' REPL by typing @code{,q}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13247
msgid "This section describes Guix command-line utilities.  Some of them are primarily targeted at developers and users who write new package definitions, while others are more generally useful.  They complement the Scheme programming interface of Guix in a convenient way."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13270
#, no-wrap
msgid "package building"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:13271
#, no-wrap
msgid "guix build"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13277
msgid "The @command{guix build} command builds packages or derivations and their dependencies, and prints the resulting store paths.  Note that it does not modify the user's profile---this is the job of the @command{guix package} command (@pxref{Invoking guix package}).  Thus, it is mainly useful for distribution developers."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13282
#, no-wrap
msgid "guix build @var{options} @var{package-or-derivation}@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13287
msgid "As an example, the following command builds the latest versions of Emacs and of Guile, displays their build logs, and finally displays the resulting directories:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13290
#, no-wrap
msgid "guix build emacs guile\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13293
msgid "Similarly, the following command builds all the available packages:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13297
#, no-wrap
msgid ""
"guix build --quiet --keep-going \\\n"
"  $(guix package -A | awk '@{ print $1 \"@@\" $2 @}')\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13305
msgid "@var{package-or-derivation} may be either the name of a package found in the software distribution such as @code{coreutils} or @code{coreutils@@8.20}, or a derivation such as @file{/gnu/store/@dots{}-coreutils-8.19.drv}.  In the former case, a package with the corresponding name (and optionally version) is searched for among the GNU distribution modules (@pxref{Package Modules})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13310
msgid "Alternatively, the @option{--expression} option may be used to specify a Scheme expression that evaluates to a package; this is useful when disambiguating among several same-named packages or package variants is needed."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13313
msgid "There may be zero or more @var{options}.  The available options are described in the subsections below."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13328
msgid "A number of options that control the build process are common to @command{guix build} and other commands that can spawn builds, such as @command{guix package} or @command{guix archive}.  These are the following:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13338 guix-git/doc/guix.texi:15630
#: guix-git/doc/guix.texi:16076 guix-git/doc/guix.texi:16221
#: guix-git/doc/guix.texi:16489
msgid "This allows users to define their own packages and make them visible to the command-line tools."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13339
#, no-wrap
msgid "--keep-failed"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:13340
#, no-wrap
msgid "-K"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13346
msgid "Keep the build tree of failed builds.  Thus, if a build fails, its build tree is kept under @file{/tmp}, in a directory whose name is shown at the end of the build log.  This is useful when debugging build issues.  @xref{Debugging Build Failures}, for tips and tricks on how to debug build issues."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13350
msgid "This option implies @option{--no-offload}, and it has no effect when connecting to a remote daemon with a @code{guix://} URI (@pxref{The Store, the @env{GUIX_DAEMON_SOCKET} variable})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13351
#, no-wrap
msgid "--keep-going"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:13352
#, no-wrap
msgid "-k"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13355
msgid "Keep going when some of the derivations fail to build; return only once all the builds have either completed or failed."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13358
msgid "The default behavior is to stop as soon as one of the specified derivations has failed."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13362
msgid "Do not build the derivations."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:13364
msgid "fallback-option"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13364
#, no-wrap
msgid "--fallback"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13367
msgid "When substituting a pre-built binary fails, fall back to building packages locally (@pxref{Substitution Failure})."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:13373
msgid "client-substitute-urls"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13373
msgid "Consider @var{urls} the whitespace-separated list of substitute source URLs, overriding the default list of URLs of @command{guix-daemon} (@pxref{daemon-substitute-urls,, @command{guix-daemon} URLs})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13377
msgid "This means that substitutes may be downloaded from @var{urls}, provided they are signed by a key authorized by the system administrator (@pxref{Substitutes})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13380
msgid "When @var{urls} is the empty string, substitutes are effectively disabled."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13386
#, no-wrap
msgid "--no-grafts"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13390
msgid "Do not ``graft'' packages.  In practice, this means that package updates available as grafts are not applied.  @xref{Security Updates}, for more information on grafts."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13391
#, no-wrap
msgid "--rounds=@var{n}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13394
msgid "Build each derivation @var{n} times in a row, and raise an error if consecutive build results are not bit-for-bit identical."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13399
msgid "This is a useful way to detect non-deterministic builds processes.  Non-deterministic build processes are a problem because they make it practically impossible for users to @emph{verify} whether third-party binaries are genuine.  @xref{Invoking guix challenge}, for more."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13415
msgid "By default, the daemon's setting is honored (@pxref{Invoking guix-daemon, @option{--max-silent-time}})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13422
msgid "By default, the daemon's setting is honored (@pxref{Invoking guix-daemon, @option{--timeout}})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13425
#, no-wrap
msgid "verbosity, of the command-line tools"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13426
#, no-wrap
msgid "build logs, verbosity"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13427
#, no-wrap
msgid "-v @var{level}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:13428
#, no-wrap
msgid "--verbosity=@var{level}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13433
msgid "Use the given verbosity @var{level}, an integer.  Choosing 0 means that no output is produced, 1 is for quiet output; 2 is similar to 1 but it additionally displays download URLs; 3 shows all the build log output on standard error."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13438
msgid "Allow the use of up to @var{n} CPU cores for the build.  The special value @code{0} means to use as many CPU cores as available."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13444
msgid "Allow at most @var{n} build jobs in parallel.  @xref{Invoking guix-daemon, @option{--max-jobs}}, for details about this option and the equivalent @command{guix-daemon} option."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13445
#, no-wrap
msgid "--debug=@var{level}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13449
msgid "Produce debugging output coming from the build daemon.  @var{level} must be an integer between 0 and 5; higher means more verbose output.  Setting a level of 4 or more may be helpful when debugging setup issues with the build daemon."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13456
msgid "Behind the scenes, @command{guix build} is essentially an interface to the @code{package-derivation} procedure of the @code{(guix packages)} module, and to the @code{build-derivations} procedure of the @code{(guix derivations)} module."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13460
msgid "In addition to options explicitly passed on the command line, @command{guix build} and other @command{guix} commands that support building honor the @env{GUIX_BUILD_OPTIONS} environment variable."
msgstr ""

#. type: defvr
#: guix-git/doc/guix.texi:13461
#, no-wrap
msgid "{Environment Variable} GUIX_BUILD_OPTIONS"
msgstr ""

#. type: defvr
#: guix-git/doc/guix.texi:13466
msgid "Users can define this variable to a list of command line options that will automatically be used by @command{guix build} and other @command{guix} commands that can perform builds, as in the example below:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13469
#, no-wrap
msgid "$ export GUIX_BUILD_OPTIONS=\"--no-substitutes -c 2 -L /foo/bar\"\n"
msgstr ""

#. type: defvr
#: guix-git/doc/guix.texi:13473
msgid "These options are parsed independently, and the result is appended to the parsed command-line options."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13479
#, no-wrap
msgid "package variants"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13487
msgid "Another set of command-line options supported by @command{guix build} and also @command{guix package} are @dfn{package transformation options}.  These are options that make it possible to define @dfn{package variants}---for instance, packages built from different source code.  This is a convenient way to create customized packages on the fly without having to type in the definitions of package variants (@pxref{Defining Packages})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13491
msgid "Package transformation options are preserved across upgrades: @command{guix upgrade} attempts to apply transformation options initially used when creating the profile to the upgraded packages."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13496
msgid "The available options are listed below.  Most commands support them and also support a @option{--help-transform} option that lists all the available options and a synopsis (these options are not shown in the @option{--help} output for brevity)."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13499
#, no-wrap
msgid "performance, tuning code"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13500
#, no-wrap
msgid "optimization, of package code"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13501
#, no-wrap
msgid "tuning, of package code"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13502
#, no-wrap
msgid "SIMD support"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13503
#, no-wrap
msgid "tunable packages"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13504
#, no-wrap
msgid "package multi-versioning"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13505
#, no-wrap
msgid "--tune[=@var{cpu}]"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13509
msgid "Use versions of the packages marked as ``tunable'' optimized for @var{cpu}.  When @var{cpu} is @code{native}, or when it is omitted, tune for the CPU on which the @command{guix} command is running."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13515
msgid "Valid @var{cpu} names are those recognized by the underlying compiler, by default the GNU Compiler Collection.  On x86_64 processors, this includes CPU names such as @code{nehalem}, @code{haswell}, and @code{skylake} (@pxref{x86 Options, @code{-march},, gcc, Using the GNU Compiler Collection (GCC)})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13522
msgid "As new generations of CPUs come out, they augment the standard instruction set architecture (ISA) with additional instructions, in particular instructions for single-instruction/multiple-data (SIMD)  parallel processing.  For example, while Core2 and Skylake CPUs both implement the x86_64 ISA, only the latter supports AVX2 SIMD instructions."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13529
msgid "The primary gain one can expect from @option{--tune} is for programs that can make use of those SIMD capabilities @emph{and} that do not already have a mechanism to select the right optimized code at run time.  Packages that have the @code{tunable?} property set are considered @dfn{tunable packages} by the @option{--tune} option; a package definition with the property set looks like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:13534
#, no-wrap
msgid ""
"(package\n"
"  (name \"hello-simd\")\n"
"  ;; ...\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:13538
#, no-wrap
msgid ""
"  ;; This package may benefit from SIMD extensions so\n"
"  ;; mark it as \"tunable\".\n"
"  (properties '((tunable? . #t))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13543
msgid "Other packages are not considered tunable.  This allows Guix to use generic binaries in the cases where tuning for a specific CPU is unlikely to provide any gain."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13549
msgid "Tuned packages are built with @code{-march=@var{CPU}}; under the hood, the @option{-march} option is passed to the actual wrapper by a compiler wrapper.  Since the build machine may not be able to run code for the target CPU micro-architecture, the test suite is not run when building a tuned package."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13553
msgid "To reduce rebuilds to the minimum, tuned packages are @emph{grafted} onto packages that depend on them (@pxref{Security Updates, grafts}).  Thus, using @option{--no-grafts} cancels the effect of @option{--tune}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13559
msgid "We call this technique @dfn{package multi-versioning}: several variants of tunable packages may be built, one for each CPU variant.  It is the coarse-grain counterpart of @dfn{function multi-versioning} as implemented by the GNU tool chain (@pxref{Function Multiversioning,,, gcc, Using the GNU Compiler Collection (GCC)})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13560
#, no-wrap
msgid "--with-source=@var{source}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:13561
#, no-wrap
msgid "--with-source=@var{package}=@var{source}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:13562
#, no-wrap
msgid "--with-source=@var{package}@@@var{version}=@var{source}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13567
msgid "Use @var{source} as the source of @var{package}, and @var{version} as its version number.  @var{source} must be a file name or a URL, as for @command{guix download} (@pxref{Invoking guix download})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13573
msgid "When @var{package} is omitted, it is taken to be the package name specified on the command line that matches the base of @var{source}---e.g., if @var{source} is @code{/src/guile-2.0.10.tar.gz}, the corresponding package is @code{guile}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13576
msgid "Likewise, when @var{version} is omitted, the version string is inferred from @var{source}; in the previous example, it is @code{2.0.10}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13581
msgid "This option allows users to try out versions of packages other than the one provided by the distribution.  The example below downloads @file{ed-1.7.tar.gz} from a GNU mirror and uses that as the source for the @code{ed} package:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13584
#, no-wrap
msgid "guix build ed --with-source=mirror://gnu/ed/ed-1.4.tar.gz\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13589
msgid "As a developer, @option{--with-source} makes it easy to test release candidates, and even to test their impact on packages that depend on them:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13592
#, no-wrap
msgid "guix build elogind --with-source=@dots{}/shepherd-0.9.0rc1.tar.gz\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13595
msgid "@dots{} or to build from a checkout in a pristine environment:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13599
#, no-wrap
msgid ""
"$ git clone git://git.sv.gnu.org/guix.git\n"
"$ guix build guix --with-source=guix@@1.0=./guix\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13601
#, no-wrap
msgid "--with-input=@var{package}=@var{replacement}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13606
msgid "Replace dependency on @var{package} by a dependency on @var{replacement}.  @var{package} must be a package name, and @var{replacement} must be a package specification such as @code{guile} or @code{guile@@1.8}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13610
msgid "For instance, the following command builds Guix, but replaces its dependency on the current stable version of Guile with a dependency on the legacy version of Guile, @code{guile@@2.2}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13613
#, no-wrap
msgid "guix build --with-input=guile=guile@@2.2 guix\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13618
msgid "This is a recursive, deep replacement.  So in this example, both @code{guix} and its dependency @code{guile-json} (which also depends on @code{guile}) get rebuilt against @code{guile@@2.2}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13621
msgid "This is implemented using the @code{package-input-rewriting/spec} Scheme procedure (@pxref{Defining Packages, @code{package-input-rewriting/spec}})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13622
#, no-wrap
msgid "--with-graft=@var{package}=@var{replacement}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13628
msgid "This is similar to @option{--with-input} but with an important difference: instead of rebuilding the whole dependency chain, @var{replacement} is built and then @dfn{grafted} onto the binaries that were initially referring to @var{package}.  @xref{Security Updates}, for more information on grafts."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13632
msgid "For example, the command below grafts version 3.5.4 of GnuTLS onto Wget and all its dependencies, replacing references to the version of GnuTLS they currently refer to:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13635
#, no-wrap
msgid "guix build --with-graft=gnutls=gnutls@@3.5.4 wget\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13644
msgid "This has the advantage of being much faster than rebuilding everything.  But there is a caveat: it works if and only if @var{package} and @var{replacement} are strictly compatible---for example, if they provide a library, the application binary interface (ABI) of those libraries must be compatible.  If @var{replacement} is somehow incompatible with @var{package}, then the resulting package may be unusable.  Use with care!"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13645 guix-git/doc/guix.texi:54305
#, no-wrap
msgid "debugging info, rebuilding"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13646
#, no-wrap
msgid "--with-debug-info=@var{package}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13651
msgid "Build @var{package} in a way that preserves its debugging info and graft it onto packages that depend on it.  This is useful if @var{package} does not already provide debugging info as a @code{debug} output (@pxref{Installing Debugging Files})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13657
msgid "For example, suppose you're experiencing a crash in Inkscape and would like to see what's up in GLib, a library deep down in Inkscape's dependency graph.  GLib lacks a @code{debug} output, so debugging is tough.  Fortunately, you rebuild GLib with debugging info and tack it on Inkscape:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13660 guix-git/doc/guix.texi:54336
#, no-wrap
msgid "guix install inkscape --with-debug-info=glib\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13664
msgid "Only GLib needs to be recompiled so this takes a reasonable amount of time.  @xref{Installing Debugging Files}, for more info."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:13670
msgid "Under the hood, this option works by passing the @samp{#:strip-binaries? #f} to the build system of the package of interest (@pxref{Build Systems}).  Most build systems support that option but some do not.  In that case, an error is raised."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:13674
msgid "Likewise, if a C/C++ package is built without @code{-g} (which is rarely the case), debugging info will remain unavailable even when @code{#:strip-binaries?} is false."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13676
#, no-wrap
msgid "tool chain, changing the build tool chain of a package"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13677
#, no-wrap
msgid "--with-c-toolchain=@var{package}=@var{toolchain}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13681
msgid "This option changes the compilation of @var{package} and everything that depends on it so that they get built with @var{toolchain} instead of the default GNU tool chain for C/C++."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13688
#, no-wrap
msgid ""
"guix build octave-cli \\\n"
"  --with-c-toolchain=fftw=gcc-toolchain@@10 \\\n"
"  --with-c-toolchain=fftwf=gcc-toolchain@@10\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13695
msgid "The command above builds a variant of the @code{fftw} and @code{fftwf} packages using version 10 of @code{gcc-toolchain} instead of the default tool chain, and then builds a variant of the GNU@tie{}Octave command-line interface using them.  GNU@tie{}Octave itself is also built with @code{gcc-toolchain@@10}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13699
msgid "This other example builds the Hardware Locality (@code{hwloc}) library and its dependents up to @code{intel-mpi-benchmarks} with the Clang C compiler:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13703
#, no-wrap
msgid ""
"guix build --with-c-toolchain=hwloc=clang-toolchain \\\n"
"           intel-mpi-benchmarks\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:13712
msgid "There can be application binary interface (ABI) incompatibilities among tool chains.  This is particularly true of the C++ standard library and run-time support libraries such as that of OpenMP@.  By rebuilding all dependents with the same tool chain, @option{--with-c-toolchain} minimizes the risks of incompatibility but cannot entirely eliminate them.  Choose @var{package} wisely."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13714
#, no-wrap
msgid "--with-git-url=@var{package}=@var{url}"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13715
#, no-wrap
msgid "Git, using the latest commit"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13716
#, no-wrap
msgid "latest commit, building"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13722
msgid "Build @var{package} from the latest commit of the @code{master} branch of the Git repository at @var{url}.  Git sub-modules of the repository are fetched, recursively, if @var{package} @code{source} is not a Git repository, otherwise it depends on the inherited value of @code{recursive?}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13725
msgid "For example, the following command builds the NumPy Python library against the latest commit of the master branch of Python itself:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13729
#, no-wrap
msgid ""
"guix build python-numpy \\\n"
"  --with-git-url=python=https://github.com/python/cpython\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13733
msgid "This option can also be combined with @option{--with-branch} or @option{--with-commit} (see below)."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13734 guix-git/doc/guix.texi:37805
#, no-wrap
msgid "continuous integration"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13740
msgid "Obviously, since it uses the latest commit of the given branch, the result of such a command varies over time.  Nevertheless it is a convenient way to rebuild entire software stacks against the latest commit of one or more packages.  This is particularly useful in the context of continuous integration (CI)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13744
msgid "Checkouts are kept in a cache under @file{~/.cache/guix/checkouts} to speed up consecutive accesses to the same repository.  You may want to clean it up once in a while to save disk space."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13745
#, no-wrap
msgid "--with-branch=@var{package}=@var{branch}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13751
msgid "Build @var{package} from the latest commit of @var{branch}.  If the @code{source} field of @var{package} is an origin with the @code{git-fetch} method (@pxref{origin Reference}) or a @code{git-checkout} object, the repository URL is taken from that @code{source}.  Otherwise you have to use @option{--with-git-url} to specify the URL of the Git repository."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13756
msgid "For instance, the following command builds @code{guile-sqlite3} from the latest commit of its @code{master} branch, and then builds @code{guix} (which depends on it) and @code{cuirass} (which depends on @code{guix}) against this specific @code{guile-sqlite3} build:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13759
#, no-wrap
msgid "guix build --with-branch=guile-sqlite3=master cuirass\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13761
#, no-wrap
msgid "--with-commit=@var{package}=@var{commit}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13766
msgid "This is similar to @option{--with-branch}, except that it builds from @var{commit} rather than the tip of a branch.  @var{commit} must be a valid Git commit SHA1 identifier, a tag, or a @command{git describe} style identifier such as @code{1.0-3-gabc123}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13767
#, no-wrap
msgid "--with-patch=@var{package}=@var{file}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13774
msgid "Add @var{file} to the list of patches applied to @var{package}, where @var{package} is a spec such as @code{python@@3.8} or @code{glibc}.  @var{file} must contain a patch; it is applied with the flags specified in the @code{origin} of @var{package} (@pxref{origin Reference}), which by default includes @code{-p1} (@pxref{patch Directories,,, diffutils, Comparing and Merging Files})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13777
msgid "As an example, the command below rebuilds Coreutils with the GNU C Library (glibc) patched with the given patch:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13780
#, no-wrap
msgid "guix build coreutils --with-patch=glibc=./glibc-frob.patch\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13784
msgid "In this example, glibc itself as well as everything that leads to Coreutils in the dependency graph is rebuilt."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13785
#, no-wrap
msgid "configure flags, changing them"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13786
#, no-wrap
msgid "--with-configure-flag=@var{package}=@var{flag}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13791
msgid "Append @var{flag} to the configure flags of @var{package}, where @var{package} is a spec such as @code{guile@@3.0} or @code{glibc}.  The build system of @var{package} must support the @code{#:configure-flags} argument."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13794
msgid "For example, the command below builds GNU@tie{}Hello with the configure flag @code{--disable-nls}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13797
#, no-wrap
msgid "guix build hello --with-configure-flag=hello=--disable-nls\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13801
msgid "The following command passes an extra flag to @command{cmake} as it builds @code{lapack}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13805
#, no-wrap
msgid ""
"guix build lapack \\\n"
"  --with-configure-flag=lapack=-DBUILD_SHARED_LIBS=OFF\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:13812
msgid "Under the hood, this option works by passing the @samp{#:configure-flags} argument to the build system of the package of interest (@pxref{Build Systems}).  Most build systems support that option but some do not.  In that case, an error is raised."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13814
#, no-wrap
msgid "upstream, latest version"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13815
#, no-wrap
msgid "--with-latest=@var{package}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:13816
#, no-wrap
msgid "--with-version=@var{package}=@var{version}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13822
msgid "So you like living on the bleeding edge? The @option{--with-latest} option is for you! It replaces occurrences of @var{package} in the dependency graph with its latest upstream version, as reported by @command{guix refresh} (@pxref{Invoking guix refresh})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13826
msgid "It does so by determining the latest upstream release of @var{package} (if possible), downloading it, and authenticating it @emph{if} it comes with an OpenPGP signature."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13829
msgid "As an example, the command below builds Guix against the latest version of Guile-JSON:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13832
#, no-wrap
msgid "guix build guix --with-latest=guile-json\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13839
msgid "The @option{--with-version} works similarly except that it lets you specify that you want precisely @var{version}, assuming that version exists upstream.  For example, to spawn a development environment with SciPy built against version 1.22.4 of NumPy (skipping its test suite because hey, we're not gonna wait this long), you would run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13842
#, no-wrap
msgid "guix shell python python-scipy --with-version=python-numpy=1.22.4\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:13849
msgid "Because they depend on source code published at a given point in time on upstream servers, deployments made with @option{--with-latest} and @option{--with-version} may be non-reproducible: source might disappear or be modified in place on the servers."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:13852
msgid "To deploy old software versions without compromising on reproducibility, @pxref{Invoking guix time-machine, @command{guix time-machine}}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13861
msgid "There are limitations.  First, in cases where the tool cannot or does not know how to authenticate source code, you are at risk of running malicious code; a warning is emitted in this case.  Second, this option simply changes the source used in the existing package definitions, which is not always sufficient: there might be additional dependencies that need to be added, patches to apply, and more generally the quality assurance work that Guix developers normally do will be missing."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13866
msgid "You've been warned! When those limitations are acceptable, it's a snappy way to stay on top.  We encourage you to submit patches updating the actual package definitions once you have successfully tested an upgrade with @option{--with-latest} (@pxref{Contributing})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13867
#, no-wrap
msgid "test suite, skipping"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13868
#, no-wrap
msgid "--without-tests=@var{package}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13874
msgid "Build @var{package} without running its tests.  This can be useful in situations where you want to skip the lengthy test suite of a intermediate package, or if a package's test suite fails in a non-deterministic fashion.  It should be used with care because running the test suite is a good way to ensure a package is working as intended."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13878
msgid "Turning off tests leads to a different store item.  Consequently, when using this option, anything that depends on @var{package} must be rebuilt, as in this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13881
#, no-wrap
msgid "guix install --without-tests=python python-notebook\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13887
msgid "The command above installs @code{python-notebook} on top of @code{python} built without running its test suite.  To do so, it also rebuilds everything that depends on @code{python}, including @code{python-notebook} itself."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13893
msgid "Internally, @option{--without-tests} relies on changing the @code{#:tests?} option of a package's @code{check} phase (@pxref{Build Systems}).  Note that some packages use a customized @code{check} phase that does not respect a @code{#:tests? #f} setting.  Therefore, @option{--without-tests} has no effect on these packages."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13900
msgid "Wondering how to achieve the same effect using Scheme code, for example in your manifest, or how to write your own package transformation? @xref{Defining Package Variants}, for an overview of the programming interfaces available."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13906
msgid "The command-line options presented below are specific to @command{guix build}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13909
#, no-wrap
msgid "--quiet"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13914
msgid "Build quietly, without displaying the build log; this is equivalent to @option{--verbosity=0}.  Upon completion, the build log is kept in @file{/var} (or similar) and can always be retrieved using the @option{--log-file} option."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13919
msgid "Build the package, derivation, or other file-like object that the code within @var{file} evaluates to (@pxref{G-Expressions, file-like objects})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13922
msgid "As an example, @var{file} might contain a package definition like this (@pxref{Defining Packages}):"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13931
msgid "The @var{file} may also contain a JSON representation of one or more package definitions.  Running @code{guix build -f} on @file{hello.json} with the following contents would result in building the packages @code{myhello} and @code{greeter}:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13936
#, no-wrap
msgid "--manifest=@var{manifest}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:13937
#, no-wrap
msgid "-m @var{manifest}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13940
msgid "Build all packages listed in the given @var{manifest} (@pxref{profile-manifest, @option{--manifest}})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13944
msgid "Build the package or derivation @var{expr} evaluates to."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13948
msgid "For example, @var{expr} may be @code{(@@ (gnu packages guile)  guile-1.8)}, which unambiguously designates this specific variant of version 1.8 of Guile."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13952
msgid "Alternatively, @var{expr} may be a G-expression, in which case it is used as a build program passed to @code{gexp->derivation} (@pxref{G-Expressions})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13956
msgid "Lastly, @var{expr} may refer to a zero-argument monadic procedure (@pxref{The Store Monad}).  The procedure must return a derivation as a monadic value, which is then passed through @code{run-with-store}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13961
msgid "Build the ``development environment'' (build dependencies) of the following package."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13964
msgid "For example, the following command builds the inputs of @code{hello}, but @emph{not} @code{hello} itself, and also builds @code{guile}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13967
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "guix build -D hello guile\n"
msgstr "Filesystem"

#. type: table
#: guix-git/doc/guix.texi:13974
msgid "Notice that @option{-D} (or @option{--development}) only applies to the immediately following package on the command line.  Under the hood, it uses @code{package->development-manifest} (@pxref{package-development-manifest, @code{package->development-manifest}})."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:13980
msgid "The effect of combining @option{--development} with @option{--target} (for cross-compilation) may not be what you expect: it will cross-compile all the dependencies of the given package when it is built natively."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13982
#, no-wrap
msgid "dependents of a package, building them"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13983
#, no-wrap
msgid "building the dependents of a package"
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:13985
msgid "build-dependents"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13985
#, no-wrap
msgid "--dependents[=@var{depth}]"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:13986
#, no-wrap
msgid "-P [@var{depth}]"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13991
msgid "Build the dependents of the following package.  By default, build all the direct and indirect dependents; when @var{depth} is provided, limit to dependents at that distance: 1 for direct dependents, 2 for dependents of dependents, and so on."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13993
msgid "For example, the command below builds @emph{all} the dependents of libgit2:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13996
#, no-wrap
msgid "guix build --dependents libgit2\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13999
msgid "To build all the packages that directly depend on NumPy, run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14002
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "guix build -P1 python-numpy\n"
msgstr "Filesystem"

#. type: table
#: guix-git/doc/guix.texi:14006
msgid "The list of dependents is computed in the same way as with @command{guix refresh --list-dependent} (@pxref{Invoking guix refresh})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14007
#, no-wrap
msgid "--source"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:14008
#, no-wrap
msgid "-S"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14011
msgid "Build the source derivations of the packages, rather than the packages themselves."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14015
msgid "For instance, @code{guix build -S gcc} returns something like @file{/gnu/store/@dots{}-gcc-4.7.2.tar.bz2}, which is the GCC source tarball."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14019
msgid "The returned source tarball is the result of applying any patches and code snippets specified in the package @code{origin} (@pxref{Defining Packages})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14020
#, no-wrap
msgid "source, verification"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14026
msgid "As with other derivations, the result of building a source derivation can be verified using the @option{--check} option (@pxref{build-check}).  This is useful to validate that a (potentially already built or substituted, thus cached) package source matches against its declared hash."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14031
msgid "Note that @command{guix build -S} compiles the sources only of the specified packages.  They do not include the sources of statically linked dependencies and by themselves are insufficient for reproducing the packages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14032
#, no-wrap
msgid "--sources"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14039
msgid "Fetch and return the source of @var{package-or-derivation} and all their dependencies, recursively.  This is a handy way to obtain a local copy of all the source code needed to build @var{packages}, allowing you to eventually build them even without network access.  It is an extension of the @option{--source} option and can accept one of the following optional argument values:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14041 guix-git/doc/guix.texi:16275
#, no-wrap
msgid "package"
msgstr "package"

#. type: table
#: guix-git/doc/guix.texi:14044
msgid "This value causes the @option{--sources} option to behave in the same way as the @option{--source} option."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14045 guix-git/doc/guix.texi:25633
#, no-wrap
msgid "all"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14048
msgid "Build the source derivations of all packages, including any source that might be listed as @code{inputs}.  This is the default value."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14054
#, no-wrap
msgid ""
"$ guix build --sources tzdata\n"
"The following derivations will be built:\n"
"   /gnu/store/@dots{}-tzdata2015b.tar.gz.drv\n"
"   /gnu/store/@dots{}-tzcode2015b.tar.gz.drv\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14056
#, no-wrap
msgid "transitive"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14060
msgid "Build the source derivations of all packages, as well of all transitive inputs to the packages.  This can be used e.g.@: to prefetch package source for later offline building."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14071
#, no-wrap
msgid ""
"$ guix build --sources=transitive tzdata\n"
"The following derivations will be built:\n"
"   /gnu/store/@dots{}-tzcode2015b.tar.gz.drv\n"
"   /gnu/store/@dots{}-findutils-4.4.2.tar.xz.drv\n"
"   /gnu/store/@dots{}-grep-2.21.tar.xz.drv\n"
"   /gnu/store/@dots{}-coreutils-8.23.tar.xz.drv\n"
"   /gnu/store/@dots{}-make-4.1.tar.xz.drv\n"
"   /gnu/store/@dots{}-bash-4.3.tar.xz.drv\n"
"@dots{}\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14081
msgid "Attempt to build for @var{system}---e.g., @code{i686-linux}---instead of the system type of the build host.  The @command{guix build} command allows you to repeat this option several times, in which case it builds for all the specified systems; other commands ignore extraneous @option{-s} options."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:14086
msgid "The @option{--system} flag is for @emph{native} compilation and must not be confused with cross-compilation.  See @option{--target} below for information on cross-compilation."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14093
msgid "An example use of this is on Linux-based systems, which can emulate different personalities.  For instance, passing @option{--system=i686-linux} on an @code{x86_64-linux} system or @option{--system=armhf-linux} on an @code{aarch64-linux} system allows you to build packages in a complete 32-bit environment."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:14098
msgid "Building for an @code{armhf-linux} system is unconditionally enabled on @code{aarch64-linux} machines, although certain aarch64 chipsets do not allow for this functionality, notably the ThunderX."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14104
msgid "Similarly, when transparent emulation with QEMU and @code{binfmt_misc} is enabled (@pxref{Virtualization Services, @code{qemu-binfmt-service-type}}), you can build for any system for which a QEMU @code{binfmt_misc} handler is installed."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14108
msgid "Builds for a system other than that of the machine you are using can also be offloaded to a remote machine of the right architecture.  @xref{Daemon Offload Setup}, for more information on offloading."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14114
msgid "Cross-build for @var{triplet}, which must be a valid GNU triplet, such as @code{\"aarch64-linux-gnu\"} (@pxref{Specifying Target Triplets, GNU configuration triplets,, autoconf, Autoconf})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14115
#, no-wrap
msgid "--list-systems"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14118
msgid "List all the supported systems, that can be passed as an argument to @option{--system}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14119
#, no-wrap
msgid "--list-targets"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14122
msgid "List all the supported targets, that can be passed as an argument to @option{--target}."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:14124
msgid "build-check"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14125
#, no-wrap
msgid "determinism, checking"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14126
#, no-wrap
msgid "reproducibility, checking"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14130
msgid "Rebuild @var{package-or-derivation}, which are already available in the store, and raise an error if the build results are not bit-for-bit identical."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14135
msgid "This mechanism allows you to check whether previously installed substitutes are genuine (@pxref{Substitutes}), or whether the build result of a package is deterministic.  @xref{Invoking guix challenge}, for more background information and tools."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14140
#, no-wrap
msgid "--repair"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14141
#, no-wrap
msgid "repairing store items"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14145
msgid "Attempt to repair the specified store items, if they are corrupt, by re-downloading or rebuilding them."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14147
msgid "This operation is not atomic and thus restricted to @code{root}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14148
#, no-wrap
msgid "--derivations"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14152
msgid "Return the derivation paths, not the output paths, of the given packages."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14155
#, no-wrap
msgid "GC roots, adding"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14156
#, no-wrap
msgid "garbage collector roots, adding"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14159 guix-git/doc/guix.texi:47563
msgid "Make @var{file} a symlink to the result, and register it as a garbage collector root."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14165
msgid "Consequently, the results of this @command{guix build} invocation are protected from garbage collection until @var{file} is removed.  When that option is omitted, build results are eligible for garbage collection as soon as the build completes.  @xref{Invoking guix gc}, for more on GC roots."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14166
#, no-wrap
msgid "--log-file"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14167
#, no-wrap
msgid "build logs, access"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14171
msgid "Return the build log file names or URLs for the given @var{package-or-derivation}, or raise an error if build logs are missing."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14174
msgid "This works regardless of how packages or derivations are specified.  For instance, the following invocations are equivalent:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14180
#, no-wrap
msgid ""
"guix build --log-file $(guix build -d guile)\n"
"guix build --log-file $(guix build guile)\n"
"guix build --log-file guile\n"
"guix build --log-file -e '(@@ (gnu packages guile) guile-2.0)'\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14185
msgid "If a log is unavailable locally, and unless @option{--no-substitutes} is passed, the command looks for a corresponding log on one of the substitute servers."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14188
msgid "So for instance, imagine you want to see the build log of GDB on @code{aarch64}, but you are actually on an @code{x86_64} machine:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14192
#, no-wrap
msgid ""
"$ guix build --log-file gdb -s aarch64-linux\n"
"https://@value{SUBSTITUTE-SERVER-1}/log/@dots{}-gdb-7.10\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14195
msgid "You can freely access a huge library of build logs!"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14200
#, no-wrap
msgid "build failures, debugging"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14206
msgid "When defining a new package (@pxref{Defining Packages}), you will probably find yourself spending some time debugging and tweaking the build until it succeeds.  To do that, you need to operate the build commands yourself in an environment as close as possible to the one the build daemon uses."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14211
msgid "To that end, the first thing to do is to use the @option{--keep-failed} or @option{-K} option of @command{guix build}, which will keep the failed build tree in @file{/tmp} or whatever directory you specified as @env{TMPDIR} (@pxref{Common Build Options, @option{--keep-failed}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14217
msgid "From there on, you can @command{cd} to the failed build tree and source the @file{environment-variables} file, which contains all the environment variable definitions that were in place when the build failed.  So let's say you're debugging a build failure in package @code{foo}; a typical session would look like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14224
#, no-wrap
msgid ""
"$ guix build foo -K\n"
"@dots{} @i{build fails}\n"
"$ cd /tmp/guix-build-foo.drv-0\n"
"$ source ./environment-variables\n"
"$ cd foo-1.2\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14228
msgid "Now, you can invoke commands as if you were the daemon (almost) and troubleshoot your build process."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14234
msgid "Sometimes it happens that, for example, a package's tests pass when you run them manually but they fail when the daemon runs them.  This can happen because the daemon runs builds in containers where, unlike in our environment above, network access is missing, @file{/bin/sh} does not exist, etc. (@pxref{Build Environment Setup})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14237
msgid "In such cases, you may need to inspect the build process from within a container similar to the one the build daemon creates:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14245
#, no-wrap
msgid ""
"$ guix build -K foo\n"
"@dots{}\n"
"$ cd /tmp/guix-build-foo.drv-0\n"
"$ guix shell --no-grafts -C -D foo strace gdb\n"
"[env]# source ./environment-variables\n"
"[env]# cd foo-1.2\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14254
msgid "Here, @command{guix shell -C} creates a container and spawns a new shell in it (@pxref{Invoking guix shell}).  The @command{strace gdb} part adds the @command{strace} and @command{gdb} commands to the container, which you may find handy while debugging.  The @option{--no-grafts} option makes sure we get the exact same environment, with ungrafted packages (@pxref{Security Updates}, for more info on grafts)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14258
msgid "To get closer to a container like that used by the build daemon, we can remove @file{/bin/sh} (you'll first need to pass the @option{--writable-root} option to @command{guix shell}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14261
#, no-wrap
msgid "[env]# rm /bin/sh\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14265
msgid "(Don't worry, this is harmless: this is all happening in the throw-away container created by @command{guix shell}.)"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14268
msgid "The @command{strace} command is probably not in the search path, but we can run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14271
#, no-wrap
msgid "[env]# $GUIX_ENVIRONMENT/bin/strace -f -o log make check\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14276
msgid "In this way, not only you will have reproduced the environment variables the daemon uses, you will also be running the build process in a container similar to the one the daemon uses."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:14279
#, no-wrap
msgid "Invoking @command{guix edit}"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:14281
#, no-wrap
msgid "guix edit"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14282
#, no-wrap
msgid "package definition, editing"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14287
msgid "So many packages, so many source files! The @command{guix edit} command facilitates the life of users and packagers by pointing their editor at the source file containing the definition of the specified packages.  For instance:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14290
#, no-wrap
msgid "guix edit gcc@@4.9 vim\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14296
msgid "launches the program specified in the @env{VISUAL} or in the @env{EDITOR} environment variable to view the recipe of GCC@tie{}4.9.3 and that of Vim."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14302
msgid "If you are using a Guix Git checkout (@pxref{Building from Git}), or have created your own packages on @env{GUIX_PACKAGE_PATH} (@pxref{Package Modules}), you will be able to edit the package recipes.  In other cases, you will be able to examine the read-only recipes for packages currently in the store."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14307
msgid "Instead of @env{GUIX_PACKAGE_PATH}, the command-line option @option{--load-path=@var{directory}} (or in short @option{-L @var{directory}}) allows you to add @var{directory} to the front of the package module search path and so make your own packages visible."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:14309
#, no-wrap
msgid "Invoking @command{guix download}"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:14311
#, no-wrap
msgid "guix download"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14312
#, no-wrap
msgid "downloading package sources"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14319
msgid "When writing a package definition, developers typically need to download a source tarball, compute its SHA256 hash, and write that hash in the package definition (@pxref{Defining Packages}).  The @command{guix download} tool helps with this task: it downloads a file from the given URI, adds it to the store, and prints both its file name in the store and its SHA256 hash."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14326
msgid "The fact that the downloaded file is added to the store saves bandwidth: when the developer eventually tries to build the newly defined package with @command{guix build}, the source tarball will not have to be downloaded again because it is already in the store.  It is also a convenient way to temporarily stash files, which may be deleted eventually (@pxref{Invoking guix gc})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14334
msgid "The @command{guix download} command supports the same URIs as used in package definitions.  In particular, it supports @code{mirror://} URIs.  @code{https} URIs (HTTP over TLS) are supported @emph{provided} the Guile bindings for GnuTLS are available in the user's environment; when they are not available, an error is raised.  @xref{Guile Preparations, how to install the GnuTLS bindings for Guile,, gnutls-guile, GnuTLS-Guile}, for more information."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14339
msgid "@command{guix download} verifies HTTPS server certificates by loading the certificates of X.509 authorities from the directory pointed to by the @env{SSL_CERT_DIR} environment variable (@pxref{X.509 Certificates}), unless @option{--no-check-certificate} is used."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14342
msgid "Alternatively, @command{guix download} can also retrieve a Git repository, possibly a specific commit, tag, or branch."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14344 guix-git/doc/guix.texi:16593
msgid "The following options are available:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14346 guix-git/doc/guix.texi:14410
#, no-wrap
msgid "--hash=@var{algorithm}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:14347 guix-git/doc/guix.texi:14411
#, no-wrap
msgid "-H @var{algorithm}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14350
msgid "Compute a hash using the specified @var{algorithm}.  @xref{Invoking guix hash}, for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14351 guix-git/doc/guix.texi:14420
#, no-wrap
msgid "--format=@var{fmt}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:14352 guix-git/doc/guix.texi:14421
#, no-wrap
msgid "-f @var{fmt}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14355
msgid "Write the hash in the format specified by @var{fmt}.  For more information on the valid values for @var{fmt}, @pxref{Invoking guix hash}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14362
msgid "When using this option, you have @emph{absolutely no guarantee} that you are communicating with the authentic server responsible for the given URL, which makes you vulnerable to ``man-in-the-middle'' attacks."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14363
#, no-wrap
msgid "--output=@var{file}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:14364
#, no-wrap
msgid "-o @var{file}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14367
msgid "Save the downloaded file to @var{file} instead of adding it to the store."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14368
#, no-wrap
msgid "--git"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14371
msgid "Checkout the Git repository at the latest commit on the default branch."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14372
#, no-wrap
msgid "--commit=@var{commit-or-tag}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14374
msgid "Checkout the Git repository at @var{commit-or-tag}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14377
msgid "@var{commit-or-tag} can be either a tag or a commit defined in the Git repository."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14380
msgid "Checkout the Git repository at @var{branch}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14383
msgid "The repository will be checked out at the latest commit of @var{branch}, which must be a valid branch of the Git repository."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14387
#, fuzzy
#| msgid "Pushing to the official repository."
msgid "Recursively clone the Git repository."
msgstr "Esegui il Pushing sul repository ufficiale."

#. type: section
#: guix-git/doc/guix.texi:14390
#, no-wrap
msgid "Invoking @command{guix hash}"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:14392
#, no-wrap
msgid "guix hash"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14397
msgid "The @command{guix hash} command computes the hash of a file.  It is primarily a convenience tool for anyone contributing to the distribution: it computes the cryptographic hash of one or more files, which can be used in the definition of a package (@pxref{Defining Packages})."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14402
#, no-wrap
msgid "guix hash @var{option} @var{file} ...\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14407
msgid "When @var{file} is @code{-} (a hyphen), @command{guix hash} computes the hash of data read from standard input.  @command{guix hash} has the following options:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14414
msgid "Compute a hash using the specified @var{algorithm}, @code{sha256} by default."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14419
msgid "@var{algorithm} must be the name of a cryptographic hash algorithm supported by Libgcrypt @i{via} Guile-Gcrypt---e.g., @code{sha512} or @code{sha3-256} (@pxref{Hash Functions,,, guile-gcrypt, Guile-Gcrypt Reference Manual})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14423
msgid "Write the hash in the format specified by @var{fmt}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14426
msgid "Supported formats: @code{base64}, @code{nix-base32}, @code{base32}, @code{base16} (@code{hex} and @code{hexadecimal} can be used as well)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14430
msgid "If the @option{--format} option is not specified, @command{guix hash} will output the hash in @code{nix-base32}.  This representation is used in the definitions of packages."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14436
msgid "The @option{--recursive} option is deprecated in favor of @option{--serializer=nar} (see below); @option{-r} remains accepted as a convenient shorthand."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14437
#, no-wrap
msgid "--serializer=@var{type}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:14438
#, no-wrap
msgid "-S @var{type}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14440
msgid "Compute the hash on @var{file} using @var{type} serialization."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14442
msgid "@var{type} may be one of the following:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14444 guix-git/doc/guix.texi:16952
#: guix-git/doc/guix.texi:22254 guix-git/doc/guix.texi:25630
#, no-wrap
msgid "none"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14446
msgid "This is the default: it computes the hash of a file's contents."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14447
#, no-wrap
msgid "nar"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14457
msgid "Compute the hash of a ``normalized archive'' (or ``nar'') containing @var{file}, including its children if it is a directory.  Some of the metadata of @var{file} is part of the archive; for instance, when @var{file} is a regular file, the hash is different depending on whether @var{file} is executable or not.  Metadata such as time stamps have no impact on the hash (@pxref{Invoking guix archive}, for more info on the nar format)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14458
#, no-wrap
msgid "git"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14461
msgid "Compute the hash of the file or directory as a Git ``tree'', following the same method as the Git version control system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14463
#, no-wrap
msgid "--exclude-vcs"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:14464 guix-git/doc/guix.texi:16051
#, no-wrap
msgid "-x"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14467
msgid "When combined with @option{--recursive}, exclude version control system directories (@file{.bzr}, @file{.git}, @file{.hg}, etc.)."
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:14468
#, no-wrap
msgid "git-fetch"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14472
msgid "As an example, here is how you would compute the hash of a Git checkout, which is useful when using the @code{git-fetch} method (@pxref{origin Reference}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14477
#, no-wrap
msgid ""
"$ git clone http://example.org/foo.git\n"
"$ cd foo\n"
"$ guix hash -x --serializer=nar .\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14481 guix-git/doc/guix.texi:14486
#, no-wrap
msgid "Invoking @command{guix import}"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14483
#, no-wrap
msgid "importing packages"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14484
#, no-wrap
msgid "package import"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14485
#, no-wrap
msgid "package conversion"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14493
msgid "The @command{guix import} command is useful for people who would like to add a package to the distribution with as little work as possible---a legitimate demand.  The command knows of a few repositories from which it can ``import'' package metadata.  The result is a package definition, or a template thereof, in the format we know (@pxref{Defining Packages})."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14498
#, no-wrap
msgid "guix import [@var{global-options}@dots{}] @var{importer} @var{package} [@var{options}@dots{}]\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14504
msgid "@var{importer} specifies the source from which to import package metadata, and @var{options} specifies a package identifier and other options specific to @var{importer}. @command{guix import} itself has the following @var{global-options}:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14506
#, no-wrap
msgid "--insert=@var{file}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:14507
#, no-wrap
msgid "-i @var{file}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14511
msgid "Insert the package definition(s) that the @var{importer} generated into the specified @var{file}, either in alphabetical order among existing package definitions, or at the end of the file otherwise."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14516
msgid "Some of the importers rely on the ability to run the @command{gpgv} command.  For these, GnuPG must be installed and in @code{$PATH}; run @code{guix install gnupg} if needed."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14518
msgid "Currently, the available ``importers'' are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14520 guix-git/doc/guix.texi:15405
#, no-wrap
msgid "gnu"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14524
msgid "Import metadata for the given GNU package.  This provides a template for the latest version of that GNU package, including the hash of its source tarball, and its canonical synopsis and description."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14527
msgid "Additional information such as the package dependencies and its license needs to be figured out manually."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14530
msgid "For example, the following command returns a package definition for GNU@tie{}Hello:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14533
#, no-wrap
msgid "guix import gnu hello\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14536 guix-git/doc/guix.texi:14808
#: guix-git/doc/guix.texi:14858 guix-git/doc/guix.texi:14887
msgid "Specific command-line options are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14538 guix-git/doc/guix.texi:15598
#, no-wrap
msgid "--key-download=@var{policy}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14542
msgid "As for @command{guix refresh}, specify the policy to handle missing OpenPGP keys when verifying the package signature.  @xref{Invoking guix refresh, @option{--key-download}}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14544 guix-git/doc/guix.texi:14545
#: guix-git/doc/guix.texi:15429
#, no-wrap
msgid "pypi"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14552
msgid "Import metadata from the @uref{https://pypi.python.org/, Python Package Index}.  Information is taken from the JSON-formatted description available at @code{pypi.python.org} and usually includes all the relevant information, including package dependencies.  For maximum efficiency, it is recommended to install the @command{unzip} utility, so that the importer can unzip Python wheels and gather data from them."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14555
msgid "The command below imports metadata for the latest version of the @code{itsdangerous} Python package:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14558
#, no-wrap
msgid "guix import pypi itsdangerous\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14561 guix-git/doc/guix.texi:14592
#: guix-git/doc/guix.texi:14680 guix-git/doc/guix.texi:15120
msgid "You can also ask for a specific version:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14564
#, no-wrap
msgid "guix import pypi itsdangerous@@1.1.0\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14572 guix-git/doc/guix.texi:14603
#: guix-git/doc/guix.texi:14635 guix-git/doc/guix.texi:14662
#: guix-git/doc/guix.texi:14750 guix-git/doc/guix.texi:14831
#: guix-git/doc/guix.texi:14872 guix-git/doc/guix.texi:14923
#: guix-git/doc/guix.texi:14979 guix-git/doc/guix.texi:15012
#: guix-git/doc/guix.texi:15028 guix-git/doc/guix.texi:15048
#: guix-git/doc/guix.texi:15096 guix-git/doc/guix.texi:15132
#: guix-git/doc/guix.texi:15159
msgid "Traverse the dependency graph of the given upstream package recursively and generate package expressions for all those packages that are not yet in Guix."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14574 guix-git/doc/guix.texi:14575
#: guix-git/doc/guix.texi:15431
#, no-wrap
msgid "gem"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14584
msgid "Import metadata from @uref{https://rubygems.org/, RubyGems}.  Information is taken from the JSON-formatted description available at @code{rubygems.org} and includes most relevant information, including runtime dependencies.  There are some caveats, however.  The metadata doesn't distinguish between synopses and descriptions, so the same string is used for both fields.  Additionally, the details of non-Ruby dependencies required to build native extensions is unavailable and left as an exercise to the packager."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14586
msgid "The command below imports metadata for the @code{rails} Ruby package:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14589
#, no-wrap
msgid "guix import gem rails\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14595
#, no-wrap
msgid "guix import gem rails@@7.0.4\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14605 guix-git/doc/guix.texi:14606
#, no-wrap
msgid "minetest"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14607
#, no-wrap
msgid "ContentDB"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14616
msgid "Import metadata from @uref{https://content.minetest.net, ContentDB}.  Information is taken from the JSON-formatted metadata provided through @uref{https://content.minetest.net/help/api/, ContentDB's API} and includes most relevant information, including dependencies.  There are some caveats, however.  The license information is often incomplete.  The commit hash is sometimes missing.  The descriptions are in the Markdown format, but Guix uses Texinfo instead.  Texture packs and subgames are unsupported."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14618
msgid "The command below imports metadata for the Mesecons mod by Jeija:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14621
#, no-wrap
msgid "guix import minetest Jeija/mesecons\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14624
msgid "The author name can also be left out:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14627
#, no-wrap
msgid "guix import minetest mesecons\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14637 guix-git/doc/guix.texi:15427
#, no-wrap
msgid "cpan"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14638
#, no-wrap
msgid "CPAN"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14646
msgid "Import metadata from @uref{https://www.metacpan.org/, MetaCPAN}.  Information is taken from the JSON-formatted metadata provided through @uref{https://fastapi.metacpan.org/, MetaCPAN's API} and includes most relevant information, such as module dependencies.  License information should be checked closely.  If Perl is available in the store, then the @code{corelist} utility will be used to filter core modules out of the list of dependencies."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14648
msgid "The command below imports metadata for the Acme::Boolean Perl module:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14651
#, no-wrap
msgid "guix import cpan Acme::Boolean\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14655
msgid "Like many other importers, the @code{cpan} importer supports recursive imports:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14664 guix-git/doc/guix.texi:15423
#, no-wrap
msgid "cran"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14665
#, no-wrap
msgid "CRAN"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14666
#, no-wrap
msgid "Bioconductor"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14670
msgid "Import metadata from @uref{https://cran.r-project.org/, CRAN}, the central repository for the @uref{https://r-project.org, GNU@tie{}R statistical and graphical environment}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14672
msgid "Information is extracted from the @file{DESCRIPTION} file of the package."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14674
msgid "The command below imports metadata for the Cairo R package:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14677
#, no-wrap
msgid "guix import cran Cairo\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14683
#, no-wrap
msgid "guix import cran rasterVis@@0.50.3\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14688
msgid "When @option{--recursive} is added, the importer will traverse the dependency graph of the given upstream package recursively and generate package expressions for all those packages that are not yet in Guix."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14695
msgid "When @option{--style=specification} is added, the importer will generate package definitions whose inputs are package specifications instead of references to package variables.  This is useful when generated package definitions are to be appended to existing user modules, as the list of used package modules need not be changed.  The default is @option{--style=variable}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14699
msgid "When @option{--prefix=license:} is added, the importer will prefix license atoms with @code{license:}, allowing a prefixed import of @code{(guix licenses)}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14704
msgid "When @option{--archive=bioconductor} is added, metadata is imported from @uref{https://www.bioconductor.org/, Bioconductor}, a repository of R packages for the analysis and comprehension of high-throughput genomic data in bioinformatics."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14707
msgid "Information is extracted from the @file{DESCRIPTION} file contained in the package archive."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14709
msgid "The command below imports metadata for the GenomicRanges R package:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14712
#, no-wrap
msgid "guix import cran --archive=bioconductor GenomicRanges\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14717
msgid "Finally, you can also import R packages that have not yet been published on CRAN or Bioconductor as long as they are in a git repository.  Use @option{--archive=git} followed by the URL of the git repository:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14720
#, no-wrap
msgid "guix import cran --archive=git https://github.com/immunogenomics/harmony\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14722
#, no-wrap
msgid "texlive"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14723
#, no-wrap
msgid "TeX Live"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14724
#, no-wrap
msgid "CTAN"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14728
msgid "Import TeX package information from the TeX Live package database for TeX packages that are part of the @uref{https://www.tug.org/texlive/, TeX Live distribution}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14735
msgid "Information about the package is obtained from the TeX Live package database, a plain text file that is included in the @code{texlive-scripts} package.  The source code is downloaded from possibly multiple locations in the SVN repository of the Tex Live project.  Note that therefore SVN must be installed and in @code{$PATH}; run @code{guix install subversion} if needed."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14737
msgid "The command below imports metadata for the @code{fontspec} TeX package:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14740
#, no-wrap
msgid "guix import texlive fontspec\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14743 guix-git/doc/guix.texi:14941
#: guix-git/doc/guix.texi:14972 guix-git/doc/guix.texi:15005
#: guix-git/doc/guix.texi:15021 guix-git/doc/guix.texi:15041
#: guix-git/doc/guix.texi:15089 guix-git/doc/guix.texi:15126
#: guix-git/doc/guix.texi:15152
msgid "Additional options include:"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14753
#, no-wrap
msgid "JSON, import"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14756
msgid "Import package metadata from a local JSON file.  Consider the following example package definition in JSON format:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14769
#, no-wrap
msgid ""
"@{\n"
"  \"name\": \"hello\",\n"
"  \"version\": \"2.10\",\n"
"  \"source\": \"mirror://gnu/hello/hello-2.10.tar.gz\",\n"
"  \"build-system\": \"gnu\",\n"
"  \"home-page\": \"https://www.gnu.org/software/hello/\",\n"
"  \"synopsis\": \"Hello, GNU world: An example GNU package\",\n"
"  \"description\": \"GNU Hello prints a greeting.\",\n"
"  \"license\": \"GPL-3.0+\",\n"
"  \"native-inputs\": [\"gettext\"]\n"
"@}\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14775
msgid "The field names are the same as for the @code{<package>} record (@xref{Defining Packages}).  References to other packages are provided as JSON lists of quoted package specification strings such as @code{guile} or @code{guile@@2.0}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14778
msgid "The importer also supports a more explicit source definition using the common fields for @code{<origin>} records:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14791
#, no-wrap
msgid ""
"@{\n"
"  @dots{}\n"
"  \"source\": @{\n"
"    \"method\": \"url-fetch\",\n"
"    \"uri\": \"mirror://gnu/hello/hello-2.10.tar.gz\",\n"
"    \"sha256\": @{\n"
"      \"base32\": \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"\n"
"    @}\n"
"  @}\n"
"  @dots{}\n"
"@}\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14795
msgid "The command below reads metadata from the JSON file @code{hello.json} and outputs a package expression:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14798
#, no-wrap
msgid "guix import json hello.json\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14800 guix-git/doc/guix.texi:14801
#: guix-git/doc/guix.texi:15435
#, no-wrap
msgid "hackage"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14806
msgid "Import metadata from the Haskell community's central package archive @uref{https://hackage.haskell.org/, Hackage}.  Information is taken from Cabal files and includes all the relevant information, including package dependencies."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14810
#, no-wrap
msgid "--stdin"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:14811
#, no-wrap
msgid "-s"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14813
msgid "Read a Cabal file from standard input."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14813 guix-git/doc/guix.texi:14860
#, no-wrap
msgid "--no-test-dependencies"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14816 guix-git/doc/guix.texi:14863
msgid "Do not include dependencies required only by the test suites."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14816
#, no-wrap
msgid "--cabal-environment=@var{alist}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:14817
#, no-wrap
msgid "-e @var{alist}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14826
msgid "@var{alist} is a Scheme alist defining the environment in which the Cabal conditionals are evaluated.  The accepted keys are: @code{os}, @code{arch}, @code{impl} and a string representing the name of a flag.  The value associated with a flag has to be either the symbol @code{true} or @code{false}.  The value associated with other keys has to conform to the Cabal file format definition.  The default value associated with the keys @code{os}, @code{arch} and @code{impl} is @samp{linux}, @samp{x86_64} and @samp{ghc}, respectively."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14836
msgid "The command below imports metadata for the latest version of the HTTP Haskell package without including test dependencies and specifying the value of the flag @samp{network-uri} as @code{false}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14839
#, no-wrap
msgid "guix import hackage -t -e \"'((\\\"network-uri\\\" . false))\" HTTP\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14843
msgid "A specific package version may optionally be specified by following the package name by an at-sign and a version number as in the following example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14846
#, no-wrap
msgid "guix import hackage mtl@@2.1.3.1\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14848 guix-git/doc/guix.texi:14849
#: guix-git/doc/guix.texi:15437
#, no-wrap
msgid "stackage"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14856
msgid "The @code{stackage} importer is a wrapper around the @code{hackage} one.  It takes a package name, looks up the package version included in a long-term support (LTS) @uref{https://www.stackage.org, Stackage} release and uses the @code{hackage} importer to retrieve its metadata.  Note that it is up to you to select an LTS release compatible with the GHC compiler used by Guix."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14863
#, no-wrap
msgid "--lts-version=@var{version}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:14864
#, no-wrap
msgid "-l @var{version}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14867
msgid "@var{version} is the desired LTS release version.  If omitted the latest release is used."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14876
msgid "The command below imports metadata for the HTTP Haskell package included in the LTS Stackage release version 7.18:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14879
#, no-wrap
msgid "guix import stackage --lts-version=7.18 HTTP\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14881 guix-git/doc/guix.texi:14882
#: guix-git/doc/guix.texi:15421
#, no-wrap
msgid "elpa"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14885
msgid "Import metadata from an Emacs Lisp Package Archive (ELPA) package repository (@pxref{Packages,,, emacs, The GNU Emacs Manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14889
#, no-wrap
msgid "--archive=@var{repo}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:14890
#, no-wrap
msgid "-a @var{repo}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14894
msgid "@var{repo} identifies the archive repository from which to retrieve the information.  Currently the supported repositories and their identifiers are:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:14898
msgid "@uref{https://elpa.gnu.org/packages, GNU}, selected by the @code{gnu} identifier.  This is the default."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:14904
msgid "Packages from @code{elpa.gnu.org} are signed with one of the keys contained in the GnuPG keyring at @file{share/emacs/25.1/etc/package-keyring.gpg} (or similar) in the @code{emacs} package (@pxref{Package Installation, ELPA package signatures,, emacs, The GNU Emacs Manual})."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:14908
msgid "@uref{https://elpa.nongnu.org/nongnu/, NonGNU}, selected by the @code{nongnu} identifier."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:14912
msgid "@uref{https://stable.melpa.org/packages, MELPA-Stable}, selected by the @code{melpa-stable} identifier."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:14916
msgid "@uref{https://melpa.org/packages, MELPA}, selected by the @code{melpa} identifier."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14925 guix-git/doc/guix.texi:14926
#: guix-git/doc/guix.texi:15439
#, no-wrap
msgid "crate"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14929
msgid "Import metadata from the crates.io Rust package repository @uref{https://crates.io, crates.io}, as in this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14932
#, no-wrap
msgid "guix import crate blake2-rfc\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14935
msgid "The crate importer also allows you to specify a version string:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14938
#, no-wrap
msgid "guix import crate constant-time-eq@@0.1.0\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14943
#, no-wrap
msgid "--allow-yanked"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14946
msgid "If no non-yanked version of a crate is available, use the latest yanked version instead instead of aborting."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14946
#, no-wrap
msgid "--lockfile=@var{file}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14951
msgid "When @option{--lockfile} is specified, the importer will ignore other options and won't output package expressions, instead importing source expressions from @var{file}, a @file{Cargo.lock} file."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14954
msgid "@xref{Packaging Rust Crates,,, guix-cookbook, GNU Guix Cookbook}, for packaging workflow utilizing it."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14956 guix-git/doc/guix.texi:14957
#, no-wrap
msgid "elm"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14960
msgid "Import metadata from the Elm package repository @uref{https://package.elm-lang.org, package.elm-lang.org}, as in this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14963
#, no-wrap
msgid "guix import elm elm-explorations/webgl\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14966
msgid "The Elm importer also allows you to specify a version string:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14969
#, no-wrap
msgid "guix import elm elm-explorations/webgl@@1.1.3\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14981
#, no-wrap
msgid "npm-binary"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14982
#, no-wrap
msgid "npm"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14983
#, no-wrap
msgid "Node.js"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14986
msgid "Import metadata from the @uref{https://registry.npmjs.org, npm Registry}, as in this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14989
#, no-wrap
msgid "guix import npm-binary buffer-crc32\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14992
msgid "The npm-binary importer also allows you to specify a version string:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14995
#, no-wrap
msgid "guix import npm-binary buffer-crc32@@1.0.0\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:15002
msgid "Generated package expressions skip the build step of the @code{node-build-system}. As such, generated package expressions often refer to transpiled or generated files, instead of being built from source."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15014
#, no-wrap
msgid "opam"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15015
#, no-wrap
msgid "OPAM"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15016
#, no-wrap
msgid "OCaml"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15019
msgid "Import metadata from the @uref{https://opam.ocaml.org/, OPAM} package repository used by the OCaml community."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15030
#, no-wrap
msgid "composer"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15031
#, no-wrap
msgid "Composer"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15032
#, no-wrap
msgid "PHP"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15035
msgid "Import metadata from the @uref{https://getcomposer.org/, Composer} package archive used by the PHP community, as in this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15038
#, no-wrap
msgid "guix import composer phpunit/phpunit\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15048
#, no-wrap
msgid "--repo"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15052
msgid "By default, packages are searched in the official OPAM repository.  This option, which can be used more than once, lets you add other repositories which will be searched for packages.  It accepts as valid arguments:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15054
#, no-wrap
msgid "the name of a known repository - can be one of @code{opam},"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:15057
msgid "@code{coq} (equivalent to @code{coq-released}), @code{coq-core-dev}, @code{coq-extra-dev} or @code{grew}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15057
#, no-wrap
msgid "the URL of a repository as expected by the"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:15061
msgid "@code{opam repository add} command (for instance, the URL equivalent of the above @code{opam} name would be @uref{https://opam.ocaml.org})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15061
#, no-wrap
msgid "the path to a local copy of a repository (a directory containing a"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:15063
msgid "@file{packages/} sub-directory)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15068
msgid "Repositories are assumed to be passed to this option by order of preference.  The additional repositories will not replace the default @code{opam} repository, which is always kept as a fallback."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15073
msgid "Also, please note that versions are not compared across repositories.  The first repository (from left to right) that has at least one version of a given package will prevail over any others, and the version imported will be the latest one found @emph{in this repository only}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15076 guix-git/doc/guix.texi:15077
#, no-wrap
msgid "go"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15080
msgid "Import metadata for a Go module using @uref{https://proxy.golang.org, proxy.golang.org}."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15083
#, no-wrap
msgid "guix import go gopkg.in/yaml.v2\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15087
msgid "It is possible to use a package specification with a @code{@@VERSION} suffix to import a specific version."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15096
#, no-wrap
msgid "--pin-versions"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15104
msgid "When using this option, the importer preserves the exact versions of the Go modules dependencies instead of using their latest available versions.  This can be useful when attempting to import packages that recursively depend on former versions of themselves to build.  When using this mode, the symbol of the package is made by appending the version to its name, so that multiple versions of the same package can coexist."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15106 guix-git/doc/guix.texi:15107
#: guix-git/doc/guix.texi:15419
#, no-wrap
msgid "egg"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15114
msgid "Import metadata for @uref{https://wiki.call-cc.org/eggs, CHICKEN eggs}.  The information is taken from @file{PACKAGE.egg} files found in the @uref{git://code.call-cc.org/eggs-5-all, eggs-5-all} Git repository.  However, it does not provide all the information that we need, there is no ``description'' field, and the licenses used are not always precise (BSD is often used instead of BSD-N)."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15117
#, no-wrap
msgid "guix import egg sourcehut\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15123
#, no-wrap
msgid "guix import egg arrays@@1.0\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15134 guix-git/doc/guix.texi:15135
#, no-wrap
msgid "hexpm"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15138
msgid "Import metadata from the hex.pm Erlang and Elixir package repository @uref{https://hex.pm, hex.pm}, as in this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15141
#, no-wrap
msgid "guix import hexpm stun\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15144
msgid "The importer tries to determine the build system used by the package."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15146
msgid "The hexpm importer also allows you to specify a version string:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15149
#, no-wrap
msgid "guix import hexpm cf@@0.3.0\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15165
msgid "The structure of the @command{guix import} code is modular.  It would be useful to have more importers for other package formats, and your help is welcome here (@pxref{Contributing})."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:15167
#, no-wrap
msgid "Invoking @command{guix refresh}"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:15169
#, no-wrap
msgid "guix refresh"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15177
msgid "The primary audience of the @command{guix refresh} command is packagers.  As a user, you may be interested in the @option{--with-latest} option, which can bring you package update superpowers built upon @command{guix refresh} (@pxref{Package Transformation Options, @option{--with-latest}}).  By default, @command{guix refresh} reports any packages provided by the distribution that are outdated compared to the latest upstream version, like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15182
#, no-wrap
msgid ""
"$ guix refresh\n"
"gnu/packages/gettext.scm:29:13: gettext would be upgraded from 0.18.1.1 to 0.18.2.1\n"
"gnu/packages/glib.scm:77:12: glib would be upgraded from 2.34.3 to 2.37.0\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15186
msgid "Alternatively, one can specify packages to consider, in which case a warning is emitted for packages that lack an updater:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15191
#, no-wrap
msgid ""
"$ guix refresh coreutils guile guile-ssh\n"
"gnu/packages/ssh.scm:205:2: warning: no updater for guile-ssh\n"
"gnu/packages/guile.scm:136:12: guile would be upgraded from 2.0.12 to 2.0.13\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15200
msgid "@command{guix refresh} browses the upstream repository of each package and determines the highest version number of the releases therein.  The command knows how to update specific types of packages: GNU packages, ELPA packages, etc.---see the documentation for @option{--type} below.  There are many packages, though, for which it lacks a method to determine whether a new upstream release is available.  However, the mechanism is extensible, so feel free to get in touch with us to add a new method!"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15205
msgid "Consider the packages specified, and all the packages upon which they depend."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15213
#, no-wrap
msgid ""
"$ guix refresh --recursive coreutils\n"
"gnu/packages/acl.scm:40:13: acl would be upgraded from 2.2.53 to 2.3.1\n"
"gnu/packages/m4.scm:30:12: 1.4.18 is already the latest version of m4\n"
"gnu/packages/xml.scm:68:2: warning: no updater for expat\n"
"gnu/packages/multiprecision.scm:40:12: 6.1.2 is already the latest version of gmp\n"
"@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15222
msgid "If for some reason you don't want to update to the latest version, you can update to a specific version by appending an equal sign and the desired version number to the package specification.  Note that not all updaters support this; an error is reported when an updater cannot refresh to the specified version."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15234
#, no-wrap
msgid ""
"$ guix refresh trytond-party\n"
"gnu/packages/guile.scm:392:2: guile would be upgraded from 3.0.3 to 3.0.5\n"
"$ guix refresh -u guile=3.0.4\n"
"@dots{}\n"
"gnu/packages/guile.scm:392:2: guile: updating from version 3.0.3 to version 3.0.4...\n"
"@dots{}\n"
"$ guix refresh -u guile@@2.0=2.0.12\n"
"@dots{}\n"
"gnu/packages/guile.scm:147:2: guile: updating from version 2.0.10 to version 2.0.12...\n"
"@dots{}\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15236
#, no-wrap
msgid "target version, guix refresh"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15241
msgid "In some specific cases, you may have many packages specified via a manifest or a module selection which should all be updated together; for these cases, the @option{--target-version} option can be provided to have them all refreshed to the same version, as shown in the examples below:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15246
#, no-wrap
msgid ""
"$ guix refresh qtbase qtdeclarative --target-version=6.5.2\n"
"gnu/packages/qt.scm:1248:13: qtdeclarative would be upgraded from 6.3.2 to 6.5.2\n"
"gnu/packages/qt.scm:584:2: qtbase would be upgraded from 6.3.2 to 6.5.2\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15255
#, no-wrap
msgid ""
"$ guix refresh --manifest=qt5-manifest.scm --target-version=5.15.10\n"
"gnu/packages/qt.scm:1173:13: qtxmlpatterns would be upgraded from 5.15.8 to 5.15.10\n"
"gnu/packages/qt.scm:1202:13: qtdeclarative would be upgraded from 5.15.8 to 5.15.10\n"
"gnu/packages/qt.scm:1762:13: qtserialbus would be upgraded from 5.15.8 to 5.15.10\n"
"gnu/packages/qt.scm:2070:13: qtquickcontrols2 would be upgraded from 5.15.8 to 5.15.10\n"
"@dots{}\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15257
#, no-wrap
msgid "partial target version, guix refresh"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15261
msgid "The @option{--target-version} option accepts partial version prefixes, which can be useful to update to the latest major or major-minor prefixed version:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15266
#, no-wrap
msgid ""
"$ guix refresh qtbase@@5 qtdeclarative@@5 --target-version=5\n"
"gnu/packages/qt.scm:1472:13: qtdeclarative would be upgraded from 5.15.8 to 5.15.10\n"
"gnu/packages/qt.scm:452:13: qtbase would be upgraded from 5.15.8 to 5.15.10\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15268
#, no-wrap
msgid "partial version specification, guix refresh"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15272
msgid "A per-package equivalent to --target-version is made available by prefixing the version specification with the @samp{~} (tilde) character.  For example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15277
#, no-wrap
msgid ""
"$ guix refresh bash=~5 guile=~3\n"
"gnu/packages/guile.scm:354:13: guile would be upgraded from 3.0.9 to 3.0.10\n"
"gnu/packages/bash.scm:150:15: bash would be upgraded from 5.1.16 to 5.2.37\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15283
msgid "Sometimes the upstream name differs from the package name used in Guix, and @command{guix refresh} needs a little help.  Most updaters honor the @code{upstream-name} property in package definitions, which can be used to that effect:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:15290
#, no-wrap
msgid ""
"(define-public network-manager\n"
"  (package\n"
"    (name \"network-manager\")\n"
"    ;; @dots{}\n"
"    (properties '((upstream-name . \"NetworkManager\")))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15300
msgid "When passed @option{--update}, it modifies distribution source files to update the version numbers and source code hashes of those package definitions, as well as possibly their inputs (@pxref{Defining Packages}).  This is achieved by downloading each package's latest source tarball and its associated OpenPGP signature, authenticating the downloaded tarball against its signature using @command{gpgv}, and finally computing its hash---note that GnuPG must be installed and in @code{$PATH}; run @code{guix install gnupg} if needed."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15306
msgid "When the public key used to sign the tarball is missing from the user's keyring, an attempt is made to automatically retrieve it from a public key server; when this is successful, the key is added to the user's keyring; otherwise, @command{guix refresh} reports an error."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15308
msgid "The following options are supported:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15316 guix-git/doc/guix.texi:16470
msgid "This is useful to precisely refer to a package, as in this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15319
#, no-wrap
msgid "guix refresh -l -e '(@@@@ (gnu packages commencement) glibc-final)'\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15323
msgid "This command lists the dependents of the ``final'' libc (essentially all the packages)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15329
msgid "Update distribution source files (package definitions) in place.  This is usually run from a checkout of the Guix source tree (@pxref{Running Guix Before It Is Installed}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15332
#, no-wrap
msgid "./pre-inst-env guix refresh -s non-core -u\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15336
msgid "@xref{Defining Packages}, for more information on package definitions.  You can also run it on packages from a third-party channel:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15339
#, no-wrap
msgid "guix refresh -L /path/to/channel -u @var{package}\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15342
msgid "@xref{Creating a Channel}, on how to create a channel."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15348
msgid "This command updates the version and source code hash of the package.  Depending on the updater being used, it can also update the various @samp{inputs} fields of the package.  In some cases, the updater might get inputs wrong---it might not know about an extra input that's necessary, or it might add an input that should be avoided."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15349
#, no-wrap
msgid "@code{updater-extra-inputs}, package property"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15350
#, no-wrap
msgid "@code{updater-ignored-inputs}, package property"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15358
msgid "To address that, packagers can add properties stating inputs that should be added to those found by the updater or inputs that should be ignored: the @code{updater-extra-inputs} and @code{updater-ignored-inputs} properties pertain to ``regular'' inputs, and there are equivalent properties for @samp{native} and @samp{propagated} inputs.  In the example below, we tell the updater that we need @samp{openmpi} as an additional input:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:15367
#, no-wrap
msgid ""
"(define-public python-mpi4py\n"
"  (package\n"
"    (name \"python-mpi4py\")\n"
"    ;; @dots{}\n"
"    (inputs (list openmpi))\n"
"    (properties\n"
"     '((updater-extra-inputs . (\"openmpi\"))))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15372
msgid "That way, @command{guix refresh -u python-mpi4py} will leave the @samp{openmpi} input, even if it is not among the inputs it would normally add."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15373
#, no-wrap
msgid "--select=[@var{subset}]"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:15374
#, no-wrap
msgid "-s @var{subset}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15377
msgid "Select all the packages in @var{subset}, one of @code{core}, @code{non-core} or @code{module:@var{name}}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15384
msgid "The @code{core} subset refers to all the packages at the core of the distribution---i.e., packages that are used to build ``everything else''.  This includes GCC, libc, Binutils, Bash, etc.  Usually, changing one of these packages in the distribution entails a rebuild of all the others.  Thus, such updates are an inconvenience to users in terms of build time or bandwidth used to achieve the upgrade."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15388
msgid "The @code{non-core} subset refers to the remaining packages.  It is typically useful in cases where an update of the core packages would be inconvenient."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15393
msgid "The @code{module:@var{name}} subset refers to all the packages in a specified guile module.  The module can be specified as @code{module:guile} or @code{module:(gnu packages guile)}, the former is a shorthand for the later."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15398
msgid "Select all the packages from the manifest in @var{file}.  This is useful to check if any packages of the user manifest can be updated."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15399
#, no-wrap
msgid "--type=@var{updater}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:15400
#, no-wrap
msgid "-t @var{updater}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15403
msgid "Select only packages handled by @var{updater} (may be a comma-separated list of updaters).  Currently, @var{updater} may be one of:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15407
msgid "the updater for GNU packages;"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15407
#, no-wrap
msgid "savannah"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15409
msgid "the updater for packages hosted at @uref{https://savannah.gnu.org, Savannah};"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15409
#, no-wrap
msgid "sourceforge"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15411
msgid "the updater for packages hosted at @uref{https://sourceforge.net, SourceForge};"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15411
#, no-wrap
msgid "gnome"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15413
msgid "the updater for GNOME packages;"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15413
#, no-wrap
msgid "kde"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15415
msgid "the updater for KDE packages;"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15415
#, no-wrap
msgid "xorg"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15417
msgid "the updater for X.org packages;"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15417
#, no-wrap
msgid "kernel.org"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15419
msgid "the updater for packages hosted on kernel.org;"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15421
msgid "the updater for @uref{https://wiki.call-cc.org/eggs/, Egg} packages;"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15423
msgid "the updater for @uref{https://elpa.gnu.org/, ELPA} packages;"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15425
msgid "the updater for @uref{https://cran.r-project.org/, CRAN} packages;"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15425
#, no-wrap
msgid "bioconductor"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15427
msgid "the updater for @uref{https://www.bioconductor.org/, Bioconductor} R packages;"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15429
msgid "the updater for @uref{https://www.cpan.org/, CPAN} packages;"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15431
msgid "the updater for @uref{https://pypi.python.org, PyPI} packages."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15433
msgid "the updater for @uref{https://rubygems.org, RubyGems} packages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15433
#, no-wrap
msgid "github"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15435
msgid "the updater for @uref{https://github.com, GitHub} packages."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15437
msgid "the updater for @uref{https://hackage.haskell.org, Hackage} packages."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15439
msgid "the updater for @uref{https://www.stackage.org, Stackage} packages."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15441
msgid "the updater for @uref{https://crates.io, Crates} packages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15441
#, no-wrap
msgid "launchpad"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15443
msgid "the updater for @uref{https://launchpad.net, Launchpad} packages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15443
#, no-wrap
msgid "generic-html"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15447
msgid "a generic updater that crawls the HTML page where the source tarball of the package is hosted, when applicable, or the HTML page specified by the @code{release-monitoring-url} property of the package."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15448
#, no-wrap
msgid "generic-git"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15453
msgid "a generic updater for packages hosted on Git repositories.  It tries to be smart about parsing Git tag names, but if it is not able to parse the tag name and compare tags correctly, users can define the following properties for a package."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15455
#, no-wrap
msgid "@code{release-tag-prefix}: a regular expression for matching a prefix of"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:15457 guix-git/doc/guix.texi:15460
msgid "the tag name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15458
#, no-wrap
msgid "@code{release-tag-suffix}: a regular expression for matching a suffix of"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15461
#, no-wrap
msgid "@code{release-tag-version-delimiter}: a string used as the delimiter in"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:15463
msgid "the tag name for separating the numbers of the version."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15464
#, no-wrap
msgid "@code{accept-pre-releases}: by default, the updater will ignore"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:15467
msgid "pre-releases; to make it also look for pre-releases, set the this property to @code{#t}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:15478
#, no-wrap
msgid ""
"(package\n"
"  (name \"foo\")\n"
"  ;; ...\n"
"  (properties\n"
"    '((release-tag-prefix . \"^release0-\")\n"
"      (release-tag-suffix . \"[a-z]?$\")\n"
"      (release-tag-version-delimiter . \":\"))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15485
msgid "For instance, the following command only checks for updates of Emacs packages hosted at @code{elpa.gnu.org} and for updates of CRAN packages:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15490
#, no-wrap
msgid ""
"$ guix refresh --type=elpa,cran\n"
"gnu/packages/statistics.scm:819:13: r-testthat would be upgraded from 0.10.0 to 0.11.0\n"
"gnu/packages/emacs.scm:856:13: emacs-auctex would be upgraded from 11.88.6 to 11.88.9\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15492
#, no-wrap
msgid "--list-updaters"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15494
msgid "List available updaters and exit (see @option{--type} above)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15497
msgid "For each updater, display the fraction of packages it covers; at the end, display the fraction of packages covered by all these updaters."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15501
msgid "In addition, @command{guix refresh} can be passed one or more package names, as in this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15504
#, no-wrap
msgid "$ ./pre-inst-env guix refresh -u emacs idutils gcc@@4.8\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15511
msgid "The command above specifically updates the @code{emacs} and @code{idutils} packages.  The @option{--select} option would have no effect in this case.  You might also want to update definitions that correspond to the packages installed in your profile:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15515
#, no-wrap
msgid ""
"$ ./pre-inst-env guix refresh -u \\\n"
"       $(guix package --list-installed | cut -f1)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15521
msgid "When considering whether to upgrade a package, it is sometimes convenient to know which packages would be affected by the upgrade and should be checked for compatibility.  For this the following option may be used when passing @command{guix refresh} one or more package names:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15524
#, no-wrap
msgid "--list-dependent"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:15525 guix-git/doc/guix.texi:15810
#: guix-git/doc/guix.texi:16041
#, no-wrap
msgid "-l"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15528
msgid "List top-level dependent packages that would need to be rebuilt as a result of upgrading one or more packages."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15532
msgid "@xref{Invoking guix graph, the @code{reverse-package} type of @command{guix graph}}, for information on how to visualize the list of dependents of a package."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15535
msgid "@xref{build-dependents, @command{guix build --dependents}}, for a convenient way to build all the dependents of a package."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15540
msgid "Be aware that the @option{--list-dependent} option only @emph{approximates} the rebuilds that would be required as a result of an upgrade.  More rebuilds might be required under some circumstances."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15545
#, no-wrap
msgid ""
"$ guix refresh --list-dependent flex\n"
"Building the following 120 packages would ensure 213 dependent packages are rebuilt:\n"
"hop@@2.4.0 emacs-geiser@@0.13 notmuch@@0.18 mu@@0.9.9.5 cflow@@1.4 idutils@@4.6 @dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15549
msgid "The command above lists a set of packages that could be built to check for compatibility with an upgraded @code{flex} package."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15552
#, no-wrap
msgid "--list-transitive"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:15553
#, no-wrap
msgid "-T"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15555
msgid "List all the packages which one or more packages depend upon."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15560
#, no-wrap
msgid ""
"$ guix refresh --list-transitive flex\n"
"flex@@2.6.4 depends on the following 25 packages: perl@@5.28.0 help2man@@1.47.6\n"
"bison@@3.0.5 indent@@2.2.10 tar@@1.30 gzip@@1.9 bzip2@@1.0.6 xz@@5.2.4 file@@5.33 @dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15566
msgid "The command above lists a set of packages which, when changed, would cause @code{flex} to be rebuilt."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15568
msgid "The following options can be used to customize GnuPG operation:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15571
#, no-wrap
msgid "--gpg=@var{command}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15574
msgid "Use @var{command} as the GnuPG 2.x command.  @var{command} is searched for in @code{$PATH}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15575
#, no-wrap
msgid "--keyring=@var{file}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15581
msgid "Use @var{file} as the keyring for upstream keys.  @var{file} must be in the @dfn{keybox format}.  Keybox files usually have a name ending in @file{.kbx} and the GNU@tie{}Privacy Guard (GPG) can manipulate these files (@pxref{kbxutil, @command{kbxutil},, gnupg, Using the GNU Privacy Guard}, for information on a tool to manipulate keybox files)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15587
msgid "When this option is omitted, @command{guix refresh} uses @file{~/.config/guix/upstream/trustedkeys.kbx} as the keyring for upstream signing keys.  OpenPGP signatures are checked against keys from this keyring; missing keys are downloaded to this keyring as well (see @option{--key-download} below)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15589
msgid "You can fetch keys to a specific keybox file like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15593
#, no-wrap
msgid ""
"gpg --no-default-keyring --keyring mykeyring.kbx \\\n"
"  --recv-keys @value{OPENPGP-SIGNING-KEY-ID}\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15597
msgid "@xref{GPG Configuration Options, @option{--keyring},, gnupg, Using the GNU Privacy Guard}, for more information on GPG's @option{--keyring} option."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15601
msgid "Handle missing OpenPGP keys according to @var{policy}, which may be one of:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15603 guix-git/doc/guix.texi:15845
#: guix-git/doc/guix.texi:29210
#, no-wrap
msgid "always"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15606
msgid "Always download missing OpenPGP keys from the key server, and add them to the user's GnuPG keyring."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15607 guix-git/doc/guix.texi:29212
#, no-wrap
msgid "never"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15609
msgid "Never try to download missing OpenPGP keys.  Instead just bail out."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15610
#, no-wrap
msgid "interactive"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15613
msgid "When a package signed with an unknown OpenPGP key is encountered, ask the user whether to download it or not."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15614
#, no-wrap
msgid "auto"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15618
msgid "Automatically selects the @code{interactive} policy when the standard input is connected to a pseudo terminal (TTY), else @code{always}.  This is the default behavior."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15620
#, no-wrap
msgid "--key-server=@var{host}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15622
msgid "Use @var{host} as the OpenPGP key server when importing a public key."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15643
msgid "The @code{github} updater uses the @uref{https://developer.github.com/v3/, GitHub API} to query for new releases.  When used repeatedly e.g.@: when refreshing all packages, GitHub will eventually refuse to answer any further API requests.  By default 60 API requests per hour are allowed, and a full refresh on all GitHub packages in Guix requires more than this.  Authentication with GitHub through the use of an API token alleviates these limits.  To use an API token, set the environment variable @env{GUIX_GITHUB_TOKEN} to a token procured from @uref{https://github.com/settings/tokens} or otherwise."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:15646
#, no-wrap
msgid "Invoking @command{guix style}"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:15648
#, no-wrap
msgid "guix style"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15649
#, no-wrap
msgid "styling rules"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15650
#, no-wrap
msgid "lint, code style"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15651
#, no-wrap
msgid "format, code style"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15652
#, no-wrap
msgid "format conventions"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15659
msgid "The @command{guix style} command helps users and packagers alike style their package definitions and configuration files according to the latest fashionable trends.  It can either reformat whole files, with the @option{--whole-file} option, or apply specific @dfn{styling rules} to individual package definitions.  The command currently provides the following styling rules:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:15664
msgid "formatting package definitions according to the project's conventions (@pxref{Formatting Code});"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:15667
msgid "rewriting package inputs to the ``new style'', as explained below."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15673
msgid "The way package inputs are written is going through a transition (@pxref{package Reference}, for more on package inputs).  Until version 1.3.0, package inputs were written using the ``old style'', where each input was given an explicit label, most of the time the package name:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:15680
#, no-wrap
msgid ""
"(package\n"
"  ;; @dots{}\n"
"  ;; The \"old style\" (deprecated).\n"
"  (inputs `((\"libunistring\" ,libunistring)\n"
"            (\"libffi\" ,libffi))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15684
msgid "Today, the old style is deprecated and the preferred style looks like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:15690
#, no-wrap
msgid ""
"(package\n"
"  ;; @dots{}\n"
"  ;; The \"new style\".\n"
"  (inputs (list libunistring libffi)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15695
msgid "Likewise, uses of @code{alist-delete} and friends to manipulate inputs is now deprecated in favor of @code{modify-inputs} (@pxref{Defining Package Variants}, for more info on @code{modify-inputs})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15700
msgid "In the vast majority of cases, this is a purely mechanical change on the surface syntax that does not even incur a package rebuild.  Running @command{guix style -S inputs} can do that for you, whether you're working on packages in Guix proper or in an external channel."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15705
#, no-wrap
msgid "guix style [@var{options}] @var{package}@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15712
msgid "This causes @command{guix style} to analyze and rewrite the definition of @var{package}@dots{} or, when @var{package} is omitted, of @emph{all} the packages.  The @option{--styling} or @option{-S} option allows you to select the style rule, the default rule being @code{format}---see below."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15714
msgid "To reformat entire source files, the syntax is:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15717
#, no-wrap
msgid "guix style --whole-file @var{file}@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15720 guix-git/doc/guix.texi:17161
msgid "The available options are listed below."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15725
msgid "Show source file locations that would be edited but do not modify them."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15726
#, no-wrap
msgid "--whole-file"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:15727
#, no-wrap
msgid "-f"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15731
msgid "Reformat the given files in their entirety.  In that case, subsequent arguments are interpreted as file names (rather than package names), and the @option{--styling} option has no effect."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15734
msgid "As an example, here is how you might reformat your operating system configuration (you need write permissions for the file):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15737
#, no-wrap
msgid "guix style -f /etc/config.scm\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15739
#, no-wrap
msgid "--alphabetical-sort"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:15740
#, no-wrap
msgid "-A"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15745
msgid "Place the top-level package definitions in the given files in alphabetical order.  Package definitions with matching names are placed with versions in descending order.  This option only has an effect in combination with @option{--whole-file}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15746
#, no-wrap
msgid "--styling=@var{rule}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:15747
#, no-wrap
msgid "-S @var{rule}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15749
msgid "Apply @var{rule}, one of the following styling rules:"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:15751 guix-git/doc/guix.texi:53718
#, no-wrap
msgid "format"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15756
msgid "Format the given package definition(s)---this is the default styling rule.  For example, a packager running Guix on a checkout (@pxref{Running Guix Before It Is Installed}) might want to reformat the definition of the Coreutils package like so:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15759
#, no-wrap
msgid "./pre-inst-env guix style coreutils\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15761
#, no-wrap
msgid "inputs"
msgstr "inputs"

#. type: table
#: guix-git/doc/guix.texi:15765
msgid "Rewrite package inputs to the ``new style'', as described above.  This is how you would rewrite inputs of package @code{whatnot} in your own channel:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15768
#, no-wrap
msgid "guix style -L ~/my/channel -S inputs whatnot\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15774
msgid "Rewriting is done in a conservative way: preserving comments and bailing out if it cannot make sense of the code that appears in an inputs field.  The @option{--input-simplification} option described below provides fine-grain control over when inputs should be simplified."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:15775 guix-git/doc/guix.texi:18757
#: guix-git/doc/guix.texi:21984 guix-git/doc/guix.texi:43166
#, no-wrap
msgid "arguments"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15778
msgid "Rewrite package arguments to use G-expressions (@pxref{G-Expressions}).  For example, consider this package definition:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:15787
#, no-wrap
msgid ""
"(define-public my-package\n"
"  (package\n"
"    ;; @dots{}\n"
"    (arguments      ;old-style quoted arguments\n"
"     '(#:make-flags '(\"V=1\")\n"
"       #:phases (modify-phases %standard-phases\n"
"                  (delete 'build))))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15792
msgid "Running @command{guix style -S arguments} on this package would rewrite its @code{arguments} field like to:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:15801
#, no-wrap
msgid ""
"(define-public my-package\n"
"  (package\n"
"    ;; @dots{}\n"
"    (arguments\n"
"      (list #:make-flags #~'(\"V=1\")\n"
"            #:phases #~(modify-phases %standard-phases\n"
"                         (delete 'build))))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15807
msgid "Note that changes made by the @code{arguments} rule do not entail a rebuild of the affected packages.  Furthermore, if a package definition happens to be using G-expressions already, @command{guix style} leaves it unchanged."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15809
#, no-wrap
msgid "--list-stylings"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15812
msgid "List and describe the available styling rules and exit."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15821
msgid "Style the package @var{expr} evaluates to."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15826
#, no-wrap
msgid "guix style -e '(@@ (gnu packages gcc) gcc-5)'\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15829
#, fuzzy
#| msgid "Updating the Guix package definition."
msgid "styles the @code{gcc-5} package definition."
msgstr "Aggiornamento della definizione del pacchetto Guix."

#. type: item
#: guix-git/doc/guix.texi:15830
#, no-wrap
msgid "--input-simplification=@var{policy}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15835
msgid "When using the @code{inputs} styling rule, with @samp{-S inputs}, this option specifies the package input simplification policy for cases where an input label does not match the corresponding package name.  @var{policy} may be one of the following:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15837
#, no-wrap
msgid "silent"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15840
msgid "Simplify inputs only when the change is ``silent'', meaning that the package does not need to be rebuilt (its derivation is unchanged)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15841
#, no-wrap
msgid "safe"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15844
msgid "Simplify inputs only when that is ``safe'' to do: the package might need to be rebuilt, but the change is known to have no observable effect."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15848
msgid "Simplify inputs even when input labels do not match package names, and even if that might have an observable effect."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15852
msgid "The default is @code{silent}, meaning that input simplifications do not trigger any package rebuild."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:15855
#, no-wrap
msgid "Invoking @command{guix lint}"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:15857
#, no-wrap
msgid "guix lint"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15858
#, no-wrap
msgid "package, checking for errors"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15864
msgid "The @command{guix lint} command is meant to help package developers avoid common errors and use a consistent style.  It runs a number of checks on a given set of packages in order to find common mistakes in their definitions.  Available @dfn{checkers} include (see @option{--list-checkers} for a complete list):"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15870
msgid "Validate certain typographical and stylistic rules about package descriptions and synopses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15871
#, no-wrap
msgid "inputs-should-be-native"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15873
msgid "Identify inputs that should most likely be native inputs."
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:15876
#, no-wrap
msgid "mirror-url"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:15877
#, no-wrap
msgid "github-url"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:15878
#, no-wrap
msgid "source-file-name"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15885
msgid "Probe @code{home-page} and @code{source} URLs and report those that are invalid.  Suggest a @code{mirror://} URL when applicable.  If the @code{source} URL redirects to a GitHub URL, recommend usage of the GitHub URL@.  Check that the source file name is meaningful, e.g.@: is not just a version number or ``git-checkout'', without a declared @code{file-name} (@pxref{origin Reference})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15886
#, no-wrap
msgid "source-unstable-tarball"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15890
msgid "Parse the @code{source} URL to determine if a tarball from GitHub is autogenerated or if it is a release tarball.  Unfortunately GitHub's autogenerated tarballs are sometimes regenerated."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15891
#, no-wrap
msgid "misplaced-flags"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15895
msgid "Parse the @code{make-flags} and @code{configure-flags} to check for any flags which should be set with another flag as part of the build-system.  For example,"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:15901
#, no-wrap
msgid ""
"(build-system cmake-build-system)\n"
"(arguments\n"
" (list #:configure-flags #~(list \"-DCMAKE_BUILD_TYPE=RELEASE\"\n"
"                                 \"-DTESTS=ON\")))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15904
msgid "should instead be written as:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:15910
#, no-wrap
msgid ""
"(build-system cmake-build-system)\n"
"(arguments\n"
" (list #:build-type \"RELEASE\"\n"
"       #:configure-flags #~(list \"-DTESTS=ON\")))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15915
msgid "Check that the derivation of the given packages can be successfully computed for all the supported systems (@pxref{Derivations})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15916
#, no-wrap
msgid "profile-collisions"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15922
msgid "Check whether installing the given packages in a profile would lead to collisions.  Collisions occur when several packages with the same name but a different version or a different store file name are propagated.  @xref{package Reference, @code{propagated-inputs}}, for more information on propagated inputs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15923
#, no-wrap
msgid "archival"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15924
#, no-wrap
msgid "Software Heritage, source code archive"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15925
#, no-wrap
msgid "archival of source code, Software Heritage"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15928
msgid "Checks whether the package's source code is archived at @uref{https://www.softwareheritage.org, Software Heritage}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15936
msgid "When the source code that is not archived comes from a version-control system (VCS)---e.g., it's obtained with @code{git-fetch}, send Software Heritage a ``save'' request so that it eventually archives it.  This ensures that the source will remain available in the long term, and that Guix can fall back to Software Heritage should the source code disappear from its original host.  The status of recent ``save'' requests can be @uref{https://archive.softwareheritage.org/save/#requests, viewed on-line}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15941
msgid "When source code is a tarball obtained with @code{url-fetch}, simply print a message when it is not archived.  As of this writing, Software Heritage does not allow requests to save arbitrary tarballs; we are working on ways to ensure that non-VCS source code is also archived."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15947
msgid "Software Heritage @uref{https://archive.softwareheritage.org/api/#rate-limiting, limits the request rate per IP address}.  When the limit is reached, @command{guix lint} prints a message and the @code{archival} checker stops doing anything until that limit has been reset."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15948
#, no-wrap
msgid "cve"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15949 guix-git/doc/guix.texi:54488
#, no-wrap
msgid "security vulnerabilities"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15950
#, no-wrap
msgid "CVE, Common Vulnerabilities and Exposures"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15955
msgid "Report known vulnerabilities found in the Common Vulnerabilities and Exposures (CVE) databases of the current and past year @uref{https://nvd.nist.gov/vuln/data-feeds, published by the US NIST}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15957
msgid "To view information about a particular vulnerability, visit pages such as:"
msgstr ""

#. type: indicateurl{#1}
#: guix-git/doc/guix.texi:15961
msgid "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-YYYY-ABCD"
msgstr ""

#. type: indicateurl{#1}
#: guix-git/doc/guix.texi:15963
msgid "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-YYYY-ABCD"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15968
msgid "where @code{CVE-YYYY-ABCD} is the CVE identifier---e.g., @code{CVE-2015-7554}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15973
msgid "Package developers can specify in package recipes the @uref{https://nvd.nist.gov/products/cpe,Common Platform Enumeration (CPE)} name and version of the package when they differ from the name or version that Guix uses, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:15981
#, no-wrap
msgid ""
"(package\n"
"  (name \"grub\")\n"
"  ;; @dots{}\n"
"  ;; CPE calls this package \"grub2\".\n"
"  (properties '((cpe-name . \"grub2\")\n"
"                (cpe-version . \"2.3\"))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15987
msgid "A CVE alert can be a false positive when its CPE name matches the one in Guix, while actually referring to a distinct product.  These alerts can be addressed by setting the correct CPE vendor, or when no vendors apply, by ignoring alerts from irrelevant vendors, as in these examples:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:15993
#, no-wrap
msgid ""
"(package\n"
"  (name \"halibut\")\n"
"  ;; @dots{}\n"
"  (properties '((cpe-vendor . \"halibut_project\"))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:15999
#, no-wrap
msgid ""
"(package\n"
"  (name \"cvs\")\n"
"  ;; @dots{}\n"
"  (properties '((lint-hidden-cpe-vendors . (\"jenkins\"\n"
"                                            \"vendor2\")))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16006
msgid "Finally, some entries in the CVE database do not specify which version of a package they apply to, and would thus ``stick around'' forever.  Package developers who found CVE alerts and verified they can be ignored can declare them as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:16016
#, no-wrap
msgid ""
"(package\n"
"  (name \"t1lib\")\n"
"  ;; @dots{}\n"
"  ;; These CVEs no longer apply and can be safely ignored.\n"
"  (properties `((lint-hidden-cve . (\"CVE-2011-0433\"\n"
"                                    \"CVE-2011-1553\"\n"
"                                    \"CVE-2011-1554\"\n"
"                                    \"CVE-2011-5244\")))))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16018
#, no-wrap
msgid "formatting"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16021
msgid "Warn about obvious source code formatting issues: trailing white space, use of tabulations, etc."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16022
#, no-wrap
msgid "input-labels"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16028
msgid "Report old-style input labels that do not match the name of the corresponding package.  This aims to help migrate from the ``old input style''.  @xref{package Reference}, for more information on package inputs and input styles.  @xref{Invoking guix style}, on how to migrate to the new style."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16034
#, no-wrap
msgid "guix lint @var{options} @var{package}@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16038
msgid "If no package is given on the command line, then all packages are checked.  The @var{options} may be zero or more of the following:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16040
#, no-wrap
msgid "--list-checkers"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16044
msgid "List and describe all the available checkers that will be run on packages and exit."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16045
#, no-wrap
msgid "--checkers"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:16046
#, no-wrap
msgid "-c"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16049
msgid "Only enable the checkers specified in a comma-separated list using the names returned by @option{--list-checkers}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16050
#, no-wrap
msgid "--exclude"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16054
msgid "Only disable the checkers specified in a comma-separated list using the names returned by @option{--list-checkers}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16060
msgid "This is useful to unambiguously designate packages, as in this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16063
#, no-wrap
msgid "guix lint -c archival -e '(@@ (gnu packages guile) guile-3.0)'\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16065
#, no-wrap
msgid "--no-network"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16068
msgid "Only enable the checkers that do not depend on Internet access."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:16080
#, no-wrap
msgid "Invoking @command{guix size}"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:16082 guix-git/doc/guix.texi:47946
#, no-wrap
msgid "size"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:16083
#, no-wrap
msgid "package size"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:16085
#, no-wrap
msgid "guix size"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16092
msgid "The @command{guix size} command helps package developers profile the disk usage of packages.  It is easy to overlook the impact of an additional dependency added to a package, or the impact of using a single output for a package that could easily be split (@pxref{Packages with Multiple Outputs}).  Such are the typical issues that @command{guix size} can highlight."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16097
msgid "The command can be passed one or more package specifications such as @code{gcc@@4.8} or @code{guile:debug}, or a file name in the store.  Consider this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16110
#, no-wrap
msgid ""
"$ guix size coreutils\n"
"store item                               total    self\n"
"/gnu/store/@dots{}-gcc-5.5.0-lib           60.4    30.1  38.1%\n"
"/gnu/store/@dots{}-glibc-2.27              30.3    28.8  36.6%\n"
"/gnu/store/@dots{}-coreutils-8.28          78.9    15.0  19.0%\n"
"/gnu/store/@dots{}-gmp-6.1.2               63.1     2.7   3.4%\n"
"/gnu/store/@dots{}-bash-static-4.4.12       1.5     1.5   1.9%\n"
"/gnu/store/@dots{}-acl-2.2.52              61.1     0.4   0.5%\n"
"/gnu/store/@dots{}-attr-2.4.47             60.6     0.2   0.3%\n"
"/gnu/store/@dots{}-libcap-2.25             60.5     0.2   0.2%\n"
"total: 78.9 MiB\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16116
msgid "The store items listed here constitute the @dfn{transitive closure} of Coreutils---i.e., Coreutils and all its dependencies, recursively---as would be returned by:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16119
#, no-wrap
msgid "$ guix gc -R /gnu/store/@dots{}-coreutils-8.23\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16127
msgid "Here the output shows three columns next to store items.  The first column, labeled ``total'', shows the size in mebibytes (MiB) of the closure of the store item---that is, its own size plus the size of all its dependencies.  The next column, labeled ``self'', shows the size of the item itself.  The last column shows the ratio of the size of the item itself to the space occupied by all the items listed here."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16133
msgid "In this example, we see that the closure of Coreutils weighs in at 79@tie{}MiB, most of which is taken by libc and GCC's run-time support libraries.  (That libc and GCC's libraries represent a large fraction of the closure is not a problem @i{per se} because they are always available on the system anyway.)"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16136
msgid "Since the command also accepts store file names, assessing the size of a build result is straightforward:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16139
#, no-wrap
msgid "guix size $(guix system build config.scm)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16149
msgid "When the package(s) passed to @command{guix size} are available in the store@footnote{More precisely, @command{guix size} looks for the @emph{ungrafted} variant of the given package(s), as returned by @code{guix build @var{package} --no-grafts}.  @xref{Security Updates}, for information on grafts.}, @command{guix size} queries the daemon to determine its dependencies, and measures its size in the store, similar to @command{du -ms --apparent-size} (@pxref{du invocation,,, coreutils, GNU Coreutils})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16154
msgid "When the given packages are @emph{not} in the store, @command{guix size} reports information based on the available substitutes (@pxref{Substitutes}).  This makes it possible to profile the disk usage of store items that are not even on disk, only available remotely."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16156
msgid "You can also specify several package names:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16166
#, no-wrap
msgid ""
"$ guix size coreutils grep sed bash\n"
"store item                               total    self\n"
"/gnu/store/@dots{}-coreutils-8.24          77.8    13.8  13.4%\n"
"/gnu/store/@dots{}-grep-2.22               73.1     0.8   0.8%\n"
"/gnu/store/@dots{}-bash-4.3.42             72.3     4.7   4.6%\n"
"/gnu/store/@dots{}-readline-6.3            67.6     1.2   1.2%\n"
"@dots{}\n"
"total: 102.3 MiB\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16172
msgid "In this example we see that the combination of the four packages takes 102.3@tie{}MiB in total, which is much less than the sum of each closure since they have a lot of dependencies in common."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16178
msgid "When looking at the profile returned by @command{guix size}, you may find yourself wondering why a given package shows up in the profile at all.  To understand it, you can use @command{guix graph --path -t references} to display the shortest path between the two packages (@pxref{Invoking guix graph})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16180
msgid "The available options are:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16186
msgid "Use substitute information from @var{urls}.  @xref{client-substitute-urls, the same option for @code{guix build}}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16187
#, no-wrap
msgid "--sort=@var{key}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16189
msgid "Sort lines according to @var{key}, one of the following options:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16191
#, no-wrap
msgid "self"
msgstr "self"

#. type: table
#: guix-git/doc/guix.texi:16193
msgid "the size of each item (the default);"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16195
msgid "the total size of the item's closure."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16197
#, no-wrap
msgid "--map-file=@var{file}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16199
msgid "Write a graphical map of disk usage in PNG format to @var{file}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16201
msgid "For the example above, the map looks like this:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16204
msgid "@image{images/coreutils-size-map,5in,, map of Coreutils disk usage produced by @command{guix size}}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16209
msgid "This option requires that @uref{https://wingolog.org/software/guile-charting/, Guile-Charting} be installed and visible in Guile's module search path.  When that is not the case, @command{guix size} fails as it tries to load it."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16213
msgid "Consider packages for @var{system}---e.g., @code{x86_64-linux}."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:16224
#, no-wrap
msgid "Invoking @command{guix graph}"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:16226
#, no-wrap
msgid "DAG"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:16227
#, no-wrap
msgid "guix graph"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16242
msgid "Packages and their dependencies form a @dfn{graph}, specifically a directed acyclic graph (DAG).  It can quickly become difficult to have a mental model of the package DAG, so the @command{guix graph} command provides a visual representation of the DAG@.  By default, @command{guix graph} emits a DAG representation in the input format of @uref{https://www.graphviz.org/, Graphviz}, so its output can be passed directly to the @command{dot} command of Graphviz.  It can also emit an HTML page with embedded JavaScript code to display a ``chord diagram'' in a Web browser, using the @uref{https://d3js.org/, d3.js} library, or emit Cypher queries to construct a graph in a graph database supporting the @uref{https://www.opencypher.org/, openCypher} query language.  With @option{--path}, it simply displays the shortest path between two packages.  The general syntax is:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16245
#, no-wrap
msgid "guix graph @var{options} @var{package}@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16250
msgid "For example, the following command generates a PDF file representing the package DAG for the GNU@tie{}Core Utilities, showing its build-time dependencies:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16253
#, no-wrap
msgid "guix graph coreutils | dot -Tpdf > dag.pdf\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16256
msgid "The output looks like this:"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16258
msgid "@image{images/coreutils-graph,2in,,Dependency graph of the GNU Coreutils}"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16260
msgid "Nice little graph, no?"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16263
msgid "You may find it more pleasant to navigate the graph interactively with @command{xdot} (from the @code{xdot} package):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16266
#, no-wrap
msgid "guix graph coreutils | xdot -\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16273
msgid "But there is more than one graph! The one above is concise: it is the graph of package objects, omitting implicit inputs such as GCC, libc, grep, etc.  It is often useful to have such a concise graph, but sometimes one may want to see more details.  @command{guix graph} supports several types of graphs, allowing you to choose the level of detail:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16279
msgid "This is the default type used in the example above.  It shows the DAG of package objects, excluding implicit dependencies.  It is concise, but filters out many details."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16280
#, no-wrap
msgid "reverse-package"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16282
msgid "This shows the @emph{reverse} DAG of packages.  For example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16285
#, no-wrap
msgid "guix graph --type=reverse-package ocaml\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16290
msgid "...@: yields the graph of packages that @emph{explicitly} depend on OCaml (if you are also interested in cases where OCaml is an implicit dependency, see @code{reverse-bag} below)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16295
msgid "Note that for core packages this can yield huge graphs.  If all you want is to know the number of packages that depend on a given package, use @command{guix refresh --list-dependent} (@pxref{Invoking guix refresh, @option{--list-dependent}})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16296
#, no-wrap
msgid "bag-emerged"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16298
msgid "This is the package DAG, @emph{including} implicit inputs."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16300
msgid "For instance, the following command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16303
#, no-wrap
msgid "guix graph --type=bag-emerged coreutils\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16306
msgid "...@: yields this bigger graph:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16308
msgid "@image{images/coreutils-bag-graph,,5in,Detailed dependency graph of the GNU Coreutils}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16311
msgid "At the bottom of the graph, we see all the implicit inputs of @var{gnu-build-system} (@pxref{Build Systems, @code{gnu-build-system}})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16315
msgid "Now, note that the dependencies of these implicit inputs---that is, the @dfn{bootstrap dependencies} (@pxref{Bootstrapping})---are not shown here, for conciseness."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16316
#, no-wrap
msgid "bag"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16319
msgid "Similar to @code{bag-emerged}, but this time including all the bootstrap dependencies."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16320
#, no-wrap
msgid "bag-with-origins"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16322
msgid "Similar to @code{bag}, but also showing origins and their dependencies."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16323
#, no-wrap
msgid "reverse-bag"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16326
msgid "This shows the @emph{reverse} DAG of packages.  Unlike @code{reverse-package}, it also takes implicit dependencies into account.  For example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16329
#, no-wrap
msgid "guix graph -t reverse-bag dune\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16336
msgid "...@: yields the graph of all packages that depend on Dune, directly or indirectly.  Since Dune is an @emph{implicit} dependency of many packages @i{via} @code{dune-build-system}, this shows a large number of packages, whereas @code{reverse-package} would show very few if any."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16342
msgid "This is the most detailed representation: It shows the DAG of derivations (@pxref{Derivations}) and plain store items.  Compared to the above representation, many additional nodes are visible, including build scripts, patches, Guile modules, etc."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16345
msgid "For this type of graph, it is also possible to pass a @file{.drv} file name instead of a package name, as in:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16348
#, no-wrap
msgid "guix graph -t derivation $(guix system build -d my-config.scm)\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16354
msgid "This is the graph of @dfn{package modules} (@pxref{Package Modules}).  For example, the following command shows the graph for the package module that defines the @code{guile} package:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16357
#, no-wrap
msgid "guix graph -t module guile | xdot -\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16362
msgid "All the types above correspond to @emph{build-time dependencies}.  The following graph type represents the @emph{run-time dependencies}:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16367
msgid "This is the graph of @dfn{references} of a package output, as returned by @command{guix gc --references} (@pxref{Invoking guix gc})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16370
msgid "If the given package output is not available in the store, @command{guix graph} attempts to obtain dependency information from substitutes."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16374
msgid "Here you can also pass a store file name instead of a package name.  For example, the command below produces the reference graph of your profile (which can be big!):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16377
#, no-wrap
msgid "guix graph -t references $(readlink -f ~/.guix-profile)\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16379
#, no-wrap
msgid "referrers"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16382
msgid "This is the graph of the @dfn{referrers} of a store item, as returned by @command{guix gc --referrers} (@pxref{Invoking guix gc})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16388
msgid "This relies exclusively on local information from your store.  For instance, let us suppose that the current Inkscape is available in 10 profiles on your machine; @command{guix graph -t referrers inkscape} will show a graph rooted at Inkscape and with those 10 profiles linked to it."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16391
msgid "It can help determine what is preventing a store item from being garbage collected."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:16394
#, no-wrap
msgid "shortest path, between packages"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16401
msgid "Often, the graph of the package you are interested in does not fit on your screen, and anyway all you want to know is @emph{why} that package actually depends on some seemingly unrelated package.  The @option{--path} option instructs @command{guix graph} to display the shortest path between two packages (or derivations, or store items, etc.):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16415
#, no-wrap
msgid ""
"$ guix graph --path emacs libunistring\n"
"emacs@@26.3\n"
"mailutils@@3.9\n"
"libunistring@@0.9.10\n"
"$ guix graph --path -t derivation emacs libunistring\n"
"/gnu/store/@dots{}-emacs-26.3.drv\n"
"/gnu/store/@dots{}-mailutils-3.9.drv\n"
"/gnu/store/@dots{}-libunistring-0.9.10.drv\n"
"$ guix graph --path -t references emacs libunistring\n"
"/gnu/store/@dots{}-emacs-26.3\n"
"/gnu/store/@dots{}-libidn2-2.2.0\n"
"/gnu/store/@dots{}-libunistring-0.9.10\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16423
msgid "Sometimes you still want to visualize the graph but would like to trim it so it can actually be displayed.  One way to do it is via the @option{--max-depth} (or @option{-M}) option, which lets you specify the maximum depth of the graph.  In the example below, we visualize only @code{libreoffice} and the nodes whose distance to @code{libreoffice} is at most 2:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16426
#, no-wrap
msgid "guix graph -M 2 libreoffice | xdot -f fdp -\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16430
msgid "Mind you, that's still a big ball of spaghetti, but at least @command{dot} can render it quickly and it can be browsed somewhat."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16432
msgid "The available options are the following:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16438
msgid "Produce a graph output of @var{type}, where @var{type} must be one of the values listed above."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16441
msgid "List the supported graph types."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16442
#, no-wrap
msgid "--backend=@var{backend}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:16443
#, no-wrap
msgid "-b @var{backend}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16445
msgid "Produce a graph using the selected @var{backend}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16446
#, no-wrap
msgid "--list-backends"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16448
msgid "List the supported graph backends."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16450
msgid "Currently, the available backends are Graphviz and d3.js."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16451
#, no-wrap
msgid "--path"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16456
msgid "Display the shortest path between two nodes of the type specified by @option{--type}.  The example below shows the shortest path between @code{libreoffice} and @code{llvm} according to the references of @code{libreoffice}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16463
#, no-wrap
msgid ""
"$ guix graph --path -t references libreoffice llvm\n"
"/gnu/store/@dots{}-libreoffice-6.4.2.2\n"
"/gnu/store/@dots{}-libepoxy-1.5.4\n"
"/gnu/store/@dots{}-mesa-19.3.4\n"
"/gnu/store/@dots{}-llvm-9.0.1\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16473
#, no-wrap
msgid "guix graph -e '(@@@@ (gnu packages commencement) gnu-make-final)'\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16478
msgid "Display the graph for @var{system}---e.g., @code{i686-linux}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16481
msgid "The package dependency graph is largely architecture-independent, but there are some architecture-dependent bits that this option allows you to visualize."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16497
msgid "On top of that, @command{guix graph} supports all the usual package transformation options (@pxref{Package Transformation Options}).  This makes it easy to view the effect of a graph-rewriting transformation such as @option{--with-input}.  For example, the command below outputs the graph of @code{git} once @code{openssl} has been replaced by @code{libressl} everywhere in the graph:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16500
#, no-wrap
msgid "guix graph git --with-input=openssl=libressl\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16503
msgid "So many possibilities, so much fun!"
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:16505
#, no-wrap
msgid "Invoking @command{guix publish}"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:16507
#, no-wrap
msgid "guix publish"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16511
msgid "The purpose of @command{guix publish} is to enable users to easily share their store with others, who can then use it as a substitute server (@pxref{Substitutes})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16517
msgid "When @command{guix publish} runs, it spawns an HTTP server which allows anyone with network access to obtain substitutes from it.  This means that any machine running Guix can also act as if it were a build farm, since the HTTP interface is compatible with Cuirass, the software behind the @code{@value{SUBSTITUTE-SERVER-1}} build farm."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16523
msgid "For security, each substitute is signed, allowing recipients to check their authenticity and integrity (@pxref{Substitutes}).  Because @command{guix publish} uses the signing key of the system, which is only readable by the system administrator, it must be started as root; the @option{--user} option makes it drop root privileges early on."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16527
msgid "The signing key pair must be generated before @command{guix publish} is launched, using @command{guix archive --generate-key} (@pxref{Invoking guix archive})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16532
msgid "When the @option{--advertise} option is passed, the server advertises its availability on the local network using multicast DNS (mDNS) and DNS service discovery (DNS-SD), currently @i{via} Guile-Avahi (@pxref{Top,,, guile-avahi, Using Avahi in Guile Scheme Programs})."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16537
#, no-wrap
msgid "guix publish @var{options}@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16541
msgid "Running @command{guix publish} without any additional arguments will spawn an HTTP server on port 8080:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16544
#, no-wrap
msgid "guix publish\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:16546
#, no-wrap
msgid "socket activation, for @command{guix publish}"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16550
msgid "@command{guix publish} can also be started following the systemd ``socket activation'' protocol (@pxref{Service De- and Constructors, @code{make-systemd-constructor},, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16553
msgid "Once a publishing server has been authorized, the daemon may download substitutes from it.  @xref{Getting Substitutes from Other Servers}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16561
msgid "By default, @command{guix publish} compresses archives on the fly as it serves them.  This ``on-the-fly'' mode is convenient in that it requires no setup and is immediately available.  However, when serving lots of clients, we recommend using the @option{--cache} option, which enables caching of the archives before they are sent to clients---see below for details.  The @command{guix weather} command provides a handy way to check what a server provides (@pxref{Invoking guix weather})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16568
msgid "As a bonus, @command{guix publish} also serves as a content-addressed mirror for source files referenced in @code{origin} records (@pxref{origin Reference}).  For instance, assuming @command{guix publish} is running on @code{example.org}, the following URL returns the raw @file{hello-2.10.tar.gz} file with the given SHA256 hash (represented in @code{nix-base32} format, @pxref{Invoking guix hash}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16571
#, no-wrap
msgid "http://example.org/file/hello-2.10.tar.gz/sha256/0ssi1@dots{}ndq1i\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16575
msgid "Obviously, these URLs only work for files that are in the store; in other cases, they return 404 (``Not Found'')."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:16576
#, no-wrap
msgid "build logs, publication"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16578
msgid "Build logs are available from @code{/log} URLs like:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16581
#, no-wrap
msgid "http://example.org/log/gwspk@dots{}-guile-2.2.3\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16591
msgid "When @command{guix-daemon} is configured to save compressed build logs, as is the case by default (@pxref{Invoking guix-daemon}), @code{/log} URLs return the compressed log as-is, with an appropriate @code{Content-Type} and/or @code{Content-Encoding} header.  We recommend running @command{guix-daemon} with @option{--log-compression=gzip} since Web browsers can automatically decompress it, which is not the case with Bzip2 compression."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16595
#, no-wrap
msgid "--port=@var{port}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:16596
#, no-wrap
msgid "-p @var{port}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16598
msgid "Listen for HTTP requests on @var{port}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16599
#, no-wrap
msgid "--listen=@var{host}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16602
msgid "Listen on the network interface for @var{host}.  The default is to accept connections from any interface."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16607
msgid "Change privileges to @var{user} as soon as possible---i.e., once the server socket is open and the signing key has been read."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16608
#, no-wrap
msgid "--compression[=@var{method}[:@var{level}]]"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:16609
#, no-wrap
msgid "-C [@var{method}[:@var{level}]]"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16613
msgid "Compress data using the given @var{method} and @var{level}.  @var{method} is one of @code{lzip}, @code{zstd}, and @code{gzip}; when @var{method} is omitted, @code{gzip} is used."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16617
msgid "When @var{level} is zero, disable compression.  The range 1 to 9 corresponds to different compression levels: 1 is the fastest, and 9 is the best (CPU-intensive).  The default is 3."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16624
msgid "Usually, @code{lzip} compresses noticeably better than @code{gzip} for a small increase in CPU usage; see @uref{https://nongnu.org/lzip/lzip_benchmark.html,benchmarks on the lzip Web page}.  However, @code{lzip} achieves low decompression throughput (on the order of 50@tie{}MiB/s on modern hardware), which can be a bottleneck for someone who downloads over a fast network connection."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16628
msgid "The compression ratio of @code{zstd} is between that of @code{lzip} and that of @code{gzip}; its main advantage is a @uref{https://facebook.github.io/zstd/,high decompression speed}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16637
msgid "Unless @option{--cache} is used, compression occurs on the fly and the compressed streams are not cached.  Thus, to reduce load on the machine that runs @command{guix publish}, it may be a good idea to choose a low compression level, to run @command{guix publish} behind a caching proxy, or to use @option{--cache}.  Using @option{--cache} has the advantage that it allows @command{guix publish} to add @code{Content-Length} HTTP header to its responses."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16642
msgid "This option can be repeated, in which case every substitute gets compressed using all the selected methods, and all of them are advertised.  This is useful when users may not support all the compression methods: they can select the one they support."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16643
#, no-wrap
msgid "--cache=@var{directory}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:16644
#, no-wrap
msgid "-c @var{directory}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16647
msgid "Cache archives and meta-data (@code{.narinfo} URLs) to @var{directory} and only serve archives that are in cache."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16655
msgid "When this option is omitted, archives and meta-data are created on-the-fly.  This can reduce the available bandwidth, especially when compression is enabled, since this may become CPU-bound.  Another drawback of the default mode is that the length of archives is not known in advance, so @command{guix publish} does not add a @code{Content-Length} HTTP header to its responses, which in turn prevents clients from knowing the amount of data being downloaded."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16663
msgid "Conversely, when @option{--cache} is used, the first request for a store item (@i{via} a @code{.narinfo} URL) triggers a background process to @dfn{bake} the archive---computing its @code{.narinfo} and compressing the archive, if needed.  Once the archive is cached in @var{directory}, subsequent requests succeed and are served directly from the cache, which guarantees that clients get the best possible bandwidth."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16670
msgid "That first @code{.narinfo} request nonetheless returns 200, provided the requested store item is ``small enough'', below the cache bypass threshold---see @option{--cache-bypass-threshold} below.  That way, clients do not have to wait until the archive is baked.  For larger store items, the first @code{.narinfo} request returns 404, meaning that clients have to wait until the archive is baked."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16674
msgid "The ``baking'' process is performed by worker threads.  By default, one thread per CPU core is created, but this can be customized.  See @option{--workers} below."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16677
msgid "When @option{--ttl} is used, cached entries are automatically deleted when they have expired."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16678
#, no-wrap
msgid "--workers=@var{N}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16681
msgid "When @option{--cache} is used, request the allocation of @var{N} worker threads to ``bake'' archives."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16682
#, no-wrap
msgid "--ttl=@var{ttl}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16686 guix-git/doc/guix.texi:43572
msgid "Produce @code{Cache-Control} HTTP headers that advertise a time-to-live (TTL) of @var{ttl}.  @var{ttl} must denote a duration: @code{5d} means 5 days, @code{1m} means 1 month, and so on."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16691
msgid "This allows the user's Guix to keep substitute information in cache for @var{ttl}.  However, note that @code{guix publish} does not itself guarantee that the store items it provides will indeed remain available for as long as @var{ttl}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16695
msgid "Additionally, when @option{--cache} is used, cached entries that have not been accessed for @var{ttl} and that no longer have a corresponding item in the store, may be deleted."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16696
#, no-wrap
msgid "--negative-ttl=@var{ttl}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16701 guix-git/doc/guix.texi:43589
msgid "Similarly produce @code{Cache-Control} HTTP headers to advertise the time-to-live (TTL) of @emph{negative} lookups---missing store items, for which the HTTP 404 code is returned.  By default, no negative TTL is advertised."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16705
msgid "This parameter can help adjust server load and substitute latency by instructing cooperating clients to be more or less patient when a store item is missing."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16706
#, no-wrap
msgid "--cache-bypass-threshold=@var{size}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16711
msgid "When used in conjunction with @option{--cache}, store items smaller than @var{size} are immediately available, even when they are not yet in cache.  @var{size} is a size in bytes, or it can be suffixed by @code{M} for megabytes and so on.  The default is @code{10M}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16716
msgid "``Cache bypass'' allows you to reduce the publication delay for clients at the expense of possibly additional I/O and CPU use on the server side: depending on the client access patterns, those store items can end up being baked several times until a copy is available in cache."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16720
msgid "Increasing the threshold may be useful for sites that have few users, or to guarantee that users get substitutes even for store items that are not popular."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16721
#, no-wrap
msgid "--nar-path=@var{path}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16724
msgid "Use @var{path} as the prefix for the URLs of ``nar'' files (@pxref{Invoking guix archive, normalized archives})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16728
msgid "By default, nars are served at a URL such as @code{/nar/gzip/@dots{}-coreutils-8.25}.  This option allows you to change the @code{/nar} part to @var{path}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16729
#, no-wrap
msgid "--public-key=@var{file}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:16730
#, no-wrap
msgid "--private-key=@var{file}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16733 guix-git/doc/guix.texi:38006
#: guix-git/doc/guix.texi:38043
msgid "Use the specific @var{file}s as the public/private key pair used to sign the store items being published."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16740
msgid "The files must correspond to the same key pair (the private key is used for signing and the public key is merely advertised in the signature metadata).  They must contain keys in the canonical s-expression format as produced by @command{guix archive --generate-key} (@pxref{Invoking guix archive}).  By default, @file{/etc/guix/signing-key.pub} and @file{/etc/guix/signing-key.sec} are used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16741
#, no-wrap
msgid "--repl[=@var{port}]"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:16742
#, no-wrap
msgid "-r [@var{port}]"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16746
msgid "Spawn a Guile REPL server (@pxref{REPL Servers,,, guile, GNU Guile Reference Manual}) on @var{port} (37146 by default).  This is used primarily for debugging a running @command{guix publish} server."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16752
msgid "Enabling @command{guix publish} on Guix System is a one-liner: just instantiate a @code{guix-publish-service-type} service in the @code{services} field of the @code{operating-system} declaration (@pxref{guix-publish-service-type, @code{guix-publish-service-type}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16755
msgid "If you are instead running Guix on a ``foreign distro'', follow these instructions:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:16759
msgid "If your host distro uses the systemd init system:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16764
#, no-wrap
msgid ""
"# ln -s ~root/.guix-profile/lib/systemd/system/guix-publish.service \\\n"
"        /etc/systemd/system/\n"
"# systemctl start guix-publish && systemctl enable guix-publish\n"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:16768
msgid "If your host distro uses the Upstart init system:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16772
#, no-wrap
msgid ""
"# ln -s ~root/.guix-profile/lib/upstart/system/guix-publish.conf /etc/init/\n"
"# start guix-publish\n"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:16776
msgid "Otherwise, proceed similarly with your distro's init system."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:16779
#, no-wrap
msgid "Invoking @command{guix challenge}"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:16782
#, no-wrap
msgid "verifiable builds"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:16783
#, no-wrap
msgid "guix challenge"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:16784
#, no-wrap
msgid "challenge"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16789
msgid "Do the binaries provided by this server really correspond to the source code it claims to build? Is a package build process deterministic? These are the questions the @command{guix challenge} command attempts to answer."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16797
msgid "The former is obviously an important question: Before using a substitute server (@pxref{Substitutes}), one had better @emph{verify} that it provides the right binaries, and thus @emph{challenge} it.  The latter is what enables the former: If package builds are deterministic, then independent builds of the package should yield the exact same result, bit for bit; if a server provides a binary different from the one obtained locally, it may be either corrupt or malicious."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16806
msgid "We know that the hash that shows up in @file{/gnu/store} file names is the hash of all the inputs of the process that built the file or directory---compilers, libraries, build scripts, etc. (@pxref{Introduction}).  Assuming deterministic build processes, one store file name should map to exactly one build output.  @command{guix challenge} checks whether there is, indeed, a single mapping by comparing the build outputs of several independent builds of any given store item."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16808
msgid "The command output looks like this:"
msgstr ""

#. type: smallexample
#: guix-git/doc/guix.texi:16822
#, no-wrap
msgid ""
"$ guix challenge \\\n"
"  --substitute-urls=\"https://@value{SUBSTITUTE-SERVER-1} https://guix.example.org\" \\\n"
"  openssl git pius coreutils grep\n"
"updating substitutes from 'https://@value{SUBSTITUTE-SERVER-1}'... 100.0%\n"
"updating substitutes from 'https://guix.example.org'... 100.0%\n"
"/gnu/store/@dots{}-openssl-1.0.2d contents differ:\n"
"  local hash: 0725l22r5jnzazaacncwsvp9kgf42266ayyp814v7djxs7nk963q\n"
"  https://@value{SUBSTITUTE-SERVER-1}/nar/@dots{}-openssl-1.0.2d: 0725l22r5jnzazaacncwsvp9kgf42266ayyp814v7djxs7nk963q\n"
"  https://guix.example.org/nar/@dots{}-openssl-1.0.2d: 1zy4fmaaqcnjrzzajkdn3f5gmjk754b43qkq47llbyak9z0qjyim\n"
"  differing files:\n"
"    /lib/libcrypto.so.1.1\n"
"    /lib/libssl.so.1.1\n"
"\n"
msgstr ""

#. type: smallexample
#: guix-git/doc/guix.texi:16829
#, no-wrap
msgid ""
"/gnu/store/@dots{}-git-2.5.0 contents differ:\n"
"  local hash: 00p3bmryhjxrhpn2gxs2fy0a15lnip05l97205pgbk5ra395hyha\n"
"  https://@value{SUBSTITUTE-SERVER-1}/nar/@dots{}-git-2.5.0: 069nb85bv4d4a6slrwjdy8v1cn4cwspm3kdbmyb81d6zckj3nq9f\n"
"  https://guix.example.org/nar/@dots{}-git-2.5.0: 0mdqa9w1p6cmli6976v4wi0sw9r4p5prkj7lzfd1877wk11c9c73\n"
"  differing file:\n"
"    /libexec/git-core/git-fsck\n"
"\n"
msgstr ""

#. type: smallexample
#: guix-git/doc/guix.texi:16836
#, no-wrap
msgid ""
"/gnu/store/@dots{}-pius-2.1.1 contents differ:\n"
"  local hash: 0k4v3m9z1zp8xzzizb7d8kjj72f9172xv078sq4wl73vnq9ig3ax\n"
"  https://@value{SUBSTITUTE-SERVER-1}/nar/@dots{}-pius-2.1.1: 0k4v3m9z1zp8xzzizb7d8kjj72f9172xv078sq4wl73vnq9ig3ax\n"
"  https://guix.example.org/nar/@dots{}-pius-2.1.1: 1cy25x1a4fzq5rk0pmvc8xhwyffnqz95h2bpvqsz2mpvlbccy0gs\n"
"  differing file:\n"
"    /share/man/man1/pius.1.gz\n"
"\n"
msgstr ""

#. type: smallexample
#: guix-git/doc/guix.texi:16838
#, no-wrap
msgid ""
"@dots{}\n"
"\n"
msgstr ""
"@dots{}\n"
"\n"

#. type: smallexample
#: guix-git/doc/guix.texi:16843
#, no-wrap
msgid ""
"5 store items were analyzed:\n"
"  - 2 (40.0%) were identical\n"
"  - 3 (60.0%) differed\n"
"  - 0 (0.0%) were inconclusive\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16853
msgid "In this example, @command{guix challenge} queries all the substitute servers for each of the fives packages specified on the command line.  It then reports those store items for which the servers obtained a result different from the local build (if it exists) and/or different from one another; here, the @samp{local hash} lines indicate that a local build result was available for each of these packages and shows its hash."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:16854
#, no-wrap
msgid "non-determinism, in package builds"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16865
msgid "As an example, @code{guix.example.org} always gets a different answer.  Conversely, @code{@value{SUBSTITUTE-SERVER-1}} agrees with local builds, except in the case of Git.  This might indicate that the build process of Git is non-deterministic, meaning that its output varies as a function of various things that Guix does not fully control, in spite of building packages in isolated environments (@pxref{Features}).  Most common sources of non-determinism include the addition of timestamps in build results, the inclusion of random numbers, and directory listings sorted by inode number.  See @uref{https://reproducible-builds.org/docs/}, for more information."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16868
msgid "To find out what is wrong with this Git binary, the easiest approach is to run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16873
#, no-wrap
msgid ""
"guix challenge git \\\n"
"  --diff=diffoscope \\\n"
"  --substitute-urls=\"https://@value{SUBSTITUTE-SERVER-1} https://guix.example.org\"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16877
msgid "This automatically invokes @command{diffoscope}, which displays detailed information about files that differ."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16880
msgid "Alternatively, we can do something along these lines (@pxref{Invoking guix archive}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16885
#, no-wrap
msgid ""
"$ wget -q -O - https://@value{SUBSTITUTE-SERVER-1}/nar/lzip/@dots{}-git-2.5.0 \\\n"
"   | lzip -d | guix archive -x /tmp/git\n"
"$ diff -ur --no-dereference /gnu/store/@dots{}-git.2.5.0 /tmp/git\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16894
msgid "This command shows the difference between the files resulting from the local build, and the files resulting from the build on @code{@value{SUBSTITUTE-SERVER-1}} (@pxref{Overview, Comparing and Merging Files,, diffutils, Comparing and Merging Files}).  The @command{diff} command works great for text files.  When binary files differ, a better option is @uref{https://diffoscope.org/, Diffoscope}, a tool that helps visualize differences for all kinds of files."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16902
msgid "Once you have done that work, you can tell whether the differences are due to a non-deterministic build process or to a malicious server.  We try hard to remove sources of non-determinism in packages to make it easier to verify substitutes, but of course, this is a process that involves not just Guix, but a large part of the free software community.  In the meantime, @command{guix challenge} is one tool to help address the problem."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16906
msgid "If you are writing packages for Guix, you are encouraged to check whether @code{@value{SUBSTITUTE-SERVER-1}} and other substitute servers obtain the same build result as you did with:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16909
#, no-wrap
msgid "guix challenge @var{package}\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16915
#, no-wrap
msgid "guix challenge @var{options} @var{argument}@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16922
msgid "where @var{argument} is a package specification such as @code{guile@@2.0} or @code{glibc:debug} or, alternatively, a store file name as returned, for example, by @command{guix build} or @command{guix gc --list-live}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16928
msgid "When a difference is found between the hash of a locally-built item and that of a server-provided substitute, or among substitutes provided by different servers, the command displays it as in the example above and its exit code is 2 (other non-zero exit codes denote other kinds of errors)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16930
msgid "The one option that matters is:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16936
msgid "Consider @var{urls} the whitespace-separated list of substitute source URLs to compare to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16937
#, no-wrap
msgid "--diff=@var{mode}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16939
msgid "Upon mismatches, show differences according to @var{mode}, one of:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16941
#, no-wrap
msgid "@code{simple} (the default)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16943
msgid "Show the list of files that differ."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:16944
#, no-wrap
msgid "diffoscope"
msgstr ""

#. type: var{#1}
#: guix-git/doc/guix.texi:16945
#, no-wrap
msgid "command"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16948
msgid "Invoke @uref{https://diffoscope.org/, Diffoscope}, passing it two directories whose contents do not match."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16951
msgid "When @var{command} is an absolute file name, run @var{command} instead of Diffoscope."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16954
msgid "Do not show further details about the differences."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16959
msgid "Thus, unless @option{--diff=none} is passed, @command{guix challenge} downloads the store items from the given substitute servers so that it can compare them."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16960
#, no-wrap
msgid "--verbose"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:16961
#, no-wrap
msgid "-v"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16964
msgid "Show details about matches (identical contents) in addition to information about mismatches."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:16968
#, no-wrap
msgid "Invoking @command{guix copy}"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:16970
#, no-wrap
msgid "guix copy"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:16971
#, no-wrap
msgid "copy, of store items, over SSH"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:16972
#, no-wrap
msgid "SSH, copy of store items"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:16973
#, no-wrap
msgid "sharing store items across machines"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:16974
#, no-wrap
msgid "transferring store items across machines"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16981
msgid "The @command{guix copy} command copies items from the store of one machine to that of another machine over a secure shell (SSH)  connection@footnote{This command is available only when Guile-SSH was found.  @xref{Requirements}, for details.}.  For example, the following command copies the @code{coreutils} package, the user's profile, and all their dependencies over to @var{host}, logged in as @var{user}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16985
#, no-wrap
msgid ""
"guix copy --to=@var{user}@@@var{host} \\\n"
"          coreutils $(readlink -f ~/.guix-profile)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16989
msgid "If some of the items to be copied are already present on @var{host}, they are not actually sent."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16992
msgid "The command below retrieves @code{libreoffice} and @code{gimp} from @var{host}, assuming they are available there:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16995
#, no-wrap
msgid "guix copy --from=@var{host} libreoffice gimp\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17000
msgid "The SSH connection is established using the Guile-SSH client, which is compatible with OpenSSH: it honors @file{~/.ssh/known_hosts} and @file{~/.ssh/config}, and uses the SSH agent for authentication."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17006
msgid "The key used to sign items that are sent must be accepted by the remote machine.  Likewise, the key used by the remote machine to sign items you are retrieving must be in @file{/etc/guix/acl} so it is accepted by your own daemon.  @xref{Invoking guix archive}, for more information about store item authentication."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17011
#, no-wrap
msgid "guix copy [--to=@var{spec}|--from=@var{spec}] @var{items}@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17014
msgid "You must always specify one of the following options:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:17016
#, no-wrap
msgid "--to=@var{spec}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:17017
#, no-wrap
msgid "--from=@var{spec}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17021
msgid "Specify the host to send to or receive from.  @var{spec} must be an SSH spec such as @code{example.org}, @code{charlie@@example.org}, or @code{charlie@@example.org:2222}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17025
msgid "The @var{items} can be either package names, such as @code{gimp}, or store items, such as @file{/gnu/store/@dots{}-idutils-4.6}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17029
msgid "When specifying the name of a package to send, it is first built if needed, unless @option{--dry-run} was specified.  Common build options are supported (@pxref{Common Build Options})."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:17032
#, no-wrap
msgid "Invoking @command{guix container}"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:17034
#, no-wrap
msgid "guix container"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:17038
msgid "As of version @value{VERSION}, this tool is experimental.  The interface is subject to radical change in the future."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17045
msgid "The purpose of @command{guix container} is to manipulate processes running within an isolated environment, commonly known as a ``container'', typically created by the @command{guix shell} (@pxref{Invoking guix shell}) and @command{guix system container} (@pxref{Invoking guix system}) commands."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17050
#, no-wrap
msgid "guix container @var{action} @var{options}@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17054
msgid "@var{action} specifies the operation to perform with a container, and @var{options} specifies the context-specific arguments for the action."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17056
msgid "The following actions are available:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:17058
#, no-wrap
msgid "exec"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17060
msgid "Execute a command within the context of a running container."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17062
msgid "The syntax is:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17065
#, no-wrap
msgid "guix container exec @var{pid} @var{program} @var{arguments}@dots{}\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17071
msgid "@var{pid} specifies the process ID of the running container.  @var{program} specifies an executable file name within the root file system of the container.  @var{arguments} are the additional options that will be passed to @var{program}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17075
msgid "The following command launches an interactive login shell inside a Guix system container, started by @command{guix system container}, and whose process ID is 9001:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17078
#, no-wrap
msgid "guix container exec 9001 /run/current-system/profile/bin/bash --login\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17082
msgid "Note that the @var{pid} cannot be the parent process of a container.  It must be PID 1 of the container or one of its child processes."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:17086
#, no-wrap
msgid "Invoking @command{guix weather}"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:17088
#, no-wrap
msgid "guix weather"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17099
msgid "Occasionally you're grumpy because substitutes are lacking and you end up building packages by yourself (@pxref{Substitutes}).  The @command{guix weather} command reports on substitute availability on the specified servers so you can have an idea of whether you'll be grumpy today.  It can sometimes be useful info as a user, but it is primarily useful to people running @command{guix publish} (@pxref{Invoking guix publish}).  Sometimes substitutes @emph{are} available but they are not authorized on your system; @command{guix weather} reports it so you can authorize them if you want (@pxref{Getting Substitutes from Other Servers})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17100
#, no-wrap
msgid "statistics, for substitutes"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17101
#, no-wrap
msgid "availability of substitutes"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17102
#, no-wrap
msgid "substitute availability"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17103
#, no-wrap
msgid "weather, substitute availability"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17105
msgid "Here's a sample run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17117
#, no-wrap
msgid ""
"$ guix weather --substitute-urls=https://guix.example.org\n"
"computing 5,872 package derivations for x86_64-linux...\n"
"looking for 6,128 store items on https://guix.example.org..\n"
"updating substitutes from 'https://guix.example.org'... 100.0%\n"
"https://guix.example.org\n"
"  43.4% substitutes available (2,658 out of 6,128)\n"
"  7,032.5 MiB of nars (compressed)\n"
"  19,824.2 MiB on disk (uncompressed)\n"
"  0.030 seconds per request (182.9 seconds in total)\n"
"  33.5 requests per second\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17127
#, no-wrap
msgid ""
"  9.8% (342 out of 3,470) of the missing items are queued\n"
"  867 queued builds\n"
"      x86_64-linux: 518 (59.7%)\n"
"      i686-linux: 221 (25.5%)\n"
"      aarch64-linux: 128 (14.8%)\n"
"  build rate: 23.41 builds per hour\n"
"      x86_64-linux: 11.16 builds per hour\n"
"      i686-linux: 6.03 builds per hour\n"
"      aarch64-linux: 6.41 builds per hour\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17129
#, no-wrap
msgid "continuous integration, statistics"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17140
msgid "As you can see, it reports the fraction of all the packages for which substitutes are available on the server---regardless of whether substitutes are enabled, and regardless of whether this server's signing key is authorized.  It also reports the size of the compressed archives (``nars'') provided by the server, the size the corresponding store items occupy in the store (assuming deduplication is turned off), and the server's throughput.  The second part gives continuous integration (CI) statistics, if the server supports it.  In addition, using the @option{--coverage} option, @command{guix weather} can list ``important'' package substitutes missing on the server (see below)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17146
msgid "To achieve that, @command{guix weather} queries over HTTP(S) meta-data (@dfn{narinfos}) for all the relevant store items.  Like @command{guix challenge}, it ignores signatures on those substitutes, which is innocuous since the command only gathers statistics and cannot install those substitutes."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17151
#, no-wrap
msgid "guix weather @var{options}@dots{} [@var{packages}@dots{}]\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17159
msgid "When @var{packages} is omitted, @command{guix weather} checks the availability of substitutes for @emph{all} the packages, or for those specified with @option{--manifest}; otherwise it only considers the specified packages.  It is also possible to query specific system types with @option{--system}.  @command{guix weather} exits with a non-zero code when the fraction of available substitutes is below 100%."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17168
msgid "@var{urls} is the space-separated list of substitute server URLs to query.  When this option is omitted, the URLs specified with the @option{--substitute-urls} option of @command{guix-daemon} are used or, as a last resort, the default set of substitute URLs."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17174
msgid "Query substitutes for @var{system}---e.g., @code{aarch64-linux}.  This option can be repeated, in which case @command{guix weather} will query substitutes for several system types."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17180
msgid "Instead of querying substitutes for all the packages, only ask for those specified in @var{file}.  @var{file} must contain a @dfn{manifest}, as with the @code{-m} option of @command{guix package} (@pxref{Invoking guix package})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17183
msgid "This option can be repeated several times, in which case the manifests are concatenated."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17191
msgid "A typical use case for this option is specifying a package that is hidden and thus cannot be referred to in the usual way, as in this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17194
#, no-wrap
msgid "guix weather -e '(@@@@ (gnu packages rust) rust-bootstrap)'\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17197
msgid "This option can be repeated."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:17198
#, no-wrap
msgid "--coverage[=@var{count}]"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:17199
#, no-wrap
msgid "-c [@var{count}]"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17205
msgid "Report on substitute coverage for packages: list packages with at least @var{count} dependents (zero by default) for which substitutes are unavailable.  Dependent packages themselves are not listed: if @var{b} depends on @var{a} and @var{a} has no substitutes, only @var{a} is listed, even though @var{b} usually lacks substitutes as well.  The result looks like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17219
#, no-wrap
msgid ""
"$ guix weather --substitute-urls=@value{SUBSTITUTE-URLS} -c 10\n"
"computing 8,983 package derivations for x86_64-linux...\n"
"looking for 9,343 store items on @value{SUBSTITUTE-URLS}...\n"
"updating substitutes from '@value{SUBSTITUTE-URLS}'... 100.0%\n"
"@value{SUBSTITUTE-URLS}\n"
"  64.7% substitutes available (6,047 out of 9,343)\n"
"@dots{}\n"
"2502 packages are missing from '@value{SUBSTITUTE-URLS}' for 'x86_64-linux', among which:\n"
"    58  kcoreaddons@@5.49.0      /gnu/store/@dots{}-kcoreaddons-5.49.0\n"
"    46  qgpgme@@1.11.1           /gnu/store/@dots{}-qgpgme-1.11.1\n"
"    37  perl-http-cookiejar@@0.008  /gnu/store/@dots{}-perl-http-cookiejar-0.008\n"
"    @dots{}\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17225
msgid "What this example shows is that @code{kcoreaddons} and presumably the 58 packages that depend on it have no substitutes at @code{@value{SUBSTITUTE-SERVER-1}}; likewise for @code{qgpgme} and the 46 packages that depend on it."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17229
msgid "If you are a Guix developer, or if you are taking care of this build farm, you'll probably want to have a closer look at these packages: they may simply fail to build."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:17230
#, no-wrap
msgid "--display-missing"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17232
msgid "Display the list of store items for which substitutes are missing."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:17235
#, no-wrap
msgid "Invoking @command{guix processes}"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:17237
#, no-wrap
msgid "guix processes"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17244
msgid "The @command{guix processes} command can be useful to developers and system administrators, especially on multi-user machines and on build farms: it lists the current sessions (connections to the daemon), as well as information about the processes involved@footnote{Remote sessions, when @command{guix-daemon} is started with @option{--listen} specifying a TCP endpoint, are @emph{not} listed.}.  Here's an example of the information it returns:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17250
#, no-wrap
msgid ""
"$ sudo guix processes\n"
"SessionPID: 19002\n"
"ClientPID: 19090\n"
"ClientCommand: guix shell python\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17254
#, no-wrap
msgid ""
"SessionPID: 19402\n"
"ClientPID: 19367\n"
"ClientCommand: guix publish -u guix-publish -p 3000 -C 9 @dots{}\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17267
#, no-wrap
msgid ""
"SessionPID: 19444\n"
"ClientPID: 19419\n"
"ClientCommand: cuirass --cache-directory /var/cache/cuirass @dots{}\n"
"LockHeld: /gnu/store/@dots{}-perl-ipc-cmd-0.96.lock\n"
"LockHeld: /gnu/store/@dots{}-python-six-bootstrap-1.11.0.lock\n"
"LockHeld: /gnu/store/@dots{}-libjpeg-turbo-2.0.0.lock\n"
"ChildPID: 20495\n"
"ChildCommand: guix offload x86_64-linux 7200 1 28800\n"
"ChildPID: 27733\n"
"ChildCommand: guix offload x86_64-linux 7200 1 28800\n"
"ChildPID: 27793\n"
"ChildCommand: guix offload x86_64-linux 7200 1 28800\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17274
msgid "In this example we see that @command{guix-daemon} has three clients: @command{guix shell}, @command{guix publish}, and the Cuirass continuous integration tool; their process identifier (PID) is given by the @code{ClientPID} field.  The @code{SessionPID} field gives the PID of the @command{guix-daemon} sub-process of this particular session."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17281
msgid "The @code{LockHeld} fields show which store items are currently locked by this session, which corresponds to store items being built or substituted (the @code{LockHeld} field is not displayed when @command{guix processes} is not running as root).  Last, by looking at the @code{ChildPID} and @code{ChildCommand} fields, we understand that these three builds are being offloaded (@pxref{Daemon Offload Setup})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17286
msgid "The output is in Recutils format so we can use the handy @command{recsel} command to select sessions of interest (@pxref{Selection Expressions,,, recutils, GNU recutils manual}).  As an example, the command shows the command line and PID of the client that triggered the build of a Perl package:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17292
#, no-wrap
msgid ""
"$ sudo guix processes | \\\n"
"    recsel -p ClientPID,ClientCommand -e 'LockHeld ~ \"perl\"'\n"
"ClientPID: 19419\n"
"ClientCommand: cuirass --cache-directory /var/cache/cuirass @dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17295
msgid "Additional options are listed below."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17305
msgid "The default option.  It outputs a set of Session recutils records that include each @code{ChildProcess} as a field."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:17306
#, no-wrap
msgid "normalized"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17313
msgid "Normalize the output records into record sets (@pxref{Record Sets,,, recutils, GNU recutils manual}).  Normalizing into record sets allows joins across record types.  The example below lists the PID of each @code{ChildProcess} and the associated PID for @code{Session} that spawned the @code{ChildProcess} where the @code{Session} was started using @command{guix build}."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17323
#, no-wrap
msgid ""
"$ guix processes --format=normalized | \\\n"
"    recsel \\\n"
"    -j Session \\\n"
"    -t ChildProcess \\\n"
"    -p Session.PID,PID \\\n"
"    -e 'Session.ClientCommand ~ \"guix build\"'\n"
"PID: 4435\n"
"Session_PID: 4278\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17326
#, no-wrap
msgid ""
"PID: 4554\n"
"Session_PID: 4278\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17329
#, no-wrap
msgid ""
"PID: 4646\n"
"Session_PID: 4278\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17339
msgid "You can target computers of different CPU architectures when producing packages (@pxref{Invoking guix package}), packs (@pxref{Invoking guix pack}) or full systems (@pxref{Invoking guix system})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17342
msgid "GNU Guix supports two distinct mechanisms to target foreign architectures:"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:17348
msgid "The traditional @uref{https://en.wikipedia.org/wiki/Cross_compiler,cross-compilation} mechanism."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:17352
msgid "The native building mechanism which consists in building using the CPU instruction set of the foreign system you are targeting.  It often requires emulation, using the QEMU program for instance."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17362
#, no-wrap
msgid "foreign architectures"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17365
msgid "The commands supporting cross-compilation are proposing the @option{--list-targets} and @option{--target} options."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17368
msgid "The @option{--list-targets} option lists all the supported targets that can be passed as an argument to @option{--target}."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17372
#, no-wrap
msgid ""
"$ guix build --list-targets\n"
"The available targets are:\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17389
#, no-wrap
msgid ""
"   - aarch64-linux-gnu\n"
"   - arm-linux-gnueabihf\n"
"   - avr\n"
"   - i586-pc-gnu\n"
"   - i686-linux-gnu\n"
"   - i686-w64-mingw32\n"
"   - loongarch64-linux-gnu\n"
"   - mips64el-linux-gnu\n"
"   - or1k-elf\n"
"   - powerpc-linux-gnu\n"
"   - powerpc64le-linux-gnu\n"
"   - riscv64-linux-gnu\n"
"   - x86_64-linux-gnu\n"
"   - x86_64-linux-gnux32\n"
"   - x86_64-w64-mingw32\n"
"   - xtensa-ath9k-elf\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17393
msgid "Targets are specified as GNU triplets (@pxref{Specifying Target Triplets, GNU configuration triplets,, autoconf, Autoconf})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17397
msgid "Those triplets are passed to GCC and the other underlying compilers possibly involved when building a package, a system image or any other GNU Guix output."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17401
#, no-wrap
msgid ""
"$ guix build --target=aarch64-linux-gnu hello\n"
"/gnu/store/9926by9qrxa91ijkhw9ndgwp4bn24g9h-hello-2.12\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17405
#, no-wrap
msgid ""
"$ file /gnu/store/9926by9qrxa91ijkhw9ndgwp4bn24g9h-hello-2.12/bin/hello\n"
"/gnu/store/9926by9qrxa91ijkhw9ndgwp4bn24g9h-hello-2.12/bin/hello: ELF\n"
"64-bit LSB executable, ARM aarch64 @dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17411
msgid "The major benefit of cross-compilation is that there are no performance penalty compared to emulation using QEMU.  There are however higher risks that some packages fail to cross-compile because fewer users are using this mechanism extensively."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17417
msgid "The commands that support impersonating a specific system have the @option{--list-systems} and @option{--system} options."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17420
msgid "The @option{--list-systems} option lists all the supported systems that can be passed as an argument to @option{--system}."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17424
#, no-wrap
msgid ""
"$ guix build --list-systems\n"
"The available systems are:\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17434
#, no-wrap
msgid ""
"   - x86_64-linux [current]\n"
"   - aarch64-linux\n"
"   - armhf-linux\n"
"   - i586-gnu\n"
"   - i686-linux\n"
"   - mips64el-linux\n"
"   - powerpc-linux\n"
"   - powerpc64le-linux\n"
"   - riscv64-linux\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17437
#, no-wrap
msgid ""
"$ guix build --system=i686-linux hello\n"
"/gnu/store/cc0km35s8x2z4pmwkrqqjx46i8b1i3gm-hello-2.12\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17441
#, no-wrap
msgid ""
"$ file /gnu/store/cc0km35s8x2z4pmwkrqqjx46i8b1i3gm-hello-2.12/bin/hello\n"
"/gnu/store/cc0km35s8x2z4pmwkrqqjx46i8b1i3gm-hello-2.12/bin/hello: ELF\n"
"32-bit LSB executable, Intel 80386 @dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17445
msgid "In the above example, the current system is @var{x86_64-linux}.  The @var{hello} package is however built for the @var{i686-linux} system."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17449
msgid "This is possible because the @var{i686} CPU instruction set is a subset of the @var{x86_64}, hence @var{i686} targeting binaries can be run on @var{x86_64}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17454
msgid "Still in the context of the previous example, if picking the @var{aarch64-linux} system and the @command{guix build --system=aarch64-linux hello} has to build some derivations, an extra step might be needed."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17462
msgid "The @var{aarch64-linux} targeting binaries cannot directly be run on a @var{x86_64-linux} system.  An emulation layer is requested.  The GNU Guix daemon can take advantage of the Linux kernel @uref{https://en.wikipedia.org/wiki/Binfmt_misc,binfmt_misc} mechanism for that.  In short, the Linux kernel can defer the execution of a binary targeting a foreign platform, here @var{aarch64-linux}, to a userspace program, usually an emulator."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17468
msgid "There is a service that registers QEMU as a backend for the @code{binfmt_misc} mechanism (@pxref{Virtualization Services, @code{qemu-binfmt-service-type}}).  On Debian based foreign distributions, the alternative would be the @code{qemu-user-static} package."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17471
msgid "If the @code{binfmt_misc} mechanism is not setup correctly, the building will fail this way:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17479
#, no-wrap
msgid ""
"$ guix build --system=armhf-linux hello --check\n"
"@dots{}\n"
"@ unsupported-platform /gnu/store/jjn969pijv7hff62025yxpfmc8zy0aq0-hello-2.12.drv aarch64-linux\n"
"while setting up the build environment: a `aarch64-linux' is required to\n"
"build `/gnu/store/jjn969pijv7hff62025yxpfmc8zy0aq0-hello-2.12.drv', but\n"
"I am a `x86_64-linux'@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17483
msgid "whereas, with the @code{binfmt_misc} mechanism correctly linked with QEMU, one can expect to see:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17487
#, no-wrap
msgid ""
"$ guix build --system=armhf-linux hello --check\n"
"/gnu/store/13xz4nghg39wpymivlwghy08yzj97hlj-hello-2.12\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17493
msgid "The main advantage of native building compared to cross-compiling, is that more packages are likely to build correctly.  However it comes at a price: compilation backed by QEMU is @emph{way slower} than cross-compilation, because every instruction needs to be emulated."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17499
msgid "The availability of substitutes for the architecture targeted by the @code{--system} option can mitigate this problem.  An other way to work around it is to install GNU Guix on a machine whose CPU supports the targeted instruction set, and set it up as an offload machine (@pxref{Daemon Offload Setup})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17503
#, no-wrap
msgid "system configuration"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17509
msgid "Guix System supports a consistent whole-system configuration mechanism.  By that we mean that all aspects of the global system configuration---such as the available system services, timezone and locale settings, user accounts---are declared in a single place.  Such a @dfn{system configuration} can be @dfn{instantiated}---i.e., effected."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17519
msgid "One of the advantages of putting all the system configuration under the control of Guix is that it supports transactional system upgrades, and makes it possible to roll back to a previous system instantiation, should something go wrong with the new one (@pxref{Features}).  Another advantage is that it makes it easy to replicate the exact same configuration across different machines, or at different points in time, without having to resort to additional administration tools layered on top of the own tools of the system."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17524
msgid "This section describes this mechanism.  First we focus on the system administrator's viewpoint---explaining how the system is configured and instantiated.  Then we show how this mechanism can be extended, for instance to support new system services."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17550
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "system configuration file"
msgstr "Documentazione"

#. type: cindex
#: guix-git/doc/guix.texi:17551
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "configuration file, of the system"
msgstr "Documentazione"

#. type: Plain text
#: guix-git/doc/guix.texi:17561
msgid "You're reading this section probably because you have just installed Guix System (@pxref{System Installation}) and would like to know where to go from here.  If you're already familiar with GNU/Linux system administration, the way Guix System is configured is very different from what you're used to: you won't install a system service by running @command{guix install}, you won't configure services by modifying files under @file{/etc}, and you won't create user accounts by invoking @command{useradd}; instead, all these aspects are spelled out in a @dfn{system configuration file}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17565
msgid "The first step with Guix System is thus to write the @dfn{system configuration file}; luckily, system installation already generated one for you and stored it under @file{/etc/config.scm}."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:17571
msgid "You can store your system configuration file anywhere you like---it doesn't have to be at @file{/etc/config.scm}.  It's a good idea to keep it under version control, for instance in a @uref{https://git-scm.com/book/en/, Git repository}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17576
msgid "The @emph{entire} configuration of the system---user accounts, system services, timezone, locale settings---is declared in this file, which follows this template:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:17581
#, no-wrap
msgid ""
"(use-modules (gnu))\n"
"(use-package-modules @dots{})\n"
"(use-service-modules @dots{})\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:17591
#, no-wrap
msgid ""
"(operating-system\n"
"  (host-name @dots{})\n"
"  (timezone @dots{})\n"
"  (locale @dots{})\n"
"  (bootloader @dots{})\n"
"  (file-systems @dots{})\n"
"  (users @dots{})\n"
"  (packages @dots{})\n"
"  (services @dots{}))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17599
msgid "This configuration file is in fact a Scheme program; the first lines pull in modules providing variables you might need in the rest of the file---e.g., packages, services, etc.  The @code{operating-system} form declares the system configuration as a @dfn{record} with a number of @dfn{fields}.  @xref{Using the Configuration System}, to view complete examples and learn what to put in there."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17604
msgid "The second step, once you have this configuration file, is to test it.  Of course, you can skip this step if you're feeling lucky---you choose! To do that, pass your configuration file to @command{guix system vm} (no need to be root, you can do that as a regular user):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17607
#, no-wrap
msgid "guix system vm /etc/config.scm\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17613
msgid "This command returns the name of a shell script that starts a virtual machine (VM) running the system @emph{as described in the configuration file}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17616
#, no-wrap
msgid "/gnu/store/@dots{}-run-vm.sh\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17623
msgid "In this VM, you can log in as @code{root} with no password.  That's a good way to check that your configuration file is correct and that it gives the expected result, without touching your system.  @xref{Invoking guix system}, for more information."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:17631
msgid "When using @command{guix system vm}, aspects tied to your hardware such as file systems and mapped devices are overridden because they cannot be meaningfully tested in the VM@.  Other aspects such as static network configuration (@pxref{Networking Setup, @code{static-networking-service-type}}) are @emph{not} overridden but they may not work inside the VM@."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17633 guix-git/doc/guix.texi:18043
#, no-wrap
msgid "system instantiation"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17634 guix-git/doc/guix.texi:18044
#, no-wrap
msgid "reconfiguring the system"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17638
msgid "The third step, once you're happy with your configuration, is to @dfn{instantiate} it---make this configuration effective on your system.  To do that, run:"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17643
#, no-wrap
msgid "upgrading system services"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17644
#, no-wrap
msgid "system services, upgrading"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17652
msgid "This operation is @dfn{transactional}: either it succeeds and you end up with an upgraded system, or it fails and nothing has changed.  Note that it does @emph{not} restart system services that were already running.  Thus, to upgrade those services, you have to reboot or to explicitly restart them; for example, to restart the secure shell (SSH) daemon, you would run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17655
#, no-wrap
msgid "sudo herd restart sshd\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:17661
msgid "System services are managed by the Shepherd (@pxref{Jump Start,,, shepherd, The GNU Shepherd Manual}).  The @code{herd} command lets you inspect, start, and stop services.  To view the status of services, run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17664
#, no-wrap
msgid "sudo herd status\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:17668
msgid "To view detailed information about a given service, add its name to the command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17671
#, no-wrap
msgid "sudo herd status sshd\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:17674
#, fuzzy
#| msgid "Services for managing mail."
msgid "@xref{Services}, for more information."
msgstr "Servizi per gestire la posta."

#. type: cindex
#: guix-git/doc/guix.texi:17676
#, no-wrap
msgid "provenance, of the system"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17679
msgid "The system records its @dfn{provenance}---the configuration file and channels that were used to deploy it.  You can view it like so:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17682 guix-git/doc/guix.texi:47158
#, no-wrap
msgid "guix system describe\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17686
msgid "Additionally, @command{guix system reconfigure} preserves previous system generations, which you can list:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17689
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "guix system list-generations\n"
msgstr "Documentazione"

#. type: cindex
#: guix-git/doc/guix.texi:17692
#, no-wrap
msgid "roll back, for the system"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17699
msgid "Crucially, that means that you can always @emph{roll back} to an earlier generation should something go wrong! When you eventually reboot, you'll notice a sub-menu in the bootloader that reads ``Old system generations'': it's what allows you to boot @emph{an older generation of your system}, should the latest generation be ``broken'' or otherwise unsatisfying.  You can also ``permanently'' roll back, like so:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17702
#, no-wrap
msgid "sudo guix system roll-back\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17707
msgid "Alternatively, you can use @command{guix system switch-generation} to switch to a specific generation."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17712
msgid "Once in a while, you'll want to delete old generations that you do not need anymore to allow @dfn{garbage collection} to free space (@pxref{Invoking guix gc}).  For example, to remove generations older than 4 months, run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17715
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "sudo guix system delete-generations 4m\n"
msgstr "Documentazione"

#. type: Plain text
#: guix-git/doc/guix.texi:17721
msgid "From there on, anytime you want to change something in the system configuration, be it adding a user account or changing parameters of a service, you will first update your configuration file and then run @command{guix system reconfigure} as shown above."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17721
#, no-wrap
msgid "upgrade, of the system"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17724
msgid "Likewise, to @emph{upgrade} system software, you first fetch an up-to-date Guix and then reconfigure your system with that new Guix:"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17733
msgid "We recommend doing that regularly so that your system includes the latest security updates (@pxref{Security Updates})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17736
#, no-wrap
msgid "sudo vs. @command{guix pull}"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:17739
msgid "@command{sudo guix} runs your user's @command{guix} command and @emph{not} root's, because @command{sudo} leaves @env{PATH} unchanged."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:17744
msgid "The difference matters here, because @command{guix pull} updates the @command{guix} command and package definitions only for the user it is run as.  This means that if you choose to use @command{guix system reconfigure} in root's login shell, you'll need to @command{guix pull} separately."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17749
msgid "That's it! If you're getting started with Guix entirely, @pxref{Getting Started}.  The next sections dive in more detail into the crux of the matter: system configuration."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17757
msgid "The previous section showed the overall workflow you would follow when administering a Guix System machine (@pxref{Getting Started with the System}).  Let's now see in more detail what goes into the system configuration file."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17764
msgid "The operating system is configured by providing an @code{operating-system} declaration in a file that can then be passed to the @command{guix system} command (@pxref{Invoking guix system}), as we've seen before.  A simple setup, with the default Linux-Libre kernel, initial RAM disk, and a couple of system services added to those provided by default looks like this:"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:17765 guix-git/doc/guix.texi:47865
#: guix-git/doc/guix.texi:53748
#, no-wrap
msgid "operating-system"
msgstr ""

#. type: include
#: guix-git/doc/guix.texi:17767
#, no-wrap
msgid "os-config-bare-bones.texi"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17779
msgid "The configuration is declarative.  It is code in the Scheme programming language; the whole @code{(operating-system @dots{})} expression produces a @dfn{record} with a number of @dfn{fields}.  Some of the fields defined above, such as @code{host-name} and @code{bootloader}, are mandatory.  Others, such as @code{packages} and @code{services}, can be omitted, in which case they get a default value.  @xref{operating-system Reference}, for details about all the available fields."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17781
msgid "Below we discuss the meaning of some of the most important fields."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:17786
msgid "The configuration file is a Scheme program and you might get the syntax or semantics wrong as you get started.  Syntactic issues such as misplaced parentheses can often be identified by reformatting your file:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17789
#, no-wrap
msgid "guix style -f config.scm\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:17795
msgid "The Cookbook has a short section to get started with the Scheme programming language that explains the fundamentals, which you will find helpful when hacking your configuration.  @xref{A Scheme Crash Course,,, guix-cookbook, GNU Guix Cookbook}."
msgstr ""

#. type: unnumberedsubsec
#: guix-git/doc/guix.texi:17797
#, no-wrap
msgid "Bootloader"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17799
#, no-wrap
msgid "legacy boot, on Intel machines"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17800
#, no-wrap
msgid "BIOS boot, on Intel machines"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17801
#, no-wrap
msgid "UEFI boot"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17802
#, no-wrap
msgid "EFI boot"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17808
msgid "The @code{bootloader} field describes the method that will be used to boot your system.  Machines based on Intel processors can boot in ``legacy'' BIOS mode, as in the example above.  However, more recent machines rely instead on the @dfn{Unified Extensible Firmware Interface} (UEFI) to boot.  In that case, the @code{bootloader} field should contain something along these lines:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:17813
#, no-wrap
msgid ""
"(bootloader-configuration\n"
"  (bootloader grub-efi-bootloader)\n"
"  (targets '(\"/boot/efi\")))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17817
msgid "@xref{Bootloader Configuration}, for more information on the available configuration options."
msgstr ""

#. type: unnumberedsubsec
#: guix-git/doc/guix.texi:17818
#, no-wrap
msgid "Globally-Visible Packages"
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:17820
#, no-wrap
msgid "%base-packages"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17833
msgid "The @code{packages} field lists packages that will be globally visible on the system, for all user accounts---i.e., in every user's @env{PATH} environment variable---in addition to the per-user profiles (@pxref{Invoking guix package}).  The @code{%base-packages} variable provides all the tools one would expect for basic user and administrator tasks---including the GNU Core Utilities, the GNU Networking Utilities, the @command{mg} lightweight text editor, @command{find}, @command{grep}, etc.  The example above adds GNU@tie{}Screen to those, taken from the @code{(gnu packages screen)} module (@pxref{Package Modules}).  The @code{(list package output)} syntax can be used to add a specific output of a package:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:17837
#, no-wrap
msgid ""
"(use-modules (gnu packages))\n"
"(use-modules (gnu packages dns))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:17842
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; ...\n"
"  (packages (cons (list isc-bind \"utils\")\n"
"                  %base-packages)))\n"
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:17844
#, no-wrap
msgid "specification->package"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17853
msgid "Referring to packages by variable name, like @code{isc-bind} above, has the advantage of being unambiguous; it also allows typos and such to be diagnosed right away as ``unbound variables''.  The downside is that one needs to know which module defines which package, and to augment the @code{use-package-modules} line accordingly.  To avoid that, one can use the @code{specification->package} procedure of the @code{(gnu packages)} module, which returns the best package for a given name or name and version:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:17856 guix-git/doc/guix.texi:17872
#, no-wrap
msgid ""
"(use-modules (gnu packages))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:17862
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; ...\n"
"  (packages (append (map specification->package\n"
"                         '(\"tcpdump\" \"htop\" \"gnupg@@2.0\"))\n"
"                    %base-packages)))\n"
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:17864
#, no-wrap
msgid "specifications->packages"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17869
msgid "When a package has more than one output it can be a challenge to refer to a specific output instead of just to the standard @code{out} output.  For these situations one can use the @code{specifications->packages} procedure from the @code{(gnu packages)} module.  For example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:17878
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; ...\n"
"  (packages (append (specifications->packages\n"
"                      '(\"git\" \"git:send-email\"))\n"
"                    %base-packages)))\n"
"\n"
msgstr ""

#. type: unnumberedsubsec
#: guix-git/doc/guix.texi:17881
#, no-wrap
msgid "System Services"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17883 guix-git/doc/guix.texi:46354
#: guix-git/doc/guix.texi:48248
#, no-wrap
msgid "services"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:17884 guix-git/doc/guix.texi:19653
#, no-wrap
msgid "%base-services"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17894
msgid "The @code{services} field lists @dfn{system services} to be made available when the system starts (@pxref{Services}).  The @code{operating-system} declaration above specifies that, in addition to the basic services, we want the OpenSSH secure shell daemon listening on port 2222 (@pxref{Networking Services, @code{openssh-service-type}}).  Under the hood, @code{openssh-service-type} arranges so that @command{sshd} is started with the right command-line options, possibly with supporting configuration files generated as needed (@pxref{Defining Services})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17895
#, no-wrap
msgid "customization, of services"
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:17896
#, no-wrap
msgid "modify-services"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17900
msgid "Occasionally, instead of using the base services as is, you will want to customize them.  To do this, use @code{modify-services} (@pxref{Service Reference, @code{modify-services}}) to modify the list."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:17906
msgid "auto-login to TTY"
msgstr "auto-login to TTY"

#. type: Plain text
#: guix-git/doc/guix.texi:17906
msgid "For example, suppose you want to modify @code{guix-daemon} and Mingetty (the console log-in) in the @code{%base-services} list (@pxref{Base Services, @code{%base-services}}).  To do that, you can write the following in your operating system declaration:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:17923
#, no-wrap
msgid ""
"(define %my-services\n"
"  ;; My very own list of services.\n"
"  (modify-services %base-services\n"
"    (guix-service-type config =>\n"
"                       (guix-configuration\n"
"                        (inherit config)\n"
"                        ;; Fetch substitutes from example.org.\n"
"                        (substitute-urls\n"
"                          (list \"https://example.org/guix\"\n"
"                                \"https://ci.guix.gnu.org\"))))\n"
"    (mingetty-service-type config =>\n"
"                           (mingetty-configuration\n"
"                            (inherit config)\n"
"                            ;; Automatically log in as \"guest\".\n"
"                            (auto-login \"guest\")))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:17927
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services %my-services))\n"
msgstr ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services %my-services))\n"

#. type: Plain text
#: guix-git/doc/guix.texi:17940
msgid "This changes the configuration---i.e., the service parameters---of the @code{guix-service-type} instance, and that of all the @code{mingetty-service-type} instances in the @code{%base-services} list (@pxref{Auto-Login to a Specific TTY, see the cookbook for how to auto-login one user to a specific TTY,, guix-cookbook, GNU Guix Cookbook})).  Observe how this is accomplished: first, we arrange for the original configuration to be bound to the identifier @code{config} in the @var{body}, and then we write the @var{body} so that it evaluates to the desired configuration.  In particular, notice how we use @code{inherit} to create a new configuration which has the same values as the old configuration, but with a few modifications."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17947
msgid "The configuration for a typical ``desktop'' usage, with an encrypted root partition, a swap file on the root partition, the X11 display server, GNOME and Xfce (users can choose which of these desktop environments to use at the log-in screen by pressing @kbd{F1}), network management, power management, and more, would look like this:"
msgstr ""

#. type: include
#: guix-git/doc/guix.texi:17949
#, no-wrap
msgid "os-config-desktop.texi"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17954
msgid "A graphical system with a choice of lightweight window managers instead of full-blown desktop environments would look like this:"
msgstr ""

#. type: include
#: guix-git/doc/guix.texi:17956
#, no-wrap
msgid "os-config-lightweight-desktop.texi"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17962
msgid "This example refers to the @file{/boot/efi} file system by its UUID, @code{1234-ABCD}.  Replace this UUID with the right UUID on your system, as returned by the @command{blkid} command."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17965
msgid "@xref{Desktop Services}, for the exact list of services provided by @code{%desktop-services}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17972
msgid "Again, @code{%desktop-services} is just a list of service objects.  If you want to remove services from there, you can do so using the procedures for list filtering (@pxref{SRFI-1 Filtering and Partitioning,,, guile, GNU Guile Reference Manual}).  For instance, the following expression returns a list that contains all the services in @code{%desktop-services} minus the Avahi service:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:17977
#, no-wrap
msgid ""
"(remove (lambda (service)\n"
"          (eq? (service-kind service) avahi-service-type))\n"
"        %desktop-services)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17980
msgid "Alternatively, the @code{modify-services} macro can be used:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:17984
#, no-wrap
msgid ""
"(modify-services %desktop-services\n"
"  (delete avahi-service-type))\n"
msgstr ""

#. type: unnumberedsubsec
#: guix-git/doc/guix.texi:17986
#, fuzzy, no-wrap
#| msgid "Networking services."
msgid "Inspecting Services"
msgstr "Servizi di rete."

#. type: cindex
#: guix-git/doc/guix.texi:17988
#, no-wrap
msgid "troubleshooting, for system services"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17989
#, fuzzy, no-wrap
#| msgid "Networking services."
msgid "inspecting system services"
msgstr "Servizi di rete."

#. type: cindex
#: guix-git/doc/guix.texi:17990
#, no-wrap
msgid "system services, inspecting"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17994
msgid "As you work on your system configuration, you might wonder why some system service doesn't show up or why the system is not as you expected.  There are several ways to inspect and troubleshoot problems."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17995
#, no-wrap
msgid "dependency graph, of Shepherd services"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17998
msgid "First, you can inspect the dependency graph of Shepherd services like so:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:18002
#, no-wrap
msgid ""
"guix system shepherd-graph /etc/config.scm | \\\n"
"  guix shell xdot -- xdot -\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18009
msgid "This lets you visualize the Shepherd services as defined in @file{/etc/config.scm}.  Each box is a service as would be shown by @command{sudo herd status} on the running system, and each arrow denotes a dependency (in the sense that if service @var{A} depends on @var{B}, then @var{B} must be started before @var{A})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18010
#, no-wrap
msgid "extension graph, of services"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18014
msgid "Not all ``services'' are Shepherd services though, since Guix System uses a broader definition of the term (@pxref{Services}).  To visualize system services and their relations at a higher level, run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:18018
#, no-wrap
msgid ""
"guix system extension-graph /etc/config.scm | \\\n"
"  guix shell xdot -- xdot -\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18024
msgid "This lets you view the @dfn{service extension graph}: how services ``extend'' each other, for instance by contributing to their configuration.  @xref{Service Composition}, to understand the meaning of this graph."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18028
msgid "Last, you may also find it useful to inspect your system configuration at the REPL (@pxref{Using Guix Interactively}).  Here is an example session:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:18036
#, no-wrap
msgid ""
"$ guix repl\n"
"scheme@@(guix-user)> ,use (gnu)\n"
"scheme@@(guix-user)> (define os (load \"config.scm\"))\n"
"scheme@@(guix-user)> ,pp (map service-kind (operating-system-services os))\n"
"$1 = (#<service-type localed cabba93>\n"
"      @dots{})\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18040
msgid "@xref{Service Reference}, to learn about the Scheme interface to manipulate and inspect services."
msgstr ""

#. type: unnumberedsubsec
#: guix-git/doc/guix.texi:18041
#, no-wrap
msgid "Instantiating the System"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18050
msgid "Assuming the @code{operating-system} declaration is stored in the @file{config.scm} file, the @command{sudo guix system reconfigure config.scm} command instantiates that configuration, and makes it the default boot entry.  @xref{Getting Started with the System}, for an overview."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18058
msgid "The normal way to change the system configuration is by updating this file and re-running @command{guix system reconfigure}.  One should never have to touch files in @file{/etc} or to run commands that modify the system state such as @command{useradd} or @command{grub-install}.  In fact, you must avoid that since that would not only void your warranty but also prevent you from rolling back to previous versions of your system, should you ever need to."
msgstr ""

#. type: unnumberedsubsec
#: guix-git/doc/guix.texi:18059
#, no-wrap
msgid "The Programming Interface"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18064
msgid "At the Scheme level, the bulk of an @code{operating-system} declaration is instantiated with the following monadic procedure (@pxref{The Store Monad}):"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:18065
#, no-wrap
msgid "{Monadic Procedure} operating-system-derivation os"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:18068
msgid "Return a derivation that builds @var{os}, an @code{operating-system} object (@pxref{Derivations})."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:18072
msgid "The output of the derivation is a single directory that refers to all the packages, configuration files, and other supporting files needed to instantiate @var{os}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18077
msgid "This procedure is provided by the @code{(gnu system)} module.  Along with @code{(gnu services)} (@pxref{Services}), this module contains the guts of Guix System.  Make sure to visit it!"
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:18080
#, no-wrap
msgid "@code{operating-system} Reference"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18085
msgid "This section summarizes all the options available in @code{operating-system} declarations (@pxref{Using the Configuration System})."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:18086
#, no-wrap
msgid "{Data Type} operating-system"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:18090
msgid "This is the data type representing an operating system configuration.  By that, we mean all the global system configuration, not per-user configuration (@pxref{Using the Configuration System})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18092
#, no-wrap
msgid "@code{kernel} (default: @code{linux-libre})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18098
msgid "The package object of the operating system kernel to use@footnote{Currently only the Linux-libre kernel is fully supported.  Using GNU@tie{}mach with the GNU@tie{}Hurd is experimental and only available when building a virtual machine disk image.}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:18099 guix-git/doc/guix.texi:40451
#, no-wrap
msgid "hurd"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18100
#, no-wrap
msgid "@code{hurd} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18105
msgid "The package object of the Hurd to be started by the kernel.  When this field is set, produce a GNU/Hurd operating system.  In that case, @code{kernel} must also be set to the @code{gnumach} package---the microkernel the Hurd runs on."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:18108
msgid "This feature is experimental and only supported for disk images."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18110
#, no-wrap
msgid "@code{kernel-loadable-modules} (default: '())"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18113
msgid "A list of objects (usually packages) to collect loadable kernel modules from--e.g. @code{(list ddcci-driver-linux)}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18114
#, no-wrap
msgid "@code{kernel-arguments} (default: @code{%default-kernel-arguments})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18117
msgid "List of strings or gexps representing additional arguments to pass on the command-line of the kernel---e.g., @code{(\"console=ttyS0\")}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:18118 guix-git/doc/guix.texi:46598
#: guix-git/doc/guix.texi:46617
#, no-wrap
msgid "bootloader"
msgstr "bootloader"

#. type: table
#: guix-git/doc/guix.texi:18120
msgid "The system bootloader configuration object.  @xref{Bootloader Configuration}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:18121 guix-git/doc/guix.texi:23776
#: guix-git/doc/guix.texi:46889 guix-git/doc/guix.texi:53833
#, no-wrap
msgid "label"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18124
msgid "This is the label (a string) as it appears in the bootloader's menu entry.  The default label includes the kernel name and version."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18125 guix-git/doc/guix.texi:20124
#: guix-git/doc/guix.texi:25388 guix-git/doc/guix.texi:46761
#, no-wrap
msgid "@code{keyboard-layout} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18130
msgid "This field specifies the keyboard layout to use in the console.  It can be either @code{#f}, in which case the default keyboard layout is used (usually US English), or a @code{<keyboard-layout>} record. @xref{Keyboard Layout}, for more information."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18135
msgid "This keyboard layout is in effect as soon as the kernel has booted.  For instance, it is the keyboard layout in effect when you type a passphrase if your root file system is on a @code{luks-device-mapping} mapped device (@pxref{Mapped Devices})."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:18142
msgid "This does @emph{not} specify the keyboard layout used by the bootloader, nor that used by the graphical display server.  @xref{Bootloader Configuration}, for information on how to specify the bootloader's keyboard layout.  @xref{X Window}, for information on how to specify the keyboard layout used by the X Window System."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18144
#, no-wrap
msgid "@code{initrd-modules} (default: @code{%base-initrd-modules})"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18145 guix-git/doc/guix.texi:46391
#: guix-git/doc/guix.texi:46524
#, no-wrap
msgid "initrd"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18146 guix-git/doc/guix.texi:46392
#: guix-git/doc/guix.texi:46525
#, no-wrap
msgid "initial RAM disk"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18149
msgid "The list of Linux kernel modules that need to be available in the initial RAM disk.  @xref{Initial RAM Disk}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18150
#, no-wrap
msgid "@code{initrd} (default: @code{base-initrd})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18154
msgid "A procedure that returns an initial RAM disk for the Linux kernel.  This field is provided to support low-level customization and should rarely be needed for casual use.  @xref{Initial RAM Disk}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18155
#, no-wrap
msgid "@code{firmware} (default: @code{%base-firmware})"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18156
#, no-wrap
msgid "firmware"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18158
msgid "List of firmware packages loadable by the operating system kernel."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18163
msgid "The default includes firmware needed for Atheros- and Broadcom-based WiFi devices (Linux-libre modules @code{ath9k} and @code{b43-open}, respectively).  @xref{Hardware Considerations}, for more info on supported hardware."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:18164 guix-git/doc/guix.texi:47884
#, no-wrap
msgid "host-name"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18166
msgid "The host name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18167
#, no-wrap
msgid "@code{mapped-devices} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18169
msgid "A list of mapped devices.  @xref{Mapped Devices}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:18170
#, no-wrap
msgid "file-systems"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18172
msgid "A list of file systems.  @xref{File Systems}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18173
#, no-wrap
msgid "@code{swap-devices} (default: @code{'()})"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18174
#, no-wrap
msgid "swap devices"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18176
msgid "A list of swap spaces.  @xref{Swap Space}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18177
#, no-wrap
msgid "@code{users} (default: @code{%base-user-accounts})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:18178
#, no-wrap
msgid "@code{groups} (default: @code{%base-groups})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18180
msgid "List of user accounts and groups.  @xref{User Accounts}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18183
msgid "If the @code{users} list lacks a user account with UID@tie{}0, a ``root'' account with UID@tie{}0 is automatically added."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18184
#, no-wrap
msgid "@code{skeletons} (default: @code{(default-skeletons)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18188
msgid "A list of target file name/file-like object tuples (@pxref{G-Expressions, file-like objects}).  These are the skeleton files that will be added to the home directory of newly-created user accounts."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18190
msgid "For instance, a valid value may look like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18196
#, no-wrap
msgid ""
"`((\".bashrc\" ,(plain-file \"bashrc\" \"echo Hello\\n\"))\n"
"  (\".guile\" ,(plain-file \"guile\"\n"
"                         \"(use-modules (ice-9 readline))\n"
"                          (activate-readline)\")))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18198
#, no-wrap
msgid "@code{issue} (default: @code{%default-issue})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18201
msgid "A string denoting the contents of the @file{/etc/issue} file, which is displayed when users log in on a text console."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18202
#, no-wrap
msgid "@code{packages} (default: @code{%base-packages})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18206
msgid "A list of packages to be installed in the global profile, which is accessible at @file{/run/current-system/profile}.  Each element is either a package variable or a package/output tuple.  Here's a simple example of both:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18211
#, no-wrap
msgid ""
"(cons* git                     ; the default \"out\" output\n"
"       (list git \"send-email\") ; another output of git\n"
"       %base-packages)         ; the default set\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18216
msgid "The default set includes core utilities and it is good practice to install non-core utilities in user profiles (@pxref{Invoking guix package})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18217
#, no-wrap
msgid "@code{timezone} (default: @code{\"Etc/UTC\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18219
msgid "A timezone identifying string---e.g., @code{\"Europe/Paris\"}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18223
msgid "You can run the @command{tzselect} command to find out which timezone string corresponds to your region.  Choosing an invalid timezone name causes @command{guix system} to fail."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18224 guix-git/doc/guix.texi:28010
#, no-wrap
msgid "@code{locale} (default: @code{\"en_US.utf8\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18227
msgid "The name of the default locale (@pxref{Locale Names,,, libc, The GNU C Library Reference Manual}).  @xref{Locales}, for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18228
#, no-wrap
msgid "@code{locale-definitions} (default: @code{%default-locale-definitions})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18231
msgid "The list of locale definitions to be compiled and that may be used at run time.  @xref{Locales}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18232
#, no-wrap
msgid "@code{locale-libcs} (default: @code{(list @var{glibc})})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18236
msgid "The list of GNU@tie{}libc packages whose locale data and tools are used to build the locale definitions.  @xref{Locales}, for compatibility considerations that justify this option."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18237
#, no-wrap
msgid "@code{name-service-switch} (default: @code{%default-nss})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18241
msgid "Configuration of the libc name service switch (NSS)---a @code{<name-service-switch>} object.  @xref{Name Service Switch}, for details."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18242
#, no-wrap
msgid "@code{services} (default: @code{%base-services})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18244
msgid "A list of service objects denoting system services.  @xref{Services}."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:18246
msgid "operating-system-essential-services"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18246
#, no-wrap
msgid "essential services"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18247
#, no-wrap
msgid "@code{essential-services} (default: ...)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18253
msgid "The list of ``essential services''---i.e., things like instances of @code{system-service-type} (@pxref{Service Reference}) and @code{host-name-service-type}, which are derived from the operating system definition itself.  As a user you should @emph{never} need to touch this field."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18254
#, no-wrap
msgid "@code{pam-services} (default: @code{(base-pam-services)})"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18255
#, no-wrap
msgid "PAM"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18256
#, no-wrap
msgid "pluggable authentication modules"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18259
msgid "Linux @dfn{pluggable authentication module} (PAM) services."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18260
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{privileged-programs} (default: @code{%default-privileged-programs})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:18263
msgid "List of @code{<privileged-program>}.  @xref{Privileged Programs}, for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18264
#, no-wrap
msgid "@code{sudoers-file} (default: @code{%sudoers-specification})"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18265
#, no-wrap
msgid "sudoers file"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18268
msgid "The contents of the @file{/etc/sudoers} file as a file-like object (@pxref{G-Expressions, @code{local-file} and @code{plain-file}})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18273
msgid "This file specifies which users can use the @command{sudo} command, what they are allowed to do, and what privileges they may gain.  The default is that only @code{root} and members of the @code{wheel} group may use @code{sudo}."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:18276
#, no-wrap
msgid "this-operating-system"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:18279
msgid "When used in the @emph{lexical scope} of an operating system field definition, this identifier resolves to the operating system being defined."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:18282
msgid "The example below shows how to refer to the operating system being defined in the definition of the @code{label} field:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18285
#, no-wrap
msgid ""
"(use-modules (gnu) (guix))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18290
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; ...\n"
"  (label (package-full-name\n"
"          (operating-system-kernel this-operating-system))))\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:18294
msgid "It is an error to refer to @code{this-operating-system} outside an operating system definition."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18305
msgid "The list of file systems to be mounted is specified in the @code{file-systems} field of the operating system declaration (@pxref{Using the Configuration System}).  Each file system is declared using the @code{file-system} form, like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18311
#, no-wrap
msgid ""
"(file-system\n"
"  (mount-point \"/home\")\n"
"  (device \"/dev/sda3\")\n"
"  (type \"ext4\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18315
msgid "As usual, some of the fields are mandatory---those shown in the example above---while others can be omitted.  These are described below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:18316
#, no-wrap
msgid "{Data Type} file-system"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:18319
msgid "Objects of this type represent file systems to be mounted.  They contain the following members:"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:18321 guix-git/doc/guix.texi:18753
#: guix-git/doc/guix.texi:21978 guix-git/doc/guix.texi:43620
#, no-wrap
msgid "type"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18324
msgid "This is a string specifying the type of the file system---e.g., @code{\"ext4\"}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:18325
#, no-wrap
msgid "mount-point"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18327
msgid "This designates the place where the file system is to be mounted."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:18328 guix-git/doc/guix.texi:21924
#: guix-git/doc/guix.texi:23884
#, no-wrap
msgid "device"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18338
msgid "This names the ``source'' of the file system.  It can be one of three things: a file system label, a file system UUID, or the name of a @file{/dev} node.  Labels and UUIDs offer a way to refer to file systems without having to hard-code their actual device name@footnote{Note that, while it is tempting to use @file{/dev/disk/by-uuid} and similar device names to achieve the same result, this is not recommended: These special device nodes are created by the udev daemon and may be unavailable at the time the device is mounted.}."
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:18339
#, no-wrap
msgid "file-system-label"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18344
msgid "File system labels are created using the @code{file-system-label} procedure, UUIDs are created using @code{uuid}, and @file{/dev} nodes are plain strings.  Here's an example of a file system referred to by its label, as shown by the @command{e2label} command:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18350
#, no-wrap
msgid ""
"(file-system\n"
"  (mount-point \"/home\")\n"
"  (type \"ext4\")\n"
"  (device (file-system-label \"my-home\")))\n"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:18352 guix-git/doc/guix.texi:43336
#: guix-git/doc/guix.texi:43352
#, no-wrap
msgid "uuid"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18360
msgid "UUIDs are converted from their string representation (as shown by the @command{tune2fs -l} command) using the @code{uuid} form@footnote{The @code{uuid} form expects 16-byte UUIDs as defined in @uref{https://tools.ietf.org/html/rfc4122, RFC@tie{}4122}.  This is the form of UUID used by the ext2 family of file systems and others, but it is different from ``UUIDs'' found in FAT file systems, for instance.}, like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18366
#, no-wrap
msgid ""
"(file-system\n"
"  (mount-point \"/home\")\n"
"  (type \"ext4\")\n"
"  (device (uuid \"4dab5feb-d176-45de-b287-9b0a6e4c01cb\")))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18374
msgid "When the source of a file system is a mapped device (@pxref{Mapped Devices}), its @code{device} field @emph{must} refer to the mapped device name---e.g., @file{\"/dev/mapper/root-partition\"}.  This is required so that the system knows that mounting the file system depends on having the corresponding device mapping established."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18375 guix-git/doc/guix.texi:53842
#, no-wrap
msgid "@code{flags} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18387
msgid "This is a list of symbols denoting mount flags.  Recognized flags include @code{read-only}, @code{bind-mount}, @code{no-dev} (disallow access to special files), @code{no-suid} (ignore setuid and setgid bits), @code{no-atime} (do not update file access times), @code{no-diratime} (likewise for directories only), @code{strict-atime} (update file access time), @code{lazy-time} (only update time on the in-memory version of the file inode), @code{no-exec} (disallow program execution), and @code{shared} (make the mount shared).  @xref{Mount-Unmount-Remount,,, libc, The GNU C Library Reference Manual}, for more information on these flags."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18388
#, no-wrap
msgid "@code{options} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18392
msgid "This is either @code{#f}, or a string denoting mount options passed to the file system driver.  @xref{Mount-Unmount-Remount,,, libc, The GNU C Library Reference Manual}, for details."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18396
msgid "Run @command{man 8 mount} for options for various file systems, but beware that what it lists as file-system-independent ``mount options'' are in fact flags, and belong in the @code{flags} field described above."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18401
msgid "The @code{file-system-options->alist} and @code{alist->file-system-options} procedures from @code{(gnu system file-systems)} can be used to convert file system options given as an association list to the string representation, and vice-versa."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18402
#, no-wrap
msgid "@code{mount?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18407
msgid "This value indicates whether to automatically mount the file system when the system is brought up.  When set to @code{#f}, the file system gets an entry in @file{/etc/fstab} (read by the @command{mount} command) but is not automatically mounted."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18408
#, no-wrap
msgid "@code{needed-for-boot?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18413
msgid "This Boolean value indicates whether the file system is needed when booting.  If that is true, then the file system is mounted when the initial RAM disk (initrd) is loaded.  This is always the case, for instance, for the root file system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18414
#, no-wrap
msgid "@code{check?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18418
msgid "This Boolean indicates whether the file system should be checked for errors before being mounted.  How and when this happens can be further adjusted with the following options."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18419
#, no-wrap
msgid "@code{skip-check-if-clean?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18424
msgid "When true, this Boolean indicates that a file system check triggered by @code{check?} may exit early if the file system is marked as ``clean'', meaning that it was previously correctly unmounted and should not contain errors."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18428
msgid "Setting this to false will always force a full consistency check when @code{check?} is true.  This may take a very long time and is not recommended on healthy systems---in fact, it may reduce reliability!"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18432
msgid "Conversely, some primitive file systems like @code{fat} do not keep track of clean shutdowns and will perform a full scan regardless of the value of this option."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18433
#, no-wrap
msgid "@code{repair} (default: @code{'preen})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18436
msgid "When @code{check?} finds errors, it can (try to) repair them and continue booting.  This option controls when and how to do so."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18440
msgid "If false, try not to modify the file system at all.  Checking certain file systems like @code{jfs} may still write to the device to replay the journal.  No repairs will be attempted."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18443
msgid "If @code{#t}, try to repair any errors found and assume ``yes'' to all questions.  This will fix the most errors, but may be risky."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18447
msgid "If @code{'preen}, repair only errors that are safe to fix without human interaction.  What that means is left up to the developers of each file system and may be equivalent to ``none'' or ``all''."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18448
#, no-wrap
msgid "@code{create-mount-point?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18450
msgid "When true, the mount point is created if it does not exist yet."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18451
#, no-wrap
msgid "@code{mount-may-fail?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18456
msgid "When true, this indicates that mounting this file system can fail but that should not be considered an error.  This is useful in unusual cases; an example of this is @code{efivarfs}, a file system that can only be mounted on EFI/UEFI systems."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18461
msgid "This is a list of @code{<file-system>} or @code{<mapped-device>} objects representing file systems that must be mounted or mapped devices that must be opened before (and unmounted or closed after) this one."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18465
msgid "As an example, consider a hierarchy of mounts: @file{/sys/fs/cgroup} is a dependency of @file{/sys/fs/cgroup/cpu} and @file{/sys/fs/cgroup/memory}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18468
msgid "Another example is a file system that depends on a mapped device, for example for an encrypted partition (@pxref{Mapped Devices})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18469
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{shepherd-requirements} (default: @code{'()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:18472
msgid "This is a list of symbols denoting Shepherd requirements that must be met before mounting the file system."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18482
msgid "As an example, an NFS file system would typically have a requirement for @code{networking}.  In some situations, requiring @code{networking} might not be sufficient as @code{networking} being marked as started does @emph{not} imply the network has already been configured and in working order (for example, when using @code{dhcp-client-service-type}).  For such cases, adding a requirement on a custom @code{network-online} service may be necessary.  A sample @code{network-online} one-shot Shepherd service implementation is provided below:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18502
#, no-wrap
msgid ""
"(simple-service 'network-online shepherd-root-service-type\n"
"  (list\n"
"   (shepherd-service\n"
"    (requirement '(networking))\n"
"    (provision '(network-online))\n"
"    (documentation \"Wait for the network to come up.\")\n"
"    (start #~(lambda _\n"
"               (let* ((cmd\n"
"                       \"set -eux\n"
"c=0\n"
"while ! /run/setuid-programs/ping -qc1 -W1 example.org; do\n"
"\tsleep 1\n"
"\t[ \\\"$((c += 1))\\\" -lt 30 ] || exit 1  # Limit the wait time\n"
"done\n"
"\")\n"
"                    (status (system cmd)))\n"
"               (= 0 (status:exit-val status)))))\n"
"    (one-shot? #t))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18510
msgid "Typically, file systems are mounted before most other Shepherd services are started.  However, file systems with a non-empty shepherd-requirements field are mounted after Shepherd services have begun.  Any Shepherd service that depends on a file system with a non-empty shepherd-requirements field must depend on it directly and not on the generic symbol @code{file-systems}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:18513
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "{Procedure} file-system-label str"
msgstr "Filesystem"

#. type: deffn
#: guix-git/doc/guix.texi:18516
msgid "This procedure returns an opaque file system label from @var{str}, a string:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18520
#, no-wrap
msgid ""
"(file-system-label \"home\")\n"
"@result{} #<file-system-label \"home\">\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:18524
msgid "File system labels are used to refer to file systems by label rather than by device name.  See above for examples."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18528
msgid "The @code{(gnu system file-systems)} exports the following useful variables."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18529
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "%base-file-systems"
msgstr "Filesystem"

#. type: defvar
#: guix-git/doc/guix.texi:18534
msgid "These are essential file systems that are required on normal systems, such as @code{%pseudo-terminal-file-system} and @code{%immutable-store} (see below).  Operating system declarations should always contain at least these."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18536
#, no-wrap
msgid "%pseudo-terminal-file-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18542
msgid "This is the file system to be mounted as @file{/dev/pts}.  It supports @dfn{pseudo-terminals} created @i{via} @code{openpty} and similar functions (@pxref{Pseudo-Terminals,,, libc, The GNU C Library Reference Manual}).  Pseudo-terminals are used by terminal emulators such as @command{xterm}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18544
#, no-wrap
msgid "%shared-memory-file-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18548
msgid "This file system is mounted as @file{/dev/shm} and is used to support memory sharing across processes (@pxref{Memory-mapped I/O, @code{shm_open},, libc, The GNU C Library Reference Manual})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18550
#, no-wrap
msgid "%immutable-store"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18555
msgid "This file system performs a read-only ``bind mount'' of @file{/gnu/store}, making it read-only for all the users including @code{root}.  This prevents against accidental modification by software running as @code{root} or by system administrators."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18558
msgid "The daemon itself is still able to write to the store: it remounts it read-write in its own ``name space.''"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18560
#, no-wrap
msgid "%binary-format-file-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18564
msgid "The @code{binfmt_misc} file system, which allows handling of arbitrary executable file types to be delegated to user space.  This requires the @code{binfmt.ko} kernel module to be loaded."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18566
#, no-wrap
msgid "%fuse-control-file-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18570
msgid "The @code{fusectl} file system, which allows unprivileged users to mount and unmount user-space FUSE file systems.  This requires the @code{fuse.ko} kernel module to be loaded."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18574
msgid "The @code{(gnu system uuid)} module provides tools to deal with file system ``unique identifiers'' (UUIDs)."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:18575
#, no-wrap
msgid "{Procedure} uuid str [type]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:18578
msgid "Return an opaque UUID (unique identifier) object of the given @var{type} (a symbol) by parsing @var{str} (a string):"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18582
#, no-wrap
msgid ""
"(uuid \"4dab5feb-d176-45de-b287-9b0a6e4c01cb\")\n"
"@result{} #<<uuid> type: dce bv: @dots{}>\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18585
#, no-wrap
msgid ""
"(uuid \"1234-ABCD\" 'fat)\n"
"@result{} #<<uuid> type: fat bv: @dots{}>\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:18589
msgid "@var{type} may be one of @code{dce}, @code{iso9660}, @code{fat}, @code{ntfs}, or one of the commonly found synonyms for these."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:18592
msgid "UUIDs are another way to unambiguously refer to file systems in operating system configuration.  See the examples above."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18606
msgid "The Btrfs has special features, such as subvolumes, that merit being explained in more details.  The following section attempts to cover basic as well as complex uses of a Btrfs file system with the Guix System."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18609
msgid "In its simplest usage, a Btrfs file system can be described, for example, by:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18615
#, no-wrap
msgid ""
"(file-system\n"
"  (mount-point \"/home\")\n"
"  (type \"btrfs\")\n"
"  (device (file-system-label \"my-home\")))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18621
msgid "The example below is more complex, as it makes use of a Btrfs subvolume, named @code{rootfs}.  The parent Btrfs file system is labeled @code{my-btrfs-pool}, and is located on an encrypted device (hence the dependency on @code{mapped-devices}):"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18629
#, no-wrap
msgid ""
"(file-system\n"
"  (device (file-system-label \"my-btrfs-pool\"))\n"
"  (mount-point \"/\")\n"
"  (type \"btrfs\")\n"
"  (options \"subvol=rootfs\")\n"
"  (dependencies mapped-devices))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18640
msgid "Some bootloaders, for example GRUB, only mount a Btrfs partition at its top level during the early boot, and rely on their configuration to refer to the correct subvolume path within that top level.  The bootloaders operating in this way typically produce their configuration on a running system where the Btrfs partitions are already mounted and where the subvolume information is readily available.  As an example, @command{grub-mkconfig}, the configuration generator command shipped with GRUB, reads @file{/proc/self/mountinfo} to determine the top-level path of a subvolume."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18648
msgid "The Guix System produces a bootloader configuration using the operating system configuration as its sole input; it is therefore necessary to extract the subvolume name on which @file{/gnu/store} lives (if any)  from that operating system configuration.  To better illustrate, consider a subvolume named 'rootfs' which contains the root file system data.  In such situation, the GRUB bootloader would only see the top level of the root Btrfs partition, e.g.:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:18655
#, no-wrap
msgid ""
"/                   (top level)\n"
"├── rootfs          (subvolume directory)\n"
"    ├── gnu         (normal directory)\n"
"        ├── store   (normal directory)\n"
"[...]\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18660
msgid "Thus, the subvolume name must be prepended to the @file{/gnu/store} path of the kernel, initrd binaries and any other files referred to in the GRUB configuration that must be found during the early boot."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18663
msgid "The next example shows a nested hierarchy of subvolumes and directories:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:18670
#, no-wrap
msgid ""
"/                   (top level)\n"
"├── rootfs          (subvolume)\n"
"    ├── gnu         (normal directory)\n"
"        ├── store   (subvolume)\n"
"[...]\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18677
msgid "This scenario would work without mounting the 'store' subvolume.  Mounting 'rootfs' is sufficient, since the subvolume name matches its intended mount point in the file system hierarchy.  Alternatively, the 'store' subvolume could be referred to by setting the @code{subvol} option to either @code{/rootfs/gnu/store} or @code{rootfs/gnu/store}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18679
msgid "Finally, a more contrived example of nested subvolumes:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:18686
#, no-wrap
msgid ""
"/                           (top level)\n"
"├── root-snapshots          (subvolume)\n"
"    ├── root-current        (subvolume)\n"
"        ├── guix-store      (subvolume)\n"
"[...]\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18693
msgid "Here, the 'guix-store' subvolume doesn't match its intended mount point, so it is necessary to mount it.  The subvolume must be fully specified, by passing its file name to the @code{subvol} option.  To illustrate, the 'guix-store' subvolume could be mounted on @file{/gnu/store} by using a file system declaration such as:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18701
#, no-wrap
msgid ""
"(file-system\n"
"  (device (file-system-label \"btrfs-pool-1\"))\n"
"  (mount-point \"/gnu/store\")\n"
"  (type \"btrfs\")\n"
"  (options \"subvol=root-snapshots/root-current/guix-store,\\\n"
"compress-force=zstd,space_cache=v2\"))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18706
#, no-wrap
msgid "device mapping"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18707
#, no-wrap
msgid "mapped devices"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18724
msgid "The Linux kernel has a notion of @dfn{device mapping}: a block device, such as a hard disk partition, can be @dfn{mapped} into another device, usually in @code{/dev/mapper/}, with additional processing over the data that flows through it@footnote{Note that the GNU@tie{}Hurd makes no difference between the concept of a ``mapped device'' and that of a file system: both boil down to @emph{translating} input/output operations made on a file to operations on its backing store.  Thus, the Hurd implements mapped devices, like file systems, using the generic @dfn{translator} mechanism (@pxref{Translators,,, hurd, The GNU Hurd Reference Manual}).}.  A typical example is encryption device mapping: all writes to the mapped device are encrypted, and all reads are deciphered, transparently.  Guix extends this notion by considering any device or set of devices that are @dfn{transformed} in some way to create a new device; for instance, RAID devices are obtained by @dfn{assembling} several other devices, such as hard disks or partitions, into a new one that behaves as one partition."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18727
msgid "Mapped devices are declared using the @code{mapped-device} form, defined as follows; for examples, see below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:18728
#, no-wrap
msgid "{Data Type} mapped-device"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:18731
msgid "Objects of this type represent device mappings that will be made when the system boots up."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18738
msgid "This is either a string specifying the name of the block device to be mapped, such as @code{\"/dev/sda3\"}, or a list of such strings when several devices need to be assembled for creating a new one.  In case of LVM this is a string specifying name of the volume group to be mapped."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:18739 guix-git/doc/guix.texi:18945
#: guix-git/doc/guix.texi:53557
#, no-wrap
msgid "target"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18748
msgid "This string specifies the name of the resulting mapped device.  For kernel mappers such as encrypted devices of type @code{luks-device-mapping}, specifying @code{\"my-partition\"} leads to the creation of the @code{\"/dev/mapper/my-partition\"} device.  For RAID devices of type @code{raid-device-mapping}, the full device name such as @code{\"/dev/md0\"} needs to be given.  LVM logical volumes of type @code{lvm-device-mapping} need to be specified as @code{\"VGNAME-LVNAME\"}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:18749 guix-git/doc/guix.texi:46732
#, no-wrap
msgid "targets"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18752
msgid "This list of strings specifies names of the resulting mapped devices in case there are several.  The format is identical to @var{target}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18756
msgid "This must be a @code{mapped-device-kind} object, which specifies how @var{source} is mapped to @var{target}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18760
msgid "This is a list of arguments specific to @var{type} that are passed to its @code{open}, @code{close}, and @code{check} procedures."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18763
msgid "As an example, @code{luks-device-mapping} supports keyword arguments---see below for details."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18766
#, no-wrap
msgid "luks-device-mapping"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18770
msgid "This defines LUKS block device encryption using the @command{cryptsetup} command from the package with the same name.  It relies on the @code{dm-crypt} Linux kernel module."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18773
msgid "The following options may be passed @i{via} the @code{arguments} field of a mapped device:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18775
#, no-wrap
msgid "#:key-file"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18782
msgid "If @code{file} is provided, unlocking is first attempted using that key file.  This has an advantage of not requiring a password entry, so it can be used (for example) to unlock RAID arrays automatically on boot.  If key file unlock fails, password unlock is attempted as well.  Key file is not stored in the store and needs to be available at the given location at the time of the unlock attempt."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18791
#, no-wrap
msgid ""
";; Following definition would be equivalent to running:\n"
";;   cryptsetup open --key-file /crypto.key /dev/sdb1 data\n"
"(mapped-device\n"
" (source \"/dev/sdb1)\n"
" (target \"data)\n"
" (type luks-device-mapping)\n"
" (arguments '(#:key-file \"/crypto.key\")))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18793
#, no-wrap
msgid "#:allow-discards?"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18800
msgid "@code{allow-discards?} allows the use of discard (TRIM) requests for the underlying device.  This is useful for solid state drives.  However, this option can have a negative security impact because it can make file system level operations visible on the physical device.  For more information, refer to the description of the @code{--allow-discards} option in the @code{cryptsetup-open(8)} man page."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18803
#, no-wrap
msgid "raid-device-mapping"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18808
msgid "This defines a RAID device, which is assembled using the @code{mdadm} command from the package with the same name.  It requires a Linux kernel module for the appropriate RAID level to be loaded, such as @code{raid456} for RAID-4, RAID-5 or RAID-6, or @code{raid10} for RAID-10."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18810
#, no-wrap
msgid "LVM, logical volume manager"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18811
#, no-wrap
msgid "lvm-device-mapping"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18816
msgid "This defines one or more logical volumes for the Linux @uref{https://www.sourceware.org/lvm2/, Logical Volume Manager (LVM)}.  The volume group is activated by the @command{vgchange} command from the @code{lvm2} package."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18818
#, no-wrap
msgid "disk encryption"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18819
#, no-wrap
msgid "LUKS"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18827
msgid "The following example specifies a mapping from @file{/dev/sda3} to @file{/dev/mapper/home} using LUKS---the @url{https://gitlab.com/cryptsetup/cryptsetup,Linux Unified Key Setup}, a standard mechanism for disk encryption.  The @file{/dev/mapper/home} device can then be used as the @code{device} of a @code{file-system} declaration (@pxref{File Systems})."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18833
#, no-wrap
msgid ""
"(mapped-device\n"
"  (source \"/dev/sda3\")\n"
"  (target \"home\")\n"
"  (type luks-device-mapping))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18838
msgid "Alternatively, to become independent of device numbering, one may obtain the LUKS UUID (@dfn{unique identifier}) of the source device by a command like:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:18841
#, no-wrap
msgid "cryptsetup luksUUID /dev/sda3\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18844
msgid "and use it as follows:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18850
#, no-wrap
msgid ""
"(mapped-device\n"
"  (source (uuid \"cb67fc72-0d54-4c88-9d4b-b225f30b0f44\"))\n"
"  (target \"home\")\n"
"  (type luks-device-mapping))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18852
#, no-wrap
msgid "swap encryption"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18859
msgid "It is also desirable to encrypt swap space, since swap space may contain sensitive data.  One way to accomplish that is to use a swap file in a file system on a device mapped via LUKS encryption.  In this way, the swap file is encrypted because the entire device is encrypted.  @xref{Swap Space}, or @xref{Preparing for Installation,,Disk Partitioning}, for an example."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18862
msgid "A RAID device formed of the partitions @file{/dev/sda1} and @file{/dev/sdb1} may be declared as follows:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18868
#, no-wrap
msgid ""
"(mapped-device\n"
"  (source (list \"/dev/sda1\" \"/dev/sdb1\"))\n"
"  (target \"/dev/md0\")\n"
"  (type raid-device-mapping))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18875
msgid "The @file{/dev/md0} device can then be used as the @code{device} of a @code{file-system} declaration (@pxref{File Systems}).  Note that the RAID level need not be given; it is chosen during the initial creation and formatting of the RAID device and is determined automatically later."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18878
msgid "LVM logical volumes ``alpha'' and ``beta'' from volume group ``vg0'' can be declared as follows:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18884
#, no-wrap
msgid ""
"(mapped-device\n"
"  (source \"vg0\")\n"
"  (targets (list \"vg0-alpha\" \"vg0-beta\"))\n"
"  (type lvm-device-mapping))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18889
msgid "Devices @file{/dev/mapper/vg0-alpha} and @file{/dev/mapper/vg0-beta} can then be used as the @code{device} of a @code{file-system} declaration (@pxref{File Systems})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18892
#, no-wrap
msgid "swap space"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18902
msgid "Swap space, as it is commonly called, is a disk area specifically designated for paging: the process in charge of memory management (the Linux kernel or Hurd's default pager) can decide that some memory pages stored in RAM which belong to a running program but are unused should be stored on disk instead.  It unloads those from the RAM, freeing up precious fast memory, and writes them to the swap space.  If the program tries to access that very page, the memory management process loads it back into memory for the program to use."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18908
msgid "A common misconception about swap is that it is only useful when small amounts of RAM are available to the system.  However, it should be noted that kernels often use all available RAM for disk access caching to make I/O faster, and thus paging out unused portions of program memory will expand the RAM available for such caching."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18912
msgid "For a more detailed description of how memory is managed from the viewpoint of a monolithic kernel, @pxref{Memory Concepts,,, libc, The GNU C Library Reference Manual}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18921
msgid "The Linux kernel has support for swap partitions and swap files: the former uses a whole disk partition for paging, whereas the second uses a file on a file system for that (the file system driver needs to support it).  On a comparable setup, both have the same performance, so one should consider ease of use when deciding between them.  Partitions are ``simpler'' and do not need file system support, but need to be allocated at disk formatting time (logical volumes notwithstanding), whereas files can be allocated and deallocated at any time."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18922
#, fuzzy, no-wrap
msgid "hibernation"
msgstr "Documentazione"

#. type: cindex
#: guix-git/doc/guix.texi:18923
#, no-wrap
msgid "suspend to disk"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18934
msgid "Swap space is also required to put the system into @dfn{hibernation} (also called @dfn{suspend to disk}), whereby memory is dumped to swap before shutdown so it can be restored when the machine is eventually restarted.  Hibernation uses at most half the size of the RAM in the configured swap space.  The Linux kernel needs to know about the swap space to be used to resume from hibernation on boot (@i{via} a kernel argument).  When using a swap file, its offset in the device holding it also needs to be given to the kernel; that value has to be updated if the file is initialized again as swap---e.g., because its size was changed."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18939
msgid "Note that swap space is not zeroed on shutdown, so sensitive data (such as passwords) may linger on it if it was paged out.  As such, you should consider having your swap reside on an encrypted device (@pxref{Mapped Devices})."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:18940
#, no-wrap
msgid "{Data Type} swap-space"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:18943
msgid "Objects of this type represent swap spaces.  They contain the following members:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18949
msgid "The device or file to use, either a UUID, a @code{file-system-label} or a string, as in the definition of a @code{file-system} (@pxref{File Systems})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18956
msgid "A list of @code{file-system} or @code{mapped-device} objects, upon which the availability of the space depends.  Note that just like for @code{file-system} objects, dependencies which are needed for boot and mounted in early userspace are not managed by the Shepherd, and so automatically filtered out for you."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18957
#, no-wrap
msgid "@code{priority} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18964
msgid "Only supported by the Linux kernel.  Either @code{#f} to disable swap priority, or an integer between 0 and 32767.  The kernel will first use swap spaces of higher priority when paging, and use same priority spaces on a round-robin basis.  The kernel will use swap spaces without a set priority after prioritized spaces, and in the order that they appeared in (not round-robin)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18965
#, no-wrap
msgid "@code{discard?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18969
msgid "Only supported by the Linux kernel.  When true, the kernel will notify the disk controller of discarded pages, for example with the TRIM operation on Solid State Drives."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18974
msgid "Here are some examples:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18977
#, no-wrap
msgid "(swap-space (target (uuid \"4dab5feb-d176-45de-b287-9b0a6e4c01cb\")))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18982
msgid "Use the swap partition with the given UUID@.  You can learn the UUID of a Linux swap partition by running @command{swaplabel @var{device}}, where @var{device} is the @file{/dev} file name of that partition."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18987
#, no-wrap
msgid ""
"(swap-space\n"
"  (target (file-system-label \"swap\"))\n"
"  (dependencies mapped-devices))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18993
msgid "Use the partition with label @code{swap}, which can be found after all the @var{mapped-devices} mapped devices have been opened.  Again, the @command{swaplabel} command allows you to view and change the label of a Linux swap partition."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18996
msgid "Here's a more involved example with the corresponding @code{file-systems} part of an @code{operating-system} declaration."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19007
#, no-wrap
msgid ""
"(file-systems\n"
"  (list (file-system\n"
"          (device (file-system-label \"root\"))\n"
"          (mount-point \"/\")\n"
"          (type \"ext4\"))\n"
"        (file-system\n"
"          (device (file-system-label \"btrfs\"))\n"
"          (mount-point \"/btrfs\")\n"
"          (type \"btrfs\"))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19014
#, no-wrap
msgid ""
"(swap-devices\n"
"  (list\n"
"    (swap-space\n"
"      (target \"/btrfs/swapfile\")\n"
"      (dependencies (filter (file-system-mount-point-predicate \"/btrfs\")\n"
"                            file-systems)))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19019
msgid "Use the file @file{/btrfs/swapfile} as swap space, which depends on the file system mounted at @file{/btrfs}.  Note how we use Guile's filter to select the file system in an elegant fashion!"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19026
#, no-wrap
msgid ""
"(swap-devices\n"
"  (list\n"
"    (swap-space\n"
"      (target \"/dev/mapper/my-swap\")\n"
"      (dependencies mapped-devices))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19030
#, no-wrap
msgid ""
"(kernel-arguments\n"
"  (cons* \"resume=/dev/mapper/my-swap\"\n"
"         %default-kernel-arguments))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19037
msgid "The above snippet of an @code{operating-system} declaration enables the mapped device @file{/dev/mapper/my-swap} (which may be part of an encrypted device) as swap space, and tells the kernel to use it for hibernation via the @code{resume} kernel argument (@pxref{operating-system Reference}, @code{kernel-arguments})."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19045
#, no-wrap
msgid ""
"(swap-devices\n"
"  (list\n"
"    (swap-space\n"
"      (target \"/swapfile\")\n"
"      (dependencies (filter (file-system-mount-point-predicate \"/\")\n"
"                            file-systems)))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19050
#, no-wrap
msgid ""
"(kernel-arguments\n"
"  (cons* \"resume=/dev/sda3\"        ;device that holds /swapfile\n"
"         \"resume_offset=92514304\"  ;offset of /swapfile on device\n"
"         %default-kernel-arguments))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19060
msgid "This other snippet of @code{operating-system} enables the swap file @file{/swapfile} for hibernation by telling the kernel about the partition containing it (@code{resume} argument) and its offset on that partition (@code{resume_offset} argument).  The latter value can be found in the output of the command @command{filefrag -e} as the first number right under the @code{physical_offset} column header (the second command extracts its value directly):"
msgstr ""

#. type: smallexample
#: guix-git/doc/guix.texi:19070
#, no-wrap
msgid ""
"$ sudo filefrag -e /swapfile\n"
"Filesystem type is: ef53\n"
"File size of /swapfile is 2463842304 (601524 blocks of 4096 bytes)\n"
" ext:     logical_offset:        physical_offset: length:   expected: flags:\n"
"   0:        0..    2047:   92514304..  92516351:   2048:\n"
"@dots{}\n"
"$ sudo filefrag -e /swapfile | grep '^ *0:' | cut -d: -f3 | cut -d. -f1\n"
"   92514304\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19075
#, no-wrap
msgid "users"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19076
#, no-wrap
msgid "accounts"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19077
#, no-wrap
msgid "user accounts"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19081
msgid "User accounts and groups are entirely managed through the @code{operating-system} declaration.  They are specified with the @code{user-account} and @code{user-group} forms:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19091
#, no-wrap
msgid ""
"(user-account\n"
"  (name \"alice\")\n"
"  (group \"users\")\n"
"  (supplementary-groups '(\"wheel\"   ;allow use of sudo, etc.\n"
"                          \"audio\"   ;sound card\n"
"                          \"video\"   ;video devices such as webcams\n"
"                          \"cdrom\")) ;the good ol' CD-ROM\n"
"  (comment \"Bob's sister\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19095
msgid "Here's a user account that uses a different shell and a custom home directory (the default would be @file{\"/home/bob\"}):"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19103
#, no-wrap
msgid ""
"(user-account\n"
"  (name \"bob\")\n"
"  (group \"users\")\n"
"  (comment \"Alice's bro\")\n"
"  (shell (file-append zsh \"/bin/zsh\"))\n"
"  (home-directory \"/home/robert\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19112
msgid "When booting or upon completion of @command{guix system reconfigure}, the system ensures that only the user accounts and groups specified in the @code{operating-system} declaration exist, and with the specified properties.  Thus, account or group creations or modifications made by directly invoking commands such as @command{useradd} are lost upon reconfiguration or reboot.  This ensures that the system remains exactly as declared."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:19113
#, no-wrap
msgid "{Data Type} user-account"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:19116
msgid "Objects of this type represent user accounts.  The following members may be specified:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19120
msgid "The name of the user account."
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:19121 guix-git/doc/guix.texi:46345
#, no-wrap
msgid "group"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19122 guix-git/doc/guix.texi:19206
#, no-wrap
msgid "groups"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19125
msgid "This is the name (a string) or identifier (a number) of the user group this account belongs to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19126
#, no-wrap
msgid "@code{supplementary-groups} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19129
msgid "Optionally, this can be defined as a list of group names that this account belongs to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19130 guix-git/doc/guix.texi:28076
#, no-wrap
msgid "@code{uid} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19134
msgid "This is the user ID for this account (a number), or @code{#f}.  In the latter case, a number is automatically chosen by the system when the account is created."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19135 guix-git/doc/guix.texi:23521
#, no-wrap
msgid "@code{comment} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19137
msgid "A comment about the account, such as the account owner's full name."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19142
msgid "Note that, for non-system accounts, users are free to change their real name as it appears in @file{/etc/passwd} using the @command{chfn} command.  When they do, their choice prevails over the system administrator's choice; reconfiguring does @emph{not} change their name."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:19143
#, no-wrap
msgid "home-directory"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19145
msgid "This is the name of the home directory for the account."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19146
#, no-wrap
msgid "@code{create-home-directory?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19149
msgid "Indicates whether the home directory of this account should be created if it does not exist yet."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19150
#, no-wrap
msgid "@code{shell} (default: Bash)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19154
msgid "This is a G-expression denoting the file name of a program to be used as the shell (@pxref{G-Expressions}).  For example, you would refer to the Bash executable like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19157
#, no-wrap
msgid "(file-append bash \"/bin/bash\")\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19161
msgid "... and to the Zsh executable like that:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19164
#, no-wrap
msgid "(file-append zsh \"/bin/zsh\")\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19166 guix-git/doc/guix.texi:19224
#, no-wrap
msgid "@code{system?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19170
msgid "This Boolean value indicates whether the account is a ``system'' account.  System accounts are sometimes treated specially; for instance, graphical login managers do not list them."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:19172
msgid "user-account-password"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19172
#, no-wrap
msgid "password, for user accounts"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19179
msgid "You would normally leave this field to @code{#f}, initialize user passwords as @code{root} with the @command{passwd} command, and then let users change it with @command{passwd}.  Passwords set with @command{passwd} are of course preserved across reboot and reconfiguration."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19183
msgid "If you @emph{do} want to set an initial password for an account, then this field must contain the encrypted password, as a string.  You can use the @code{crypt} procedure for this purpose:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19188
#, no-wrap
msgid ""
"(user-account\n"
"  (name \"charlie\")\n"
"  (group \"users\")\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19191
#, no-wrap
msgid ""
"  ;; Specify a SHA-512-hashed initial password.\n"
"  (password (crypt \"InitialPassword!\" \"$6$abc\")))\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:19197
msgid "The hash of this initial password will be available in a file in @file{/gnu/store}, readable by all the users, so this method must be used with care."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19202
msgid "@xref{Passphrase Storage,,, libc, The GNU C Library Reference Manual}, for more information on password encryption, and @ref{Encryption,,, guile, GNU Guile Reference Manual}, for information on Guile's @code{crypt} procedure."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19208
msgid "User group declarations are even simpler:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19211
#, no-wrap
msgid "(user-group (name \"students\"))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:19213
#, no-wrap
msgid "{Data Type} user-group"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:19215
msgid "This type is for, well, user groups.  There are just a few fields:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19219
msgid "The name of the group."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19220 guix-git/doc/guix.texi:23772
#: guix-git/doc/guix.texi:40592
#, no-wrap
msgid "@code{id} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19223
msgid "The group identifier (a number).  If @code{#f}, a new number is automatically allocated when the group is created."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19227
msgid "This Boolean value indicates whether the group is a ``system'' group.  System groups have low numerical IDs."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19231
msgid "What, user groups can have a password? Well, apparently yes.  Unless @code{#f}, this field specifies the password of the group."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19237
msgid "For convenience, a variable lists all the basic user groups one may expect:"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19238
#, no-wrap
msgid "%base-groups"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19243
msgid "This is the list of basic user groups that users and/or packages expect to be present on the system.  This includes groups such as ``root'', ``wheel'', and ``users'', as well as groups used to control access to specific devices such as ``audio'', ``disk'', and ``cdrom''."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19245
#, no-wrap
msgid "%base-user-accounts"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19248
msgid "This is the list of basic system accounts that programs may expect to find on a GNU/Linux system, such as the ``nobody'' account."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19251
msgid "Note that the ``root'' account is not included here.  It is a special-case and is automatically added whether or not it is specified."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19253
#, no-wrap
msgid "containers, subordinate IDs"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19259
msgid "The Linux kernel also implements @dfn{subordinate user and group IDs}, or ``subids'', which are used to map the ID of a user and group to several IDs inside separate name spaces---inside ``containers''.  @xref{subordinate-user-group-ids, the subordinate user and group ID service}, for information on how to configure it."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19264
#, no-wrap
msgid "keymap"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19272
msgid "To specify what each key of your keyboard does, you need to tell the operating system what @dfn{keyboard layout} you want to use.  The default, when nothing is specified, is the US English QWERTY layout for 105-key PC keyboards.  However, German speakers will usually prefer the German QWERTZ layout, French speakers will want the AZERTY layout, and so on; hackers might prefer Dvorak or bépo, and they might even want to further customize the effect of some of the keys.  This section explains how to get that done."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19273
#, no-wrap
msgid "keyboard layout, definition"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19275
msgid "There are three components that will want to know about your keyboard layout:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:19282
msgid "The @emph{bootloader} may want to know what keyboard layout you want to use (@pxref{Bootloader Configuration, @code{keyboard-layout}}).  This is useful if you want, for instance, to make sure that you can type the passphrase of your encrypted root partition using the right layout."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:19287
msgid "The @emph{operating system kernel}, Linux, will need that so that the console is properly configured (@pxref{operating-system Reference, @code{keyboard-layout}})."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:19291
msgid "The @emph{graphical display server}, usually Xorg, also has its own idea of the keyboard layout (@pxref{X Window, @code{keyboard-layout}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19295
msgid "Guix allows you to configure all three separately but, fortunately, it allows you to share the same keyboard layout for all three components."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19296
#, no-wrap
msgid "XKB, keyboard layouts"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19304
msgid "Keyboard layouts are represented by records created by the @code{keyboard-layout} procedure of @code{(gnu system keyboard)}.  Following the X Keyboard extension (XKB), each layout has four attributes: a name (often a language code such as ``fi'' for Finnish or ``jp'' for Japanese), an optional variant name, an optional keyboard model name, and a possibly empty list of additional options.  In most cases the layout name is all you care about."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:19305
#, no-wrap
msgid "{Procedure} keyboard-layout name [variant] [#:model] [#:options '()]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:19307
msgid "Return a new keyboard layout with the given @var{name} and @var{variant}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:19311
msgid "@var{name} must be a string such as @code{\"fr\"}; @var{variant} must be a string such as @code{\"bepo\"} or @code{\"nodeadkeys\"}.  See the @code{xkeyboard-config} package for valid options."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19314
msgid "Here are a few examples:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19319
#, no-wrap
msgid ""
";; The German QWERTZ layout.  Here we assume a standard\n"
";; \"pc105\" keyboard model.\n"
"(keyboard-layout \"de\")\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19322
#, no-wrap
msgid ""
";; The bépo variant of the French layout.\n"
"(keyboard-layout \"fr\" \"bepo\")\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19325
#, no-wrap
msgid ""
";; The Catalan layout.\n"
"(keyboard-layout \"es\" \"cat\")\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19328
#, no-wrap
msgid ""
";; Arabic layout with \"Alt-Shift\" to switch to US layout.\n"
"(keyboard-layout \"ar,us\" #:options '(\"grp:alt_shift_toggle\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19335
#, no-wrap
msgid ""
";; The Latin American Spanish layout.  In addition, the\n"
";; \"Caps Lock\" key is used as an additional \"Ctrl\" key,\n"
";; and the \"Menu\" key is used as a \"Compose\" key to enter\n"
";; accented letters.\n"
"(keyboard-layout \"latam\"\n"
"                 #:options '(\"ctrl:nocaps\" \"compose:menu\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19338
#, no-wrap
msgid ""
";; The Russian layout for a ThinkPad keyboard.\n"
"(keyboard-layout \"ru\" #:model \"thinkpad\")\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19343
#, no-wrap
msgid ""
";; The \"US international\" layout, which is the US layout plus\n"
";; dead keys to enter accented characters.  This is for an\n"
";; Apple MacBook keyboard.\n"
"(keyboard-layout \"us\" \"intl\" #:model \"macbook78\")\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19347
msgid "See the @file{share/X11/xkb} directory of the @code{xkeyboard-config} package for a complete list of supported layouts, variants, and models."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19348
#, no-wrap
msgid "keyboard layout, configuration"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19352
msgid "Let's say you want your system to use the Turkish keyboard layout throughout your system---bootloader, console, and Xorg.  Here's what your system configuration would look like:"
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:19353
#, no-wrap
msgid "set-xorg-configuration"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19357
#, no-wrap
msgid ""
";; Using the Turkish layout for the bootloader, the console,\n"
";; and for Xorg.\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19369
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; ...\n"
"  (keyboard-layout (keyboard-layout \"tr\"))  ;for the console\n"
"  (bootloader (bootloader-configuration\n"
"                (bootloader grub-efi-bootloader)\n"
"                (targets '(\"/boot/efi\"))\n"
"                (keyboard-layout keyboard-layout))) ;for GRUB\n"
"  (services (cons (set-xorg-configuration\n"
"                    (xorg-configuration             ;for Xorg\n"
"                      (keyboard-layout keyboard-layout)))\n"
"                  %desktop-services)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19376
msgid "In the example above, for GRUB and for Xorg, we just refer to the @code{keyboard-layout} field defined above, but we could just as well refer to a different layout.  The @code{set-xorg-configuration} procedure communicates the desired Xorg configuration to the graphical log-in manager, by default GDM."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19379
msgid "We've discussed how to specify the @emph{default} keyboard layout of your system when it starts, but you can also adjust it at run time:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:19384
msgid "If you're using GNOME, its settings panel has a ``Region & Language'' entry where you can select one or more keyboard layouts."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:19389
msgid "Under Xorg, the @command{setxkbmap} command (from the same-named package)  allows you to change the current layout.  For example, this is how you would change the layout to US Dvorak:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:19392
#, no-wrap
msgid "setxkbmap us dvorak\n"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:19399
msgid "The @code{loadkeys} command changes the keyboard layout in effect in the Linux console.  However, note that @code{loadkeys} does @emph{not} use the XKB keyboard layout categorization described above.  The command below loads the French bépo layout:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:19402
#, no-wrap
msgid "loadkeys fr-bepo\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19408
#, no-wrap
msgid "locale"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19415
msgid "A @dfn{locale} defines cultural conventions for a particular language and region of the world (@pxref{Locales,,, libc, The GNU C Library Reference Manual}).  Each locale has a name that typically has the form @code{@var{language}_@var{territory}.@var{codeset}}---e.g., @code{fr_LU.utf8} designates the locale for the French language, with cultural conventions from Luxembourg, and using the UTF-8 encoding."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19416
#, no-wrap
msgid "locale definition"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19420
msgid "Usually, you will want to specify the default locale for the machine using the @code{locale} field of the @code{operating-system} declaration (@pxref{operating-system Reference, @code{locale}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19429
msgid "The selected locale is automatically added to the @dfn{locale definitions} known to the system if needed, with its codeset inferred from its name---e.g., @code{bo_CN.utf8} will be assumed to use the @code{UTF-8} codeset.  Additional locale definitions can be specified in the @code{locale-definitions} slot of @code{operating-system}---this is useful, for instance, if the codeset could not be inferred from the locale name.  The default set of locale definitions includes some widely used locales, but not all the available locales, in order to save space."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19432
msgid "For instance, to add the North Frisian locale for Germany, the value of that field may be:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19437
#, no-wrap
msgid ""
"(cons (locale-definition\n"
"        (name \"fy_DE.utf8\") (source \"fy_DE\"))\n"
"      %default-locale-definitions)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19441
msgid "Likewise, to save space, one might want @code{locale-definitions} to list only the locales that are actually used, as in:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19446
#, no-wrap
msgid ""
"(list (locale-definition\n"
"        (name \"ja_JP.eucjp\") (source \"ja_JP\")\n"
"        (charset \"EUC-JP\")))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19455
msgid "The compiled locale definitions are available at @file{/run/current-system/locale/X.Y}, where @code{X.Y} is the libc version, which is the default location where the GNU@tie{}libc provided by Guix looks for locale data.  This can be overridden using the @env{LOCPATH} environment variable (@pxref{locales-and-locpath, @env{LOCPATH} and locale packages})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19458
msgid "The @code{locale-definition} form is provided by the @code{(gnu system locale)} module.  Details are given below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:19459
#, no-wrap
msgid "{Data Type} locale-definition"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:19461
msgid "This is the data type of a locale definition."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19467
msgid "The name of the locale.  @xref{Locale Names,,, libc, The GNU C Library Reference Manual}, for more information on locale names."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19471
msgid "The name of the source for that locale.  This is typically the @code{@var{language}_@var{territory}} part of the locale name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19472
#, no-wrap
msgid "@code{charset} (default: @code{\"UTF-8\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19476
msgid "The ``character set'' or ``code set'' for that locale, @uref{https://www.iana.org/assignments/character-sets, as defined by IANA}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19480
#, no-wrap
msgid "%default-locale-definitions"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19484
msgid "A list of commonly used UTF-8 locales, used as the default value of the @code{locale-definitions} field of @code{operating-system} declarations."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19485
#, no-wrap
msgid "locale name"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19486
#, no-wrap
msgid "normalized codeset in locale names"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19492
msgid "These locale definitions use the @dfn{normalized codeset} for the part that follows the dot in the name (@pxref{Using gettextized software, normalized codeset,, libc, The GNU C Library Reference Manual}).  So for instance it has @code{uk_UA.utf8} but @emph{not}, say, @code{uk_UA.UTF-8}."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:19494
#, no-wrap
msgid "Locale Data Compatibility Considerations"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19496
#, no-wrap
msgid "incompatibility, of locale data"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19503
msgid "@code{operating-system} declarations provide a @code{locale-libcs} field to specify the GNU@tie{}libc packages that are used to compile locale declarations (@pxref{operating-system Reference}).  ``Why would I care?'', you may ask.  Well, it turns out that the binary format of locale data is occasionally incompatible from one libc version to another."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19515
msgid "For instance, a program linked against libc version 2.21 is unable to read locale data produced with libc 2.22; worse, that program @emph{aborts} instead of simply ignoring the incompatible locale data@footnote{Versions 2.23 and later of GNU@tie{}libc will simply skip the incompatible locale data, which is already an improvement.}.  Similarly, a program linked against libc 2.22 can read most, but not all, of the locale data from libc 2.21 (specifically, @env{LC_COLLATE} data is incompatible); thus calls to @code{setlocale} may fail, but programs will not abort."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19520
msgid "The ``problem'' with Guix is that users have a lot of freedom: They can choose whether and when to upgrade software in their profiles, and might be using a libc version different from the one the system administrator used to build the system-wide locale data."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19524
msgid "Fortunately, unprivileged users can also install their own locale data and define @env{GUIX_LOCPATH} accordingly (@pxref{locales-and-locpath, @env{GUIX_LOCPATH} and locale packages})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19531
msgid "Still, it is best if the system-wide locale data at @file{/run/current-system/locale} is built for all the libc versions actually in use on the system, so that all the programs can access it---this is especially crucial on a multi-user system.  To do that, the administrator can specify several libc packages in the @code{locale-libcs} field of @code{operating-system}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19534
#, no-wrap
msgid ""
"(use-package-modules base)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19538
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (locale-libcs (list glibc-2.21 (canonical-package glibc))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19543
msgid "This example would lead to a system containing locale definitions for both libc 2.21 and the current version of libc in @file{/run/current-system/locale}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19548
#, no-wrap
msgid "system services"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19554
msgid "An important part of preparing an @code{operating-system} declaration is listing @dfn{system services} and their configuration (@pxref{Using the Configuration System}).  System services are typically daemons launched when the system boots, or other actions needed at that time---e.g., configuring network access."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19561
msgid "Guix has a broad definition of ``service'' (@pxref{Service Composition}), but many services are managed by the GNU@tie{}Shepherd (@pxref{Shepherd Services}).  On a running system, the @command{herd} command allows you to list the available services, show their status, start and stop them, or do other specific operations (@pxref{Jump Start,,, shepherd, The GNU Shepherd Manual}).  For example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:19564
#, no-wrap
msgid "# herd status\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19569
msgid "The above command, run as @code{root}, lists the currently defined services.  The @command{herd doc} command shows a synopsis of the given service and its associated actions:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:19573
#, no-wrap
msgid ""
"# herd doc nscd\n"
"Run libc's name service cache daemon (nscd).\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:19576
#, no-wrap
msgid ""
"# herd doc nscd action invalidate\n"
"invalidate: Invalidate the given cache--e.g., 'hosts' for host name lookups.\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19581
msgid "The @command{start}, @command{stop}, and @command{restart} sub-commands have the effect you would expect.  For instance, the commands below stop the nscd service and restart the Xorg display server:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:19588
#, no-wrap
msgid ""
"# herd stop nscd\n"
"Service nscd has been stopped.\n"
"# herd restart xorg-server\n"
"Service xorg-server has been stopped.\n"
"Service xorg-server has been started.\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19590
#, no-wrap
msgid "configuration, action for shepherd services"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19591
#, no-wrap
msgid "configuration file, of a shepherd service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19595
msgid "For some services, @command{herd configuration} returns the name of the service's configuration file, which can be handy to inspect its configuration:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:19599
#, no-wrap
msgid ""
"# herd configuration sshd\n"
"/gnu/store/@dots{}-sshd_config\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19604
msgid "The following sections document the available services, starting with the core services, that may be used in an @code{operating-system} declaration."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19652
msgid "The @code{(gnu services base)} module provides definitions for the basic services that one expects from the system.  The services exported by this module are listed below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19659
msgid "This variable contains a list of basic services (@pxref{Service Types and Services}, for more information on service objects) one would expect from the system: a login service (mingetty) on each tty, syslogd, the libc name service cache daemon (nscd), the udev device manager, and more."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19664
msgid "This is the default value of the @code{services} field of @code{operating-system} declarations.  Usually, when customizing a system, you will want to append services to @code{%base-services}, like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19669
#, no-wrap
msgid ""
"(append (list (service avahi-service-type)\n"
"              (service openssh-service-type))\n"
"        %base-services)\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19672
#, no-wrap
msgid "special-files-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19675
msgid "This is the service that sets up ``special files'' such as @file{/bin/sh}; an instance of it is part of @code{%base-services}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19679
msgid "The value associated with @code{special-files-service-type} services must be a list of two-element lists where the first element is the ``special file'' and the second element is its target.  By default it is:"
msgstr ""

#. type: file{#1}
#: guix-git/doc/guix.texi:19680
#, no-wrap
msgid "/bin/sh"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19681
#, no-wrap
msgid "@file{sh}, in @file{/bin}"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19685
#, no-wrap
msgid ""
"`((\"/bin/sh\" ,(file-append bash \"/bin/sh\"))\n"
"  (\"/usr/bin/env\" ,(file-append coreutils \"/bin/env\")))\n"
msgstr ""

#. type: file{#1}
#: guix-git/doc/guix.texi:19687
#, no-wrap
msgid "/usr/bin/env"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19688
#, no-wrap
msgid "@file{env}, in @file{/usr/bin}"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19691
msgid "If you want to add, say, @code{/bin/bash} to your system, you can change it to:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19696
#, no-wrap
msgid ""
"`((\"/bin/sh\" ,(file-append bash \"/bin/sh\"))\n"
"  (\"/usr/bin/env\" ,(file-append coreutils \"/bin/env\"))\n"
"  (\"/bin/bash\" ,(file-append bash \"/bin/bash\")))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19703
msgid "Since this is part of @code{%base-services}, you can use @code{modify-services} to customize the set of special files (@pxref{Service Reference, @code{modify-services}}).  But the simple way to add a special file is @i{via} the @code{extra-special-file} procedure (see below)."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:19705
#, no-wrap
msgid "{Procedure} extra-special-file file target"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:19707
msgid "Use @var{target} as the ``special file'' @var{file}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:19711
msgid "For example, adding the following lines to the @code{services} field of your operating system declaration leads to a @file{/usr/bin/env} symlink:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19715
#, no-wrap
msgid ""
"(extra-special-file \"/usr/bin/env\"\n"
"                    (file-append coreutils \"/bin/env\"))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:19720
msgid "This procedure is meant for @code{/bin/sh}, @code{/usr/bin/env} and similar targets.  In particular, use for targets under @code{/etc} might not work as expected if the target is managed by Guix in other ways."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19722
#, fuzzy, no-wrap
#| msgid "Services"
msgid "host-name-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:19726
msgid "Type of the service that sets the system host name, whose value is a string. This service is included in @code{operating-system} by default (@pxref{operating-system-essential-services,@code{essential-services}})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19728
#, no-wrap
msgid "console-font-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19733
msgid "Install the given fonts on the specified ttys (fonts are per virtual console on the kernel Linux).  The value of this service is a list of tty/font pairs.  The font can be the name of a font provided by the @code{kbd} package or any valid argument to @command{setfont}, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19742
#, no-wrap
msgid ""
"`((\"tty1\" . \"LatGrkCyr-8x16\")\n"
"  (\"tty2\" . ,(file-append\n"
"                font-tamzen\n"
"                \"/share/kbd/consolefonts/TamzenForPowerline10x20.psf\"))\n"
"  (\"tty3\" . ,(file-append\n"
"                font-terminus\n"
"                \"/share/consolefonts/ter-132n\"))) ; for HDPI\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19745
#, fuzzy, no-wrap
#| msgid "Services"
msgid "hosts-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:19749
msgid "Type of the service that populates the entries for (@file{/etc/hosts}).  This service type can be @emph{extended} by passing it a list of @code{host} records."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19751
msgid "The example below shows how to add two entries to @file{/etc/hosts}:"
msgstr ""

#.  The domain names below SHOULD NOT be translated.
#. type: lisp
#: guix-git/doc/guix.texi:19762
#, no-wrap
msgid ""
"(simple-service 'add-extra-hosts\n"
"                hosts-service-type\n"
"                (list (host \"192.0.2.1\" \"example.com\"\n"
"                            '(\"example.net\" \"example.org\"))\n"
"                      (host \"2001:db8::1\" \"example.com\"\n"
"                            '(\"example.net\" \"example.org\"))))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19765
#, no-wrap
msgid "@file{/etc/hosts} default entries"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:19767
msgid "By default @file{/etc/hosts} comes with the following entries:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:19770
#, no-wrap
msgid ""
"127.0.0.1 localhost @var{host-name}\n"
"::1       localhost @var{host-name}\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:19776
msgid "For most setups this is what you want though if you find yourself in the situation where you want to change the default entries, you can do so in @code{operating-system} via @code{modify-services} (@pxref{Service Reference,@code{modify-services}})."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:19779
msgid "The following example shows how to unset @var{host-name} from being an alias of @code{localhost}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19782 guix-git/doc/guix.texi:21290
#: guix-git/doc/guix.texi:21365
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19789
#, no-wrap
msgid ""
"  (essential-services\n"
"   (modify-services\n"
"     (operating-system-default-essential-services this-operating-system)\n"
"     (hosts-service-type config => (list\n"
"                                     (host \"127.0.0.1\" \"localhost\")\n"
"                                     (host \"::1\"       \"localhost\"))))))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:19794
#, no-wrap
msgid "{Procedure} host @var{address} @var{canonical-name} [@var{aliases}]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:19797
msgid "Return a new record for the host at @var{address} with the given @var{canonical-name} and possibly @var{aliases}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:19801
msgid "@var{address} must be a string denoting a valid IPv4 or IPv6 address, and @var{canonical-name} and the strings listed in @var{aliases} must be valid host names."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19803
#, fuzzy, no-wrap
#| msgid "Services"
msgid "login-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:19806
msgid "Type of the service that provides a console login service, whose value is a @code{<login-configuration>} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:19808
#, no-wrap
msgid "{Data Type} login-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:19811
msgid "Data type representing the configuration of login, which specifies the @acronym{MOTD, message of the day}, among other things."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:19814 guix-git/doc/guix.texi:20969
#, no-wrap
msgid "motd"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19815
#, no-wrap
msgid "message of the day"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19817 guix-git/doc/guix.texi:20971
msgid "A file-like object containing the ``message of the day''."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19818 guix-git/doc/guix.texi:20972
#: guix-git/doc/guix.texi:24977
#, no-wrap
msgid "@code{allow-empty-passwords?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19821 guix-git/doc/guix.texi:20975
msgid "Allow empty passwords by default so that first-time users can log in when the 'root' account has just been created."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19825
#, fuzzy, no-wrap
#| msgid "Services"
msgid "mingetty-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:19829
msgid "Type of the service that runs Mingetty, an implementation of the virtual console log-in.  The value for this service is a @code{<mingetty-configuration>} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:19831
#, no-wrap
msgid "{Data Type} mingetty-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:19834
msgid "Data type representing the configuration of Mingetty, which specifies the tty to run, among other things."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:19836 guix-git/doc/guix.texi:19920
#: guix-git/doc/guix.texi:44207
#, no-wrap
msgid "tty"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19838
msgid "The name of the console this Mingetty runs on---e.g., @code{\"tty1\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19839 guix-git/doc/guix.texi:19949
#: guix-git/doc/guix.texi:20111
#, no-wrap
msgid "@code{auto-login} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19843
msgid "When true, this field must be a string denoting the user name under which the system automatically logs in.  When it is @code{#f}, a user name and password must be entered to log in."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19844
#, no-wrap
msgid "@code{login-program} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19848
msgid "This must be either @code{#f}, in which case the default log-in program is used (@command{login} from the Shadow tool suite), or a gexp denoting the name of the log-in program."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19849
#, no-wrap
msgid "@code{login-pause?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19852
msgid "When set to @code{#t} in conjunction with @var{auto-login}, the user will have to press a key before the log-in shell is launched."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19853
#, no-wrap
msgid "@code{clear-on-logout?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19857
msgid "When set to @code{#t}, the screen will be cleared before showing the login prompt.  The field name is bit unfortunate, since it controls clearing also before the initial login, not just after a logout."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19858 guix-git/doc/guix.texi:20071
#, no-wrap
msgid "@code{delay} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19860
msgid "When set to a number, sleep that many seconds after startup."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19861
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{print-issue} (default: @code{#t})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:19865
msgid "When set to @code{#t}, write out a new line and the content of @file{/etc/issue}.  Value of @code{'no-nl} can be used to suppress the new line."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19866
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{print-hostname} (default: @code{#t})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:19870
msgid "When set to @code{#t}, print the host name before the login prompt.  The host name is printed up to the first dot.  Can be set to @code{'long} to print the full host name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19871 guix-git/doc/guix.texi:20075
#, no-wrap
msgid "@code{nice} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19873
msgid "When set to a number, change the process priority using @code{nice}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19874
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{working-directory} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:19877
msgid "When set to a string, change into that directory before calling the login program."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19878
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{root-directory} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:19881
msgid "When set to a string, use this directory at the process's root directory."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:19882
#, fuzzy, no-wrap
#| msgid "Requirements"
msgid "shepherd-requirement"
msgstr "Requisiti"

#. type: table
#: guix-git/doc/guix.texi:19885
msgid "List of shepherd requirements.  Unless you know what you are doing, it is recommended to extend the default list instead of overriding it."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19888
msgid "As an example, when using auto-login on a system with elogind, it is necessary to wait on the @code{'dbus-system} service:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19900
#, no-wrap
msgid ""
"(modify-services %base-services\n"
"  (mingetty-service-type config =>\n"
"                         (mingetty-configuration\n"
"                          (inherit config)\n"
"                          ;; Automatically log in as \"guest\".\n"
"                          (auto-login \"guest\")\n"
"                          (shepherd-requirement\n"
"                           (cons 'dbus-system\n"
"                                 (mingetty-configuration-shepherd-requirement\n"
"                                  config))))))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19902
#, no-wrap
msgid "@code{mingetty} (default: @var{mingetty})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19904
msgid "The Mingetty package to use."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19908
#, fuzzy, no-wrap
#| msgid "Services"
msgid "agetty-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:19912
msgid "Type of the service that runs agetty, which implements virtual and serial console log-in.  The value for this service is a @code{<agetty-configuration>} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:19914
#, no-wrap
msgid "{Data Type} agetty-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:19918
msgid "Data type representing the configuration of agetty, which specifies the tty to run, among other things@footnote{See the @code{agetty(8)} man page for more information.}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19924
msgid "The name of the console this agetty runs on, as a string---e.g., @code{\"ttyS0\"}.  This argument is optional, it will default to a reasonable default serial port used by the kernel Linux."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19928
msgid "For this, if there is a value for an option @code{agetty.tty} in the kernel command line, agetty will extract the device name of the serial port from it and use that."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19932
msgid "If not and if there is a value for an option @code{console} with a tty in the Linux command line, agetty will extract the device name of the serial port from it and use that."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19936
msgid "In both cases, agetty will leave the other serial device settings (baud rate etc.)@: alone---in the hope that Linux pinned them to the correct values."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19937 guix-git/doc/guix.texi:44393
#, no-wrap
msgid "@code{baud-rate} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19940
msgid "A string containing a comma-separated list of one or more baud rates, in descending order."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19941
#, no-wrap
msgid "@code{term} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19944
msgid "A string containing the value used for the @env{TERM} environment variable."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19945
#, no-wrap
msgid "@code{eight-bits?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19948
msgid "When @code{#t}, the tty is assumed to be 8-bit clean, and parity detection is disabled."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19952 guix-git/doc/guix.texi:20114
msgid "When passed a login name, as a string, the specified user will be logged in automatically without prompting for their login name or password."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19953
#, no-wrap
msgid "@code{no-reset?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19955
msgid "When @code{#t}, don't reset terminal cflags (control modes)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19956
#, no-wrap
msgid "@code{host} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19959
msgid "This accepts a string containing the ``login_host'', which will be written into the @file{/var/run/utmpx} file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19960
#, no-wrap
msgid "@code{remote?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19964
msgid "When set to @code{#t} in conjunction with @var{host}, this will add an @code{-r} fakehost option to the command line of the login program specified in @var{login-program}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19965
#, no-wrap
msgid "@code{flow-control?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19967
msgid "When set to @code{#t}, enable hardware (RTS/CTS) flow control."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19968
#, no-wrap
msgid "@code{no-issue?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19971
msgid "When set to @code{#t}, the contents of the @file{/etc/issue} file will not be displayed before presenting the login prompt."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19972
#, no-wrap
msgid "@code{init-string} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19975
msgid "This accepts a string that will be sent to the tty or modem before sending anything else.  It can be used to initialize a modem."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19976
#, no-wrap
msgid "@code{no-clear?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19979
msgid "When set to @code{#t}, agetty will not clear the screen before showing the login prompt."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19980
#, no-wrap
msgid "@code{login-program} (default: (file-append shadow \"/bin/login\"))"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19984
msgid "This must be either a gexp denoting the name of a log-in program, or unset, in which case the default value is the @command{login} from the Shadow tool suite."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19985
#, no-wrap
msgid "@code{local-line} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19989
msgid "Control the CLOCAL line flag.  This accepts one of three symbols as arguments, @code{'auto}, @code{'always}, or @code{'never}.  If @code{#f}, the default value chosen by agetty is @code{'auto}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19990
#, no-wrap
msgid "@code{extract-baud?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19993
msgid "When set to @code{#t}, instruct agetty to try to extract the baud rate from the status messages produced by certain types of modems."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19994
#, no-wrap
msgid "@code{skip-login?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19998
msgid "When set to @code{#t}, do not prompt the user for a login name.  This can be used with @var{login-program} field to use non-standard login systems."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19999
#, no-wrap
msgid "@code{no-newline?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20002
msgid "When set to @code{#t}, do not print a newline before printing the @file{/etc/issue} file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20004
#, no-wrap
msgid "@code{login-options} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20009
msgid "This option accepts a string containing options that are passed to the login program.  When used with the @var{login-program}, be aware that a malicious user could try to enter a login name containing embedded options that could be parsed by the login program."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20010
#, no-wrap
msgid "@code{login-pause} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20014
msgid "When set to @code{#t}, wait for any key before showing the login prompt.  This can be used in conjunction with @var{auto-login} to save memory by lazily spawning shells."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20015 guix-git/doc/guix.texi:37764
#, no-wrap
msgid "@code{chroot} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20018
msgid "Change root to the specified directory.  This option accepts a directory path as a string."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20019
#, no-wrap
msgid "@code{hangup?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20022
msgid "Use the Linux system call @code{vhangup} to do a virtual hangup of the specified terminal."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20023
#, no-wrap
msgid "@code{keep-baud?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20027
msgid "When set to @code{#t}, try to keep the existing baud rate.  The baud rates from @var{baud-rate} are used when agetty receives a @key{BREAK} character."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20028
#, no-wrap
msgid "@code{timeout} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20031
msgid "When set to an integer value, terminate if no user name could be read within @var{timeout} seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20032
#, no-wrap
msgid "@code{detect-case?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20038
msgid "When set to @code{#t}, turn on support for detecting an uppercase-only terminal.  This setting will detect a login name containing only uppercase letters as indicating an uppercase-only terminal and turn on some upper-to-lower case conversions.  Note that this will not support Unicode characters."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20039
#, no-wrap
msgid "@code{wait-cr?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20044
msgid "When set to @code{#t}, wait for the user or modem to send a carriage-return or linefeed character before displaying @file{/etc/issue} or login prompt.  This is typically used with the @var{init-string} option."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20045
#, no-wrap
msgid "@code{no-hints?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20048
msgid "When set to @code{#t}, do not print hints about Num, Caps, and Scroll locks."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20049
#, no-wrap
msgid "@code{no-hostname?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20052
msgid "By default, the hostname is printed.  When this option is set to @code{#t}, no hostname will be shown at all."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20053
#, no-wrap
msgid "@code{long-hostname?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20057
msgid "By default, the hostname is only printed until the first dot.  When this option is set to @code{#t}, the fully qualified hostname by @code{gethostname} or @code{getaddrinfo} is shown."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20058
#, no-wrap
msgid "@code{erase-characters} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20061
msgid "This option accepts a string of additional characters that should be interpreted as backspace when the user types their login name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20062
#, no-wrap
msgid "@code{kill-characters} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20066
msgid "This option accepts a string that should be interpreted to mean ``ignore all previous characters'' (also called a ``kill'' character) when the user types their login name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20067
#, no-wrap
msgid "@code{chdir} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20070
msgid "This option accepts, as a string, a directory path that will be changed to before login."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20074
msgid "This options accepts, as an integer, the number of seconds to sleep before opening the tty and displaying the login prompt."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20078
msgid "This option accepts, as an integer, the nice value with which to run the @command{login} program."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20079 guix-git/doc/guix.texi:20282
#: guix-git/doc/guix.texi:20467 guix-git/doc/guix.texi:22564
#: guix-git/doc/guix.texi:31675 guix-git/doc/guix.texi:33149
#: guix-git/doc/guix.texi:35030 guix-git/doc/guix.texi:36789
#: guix-git/doc/guix.texi:37932 guix-git/doc/guix.texi:41427
#: guix-git/doc/guix.texi:45536 guix-git/doc/guix.texi:51189
#: guix-git/doc/guix.texi:51955 guix-git/doc/guix.texi:52019
#, no-wrap
msgid "@code{extra-options} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20082
msgid "This option provides an ``escape hatch'' for the user to provide arbitrary command-line arguments to @command{agetty} as a list of strings."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20083 guix-git/doc/guix.texi:22081
#: guix-git/doc/guix.texi:22312 guix-git/doc/guix.texi:29802
#: guix-git/doc/guix.texi:34650
#, no-wrap
msgid "@code{shepherd-requirement} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20086
msgid "The option can be used to provides extra shepherd requirements (for example @code{'syslogd}) to the respective @code{'term-}* shepherd service."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20090
#, fuzzy, no-wrap
#| msgid "Services"
msgid "kmscon-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:20094
msgid "Type of the service that runs @uref{https://www.freedesktop.org/wiki/Software/kmscon,kmscon}, which implements virtual console log-in.  The value for this service is a @code{<kmscon-configuration>} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20096
#, no-wrap
msgid "{Data Type} kmscon-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20099
msgid "Data type representing the configuration of Kmscon, which specifies the tty to run, among other things."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:20101
#, no-wrap
msgid "virtual-terminal"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20103
msgid "The name of the console this Kmscon runs on---e.g., @code{\"tty1\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20104
#, no-wrap
msgid "@code{login-program} (default: @code{#~(string-append #$shadow \"/bin/login\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20107
msgid "A gexp denoting the name of the log-in program.  The default log-in program is @command{login} from the Shadow tool suite."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20108
#, no-wrap
msgid "@code{login-arguments} (default: @code{'(\"-p\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20110
msgid "A list of arguments to pass to @command{login}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20115
#, no-wrap
msgid "@code{hardware-acceleration?} (default: #f)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20117
msgid "Whether to use hardware acceleration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20118
#, no-wrap
msgid "@code{font-engine} (default: @code{\"pango\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20120
msgid "Font engine used in Kmscon."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20121
#, no-wrap
msgid "@code{font-size} (default: @code{12})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20123
msgid "Font size used in Kmscon."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20127
msgid "If this is @code{#f}, Kmscon uses the default keyboard layout---usually US English (``qwerty'') for a 105-key PC keyboard."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20131
msgid "Otherwise this must be a @code{keyboard-layout} object specifying the keyboard layout.  @xref{Keyboard Layout}, for more information on how to specify the keyboard layout."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20132
#, no-wrap
msgid "@code{kmscon} (default: @var{kmscon})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20134
msgid "The Kmscon package to use."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20139
#, fuzzy, no-wrap
#| msgid "Services"
msgid "nscd-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:20142
msgid "Type of the service that runs the libc @abbr{nscd, name service cache daemon}, whose value is an @code{<nscd-configuration>} object."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20144
msgid "For convenience, the Shepherd service for nscd provides the following actions:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20146
#, no-wrap
msgid "invalidate"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20147
#, no-wrap
msgid "nscd, cache invalidation"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20148
#, no-wrap
msgid "cache invalidation, nscd"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20150
msgid "This invalidate the given cache.  For instance, running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:20153
#, no-wrap
msgid "herd invalidate nscd hosts\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20157
msgid "invalidates the host name lookup cache of nscd."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20158
#, no-wrap
msgid "statistics"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20161
msgid "Running @command{herd statistics nscd} displays information about nscd usage and caches."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20164
#, no-wrap
msgid "{Data Type} nscd-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20167
msgid "Data type representing the @abbr{nscd, name service cache daemon} configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20170
#, no-wrap
msgid "@code{name-services} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20173
msgid "List of packages denoting @dfn{name services} that must be visible to the nscd---e.g., @code{(list @var{nss-mdns})}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20174
#, no-wrap
msgid "@code{glibc} (default: @var{glibc})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20177
msgid "Package object denoting the GNU C Library providing the @command{nscd} command."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20178 guix-git/doc/guix.texi:44397
#, no-wrap
msgid "@code{log-file} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20183
msgid "Name of the nscd log file.  Debugging output goes to that file when @code{debug-level} is strictly positive, or to standard error if it is @code{#f}.  Regular messages are written to syslog when @code{debug-level} is zero, regardless of the value of @code{log-file}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20184
#, no-wrap
msgid "@code{debug-level} (default: @code{0})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20187
msgid "Integer denoting the debugging levels.  Higher numbers mean that more debugging output is logged."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20188
#, no-wrap
msgid "@code{caches} (default: @code{%nscd-default-caches})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20191
msgid "List of @code{<nscd-cache>} objects denoting things to be cached; see below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20195
#, no-wrap
msgid "{Data Type} nscd-cache"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20197
msgid "Data type representing a cache database of nscd and its parameters."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20200 guix-git/doc/guix.texi:27962
#, no-wrap
msgid "database"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20205
msgid "This is a symbol representing the name of the database to be cached.  Valid values are @code{passwd}, @code{group}, @code{hosts}, and @code{services}, which designate the corresponding NSS database (@pxref{NSS Basics,,, libc, The GNU C Library Reference Manual})."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:20206
#, no-wrap
msgid "positive-time-to-live"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:20207
#, no-wrap
msgid "@code{negative-time-to-live} (default: @code{20})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20210
msgid "A number representing the number of seconds during which a positive or negative lookup result remains in cache."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20211
#, no-wrap
msgid "@code{check-files?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20214
msgid "Whether to check for updates of the files corresponding to @var{database}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20218
msgid "For instance, when @var{database} is @code{hosts}, setting this flag instructs nscd to check for updates in @file{/etc/hosts} and to take them into account."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20219
#, no-wrap
msgid "@code{persistent?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20221
msgid "Whether the cache should be stored persistently on disk."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20222
#, no-wrap
msgid "@code{shared?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20224
msgid "Whether the cache should be shared among users."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20225
#, no-wrap
msgid "@code{max-database-size} (default: 32@tie{}MiB)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20227
msgid "Maximum size in bytes of the database cache."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20234
#, no-wrap
msgid "%nscd-default-caches"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20237
msgid "List of @code{<nscd-cache>} objects used by default by @code{nscd-configuration} (see above)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20243
msgid "It enables persistent and aggressive caching of service and host name lookups.  The latter provides better host name lookup performance, resilience in the face of unreliable name servers, and also better privacy---often the result of host name lookups is in local cache, so external name servers do not even need to be queried."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20245
#, no-wrap
msgid "syslog, with external syslogd"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20246
#, no-wrap
msgid "logging, syslog"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20247
#, fuzzy, no-wrap
#| msgid "Services"
msgid "syslog-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:20250
msgid "Type of the service that runs the syslog daemon (@command{syslogd}), whose value is a @code{<syslog-configuration>} object (see below)."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:20255
msgid "This service is redundant with and for the most part superseded by @code{shepherd-system-log-service-type} (@pxref{shepherd-system-log, the Shepherd system log})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:20262
msgid "To have a modified @code{syslog-configuration} come into effect after reconfiguring your system, the @samp{reload} action should be preferred to restarting the service, as many services such as the login manager depend on it and would be restarted as well:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:20265
#, no-wrap
msgid "# herd reload syslog\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:20269
msgid "which will cause the running @command{syslogd} process to reload its configuration."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20270
#, no-wrap
msgid "{Data Type} syslog-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20272
msgid "Data type representing the configuration of the syslog daemon."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20274
#, no-wrap
msgid "@code{syslogd} (default: @code{#~(string-append #$inetutils \"/libexec/syslogd\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20276
msgid "The syslog daemon to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20277
#, no-wrap
msgid "@code{config-file} (default: @code{%default-syslog.conf})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20281
msgid "The syslog configuration file to use.  @xref{syslogd invocation,,, inetutils, GNU Inetutils}, for more information on the configuration file syntax."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20284
msgid "List of extra command-line options for @command{syslog}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20288
#, no-wrap
msgid "guix-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20292
msgid "This is the type of the service that runs the build daemon, @command{guix-daemon} (@pxref{Invoking guix-daemon}).  Its value must be a @code{guix-configuration} record as described below."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:20295
msgid "guix-configuration-type"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20295
#, no-wrap
msgid "{Data Type} guix-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20298
msgid "This data type represents the configuration of the Guix build daemon.  @xref{Invoking guix-daemon}, for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20300
#, no-wrap
msgid "@code{guix} (default: @var{guix})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20303
msgid "The Guix package to use.  @xref{Customizing the System-Wide Guix} to learn how to provide a package with a pre-configured set of channels."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20304
#, no-wrap
msgid "unprivileged @command{guix-daemon}"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20305
#, no-wrap
msgid "rootless @command{guix-daemon}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20306
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{privileged?} (default: @code{#t})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:20308
msgid "Whether to run @command{guix-daemon} as root."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20316
msgid "When true, @command{guix-daemon} runs with root privileges and build processes run under unprivileged user accounts as specified by @code{build-group} and @code{build-accounts} (see below); when false, @command{guix-daemon} run as the @code{guix-daemon} user, which is unprivileged, and so do build processes.  The unprivileged or ``rootless'' mode can reduce the impact of some classes of vulnerabilities that could affect the daemon."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20319
msgid "The default is currently @code{#t} (@command{guix-daemon} runs with root privileges) but may eventually be changed to @code{#f}."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:20325
msgid "When changing this option, @file{/gnu/store}, @file{/var/guix}, and @file{/etc/guix} have their ownership automatically changed by the @code{guix-ownership} service to either the @code{guix-daemon} user or the @code{root} user (@pxref{unprivileged-daemon-migration})."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:20329
msgid "This can take a while, especially if @file{/gnu/store} is big; it cannot be interrupted and @command{guix-daemon} cannot be used until it has completed."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20333
msgid "@xref{Build Environment Setup}, for more information on the two ways to run @command{guix-daemon}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20334
#, no-wrap
msgid "@code{build-group} (default: @code{\"guixbuild\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20336
msgid "Name of the group for build user accounts."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20337
#, no-wrap
msgid "@code{build-accounts} (default: @code{10})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20339
msgid "Number of build user accounts to create."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20340
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{chroot?} (default: @code{'default})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:20346
msgid "The value should be one of @code{#t} or @code{#f}, in which case chroot is enabled or disabled, respectively; or it should be @code{'default}, which amounts to @code{#f} in Docker containers (so that they can be run in non-privileged mode)  or @code{#t} otherwise."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20347
#, no-wrap
msgid "@code{authorize-key?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20354
msgid "Whether to authorize the substitute keys listed in @code{authorized-keys}---by default that of @code{@value{SUBSTITUTE-SERVER-1}} and @code{@value{SUBSTITUTE-SERVER-2}} (@pxref{Substitutes})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20360
msgid "When @code{authorize-key?} is true, @file{/etc/guix/acl} cannot be changed by invoking @command{guix archive --authorize}.  You must instead adjust @code{guix-configuration} as you wish and reconfigure the system.  This ensures that your operating system configuration file is self-contained."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:20367
msgid "When booting or reconfiguring to a system where @code{authorize-key?} is true, the existing @file{/etc/guix/acl} file is backed up as @file{/etc/guix/acl.bak} if it was determined to be a manually modified file.  This is to facilitate migration from earlier versions, which allowed for in-place modifications to @file{/etc/guix/acl}."
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:20369
#, no-wrap
msgid "%default-authorized-guix-keys"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20370
#, no-wrap
msgid "@code{authorized-keys} (default: @code{%default-authorized-guix-keys})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20376
msgid "The list of authorized key files for archive imports, as a list of string-valued gexps (@pxref{Invoking guix archive}).  By default, it contains that of @code{@value{SUBSTITUTE-SERVER-1}} and @code{@value{SUBSTITUTE-SERVER-2}} (@pxref{Substitutes}).  See @code{substitute-urls} below for an example on how to change it."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20377
#, no-wrap
msgid "@code{use-substitutes?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20379
msgid "Whether to use substitutes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20380 guix-git/doc/guix.texi:38036
#, no-wrap
msgid "@code{substitute-urls} (default: @code{%default-substitute-urls})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20382 guix-git/doc/guix.texi:38038
msgid "The list of URLs where to look for substitutes by default."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20389
msgid "Suppose you would like to fetch substitutes from @code{guix.example.org} in addition to @code{@value{SUBSTITUTE-SERVER-1}}.  You will need to do two things: (1) add @code{guix.example.org} to @code{substitute-urls}, and (2) authorize its signing key, having done appropriate checks (@pxref{Substitute Server Authorization}).  The configuration below does exactly that:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20398
#, no-wrap
msgid ""
"(guix-configuration\n"
"  (substitute-urls\n"
"   (append (list \"https://guix.example.org\")\n"
"           %default-substitute-urls))\n"
"  (authorized-keys\n"
"   (append (list (local-file \"./guix.example.org-key.pub\"))\n"
"           %default-authorized-guix-keys)))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20403
msgid "This example assumes that the file @file{./guix.example.org-key.pub} contains the public key that @code{guix.example.org} uses to sign substitutes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20404
#, no-wrap
msgid "@code{generate-substitute-key?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20408
msgid "Whether to generate a @dfn{substitute key pair} under @file{/etc/guix/signing-key.pub} and @file{/etc/guix/signing-key.sec} if there is not already one."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20415
msgid "This key pair is used when exporting store items, for instance with @command{guix publish} (@pxref{Invoking guix publish}) or @command{guix archive} (@pxref{Invoking guix archive}).  Generating a key pair takes a few seconds when enough entropy is available and is only done once; you might want to turn it off for instance in a virtual machine that does not need it and where the extra boot time is a problem."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:20417
#, fuzzy
#| msgid "Documentation"
msgid "guix-configuration-channels"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:20417
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{channels} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:20421
msgid "List of channels to be specified in @file{/etc/guix/channels.scm}, which is what @command{guix pull} uses by default (@pxref{Invoking guix pull})."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:20428
msgid "When reconfiguring a system, the existing @file{/etc/guix/channels.scm} file is backed up as @file{/etc/guix/channels.scm.bak} if it was determined to be a manually modified file.  This is to facilitate migration from earlier versions, which allowed for in-place modifications to @file{/etc/guix/channels.scm}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20430
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-silent-time} (default: @code{3600})"
msgstr "Documentazione"

#. type: itemx
#: guix-git/doc/guix.texi:20431
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{timeout} (default: @code{(* 3600 24)})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:20435
msgid "The number of seconds of silence and the number of seconds of activity, respectively, after which a build process times out.  A value of zero disables the timeout."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20436
#, no-wrap
msgid "@code{log-compression} (default: @code{'gzip})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20439
msgid "The type of compression used for build logs---one of @code{gzip}, @code{bzip2}, or @code{none}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20440
#, no-wrap
msgid "@code{discover?} (default: @code{#f})"
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:20445
msgid "guix-configuration-build-machines"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20445
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{build-machines} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:20449
msgid "This field must be either @code{#f} or a list of gexps evaluating to a @code{build-machine} record or to a list of @code{build-machine} records (@pxref{Daemon Offload Setup})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20456
msgid "When it is @code{#f}, the @file{/etc/guix/machines.scm} file is left untouched.  Otherwise, the list of of gexps is written to @file{/etc/guix/machines.scm}; if a previously-existing file is found, it is backed up as @file{/etc/guix/machines.scm.bak}.  This allows you to declare build machines for offloading directly in the operating system declaration, like so:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20462
#, no-wrap
msgid ""
"(guix-configuration\n"
"  (build-machines\n"
"    (list #~(build-machine (name \"foo.example.org\") @dots{})\n"
"          #~(build-machine (name \"bar.example.org\") @dots{}))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20466
msgid "Additional build machines may be added @i{via} the @code{guix-extension} mechanism (see below)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20469
msgid "List of extra command-line options for @command{guix-daemon}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20470
#, no-wrap
msgid "@code{log-file} (default: @code{\"/var/log/guix-daemon.log\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20473
msgid "File where @command{guix-daemon}'s standard output and standard error are written."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20474
#, no-wrap
msgid "HTTP proxy, for @code{guix-daemon}"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20475
#, no-wrap
msgid "proxy, for @code{guix-daemon} HTTP access"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20476
#, no-wrap
msgid "@code{http-proxy} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20479
msgid "The URL of the HTTP and HTTPS proxy used for downloading fixed-output derivations and substitutes."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20482
msgid "It is also possible to change the daemon's proxy at run time through the @code{set-http-proxy} action, which restarts it:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:20485
#, no-wrap
msgid "herd set-http-proxy guix-daemon http://localhost:8118\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20488
msgid "To clear the proxy settings, run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:20491
#, no-wrap
msgid "herd set-http-proxy guix-daemon\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20493
#, no-wrap
msgid "@code{tmpdir} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20495
msgid "A directory path where the @command{guix-daemon} will perform builds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20496
#, no-wrap
msgid "@code{environment} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20499
msgid "Environment variables to be set before starting the daemon, as a list of @code{key=value} strings."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20500
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{socket-directory-permissions} (default: @code{#o755})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:20506
msgid "Permissions to set for the directory @file{/var/guix/daemon-socket}.  This, together with @code{socket-directory-group} and @code{socket-directory-user}, determines who can connect to the build daemon via its Unix socket.  TCP socket operation is unaffected by these."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20507
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{socket-directory-user} (default: @code{#f})"
msgstr "Documentazione"

#. type: itemx
#: guix-git/doc/guix.texi:20508
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{socket-directory-group} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:20511
msgid "User and group owning the @file{/var/guix/daemon-socket} directory or @code{#f} to keep the user or group as root."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20515
#, no-wrap
msgid "{Data Type} guix-extension"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20520
msgid "This data type represents the parameters of the Guix build daemon that are extendable. This is the type of the object that must be used within a guix service extension.  @xref{Service Composition}, for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20522 guix-git/doc/guix.texi:24145
#, no-wrap
msgid "@code{authorized-keys} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20524
msgid "A list of file-like objects where each element contains a public key."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20525
#, no-wrap
msgid "@code{substitute-urls} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20527
msgid "A list of strings where each element is a substitute URL."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20528
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{build-machines} (default: @code{'()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:20532
msgid "A list of gexps that evaluate to @code{build-machine} records or to a list of @code{build-machine} records.  (@pxref{Daemon Offload Setup})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20538
msgid "Using this field, a service may add new build machines to receive builds offloaded by the daemon.  This is useful for a service such as @code{hurd-vm-service-type}, which can make a GNU/Hurd virtual machine directly usable for offloading (@pxref{hurd-vm, @code{hurd-vm-service-type}})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20539
#, no-wrap
msgid "@code{chroot-directories} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20541
msgid "A list of file-like objects or strings pointing to additional directories the build daemon can use."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20544
#, fuzzy, no-wrap
#| msgid "Services"
msgid "udev-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:20548
msgid "Type of the service that runs udev, a service which populates the @file{/dev} directory dynamically, whose value is a @code{<udev-configuration>} object."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20556
msgid "Since the file names for udev rules and hardware description files matter, the configuration items for rules and hardware cannot simply be plain file-like objects with the rules content, because the name would be ignored.  Instead, they are directory file-like objects that contain optional rules in @file{lib/udev/rules.d} and optional hardware files in @file{lib/udev/hwdb.d}.  This way, the service can be configured with whole packages from which to take rules and hwdb files."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20562
msgid "The @code{udev-service-type} can be @emph{extended} with file-like directories that respect this hierarchy.  For convenience, the @code{udev-rule} and @code{file->udev-rule} can be used to construct udev rules, while @code{udev-hardware} and @code{file->udev-hardware} can be used to construct hardware description files."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20566
msgid "In an @code{operating-system} declaration, this service type can be @emph{extended} using procedures @code{udev-rules-service} and @code{udev-hardware-service}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20568
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} udev-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:20570
#, fuzzy
#| msgid "Documentation"
msgid "Data type representing the configuration of udev."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:20572
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "udev (default: @code{eudev}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:20577
msgid "Package object of the udev service.  This package is used at run-time, when compiled for the target system.  In order to generate the @file{hwdb.bin} hardware index, it is also used when generating the system definition, compiled for the current system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20578
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "debug? (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:20581
msgid "Whether to enable debug output.  The debug output is written to the system log, @file{/var/log/messages}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20582
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "rules (default: @code{'()}) (type: list-of-file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:20584
msgid "List of file-like objects denoting udev rule files under a sub-directory."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20585
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "hardware (default: @code{'()}) (type: list-of-file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:20588
msgid "List of file-like objects denoting udev hardware description files under a sub-directory."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:20592
#, no-wrap
msgid "{Procedure} udev-rule @var{file-name} @var{contents}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:20595
msgid "Return a udev-rule file named @var{file-name} containing the rules defined by the @var{contents} literal."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:20599
msgid "In the following example, a rule for a USB device is defined to be stored in the file @file{90-usb-thing.rules}.  The rule runs a script upon detecting a USB device with a given product identifier."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20607
#, no-wrap
msgid ""
"(define %example-udev-rule\n"
"  (udev-rule\n"
"    \"90-usb-thing.rules\"\n"
"    (string-append \"ACTION==\\\"add\\\", SUBSYSTEM==\\\"usb\\\", \"\n"
"                   \"ATTR@{product@}==\\\"Example\\\", \"\n"
"                   \"RUN+=\\\"/path/to/script\\\"\")))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:20610
#, no-wrap
msgid "{Procedure} udev-hardware @var{file-name} @var{contents}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:20613
msgid "Return a udev hardware description file named @var{file-name} containing the hardware information @var{contents}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:20615
#, no-wrap
msgid "{Procedure} udev-rules-service @var{name} @var{rules} [#:groups '()]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:20621
msgid "Return a service that extends @code{udev-service-type} with @var{rules} and @code{account-service-type} with @var{groups} as system groups.  This works by creating a singleton service type @code{@var{name}-udev-rules}, of which the returned service is an instance."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:20624
msgid "Here we show how it can be used to extend @code{udev-service-type} with the previously defined rule @code{%example-udev-rule}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20631
#, no-wrap
msgid ""
"(operating-system\n"
" ;; @dots{}\n"
" (services\n"
"   (cons (udev-rules-service 'usb-thing %example-udev-rule)\n"
"         %desktop-services)))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:20634
#, no-wrap
msgid "{Procedure} udev-hardware-service @var{name} @var{hardware}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:20637
msgid "Return a service that extends @code{udev-service-type} with @var{hardware}.  The service name is @code{@var{name}-udev-hardware}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:20639
#, no-wrap
msgid "{Procedure} file->udev-rule @var{file-name} @var{file}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:20642
msgid "Return a udev-rule file named @var{file-name} containing the rules defined within @var{file}, a file-like object."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:20644
msgid "The following example showcases how we can use an existing rule file."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20649
#, no-wrap
msgid ""
"(use-modules (guix download)     ;for url-fetch\n"
"             (guix packages)     ;for origin\n"
"             @dots{})\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20660
#, no-wrap
msgid ""
"(define %android-udev-rules\n"
"  (file->udev-rule\n"
"    \"51-android-udev.rules\"\n"
"    (let ((version \"20170910\"))\n"
"      (origin\n"
"       (method url-fetch)\n"
"       (uri (string-append \"https://raw.githubusercontent.com/M0Rf30/\"\n"
"                           \"android-udev-rules/\" version \"/51-android.rules\"))\n"
"       (sha256\n"
"        (base32 \"0lmmagpyb6xsq6zcr2w1cyx9qmjqmajkvrdbhjx32gqf1d9is003\"))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:20668
msgid "Since guix package definitions can be included in @var{rules} in order to use all their rules under the @file{lib/udev/rules.d} sub-directory, then in lieu of the previous @var{file->udev-rule} example, we could have used the @var{android-udev-rules} package which exists in Guix in the @code{(gnu packages android)} module."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:20669
#, fuzzy, no-wrap
msgid "{Procedure} file->udev-hardware @var{file-name} @var{file}"
msgstr "Canali"

#. type: deffn
#: guix-git/doc/guix.texi:20672
msgid "Return a udev hardware description file named @var{file-name} containing the rules defined within @var{file}, a file-like object."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:20682
msgid "The following example shows how to use the @var{android-udev-rules} package so that the Android tool @command{adb} can detect devices without root privileges.  It also details how to create the @code{adbusers} group, which is required for the proper functioning of the rules defined within the @code{android-udev-rules} package.  To create such a group, we must define it both as part of the @code{supplementary-groups} of our @code{user-account} declaration, as well as in the @var{groups} of the @code{udev-rules-service} procedure."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20687
#, no-wrap
msgid ""
"(use-modules (gnu packages android)  ;for android-udev-rules\n"
"             (gnu system shadow)     ;for user-group\n"
"             @dots{})\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20700
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (users (cons (user-account\n"
"                ;; @dots{}\n"
"                (supplementary-groups\n"
"                 '(\"adbusers\"   ;for adb\n"
"                   \"wheel\" \"netdev\" \"audio\" \"video\")))))\n"
"  ;; @dots{}\n"
"  (services\n"
"    (cons (udev-rules-service 'android android-udev-rules\n"
"                              #:groups '(\"adbusers\"))\n"
"          %desktop-services)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20702
#, no-wrap
msgid "urandom-seed-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20707
msgid "Save some entropy in @code{%random-seed-file} to seed @file{/dev/urandom} when rebooting.  It also tries to seed @file{/dev/urandom} from @file{/dev/hwrng} while booting, if @file{/dev/hwrng} exists and is readable."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20709
#, no-wrap
msgid "%random-seed-file"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20713
msgid "This is the name of the file where some random bytes are saved by @var{urandom-seed-service} to seed @file{/dev/urandom} when rebooting.  It defaults to @file{/var/lib/random-seed}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20715
#, no-wrap
msgid "mouse"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20716
#, no-wrap
msgid "gpm"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20717
#, no-wrap
msgid "gpm-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20722
msgid "This is the type of the service that runs GPM, the @dfn{general-purpose mouse daemon}, which provides mouse support to the Linux console.  GPM allows users to use the mouse in the console, notably to select, copy, and paste text."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20725
msgid "The value for services of this type must be a @code{gpm-configuration} (see below).  This service is not part of @code{%base-services}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20727
#, no-wrap
msgid "{Data Type} gpm-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20729
msgid "Data type representing the configuration of GPM."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20731
#, no-wrap
msgid "@code{options} (default: @code{%default-gpm-options})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20736
msgid "Command-line options passed to @command{gpm}.  The default set of options instruct @command{gpm} to listen to mouse events on @file{/dev/input/mice}.  @xref{Command Line,,, gpm, gpm manual}, for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20737
#, no-wrap
msgid "@code{gpm} (default: @code{gpm})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20739
msgid "The GPM package to use."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20744
#, no-wrap
msgid "guix-publish-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20748
msgid "This is the service type for @command{guix publish} (@pxref{Invoking guix publish}).  Its value must be a @code{guix-publish-configuration} object, as described below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20752
msgid "This assumes that @file{/etc/guix} already contains a signing key pair as created by @command{guix archive --generate-key} (@pxref{Invoking guix archive}).  If that is not the case, the service will fail to start."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20754
#, no-wrap
msgid "{Data Type} guix-publish-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20757
msgid "Data type representing the configuration of the @code{guix publish} service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20759
#, no-wrap
msgid "@code{guix} (default: @code{guix})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20761 guix-git/doc/guix.texi:27940
msgid "The Guix package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20762 guix-git/doc/guix.texi:41282
#, no-wrap
msgid "@code{port} (default: @code{80})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20764
msgid "The TCP port to listen for connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20765 guix-git/doc/guix.texi:37916
#: guix-git/doc/guix.texi:42735
#, no-wrap
msgid "@code{host} (default: @code{\"localhost\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20768
msgid "The host (and thus, network interface) to listen to.  Use @code{\"0.0.0.0\"} to listen on all the network interfaces."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20769
#, no-wrap
msgid "@code{advertise?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20772
msgid "When true, advertise the service on the local network @i{via} the DNS-SD protocol, using Avahi."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20776
msgid "This allows neighboring Guix devices with discovery on (see @code{guix-configuration} above) to discover this @command{guix publish} instance and to automatically download substitutes from it."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20777
#, no-wrap
msgid "@code{compression} (default: @code{'((\"gzip\" 3) (\"zstd\" 3))})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20781
msgid "This is a list of compression method/level tuple used when compressing substitutes.  For example, to compress all substitutes with @emph{both} lzip at level 7 and gzip at level 9, write:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20784
#, no-wrap
msgid "'((\"lzip\" 7) (\"gzip\" 9))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20790
msgid "Level 9 achieves the best compression ratio at the expense of increased CPU usage, whereas level 1 achieves fast compression.  @xref{Invoking guix publish}, for more information on the available compression methods and the tradeoffs involved."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20792
msgid "An empty list disables compression altogether."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20793
#, no-wrap
msgid "@code{nar-path} (default: @code{\"nar\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20796
msgid "The URL path at which ``nars'' can be fetched.  @xref{Invoking guix publish, @option{--nar-path}}, for details."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20797
#, no-wrap
msgid "@code{cache} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20803
msgid "When it is @code{#f}, disable caching and instead generate archives on demand.  Otherwise, this should be the name of a directory---e.g., @code{\"/var/cache/guix/publish\"}---where @command{guix publish} caches archives and meta-data ready to be sent.  @xref{Invoking guix publish, @option{--cache}}, for more information on the tradeoffs involved."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20804 guix-git/doc/guix.texi:43623
#, no-wrap
msgid "@code{workers} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20808
msgid "When it is an integer, this is the number of worker threads used for caching; when @code{#f}, the number of processors is used.  @xref{Invoking guix publish, @option{--workers}}, for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20809
#, no-wrap
msgid "@code{cache-bypass-threshold} (default: 10 MiB)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20814
msgid "When @code{cache} is true, this is the maximum size in bytes of a store item for which @command{guix publish} may bypass its cache in case of a cache miss.  @xref{Invoking guix publish, @option{--cache-bypass-threshold}}, for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20815 guix-git/doc/guix.texi:43568
#: guix-git/doc/guix.texi:43640
#, no-wrap
msgid "@code{ttl} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20819
msgid "When it is an integer, this denotes the @dfn{time-to-live} in seconds of the published archives.  @xref{Invoking guix publish, @option{--ttl}}, for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20820 guix-git/doc/guix.texi:43584
#, no-wrap
msgid "@code{negative-ttl} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20824
msgid "When it is an integer, this denotes the @dfn{time-to-live} in seconds for the negative lookups.  @xref{Invoking guix publish, @option{--negative-ttl}}, for more information."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20827
#, fuzzy, no-wrap
#| msgid "Services"
msgid "rngd-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:20830
msgid "Type of the service that runs rng-tools rngd, whose value is an @code{<rngd-configuration>} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20832
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} rngd-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:20834
#, fuzzy
#| msgid "Documentation"
msgid "Data type representing the configuration of rngd."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:20836
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{rng-tools} (default: @code{rng-tools}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:20838
msgid "Package object of the rng-tools rngd."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20839
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{device} (default: @var{\"/dev/hwrng\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:20842
msgid "Path of the device to add to the kernel's entropy pool.  The service will fail if @var{device} does not exist."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20846
#, no-wrap
msgid "session limits"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20847
#, no-wrap
msgid "ulimit"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20848
#, no-wrap
msgid "priority"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20849
#, no-wrap
msgid "realtime"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20850
#, no-wrap
msgid "jackd"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20851
#, no-wrap
msgid "nofile"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20852
#, no-wrap
msgid "open file descriptors"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20854
#, fuzzy, no-wrap
#| msgid "Services"
msgid "pam-limits-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:20861
msgid "Type of the service that installs a configuration file for the @uref{http://linux-pam.org/Linux-PAM-html/sag-pam_limits.html, @code{pam_limits} module}.  The value for this service type is a list of @code{pam-limits-entry} values, which can be used to specify @code{ulimit} limits and @code{nice} priority limits to user sessions.  By default, the value is the empty list."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20864
msgid "The following limits definition sets two hard and soft limits for all login sessions of users in the @code{realtime} group:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20870
#, no-wrap
msgid ""
"(service pam-limits-service-type\n"
"         (list\n"
"          (pam-limits-entry \"@@realtime\" 'both 'rtprio 99)\n"
"          (pam-limits-entry \"@@realtime\" 'both 'memlock 'unlimited)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20876
msgid "The first entry increases the maximum realtime priority for non-privileged processes; the second entry lifts any restriction of the maximum address space that can be locked in memory.  These settings are commonly used for real-time audio systems."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20879
msgid "Another useful example is raising the maximum number of open file descriptors that can be used:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20884
#, no-wrap
msgid ""
"(service pam-limits-service-type\n"
"         (list\n"
"          (pam-limits-entry \"*\" 'both 'nofile 100000)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20892
msgid "In the above example, the asterisk means the limit should apply to any user.  It is important to ensure the chosen value doesn't exceed the maximum system value visible in the @file{/proc/sys/fs/file-max} file, else the users would be prevented from login in.  For more information about the Pluggable Authentication Module (PAM) limits, refer to the @samp{pam_limits} man page from the @code{linux-pam} package."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20894
#, no-wrap
msgid "greetd-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20898
msgid "@uref{https://git.sr.ht/~kennylevinsen/greetd, @code{greetd}} is a minimal and flexible login manager daemon, that makes no assumptions about what you want to launch."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20902
msgid "If you can run it from your shell in a TTY, greetd can start it. If it can be taught to speak a simple JSON-based IPC protocol, then it can be a geeter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20905
msgid "@code{greetd-service-type} provides necessary infrastructure for logging in users, including:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:20909
msgid "@code{greetd} PAM service"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:20912
msgid "Special variation of @code{pam-mount} to mount @code{XDG_RUNTIME_DIR}"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20916
msgid "Here is an example of switching from @code{mingetty-service-type} to @code{greetd-service-type}, and how different terminals could be:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20962
#, no-wrap
msgid ""
"  (append\n"
"   (modify-services %base-services\n"
"     ;; greetd-service-type provides \"greetd\" PAM service\n"
"     (delete login-service-type)\n"
"     ;; and can be used in place of mingetty-service-type\n"
"     (delete mingetty-service-type))\n"
"   (list\n"
"    (service greetd-service-type\n"
"             (greetd-configuration\n"
"              (terminals\n"
"               (list\n"
"                ;; we can make any terminal active by default\n"
"                (greetd-terminal-configuration (terminal-vt \"1\") (terminal-switch #t))\n"
"                ;; we can make environment without XDG_RUNTIME_DIR set\n"
"                ;; even provide our own environment variables\n"
"                (greetd-terminal-configuration\n"
"                 (terminal-vt \"2\")\n"
"                 (default-session-command\n"
"                   (greetd-agreety-session\n"
"                    (command\n"
"                     (greetd-user-session\n"
"                      (extra-env '((\"MY_VAR\" . \"1\")))\n"
"                      (xdg-env? #f))))))\n"
"                ;; we can use different shell instead of default bash\n"
"                (greetd-terminal-configuration\n"
"                 (terminal-vt \"3\")\n"
"                 (default-session-command\n"
"                   (greetd-agreety-session\n"
"                    (command\n"
"                     (greetd-user-session\n"
"                      (command (file-append zsh \"/bin/zsh\"))\n"
"                      (command-args '(\"-l\"))\n"
"                      (extra-env '((\"MY_VAR\" . \"1\")))\n"
"                      (xdg-env? #f))))))\n"
"                ;; we can use any other executable command as greeter\n"
"                (greetd-terminal-configuration\n"
"                 (terminal-vt \"4\")\n"
"                 (default-session-command (program-file \"my-noop-greeter\" #~(exit))))\n"
"                (greetd-terminal-configuration (terminal-vt \"5\"))\n"
"                (greetd-terminal-configuration (terminal-vt \"6\"))))))\n"
"    ;; mingetty-service-type can be used in parallel\n"
"    ;; if needed to do so, do not (delete login-service-type)\n"
"    ;; as illustrated above\n"
"    #| (service mingetty-service-type (mingetty-configuration (tty \"tty8\"))) |#))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20965
#, no-wrap
msgid "{Data Type} greetd-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20967
msgid "Configuration record for the @code{greetd-service-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20976
#, no-wrap
msgid "@code{terminals} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20979
msgid "List of @code{greetd-terminal-configuration} per terminal for which @code{greetd} should be started."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20980
#, no-wrap
msgid "@code{greeter-supplementary-groups} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20982
msgid "List of groups which should be added to @code{greeter} user. For instance:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20984
#, no-wrap
msgid "(greeter-supplementary-groups '(\"seat\" \"video\"))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20986
msgid "Note that this example will fail if @code{seat} group does not exist."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20989
#, no-wrap
msgid "{Data Type} greetd-terminal-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20991
msgid "Configuration record for per terminal greetd daemon service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20993
#, no-wrap
msgid "@code{greetd} (default: @code{greetd})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20995
msgid "The greetd package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20996
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{extra-shepherd-requirement} (default: @code{'()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:21001
msgid "This option can be used to provide a list of @emph{additional} symbols naming Shepherd services that this service will depend on, such as @code{'seatd} or @code{'elogind} when the terminal session is a graphical greeter."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:21002
#, fuzzy, no-wrap
msgid "config-file-name"
msgstr "Canali"

#. type: table
#: guix-git/doc/guix.texi:21005
msgid "Configuration file name to use for greetd daemon. Generally, autogenerated derivation based on @code{terminal-vt} value."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:21006
#, fuzzy, no-wrap
msgid "log-file-name"
msgstr "Canali"

#. type: table
#: guix-git/doc/guix.texi:21009
msgid "Log file name to use for greetd daemon. Generally, autogenerated name based on @code{terminal-vt} value."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21010
#, no-wrap
msgid "@code{terminal-vt} (default: @samp{\"7\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21013
msgid "The VT to run on. Use of a specific VT with appropriate conflict avoidance is recommended."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21014
#, no-wrap
msgid "@code{terminal-switch} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21016
msgid "Make this terminal active on start of @code{greetd}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21017
#, no-wrap
msgid "@code{source-profile?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21020
msgid "Whether to source @file{/etc/profile} and @file{~/.profile}, when they exist."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21021
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{initial-session-user} (default: @samp{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:21023
msgid "The user to use for running the initial session, if any."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21024
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{initial-session-command} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:21029
msgid "The command to run the first time the greeter starts up, to auto-login.  For that to be useful, you should also set @code{initial-session-user}.  Then, greetd will automatically log in with that user and execute that command.  When you eventually log out again, the regular greeter will appear."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21030
#, no-wrap
msgid "@code{default-session-user} (default: @samp{\"greeter\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21032
msgid "The user to use for running the greeter."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21033
#, no-wrap
msgid "@code{default-session-command} (default: @code{(greetd-agreety-session)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21037
msgid "Can be either @code{greetd-agreety-session}, @code{greetd-wlgreet-sway-session}, @code{greetd-gtkgreet-sway-session} or a file-like object to use as greeter."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21041
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} greetd-user-session"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:21049
msgid "Configuration record for the user session command.  Greeters require the user command to be specified in some or another way.  @code{greetd-user-session} provides a common command for that.  Users should prefer POSIX shell commands like @command{bash}, which can start an actual user terminal shell, window manager or desktop environment with their own mechanism, for example via @file{~/.bashrc} in the case of Bash."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21051
#, no-wrap
msgid "@code{command} (default: @code{(file-append bash \"/bin/bash\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21053
msgid "Command to be started by @command{agreety} on successful login."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21054
#, no-wrap
msgid "@code{command-args} (default: @code{'(\"-l\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21056
msgid "Command arguments to pass to command."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21057
#, no-wrap
msgid "@code{extra-env} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21059
msgid "Extra environment variables to set on login."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21060
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{xdg-session-type} (default: @code{\"tty\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:21064
msgid "Specify the value of @code{XDG_SESSION_TYPE}.  The user environment may adapt depending on its value (normally by using @file{.bashrc} or similar)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21065
#, no-wrap
msgid "@code{xdg-env?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21069
msgid "If true @code{XDG_RUNTIME_DIR} and @code{XDG_SESSION_TYPE} will be set before starting command.  One should note that, @code{extra-env} variables are set right after mentioned variables, so that they can be overridden."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21073
#, no-wrap
msgid "{Data Type} greetd-agreety-session"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21075
msgid "Configuration record for the agreety greetd greeter."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21077
#, no-wrap
msgid "@code{agreety} (default: @code{greetd})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21079
msgid "The package providing the @command{agreety} command."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21080 guix-git/doc/guix.texi:21137
#: guix-git/doc/guix.texi:21200
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{command} (default: @code{(greetd-user-session)})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:21083
msgid "Command to be started by @command{agreety} on successful login, an instance of @code{greetd-user-session}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21087
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} greetd-wlgreet-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:21089
msgid "Generic configuration record for the wlgreet greetd greeter."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21091
#, no-wrap
msgid "@code{output-mode} (default: @code{\"all\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21093
msgid "Option to use for @code{outputMode} in the TOML configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21094
#, no-wrap
msgid "@code{scale} (default: @code{1})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21096
msgid "Option to use for @code{scale} in the TOML configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21097
#, no-wrap
msgid "@code{background} (default: @code{'(0 0 0 0.9)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21099
msgid "RGBA list to use as the background colour of the login prompt."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21100
#, no-wrap
msgid "@code{headline} (default: @code{'(1 1 1 1)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21102
msgid "RGBA list to use as the headline colour of the UI popup."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21103
#, no-wrap
msgid "@code{prompt} (default: @code{'(1 1 1 1)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21105
msgid "RGBA list to use as the prompt colour of the UI popup."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21106
#, no-wrap
msgid "@code{prompt-error} (default: @code{'(1 1 1 1)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21108
msgid "RGBA list to use as the error colour of the UI popup."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21109
#, no-wrap
msgid "@code{border} (default: @code{'(1 1 1 1)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21111
msgid "RGBA list to use as the border colour of the UI popup."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21115
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} greetd-wlgreet-sway-session"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:21117
msgid "Sway-specific configuration record for the wlgreet greetd greeter."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21119
#, no-wrap
msgid "@code{wlgreet-session} (default: @code{(greetd-wlgreet-session)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21122
msgid "A @code{greetd-wlgreet-session} record for generic wlgreet configuration, on top of the Sway-specific @code{greetd-wlgreet-sway-session}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21123 guix-git/doc/guix.texi:21187
#, no-wrap
msgid "@code{sway} (default: @code{sway})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21125
msgid "The package providing the @command{sway} command."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21126
#, no-wrap
msgid "@code{sway-configuration} (default: #f)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21129
msgid "File-like object providing an additional Sway configuration file to be prepended to the mandatory part of the configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21130
#, no-wrap
msgid "@code{wlgreet} (default: @code{wlgreet})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21132
msgid "The package providing the @command{wlgreet} command."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21133
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{wlgreet-configuration} (default: @code{(greetd-wlgreet-configuration)})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:21136
msgid "Configuration of @code{wlgreet} represented by @code{greetd-wlgreet-configuration}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21140
msgid "Command to be started by @command{wlgreet} on successful login, an instance of @code{greetd-user-session}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21144
msgid "Here is an example of a greetd configuration that uses wlgreet and Sway:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21160
#, no-wrap
msgid ""
"  (greetd-configuration\n"
"   ;; The graphical greeter requires additional group membership.\n"
"   (greeter-supplementary-groups (list \"video\" \"input\" \"seat\"))\n"
"   (terminals\n"
"    (list (greetd-terminal-configuration\n"
"           ;; Sway requires seatd service.\n"
"           (extra-shepherd-requirement '(seatd))\n"
"           (terminal-vt \"1\")\n"
"           (terminal-switch #t)\n"
"           (default-session-command\n"
"            (greetd-wlgreet-sway-session\n"
"             (sway-configuration\n"
"              ;; Optional extra sway configuration.\n"
"              (local-file \"sway-greetd.conf\"))))))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21163
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} greetd-gtkgreet-sway-session"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:21166
msgid "Configuration record for the gtkgreet greetd greeter.  It can be used as follows:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21184
#, no-wrap
msgid ""
"  (greetd-configuration\n"
"   ;; The graphical greeter requires additional groups membership.\n"
"   (greeter-supplementary-groups (list \"video\" \"input\" \"seat\"))\n"
"   (terminals\n"
"    (list (greetd-terminal-configuration\n"
"           ;; Sway requires the seatd service.\n"
"           (extra-shepherd-requirement '(seatd))\n"
"           (terminal-vt \"1\")\n"
"           (terminal-switch #t)\n"
"           (default-session-command\n"
"            (greetd-gtkgreet-sway-session\n"
"             (command\n"
"              (greetd-user-session\n"
"               ;; Optionally signal to .bashrc that we want the Wayland\n"
"               ;; compositor.\n"
"               (xdg-session-type \"wayland\")))))))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21189
msgid "The package providing the @command{sway} and @command{swaymsg} commands."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21190
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{sway-configuration} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:21193
msgid "Extra file-like configuration for sway to be included before executing the greeter."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21194
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{gtkgreet} (default: @code{gtkgreet})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:21196
msgid "The package providing the @command{gtkgreet} command."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21197
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{gtkgreet-style} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:21199
msgid "Extra file-like CSS stylesheet to customize the GTK look."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21203
msgid "The command to be started by @command{gtkgreet} on successful login, an instance of @code{greetd-user-session}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:21210
#, no-wrap
msgid "cron"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:21211
#, no-wrap
msgid "scheduling jobs"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21215
msgid "It is often useful to have system tasks run periodically.  This can be achieved by defining Shepherd @dfn{timers} or by using the historical and somewhat less flexible mcron service."
msgstr ""

#. type: subsubsection
#: guix-git/doc/guix.texi:21216
#, no-wrap
msgid "Shepherd Timers"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:21218
#, no-wrap
msgid "timers, Shepherd"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:21219
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Shepherd timers"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:21224
msgid "The Shepherd supports running jobs periodically by defining @dfn{timers}, a special kind of service.  A Shepherd timer can be defined like another Shepherd service, but with specific @code{start} and @code{stop} methods (@pxref{Shepherd Services}):"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21239
#, no-wrap
msgid ""
";; Defining a timer, verbosely.\n"
"(shepherd-service\n"
" (provision '(updatedb))\n"
" (requirement '(user-processes))\n"
" (modules '((shepherd service timer)))\n"
" (start #~(make-timer-constructor\n"
"           ;; Everyday at 3AM (using Vixie cron syntax).\n"
"           (cron-string->calendar-event \"0 3 * * *\")\n"
"           (command '(#$(file-append findutils \"/bin/updatedb\")))\n"
"           #:wait-for-termination? #t))\n"
" (stop #~(make-timer-destructor))\n"
" (documentation \"Periodically run 'updatedb'.\")\n"
" (actions (list shepherd-trigger-action)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21243
msgid "This is quite some boilerplate so you can instead use this equivalent shorthand notation:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21249
#, no-wrap
msgid ""
";; Equivalent timer definition, but shorter.\n"
"(shepherd-timer '(updatedb) \"0 3 * * *\"\n"
"                #~(#$(file-append findutils \"/bin/updatedb\"))\n"
"                #:requirement '(user-processes))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21252
msgid "This procedure is defined as follows."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:21254
#, fuzzy
#| msgid "Services"
msgid "shepherd-timer-procedure"
msgstr "Servizi"

#. type: deffn
#: guix-git/doc/guix.texi:21254
#, no-wrap
msgid "{Procedure} shepherd-timer @var{provision} @var{schedule} @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:21262
msgid "@var{command} [#:requirement '()] @ [#:documentation %default-timer-documentation] Return a Shepherd service with the given @var{provision} periodically running @var{command}, a list-valued gexp, according to @var{schedule}, a string in Vixie cron syntax or a gexp providing a Shepherd calendar event.  @var{documentation} is the string that appears when running @code{herd doc @var{service}}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21266
msgid "The example below shows how to define a timer and to add it to your operating system configuration."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21271
#, no-wrap
msgid ""
"(use-modules (gnu))\n"
"(use-service-modules shepherd)\n"
"(use-package-modules base)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21279
#, no-wrap
msgid ""
"(define updatedb-timer\n"
"  ;; Run 'updatedb' at 3AM everyday.\n"
"  (shepherd-timer '(updatedb)\n"
"                  \"0 3 * * *\"  ;Vixie cron syntax\n"
"                  #~(#$(file-append findutils \"/bin/updatedb\")\n"
"                     \"--prunepaths=/tmp /var/tmp /gnu/store\")\n"
"                  #:requirement '(user-processes)))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21287
#, no-wrap
msgid ""
"(define garbage-collection-timer\n"
"  ;; Run 'guix gc' everyday at 5AM.\n"
"  (shepherd-timer '(garbage-collection)\n"
"                  #~(calendar-event #:hours '(5) #:minutes '(0))\n"
"                  #~(\"/run/current-system/profile/bin/guix\"\n"
"                     \"gc\" \"-F\" \"10G\")\n"
"                  #:requirement '(guix-daemon)))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21298
#, no-wrap
msgid ""
"  ;; Extend the Shepherd service with additional timers\n"
"  ;; using 'simple-service'.\n"
"  (services (cons (simple-service 'my-timers\n"
"                                   shepherd-root-service-type\n"
"                                   (list garbage-collection-timer\n"
"                                         updatedb-timer))\n"
"                  %base-services)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21302
msgid "The resulting system contains these two services, which can be inspected with @command{herd status}.  They can also be triggered manually:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:21305
#, no-wrap
msgid "herd trigger garbage-collection\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21309 guix-git/doc/guix.texi:50850
msgid "@xref{Timers,,, shepherd, The GNU Shepherd Manual} for more information on Shepherd timers."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:21311
#, fuzzy
#| msgid "Services"
msgid "mcron-service"
msgstr "Servizi"

#. type: subsubsection
#: guix-git/doc/guix.texi:21311
#, no-wrap
msgid "Mcron"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:21313
#, no-wrap
msgid "mcron"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21323
msgid "Alternatively, the @code{(gnu services mcron)} module provides an interface to GNU@tie{}mcron, a daemon to run jobs at scheduled times (@pxref{Top,,, mcron, GNU@tie{}mcron}).  GNU@tie{}mcron is similar to the traditional Unix @command{cron} daemon; the main difference is that it is implemented in Guile Scheme.  It is overall less convenient than Shepherd timers: individual jobs cannot depend on specific Shepherd services, logging is coarse-grain (one file for all the jobs), jobs may not be inspected, updated, or triggered manually."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:21327
msgid "For the reasons given above, we recommend using Shepherd timers rather than mcron for your periodic tasks."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21336
msgid "The example below defines an operating system that runs the @command{updatedb} (@pxref{Invoking updatedb,,, find, Finding Files})  and the @command{guix gc} commands (@pxref{Invoking guix gc}) daily, as well as the @command{mkid} command on behalf of an unprivileged user (@pxref{mkid invocation,,, idutils, ID Database Utilities}).  It uses gexps to introduce job definitions that are passed to mcron (@pxref{G-Expressions})."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21340
#, no-wrap
msgid ""
"(use-modules (guix) (gnu) (gnu services mcron))\n"
"(use-package-modules base idutils)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21349
#, no-wrap
msgid ""
"(define updatedb-job\n"
"  ;; Run 'updatedb' at 3AM every day.  Here we write the\n"
"  ;; job's action as a Scheme procedure.\n"
"  #~(job '(next-hour '(3))\n"
"         (lambda ()\n"
"           (system* (string-append #$findutils \"/bin/updatedb\")\n"
"                    \"--prunepaths=/tmp /var/tmp /gnu/store\"))\n"
"         \"updatedb\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21355
#, no-wrap
msgid ""
"(define garbage-collector-job\n"
"  ;; Collect garbage 5 minutes after midnight every day.\n"
"  ;; The job's action is a shell command.\n"
"  #~(job \"5 0 * * *\"            ;Vixie cron syntax\n"
"         \"guix gc -F 1G\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21362
#, no-wrap
msgid ""
"(define idutils-job\n"
"  ;; Update the index database as user \"charlie\" at 12:15PM\n"
"  ;; and 19:15PM.  This runs from the user's home directory.\n"
"  #~(job '(next-minute-from (next-hour '(12 19)) '(15))\n"
"         (string-append #$idutils \"/bin/mkid src\")\n"
"         #:user \"charlie\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21375
#, no-wrap
msgid ""
"  ;; %BASE-SERVICES already includes an instance of\n"
"  ;; 'mcron-service-type', which we extend with additional\n"
"  ;; jobs using 'simple-service'.\n"
"  (services (cons (simple-service 'my-cron-jobs\n"
"                                   mcron-service-type\n"
"                                   (list garbage-collector-job\n"
"                                         updatedb-job\n"
"                                         idutils-job))\n"
"                  %base-services)))\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:21383
msgid "When providing the action of a job specification as a procedure, you should provide an explicit name for the job via the optional 3rd argument as done in the @code{updatedb-job} example above.  Otherwise, the job would appear as ``Lambda function'' in the output of @command{herd schedule mcron}, which is not nearly descriptive enough!"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:21389
msgid "Avoid calling the Guile procedures @code{execl}, @code{execle} or @code{execlp} inside a job specification, else mcron won't be able to output the completion status of the job."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21396
msgid "For more complex jobs defined in Scheme where you need control over the top level, for instance to introduce a @code{use-modules} form, you can move your code to a separate program using the @code{program-file} procedure of the @code{(guix gexp)} module (@pxref{G-Expressions}).  The example below illustrates that."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21412
#, no-wrap
msgid ""
"(define %battery-alert-job\n"
"  ;; Beep when the battery percentage falls below %MIN-LEVEL.\n"
"  #~(job\n"
"     '(next-minute (range 0 60 1))\n"
"     #$(program-file\n"
"        \"battery-alert.scm\"\n"
"        (with-imported-modules (source-module-closure\n"
"                                '((guix build utils)))\n"
"          #~(begin\n"
"              (use-modules (guix build utils)\n"
"                           (ice-9 popen)\n"
"                           (ice-9 regex)\n"
"                           (ice-9 textual-ports)\n"
"                           (srfi srfi-2))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21414
#, no-wrap
msgid ""
"              (define %min-level 20)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21425
#, no-wrap
msgid ""
"              (setenv \"LC_ALL\" \"C\")     ;ensure English output\n"
"              (and-let* ((input-pipe (open-pipe*\n"
"                                      OPEN_READ\n"
"                                      #$(file-append acpi \"/bin/acpi\")))\n"
"                         (output (get-string-all input-pipe))\n"
"                         (m (string-match \"Discharging, ([0-9]+)%\" output))\n"
"                         (level (string->number (match:substring m 1)))\n"
"                         ((< level %min-level)))\n"
"                (format #t \"warning: Battery level is low (~a%)~%\" level)\n"
"                (invoke #$(file-append beep \"/bin/beep\") \"-r5\")))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21430
msgid "@xref{Guile Syntax, mcron job specifications,, mcron, GNU@tie{}mcron}, for more information on mcron job specifications.  Below is the reference of the mcron service."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21433
msgid "On a running system, you can use the @code{schedule} action of the service to visualize the mcron jobs that will be executed next:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:21436
#, no-wrap
msgid "# herd schedule mcron\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21441
msgid "The example above lists the next five tasks that will be executed, but you can also specify the number of tasks to display:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:21444
#, no-wrap
msgid "# herd schedule mcron 10\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21446
#, fuzzy, no-wrap
#| msgid "Services"
msgid "mcron-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:21449
msgid "This is the type of the @code{mcron} service, whose value is an @code{mcron-configuration} object."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21454 guix-git/doc/guix.texi:50659
msgid "This service type can be the target of a service extension that provides additional job specifications (@pxref{Service Composition}).  In other words, it is possible to define services that provide additional mcron jobs to run."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21459
#, no-wrap
msgid "{Data Type} mcron-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21461
msgid "Available @code{mcron-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21463 guix-git/doc/guix.texi:50668
#, no-wrap
msgid "@code{mcron} (default: @code{mcron}) (type: file-like)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21465 guix-git/doc/guix.texi:50670
msgid "The mcron package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21466 guix-git/doc/guix.texi:50671
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{jobs} (default: @code{'()}) (type: list-of-gexps)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:21470 guix-git/doc/guix.texi:50675
msgid "This is a list of gexps (@pxref{G-Expressions}), where each gexp corresponds to an mcron job specification (@pxref{Syntax, mcron job specifications,, mcron,GNU@tie{}mcron})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21471 guix-git/doc/guix.texi:50676
#, no-wrap
msgid "@code{log?} (default: @code{#t}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21473 guix-git/doc/guix.texi:50678
msgid "Log messages to standard output."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21474
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{log-file} (default: @code{\"/var/log/mcron.log\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:21476
msgid "Log file location."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21477 guix-git/doc/guix.texi:50679
#, no-wrap
msgid "@code{log-format} (default: @code{\"~1@@*~a ~a: ~a~%\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21482
msgid "@code{(ice-9 format)} format string for log messages.  The default value produces messages like @samp{@var{pid} @var{name}: @var{message}} (@pxref{Invoking mcron, Invoking,, mcron,GNU@tie{}mcron}).  Each message is also prefixed by a timestamp by GNU Shepherd."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21483
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{date-format} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:21485
msgid "@code{(srfi srfi-19)} format string for date."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:21493
#, no-wrap
msgid "rottlog"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:21494
#, no-wrap
msgid "log rotation"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:21495
#, no-wrap
msgid "logging"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21502
msgid "Log files such as those found in @file{/var/log} tend to grow endlessly, so it's a good idea to @dfn{rotate} them once in a while---i.e., archive their contents in separate files, possibly compressed.  The @code{(gnu services admin)} module provides an interface to the log rotation service provided by the Shepherd (@pxref{Log Rotation Service,,, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21511
msgid "This log rotation service is made available through @code{log-rotation-service-type}, which takes a @code{log-rotation-configuration} record as its value.  By default, this provides @code{log-rotation}, a Shepherd ``timed service'' that runs periodically---once a week by default.  It automatically knows about the log files produced by Shepherd services and can be taught about external log files.  You can inspect the service and see when it's going to run the usual way:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:21517
#, no-wrap
msgid ""
"$ sudo herd status log-rotation\n"
"Status of log-rotation:\n"
"  It is running since Mon 09 Dec 2024 03:27:47 PM CET (2 days ago).\n"
"  @dots{}\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:21522
#, no-wrap
msgid ""
"Upcoming timer alarms:\n"
"  Sun 15 Dec 2024 10:00:00 PM CET (in 4 days)\n"
"  Sun 22 Dec 2024 10:00:00 PM CET (in 11 days)\n"
"  Sun 29 Dec 2024 10:00:00 PM CET (in 18 days)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21527
msgid "You can also list files subject to rotation with @command{herd files log-rotation} and trigger rotation manually with @command{herd trigger log-rotation}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21530
msgid "This service is part of @code{%base-services}, and thus enabled by default, with the default settings."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21531
#, fuzzy, no-wrap
#| msgid "Services"
msgid "log-rotation-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:21534
msgid "This is the type of the log rotation service.  Its associated value must be a @code{log-rotation-configuration} record, as discussed below."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:21538
#, fuzzy
#| msgid "Documentation"
msgid "log-rotation-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:21539
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} log-rotation-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:21541
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{log-rotation-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:21543
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{provision} (default: @code{'(log-rotation)}) (type: list-of-symbols)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:21545
msgid "The name(s) of the log rotation Shepherd service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21546
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{requirement} (default: @code{'(user-processes)}) (type: list-of-symbols)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:21548
msgid "Dependencies of the log rotation Shepherd service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21549
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{calendar-event} (type: gexp)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:21553
msgid "Gexp containing the @dfn{calendar event} when log rotation occurs.  @xref{Timers,,,shepherd,The GNU Shepherd Manual}, for more information on calendar events."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21554
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{external-log-files} (default: @code{()}) (type: list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:21556
msgid "List of file names, external log files that should also be rotated."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21557
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{compression} (default: @code{zstd}) (type: symbol)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:21560
msgid "The compression method used for rotated log files, one of @code{'none}, @code{'gzip}, and @code{'zstd}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21561
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{expiry} (type: gexp-or-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:21563
msgid "Age in seconds after which a log file is deleted."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21564
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{size-threshold} (type: gexp-or-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:21566
msgid "Size in bytes below which a log file is @emph{not} rotated."
msgstr ""

#. type: subheading
#: guix-git/doc/guix.texi:21574
#, no-wrap
msgid "Rottlog"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21579
msgid "An alternative log rotation service relying on GNU@tie{}Rot[t]log, a log rotation tool (@pxref{Top,,, rottlog, GNU Rot[t]log Manual}), is also provided."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:21585
msgid "The Rottlog service presented here is deprecated in favor of @code{log-rotation-service-type} (see above).  The @code{rottlog-service-type} variable and related tools will be removed after 2025-06-15."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21590
msgid "The example below shows how to extend it with an additional @dfn{rotation}, should you need to do that (usually, services that produce log files already take care of that):"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21594
#, no-wrap
msgid ""
"(use-modules (guix) (gnu))\n"
"(use-service-modules admin)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21598
#, no-wrap
msgid ""
"(define my-log-files\n"
"  ;; Log files that I want to rotate.\n"
"  '(\"/var/log/something.log\" \"/var/log/another.log\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21607
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services (cons (simple-service 'rotate-my-stuff\n"
"                                  rottlog-service-type\n"
"                                  (list (log-rotation\n"
"                                         (frequency 'daily)\n"
"                                         (files my-log-files))))\n"
"                  %base-services)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21609
#, no-wrap
msgid "rottlog-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21612
msgid "This is the type of the Rottlog service, whose value is a @code{rottlog-configuration} object."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21615
msgid "Other services can extend this one with new @code{log-rotation} objects (see below), thereby augmenting the set of files to be rotated."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21618
msgid "This service type can define mcron jobs (@pxref{Scheduled Job Execution}) to run the rottlog service."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21620
#, no-wrap
msgid "{Data Type} rottlog-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21622
msgid "Data type representing the configuration of rottlog."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21624
#, no-wrap
msgid "@code{rottlog} (default: @code{rottlog})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21626
msgid "The Rottlog package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21627
#, no-wrap
msgid "@code{rc-file} (default: @code{(file-append rottlog \"/etc/rc\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21630
msgid "The Rottlog configuration file to use (@pxref{Mandatory RC Variables,,, rottlog, GNU Rot[t]log Manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21631
#, no-wrap
msgid "@code{rotations} (default: @code{%default-rotations})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21633
msgid "A list of @code{log-rotation} objects as defined below."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:21634
#, no-wrap
msgid "jobs"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21637
msgid "This is a list of gexps where each gexp corresponds to an mcron job specification (@pxref{Scheduled Job Execution})."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21640
#, no-wrap
msgid "{Data Type} log-rotation"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21642
msgid "Data type representing the rotation of a group of log files."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21646
msgid "Taking an example from the Rottlog manual (@pxref{Period Related File Examples,,, rottlog, GNU Rot[t]log Manual}), a log rotation might be defined like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21655
#, no-wrap
msgid ""
"(log-rotation\n"
"  (frequency 'daily)\n"
"  (files '(\"/var/log/apache/*\"))\n"
"  (options '(\"storedir apache-archives\"\n"
"             \"rotate 6\"\n"
"             \"notifempty\"\n"
"             \"nocompress\")))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21658
msgid "The list of fields is as follows:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21660
#, no-wrap
msgid "@code{frequency} (default: @code{'weekly})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21662
msgid "The log rotation frequency, a symbol."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21665
msgid "The list of files or file glob patterns to rotate."
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:21666
#, no-wrap
msgid "%default-log-rotation-options"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21667
#, no-wrap
msgid "@code{options} (default: @code{%default-log-rotation-options})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21670
msgid "The list of rottlog options for this rotation (@pxref{Configuration parameters,,, rottlog, GNU Rot[t]log Manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21671
#, no-wrap
msgid "@code{post-rotate} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21673
msgid "Either @code{#f} or a gexp to execute once the rotation has completed."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21676
#, no-wrap
msgid "%default-rotations"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21679
msgid "Specifies weekly rotation of @code{%rotated-files} and of @file{/var/log/guix-daemon.log}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21681
#, no-wrap
msgid "%rotated-files"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21685
msgid "The list of syslog-controlled files to be rotated.  By default it is: @code{'(\"/var/log/messages\" \"/var/log/secure\" \"/var/log/debug\" \\ \"/var/log/maillog\")}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21693
msgid "Some log files just need to be deleted periodically once they are old, without any other criterion and without any archival step.  This is the case of build logs stored by @command{guix-daemon} under @file{/var/log/guix/drvs} (@pxref{Invoking guix-daemon}).  The @code{log-cleanup} service addresses this use case.  For example, @code{%base-services} (@pxref{Base Services}) includes the following:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21699
#, no-wrap
msgid ""
";; Periodically delete old build logs.\n"
"(service log-cleanup-service-type\n"
"         (log-cleanup-configuration\n"
"          (directory \"/var/log/guix/drvs\")))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21702
msgid "That ensures build logs do not accumulate endlessly."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21703
#, no-wrap
msgid "log-cleanup-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21706
msgid "This is the type of the service to delete old logs.  Its value must be a @code{log-cleanup-configuration} record as described below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21708
#, no-wrap
msgid "{Data Type} log-cleanup-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21710
msgid "Data type representing the log cleanup configuration"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:21712
#, no-wrap
msgid "directory"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21714
msgid "Name of the directory containing log files."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21715
#, no-wrap
msgid "@code{expiry} (default: @code{(* 6 30 24 3600)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21718
msgid "Age in seconds after which a file is subject to deletion (six months by default)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21719
#, no-wrap
msgid "@code{schedule} (default: @code{\"30 12 01,08,15,22 * *\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21723
msgid "Schedule of the log cleanup job written either as a string in traditional cron syntax or as a gexp representing a Shepherd calendar event (@pxref{Timers,,, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:21726
#, no-wrap
msgid "logging, anonymization"
msgstr ""

#. type: subheading
#: guix-git/doc/guix.texi:21727
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Anonip Service"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:21732
msgid "Anonip is a privacy filter that removes IP address from web server logs.  This service creates a FIFO and filters any written lines with anonip before writing the filtered log to a target file."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21736
msgid "The following example sets up the FIFO @file{/var/run/anonip/https.access.log} and writes the filtered log file @file{/var/log/anonip/https.access.log}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21742
#, no-wrap
msgid ""
"(service anonip-service-type\n"
"         (anonip-configuration\n"
"           (input  \"/var/run/anonip/https.access.log\")\n"
"           (output \"/var/log/anonip/https.access.log\")))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21747
msgid "Configure your web server to write its logs to the FIFO at @file{/var/run/anonip/https.access.log} and collect the anonymized log file at @file{/var/web-logs/https.access.log}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21748
#, no-wrap
msgid "{Data Type} anonip-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21751
msgid "This data type represents the configuration of anonip.  It has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21753
#, no-wrap
msgid "@code{anonip} (default: @code{anonip})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21755
msgid "The anonip package to use."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:21756
#, no-wrap
msgid "input"
msgstr "input"

#. type: table
#: guix-git/doc/guix.texi:21759
msgid "The file name of the input log file to process.  The service creates a FIFO of this name.  The web server should write its logs to this FIFO."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:21760
#, no-wrap
msgid "output"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21764
msgid "The file name of the processed log file.  This file is subject to log rotation @i{via} the Shepherd's log rotation service (@pxref{Log Rotation})."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21767
msgid "The following optional settings may be provided:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21769
#, no-wrap
msgid "debug?"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21771
msgid "Print debug messages when @code{#true}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21772
#, no-wrap
msgid "skip-private?"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21774
msgid "When @code{#true} do not mask addresses in private ranges."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21775
#, no-wrap
msgid "column"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21778
msgid "A 1-based indexed column number.  Assume IP address is in the specified column (default is 1)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21779
#, no-wrap
msgid "replacement"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21781
msgid "Replacement string in case address parsing fails, e.g. @code{\"0.0.0.0\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21782
#, no-wrap
msgid "ipv4mask"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21784
msgid "Number of bits to mask in IPv4 addresses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21785
#, no-wrap
msgid "ipv6mask"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21787
msgid "Number of bits to mask in IPv6 addresses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21788
#, no-wrap
msgid "increment"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21790
msgid "Increment the IP address by the given number.  By default this is zero."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21791
#, no-wrap
msgid "delimiter"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21793
msgid "Log delimiter string."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21794
#, no-wrap
msgid "regex"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21796
msgid "Regular expression for detecting IP addresses.  Use this instead of @code{column}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21811
msgid "The @code{(gnu services networking)} module provides services to configure network interfaces and set up networking on your machine.  Those services provide different ways for you to set up your machine: by declaring a static network configuration, by running a Dynamic Host Configuration Protocol (DHCP) client, or by running daemons such as NetworkManager and Connman that automate the whole process, automatically adapt to connectivity changes, and provide a high-level user interface."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21817
msgid "On a laptop, NetworkManager and Connman are by far the most convenient options, which is why the default desktop services include NetworkManager (@pxref{Desktop Services, @code{%desktop-services}}).  For a server, or for a virtual machine or a container, static network configuration or a simple DHCP client are often more appropriate."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21820
msgid "This section describes the various network setup services available, starting with static network configuration."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21821
#, no-wrap
msgid "static-networking-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21826
msgid "This is the type for statically-configured network interfaces.  Its value must be a list of @code{static-networking} records.  Each of them declares a set of @dfn{addresses}, @dfn{routes}, and @dfn{links}, as shown below."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:21827
#, no-wrap
msgid "network interface controller (NIC)"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:21828
#, no-wrap
msgid "NIC, networking interface controller"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21831
msgid "Here is the simplest configuration, with only one network interface controller (NIC) and only IPv4 connectivity:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21845
#, no-wrap
msgid ""
";; Static networking for one NIC, IPv4-only.\n"
"(service static-networking-service-type\n"
"         (list (static-networking\n"
"                (addresses\n"
"                 (list (network-address\n"
"                        (device \"eno1\")\n"
"                        (value \"10.0.2.15/24\"))))\n"
"                (routes\n"
"                 (list (network-route\n"
"                        (destination \"default\")\n"
"                        (gateway \"10.0.2.2\"))))\n"
"                (name-servers '(\"10.0.2.3\")))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21854
msgid "The snippet above can be added to the @code{services} field of your operating system configuration (@pxref{Using the Configuration System}).  It will configure your machine to have 10.0.2.15 as its IP address, with a 24-bit netmask for the local network---meaning that any 10.0.2.@var{x} address is on the local area network (LAN).  Traffic to addresses outside the local network is routed @i{via} 10.0.2.2.  Host names are resolved by sending domain name system (DNS) queries to 10.0.2.3."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21856
#, no-wrap
msgid "{Data Type} static-networking"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21858
msgid "This is the data type representing a static network configuration."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21862
msgid "As an example, here is how you would declare the configuration of a machine with a single network interface controller (NIC) available as @code{eno1}, and with one IPv4 and one IPv6 address:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21879
#, no-wrap
msgid ""
";; Network configuration for one NIC, IPv4 + IPv6.\n"
"(static-networking\n"
" (addresses (list (network-address\n"
"                   (device \"eno1\")\n"
"                   (value \"10.0.2.15/24\"))\n"
"                  (network-address\n"
"                   (device \"eno1\")\n"
"                   (value \"2001:123:4567:101::1/64\"))))\n"
" (routes (list (network-route\n"
"                (destination \"default\")\n"
"                (gateway \"10.0.2.2\"))\n"
"               (network-route\n"
"                (destination \"default\")\n"
"                (gateway \"2020:321:4567:42::1\"))))\n"
" (name-servers '(\"10.0.2.3\")))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21885
msgid "If you are familiar with the @command{ip} command of the @uref{https://wiki.linuxfoundation.org/networking/iproute2, @code{iproute2} package} found on Linux-based systems, the declaration above is equivalent to typing:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:21891
#, no-wrap
msgid ""
"ip address add 10.0.2.15/24 dev eno1\n"
"ip address add 2001:123:4567:101::1/64 dev eno1\n"
"ip route add default via inet 10.0.2.2\n"
"ip route add default via inet6 2020:321:4567:42::1\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21896
msgid "Run @command{man 8 ip} for more info.  Venerable GNU/Linux users will certainly know how to do it with @command{ifconfig} and @command{route}, but we'll spare you that."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21898
msgid "The available fields of this data type are as follows:"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:21900
#, no-wrap
msgid "addresses"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:21901
#, no-wrap
msgid "@code{links} (default: @code{'()})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:21902
#, no-wrap
msgid "@code{routes} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21905
msgid "The list of @code{network-address}, @code{network-link}, and @code{network-route} records for this network (see below)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21906
#, no-wrap
msgid "@code{name-servers} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21909
msgid "The list of IP addresses (strings) of domain name servers.  These IP addresses go to @file{/etc/resolv.conf}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21910
#, no-wrap
msgid "@code{provision} (default: @code{'(networking)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21913
msgid "If true, this should be a list of symbols for the Shepherd service corresponding to this network configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21914
#, no-wrap
msgid "@code{requirement} (default @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21916
msgid "The list of Shepherd services depended on."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21919
#, no-wrap
msgid "{Data Type} network-address"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21922
msgid "This is the data type representing the IP address of a network interface."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21927
msgid "The name of the network interface for this address---e.g., @code{\"eno1\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21928
#, no-wrap
msgid "value"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21932
msgid "The actual IP address and network mask, in @uref{https://en.wikipedia.org/wiki/CIDR#CIDR_notation, @acronym{CIDR, Classless Inter-Domain Routing} notation}, as a string."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21936
msgid "For example, @code{\"10.0.2.15/24\"} denotes IPv4 address 10.0.2.15 on a 24-bit sub-network---all 10.0.2.@var{x} addresses are on the same local network."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21937
#, no-wrap
msgid "ipv6?"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21940
msgid "Whether @code{value} denotes an IPv6 address.  By default this is automatically determined."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21943
#, no-wrap
msgid "{Data Type} network-route"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21945
msgid "This is the data type representing a network route."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:21947 guix-git/doc/guix.texi:43768
#, no-wrap
msgid "destination"
msgstr "destination"

#. type: table
#: guix-git/doc/guix.texi:21950
msgid "The route destination (a string), either an IP address and network mask or @code{\"default\"} to denote the default route."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21951
#, no-wrap
msgid "@code{source} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21953
msgid "The route source."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21954 guix-git/doc/guix.texi:46918
#, no-wrap
msgid "@code{device} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21956
msgid "The device used for this route---e.g., @code{\"eno2\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21957
#, no-wrap
msgid "@code{ipv6?} (default: auto)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21960
msgid "Whether this is an IPv6 route.  By default this is automatically determined based on @code{destination} or @code{gateway}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21961
#, no-wrap
msgid "@code{gateway} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21963
msgid "IP address (a string) through which traffic is routed."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21966
#, no-wrap
msgid "{Data Type} network-link"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21973
msgid "Data type for a network link (@pxref{Link,,, guile-netlink, Guile-Netlink Manual}).  During startup, network links are employed to construct or modify existing or virtual ethernet links.  These ethernet links can be identified by their @var{name} or @var{mac-address}.  If there is a need to create virtual interface, @var{name} and @var{type} fields are required."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21977
msgid "The name of the link---e.g., @code{\"v0p0\"} (default: @code{#f})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21980
msgid "A symbol denoting the type of the link---e.g., @code{'veth} (default: @code{#f})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21981
#, no-wrap
msgid "mac-address"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21983
msgid "The mac-address of the link---e.g., @code{\"98:11:22:33:44:55\"} (default: @code{#f})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21986
msgid "List of arguments for this type of link."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21998
msgid "Consider a scenario where a server equipped with a network interface which has multiple ports.  These ports are connected to a switch, which supports @uref{https://en.wikipedia.org/wiki/Link_aggregation, link aggregation} (also known as bonding or NIC teaming).  The switch uses port channels to consolidate multiple physical interfaces into one logical interface to provide higher bandwidth, load balancing, and link redundancy.  When a port is added to a LAG (or link aggregation group), it inherits the properties of the port-channel.  Some of these properties are VLAN membership, trunk status, and so on."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:22003
msgid "@uref{https://en.wikipedia.org/wiki/Virtual_LAN, VLAN} (or virtual local area network) is a logical network that is isolated from other VLANs on the same physical network.  This can be used to segregate traffic, improve security, and simplify network management."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:22008
msgid "With all that in mind let's configure our static network for the server.  We will bond two existing interfaces together using 802.3ad schema and on top of it, build a VLAN interface with id 1055.  We assign a static ip to our new VLAN interface."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:22018
#, no-wrap
msgid ""
"(static-networking\n"
" (links (list (network-link\n"
"               (name \"bond0\")\n"
"               (type 'bond)\n"
"               (arguments '((mode . \"802.3ad\")\n"
"                            (miimon . 100)\n"
"                            (lacp-active . \"on\")\n"
"                            (lacp-rate . \"fast\"))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:22022
#, no-wrap
msgid ""
"              (network-link\n"
"               (mac-address \"98:11:22:33:44:55\")\n"
"               (arguments '((master . \"bond0\"))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:22026
#, no-wrap
msgid ""
"              (network-link\n"
"               (mac-address \"98:11:22:33:44:56\")\n"
"               (arguments '((master . \"bond0\"))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:22035
#, no-wrap
msgid ""
"              (network-link\n"
"               (name \"bond0.1055\")\n"
"               (type 'vlan)\n"
"               (arguments '((id . 1055)\n"
"                            (link . \"bond0\"))))))\n"
" (addresses (list (network-address\n"
"                   (value \"192.168.1.4/24\")\n"
"                   (device \"bond0.1055\")))))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22037
#, no-wrap
msgid "loopback device"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22038
#, no-wrap
msgid "%loopback-static-networking"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22042
msgid "This is the @code{static-networking} record representing the ``loopback device'', @code{lo}, for IP addresses 127.0.0.1 and ::1, and providing the @code{loopback} Shepherd service."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22044
#, no-wrap
msgid "networking, with QEMU"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22045
#, fuzzy, no-wrap
#| msgid "Networking"
msgid "QEMU, networking"
msgstr "Rete"

#. type: defvar
#: guix-git/doc/guix.texi:22046
#, no-wrap
msgid "%qemu-static-networking"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22050
msgid "This is the @code{static-networking} record representing network setup when using QEMU's user-mode network stack on @code{eth0} (@pxref{Using the user mode network stack,,, qemu, QEMU Documentation})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22052
#, no-wrap
msgid "DHCP, networking service"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22053
#, no-wrap
msgid "dhcp-client-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22056
msgid "This is the type of services that run @var{dhclient}, the ISC Dynamic Host Configuration Protocol (DHCP) client."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22058
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} dhcp-client-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:22060
#, fuzzy
#| msgid "Documentation"
msgid "Data type representing the configuration of the ISC DHCP client service."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:22062 guix-git/doc/guix.texi:22820
#, no-wrap
msgid "@code{package} (default: @code{isc-dhcp})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22064
msgid "The ISC DHCP client package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22065
#, no-wrap
msgid "@code{interfaces} (default: @code{'all})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22068
msgid "Either @code{'all} or the list of interface names that the ISC DHCP client should listen on---e.g., @code{'(\"eno1\")}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22072
msgid "When set to @code{'all}, the ISC DHCP client listens on all the available non-loopback interfaces that can be activated.  Otherwise the ISC DHCP client listens only on the specified interfaces."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22073 guix-git/doc/guix.texi:22561
#: guix-git/doc/guix.texi:22825 guix-git/doc/guix.texi:29854
#: guix-git/doc/guix.texi:31701 guix-git/doc/guix.texi:37714
#, no-wrap
msgid "@code{config-file} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22075
#, fuzzy
#| msgid "Documentation"
msgid "The configuration file for the ISC DHCP client."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:22076 guix-git/doc/guix.texi:22830
#, no-wrap
msgid "@code{version} (default: @code{\"4\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22080
msgid "The DHCP protocol version to use, as a string.  Accepted values are @code{\"4\"} or @code{\"6\"} for DHCPv4 or DHCPv6, respectively, as well as @code{\"4o6\"}, for DHCPv4 over DHCPv6 (as specified by RFC 7341)."
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:22082
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{shepherd-provision} (default: @code{'(networking)})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22087 guix-git/doc/guix.texi:22317
msgid "This option can be used to provide a list of symbols naming Shepherd services that this service will depend on, such as @code{'wpa-supplicant} or @code{'iwd} if you require authenticated access for encrypted WiFi or Ethernet networks."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22092
msgid "Likewise, @code{shepherd-provision} is a list of Shepherd service names (symbols) provided by this service.  You might want to change the default value if you intend to run several ISC DHCP clients, only one of which provides the @code{networking} Shepherd service."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22095
#, fuzzy, no-wrap
#| msgid "Networking services."
msgid "DHCPCD, networking service"
msgstr "Servizi di rete."

#. type: defvar
#: guix-git/doc/guix.texi:22097
#, fuzzy, no-wrap
#| msgid "Services"
msgid "dhcpcd-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:22102
msgid "This the type for a service running @command{dhcpcd}, a @acronym{DHCP, Dynamic Host Configuration Protocol} client that can be used as a replacement for the historical ISC client supported by @code{dhcp-client-service-type}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22107
msgid "Its value must be a @code{dhcpcd-configuration} record, as described below.  As an example, consider the following setup which runs @command{dhcpcd} with a local @acronym{DNS, Domain Name System} resolver:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:22119
#, no-wrap
msgid ""
"(service dhcpcd-service-type\n"
"  (dhcpcd-configuration\n"
"    (option '(\"rapid_commit\" \"interface_mtu\"))\n"
"    (no-option '(\"nd_rdnss\"\n"
"                 \"dhcp6_name_servers\"\n"
"                 \"domain_name_servers\"\n"
"                 \"domain_name\"\n"
"                 \"domain_search\"))\n"
"    (static '(\"domain_name_servers=127.0.0.1\"))\n"
"    (no-hook '(\"hostname\"))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22122
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} dhcpcd-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:22124
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{dhcpcd-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:22126
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{interfaces} (default: @code{()}) (type: list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22131
msgid "List of networking interfaces---e.g., @code{\"eth0\"}---to start a DHCP client for.  If no interface is specified (i.e., the list is empty) then @command{dhcpcd} discovers available Ethernet interfaces, that can be configured, automatically."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22132
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{command-arguments} (default: @code{(\"-q\" \"-q\")}) (type: list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22134
msgid "List of additional command-line options."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22135
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{host-name} (default: @code{\"\"}) (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22137
msgid "Host name to send via DHCP, defaults to the current system host name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22138
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{duid} (default: @code{\"\"}) (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22144
msgid "DHCPv4 clients require a unique client identifier, this option uses the DHCPv6 Unique Identifier as a DHCPv4 client identifier as well.  For more information, refer to @uref{https://www.rfc-editor.org/rfc/rfc4361,RFC 4361} and @code{dhcpcd.conf(5)}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22145
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{persistent?} (default: @code{#t}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22148
msgid "When true, automatically de-configure the interface when @command{dhcpcd} exits."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22149
#, no-wrap
msgid "@code{option} (default: @code{(\"rapid_commit\" \"domain_name_servers\" \"domain_name\" \"domain_search\" \"host_name\" \"classless_static_routes\" \"interface_mtu\")}) (type: list-of-strings)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22151
msgid "List of options to request from the server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22152
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{require} (default: @code{(\"dhcp_server_identifier\")}) (type: list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22154
msgid "List of options to require in responses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22155
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{slaac} (default: @code{\"private\"}) (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22157
msgid "Interface identifier used for SLAAC generated IPv6 addresses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22158
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{no-option} (default: @code{()}) (type: list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22160
msgid "List of options to remove from the message before it's processed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22161
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{no-hook} (default: @code{()}) (type: list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22163
msgid "List of hook script which should not be invoked."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22164
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{static} (default: @code{()}) (type: list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22168
msgid "DHCP client can request different options from a DHCP server, through @code{static} it is possible to configure static values for selected options.  For example, @code{\"domain_name_servers=127.0.0.1\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22169 guix-git/doc/guix.texi:22450
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{vendor-class-id} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22173
msgid "Set the DHCP Vendor Class (e.g., @code{MSFT}).  For more information, refer to @uref{https://www.rfc-editor.org/rfc/rfc2132#section-9.13,RFC 2132}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22174
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{client-id} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22177
msgid "Use the interface hardware address or the given string as a client identifier, this is matually exclusive with the @code{duid} option."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22178 guix-git/doc/guix.texi:36829
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{extra-content} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22180
#, fuzzy
#| msgid "Documentation"
msgid "Extra content to append to the configuration as-is."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:22181 guix-git/doc/guix.texi:22614
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{shepherd-requirement} (default: @code{()}) (type: list-of-symbols)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22184 guix-git/doc/guix.texi:30461
#: guix-git/doc/guix.texi:39553
msgid "This is a list of symbols naming Shepherd services that this service will depend on."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22189
#, no-wrap
msgid "NetworkManager"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22191
#, no-wrap
msgid "network-manager-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22196
msgid "This is the service type for the @uref{https://wiki.gnome.org/Projects/NetworkManager, NetworkManager} service. The value for this service type is a @code{network-manager-configuration} record."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22199 guix-git/doc/guix.texi:22743
#: guix-git/doc/guix.texi:22772
msgid "This service is part of @code{%desktop-services} (@pxref{Desktop Services})."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22201
#, no-wrap
msgid "{Data Type} network-manager-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22203
msgid "Data type representing the configuration of NetworkManager."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22205
#, no-wrap
msgid "@code{network-manager} (default: @code{network-manager})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22207
msgid "The NetworkManager package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22208
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{shepherd-requirement} (default: @code{'(wireless-daemon)})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22214
msgid "This option can be used to provide a list of symbols naming Shepherd services that this service will depend on. The default @code{'wireless-daemon} is provided by @code{'wpa-supplicant-service-type} and @code{'iwd-service-type}.  Make sure you have one of these configured. Note, that @code{%desktop-services} already include @code{wpa-supplicant-service-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22215
#, no-wrap
msgid "@code{dns} (default: @code{\"default\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22218
msgid "Processing mode for DNS, which affects how NetworkManager uses the @code{resolv.conf} configuration file."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22223
msgid "NetworkManager will update @code{resolv.conf} to reflect the nameservers provided by currently active connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22224
#, no-wrap
msgid "dnsmasq"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22228
msgid "NetworkManager will run @code{dnsmasq} as a local caching nameserver, using a @dfn{conditional forwarding} configuration if you are connected to a VPN, and then update @code{resolv.conf} to point to the local nameserver."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22234
msgid "With this setting, you can share your network connection.  For example when you want to share your network connection to another laptop @i{via} an Ethernet cable, you can open @command{nm-connection-editor} and configure the Wired connection's method for IPv4 and IPv6 to be ``Shared to other computers'' and reestablish the connection (or reboot)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22241
msgid "You can also set up a @dfn{host-to-guest connection} to QEMU VMs (@pxref{Installing Guix in a VM}).  With a host-to-guest connection, you can e.g.@: access a Web server running on the VM (@pxref{Web Services}) from a Web browser on your host system, or connect to the VM @i{via} SSH (@pxref{Networking Services, @code{openssh-service-type}}).  To set up a host-to-guest connection, run this command once:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:22248
#, no-wrap
msgid ""
"nmcli connection add type tun \\\n"
" connection.interface-name tap0 \\\n"
" tun.mode tap tun.owner $(id -u) \\\n"
" ipv4.method shared \\\n"
" ipv4.addresses 172.28.112.1/24\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22253
msgid "Then each time you launch your QEMU VM (@pxref{Running Guix in a VM}), pass @option{-nic tap,ifname=tap0,script=no,downscript=no} to @command{qemu-system-...}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22256
msgid "NetworkManager will not modify @code{resolv.conf}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22258
#, no-wrap
msgid "@code{vpn-plugins} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22262
msgid "This is the list of available plugins for virtual private networks (VPNs).  An example of this is the @code{network-manager-openvpn} package, which allows NetworkManager to manage VPNs @i{via} OpenVPN."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22263
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{extra-configuration-files} (default: @code{'()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22271
msgid "A list of two-element lists; the first element of each list is a file name (as a string), and the second is a file-like object.  Used to specify configuration files which will be added to the @file{/etc/NetworkManager/conf.d}.  NetworkManager will read additional configuration from this directory.  For details on configuration file precedence and the configuration file format, see @samp{man 5 NetworkManager.conf}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22274
msgid "For example, to add two files named @file{001-basic.conf} and @file{002-unmanaged.conf}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:22284
#, no-wrap
msgid ""
"(service network-manager-service-type\n"
"         (network-manager-configuration\n"
"          (extra-configuration-files\n"
"           `((\"001-basic.conf\" ,(local-file \"basic.conf\"))\n"
"             (\"002-unmanaged.conf\" ,(plain-file \"constructed-unmanaged.conf\"\n"
"                                                \"\\\n"
"[keyfile]\n"
"unmanaged-devices=interface-name:wlo1_ap\\n\"))))))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22289
#, no-wrap
msgid "Connman"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22290
#, no-wrap
msgid "connman-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22293
msgid "This is the service type to run @url{https://01.org/connman,Connman}, a network connection manager."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22295
#, fuzzy
#| msgid "Documentation"
msgid "Its value must be a @code{connman-configuration} record as in this example:"
msgstr "Documentazione"

#. type: lisp
#: guix-git/doc/guix.texi:22300
#, no-wrap
msgid ""
"(service connman-service-type\n"
"         (connman-configuration\n"
"           (disable-vpn? #t)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22303
msgid "See below for details about @code{connman-configuration}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22305
#, no-wrap
msgid "{Data Type} connman-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22307
msgid "Data Type representing the configuration of connman."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22309
#, no-wrap
msgid "@code{connman} (default: @var{connman})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22311
msgid "The connman package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22318
#, no-wrap
msgid "@code{disable-vpn?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22320
msgid "When true, disable connman's vpn plugin."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22321
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{general-configuration} (default: @code{(connman-general-configuration)})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22324
msgid "Configuration serialized to @file{main.conf} and passed as @option{--config} to @command{connmand}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22330
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} connman-general-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:22332
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{connman-general-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:22334
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{input-request-timeout} (type: maybe-number)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22339
msgid "Set input request timeout.  Default is 120 seconds.  The request for inputs like passphrase will timeout after certain amount of time.  Use this setting to increase the value in case of different user interface designs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22340
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{browser-launch-timeout} (type: maybe-number)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22345
msgid "Set browser launch timeout.  Default is 300 seconds.  The request for launching a browser for portal pages will timeout after certain amount of time.  Use this setting to increase the value in case of different user interface designs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22346
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{background-scanning?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22356
msgid "Enable background scanning.  Default is true.  If wifi is disconnected, the background scanning will follow a simple back off mechanism from 3s up to 5 minutes.  Then, it will stay in 5 minutes unless user specifically asks for scanning through a D-Bus call.  If so, the mechanism will start again from 3s.  This feature activates also the background scanning while being connected, which is required for roaming on wifi.  When @code{background-scanning?} is false, ConnMan will not perform any scan regardless of wifi is connected or not, unless it is requested by the user through a D-Bus call."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22357
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{use-gateways-as-timeservers?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22360
msgid "Assume that service gateways also function as timeservers.  Default is false."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22361
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{fallback-timeservers} (type: maybe-list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22367
msgid "List of Fallback timeservers.  These timeservers are used for NTP sync when there are no timeservers set by the user or by the service, and when @code{use-gateways-as-timeservers?} is @code{#f}.  These can contain a mixed combination of fully qualified domain names, IPv4 and IPv6 addresses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22368
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{fallback-nameservers} (type: maybe-list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22372
msgid "List of fallback nameservers appended to the list of nameservers given by the service.  The nameserver entries must be in numeric format, host names are ignored."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22373
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{default-auto-connect-technologies} (type: maybe-list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22378
msgid "List of technologies that are marked autoconnectable by default.  The default value for this entry when empty is @code{\"ethernet\"}, @code{\"wifi\"}, @code{\"cellular\"}.  Services that are automatically connected must have been set up and saved to storage beforehand."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22379
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{default-favourite-technologies} (type: maybe-list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22383
msgid "List of technologies that are marked favorite by default.  The default value for this entry when empty is @code{\"ethernet\"}.  Connects to services from this technology even if not setup and saved to storage."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22384
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{always-connected-technologies} (type: maybe-list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22389
msgid "List of technologies which are always connected regardless of preferred-technologies setting (@code{auto-connect?} @code{#t}).  The default value is empty and this feature is disabled unless explicitly enabled."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22390
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{preferred-technologies} (type: maybe-list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22400
msgid "List of preferred technologies from the most preferred one to the least preferred one.  Services of the listed technology type will be tried one by one in the order given, until one of them gets connected or they are all tried.  A service of a preferred technology type in state 'ready' will get the default route when compared to another preferred type further down the list with state 'ready' or with a non-preferred type; a service of a preferred technology type in state 'online' will get the default route when compared to either a non-preferred type or a preferred type further down in the list."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22401
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{network-interface-blacklist} (type: maybe-list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22406
msgid "List of blacklisted network interfaces.  Found interfaces will be compared to the list and will not be handled by ConnMan, if their first characters match any of the list entries.  Default value is @code{\"vmnet\"}, @code{\"vboxnet\"}, @code{\"virbr\"}, @code{\"ifb\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22407
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{allow-hostname-updates?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22410
msgid "Allow ConnMan to change the system hostname.  This can happen for example if we receive DHCP hostname option.  Default value is @code{#t}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22411
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{allow-domainname-updates?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22415
msgid "Allow connman to change the system domainname.  This can happen for example if we receive DHCP domainname option.  Default value is @code{#t}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22416
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{single-connected-technology?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22427
msgid "Keep only a single connected technology at any time.  When a new service is connected by the user or a better one is found according to preferred-technologies, the new service is kept connected and all the other previously connected services are disconnected.  With this setting it does not matter whether the previously connected services are in 'online' or 'ready' states, the newly connected service is the only one that will be kept connected.  A service connected by the user will be used until going out of network coverage.  With this setting enabled applications will notice more network breaks than normal.  Note this options can't be used with VPNs.  Default value is @code{#f}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22428
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{tethering-technologies} (type: maybe-list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22438
msgid "List of technologies that are allowed to enable tethering.  The default value is @code{\"wifi\"}, @code{\"bluetooth\"}, @code{\"gadget\"}.  Only those technologies listed here are used for tethering.  If one wants to tether ethernet, then add @code{\"ethernet\"} in the list.  Note that if ethernet tethering is enabled, then a DHCP server is started on all ethernet interfaces.  Tethered ethernet should never be connected to corporate or home network as it will disrupt normal operation of these networks.  Due to this ethernet is not tethered by default.  Do not activate ethernet tethering unless you really know what you are doing."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22439
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{persistent-tethering-mode?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22443
msgid "Restore earlier tethering status when returning from offline mode, re-enabling a technology, and after restarts and reboots.  Default value is @code{#f}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22444
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{enable-6to4?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22449
msgid "Automatically enable anycast 6to4 if possible.  This is not recommended, as the use of 6to4 will generally lead to a severe degradation of connection quality.  See RFC6343.  Default value is @code{#f} (as recommended by RFC6343 section 4.1)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22454
msgid "Set DHCP option 60 (Vendor Class ID) to the given string.  This option can be used by DHCP servers to identify specific clients without having to rely on MAC address ranges, etc."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22455
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{enable-online-check?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22462
msgid "Enable or disable use of HTTP GET as an online status check.  When a service is in a READY state, and is selected as default, ConnMan will issue an HTTP GET request to verify that end-to-end connectivity is successful.  Only then the service will be transitioned to ONLINE state.  If this setting is false, the default service will remain in READY state.  Default value is @code{#t}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22463
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{online-check-ipv4-url} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22467
msgid "IPv4 URL used during the online status check.  Please refer to the README for more detailed information.  Default value is @uref{http://ipv4.connman.net/online/status.html}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22468
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{online-check-ipv6-url} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22472
msgid "IPv6 URL used during the online status check.  Please refer to the README for more detailed information.  Default value is @uref{http://ipv6.connman.net/online/status.html}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22473
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{online-check-initial-interval} (type: maybe-number)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22476 guix-git/doc/guix.texi:22480
msgid "Range of intervals between two online check requests.  Please refer to the README for more detailed information.  Default value is @samp{1}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22477
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{online-check-max-interval} (type: maybe-number)"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:22481
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{enable-online-to-ready-transition?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22492
msgid "WARNING: This is an experimental feature.  In addition to @code{enable-online-check} setting, enable or disable use of HTTP GET to detect the loss of end-to-end connectivity.  If this setting is @code{#f}, when the default service transitions to ONLINE state, the HTTP GET request is no more called until next cycle, initiated by a transition of the default service to DISCONNECT state.  If this setting is @code{#t}, the HTTP GET request keeps being called to guarantee that end-to-end connectivity is still successful.  If not, the default service will transition to READY state, enabling another service to become the default one, in replacement.  Default value is @code{#f}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22493
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{auto-connect-roaming-services?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22497
msgid "Automatically connect roaming services.  This is not recommended unless you know you won't have any billing problem.  Default value is @code{#f}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22498
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{address-conflict-detection?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22507
msgid "Enable or disable the implementation of IPv4 address conflict detection according to RFC5227.  ConnMan will send probe ARP packets to see if an IPv4 address is already in use before assigning the address to an interface.  If an address conflict occurs for a statically configured address, an IPv4LL address will be chosen instead (according to RFC3927).  If an address conflict occurs for an address offered via DHCP, ConnMan sends a DHCP DECLINE once and for the second conflict resorts to finding an IPv4LL address.  Default value is @code{#f}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22508
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{localtime} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22510
msgid "Path to localtime file.  Defaults to @file{/etc/localtime}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22511
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{regulatory-domain-follows-timezone?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22517
msgid "Enable regulatory domain to be changed along timezone changes.  With this option set to true each time the timezone changes the first present ISO3166 country code is read from @file{/usr/share/zoneinfo/zone1970.tab} and set as regulatory domain value.  Default value is @code{#f}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22518
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{resolv-conf} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22524
msgid "Path to resolv.conf file.  If the file does not exist, but intermediate directories exist, it will be created.  If this option is not set, it tries to write into @file{/var/run/connman/resolv.conf} if it fails (@file{/var/run/connman} does not exist or is not writeable).  If you do not want to update resolv.conf, you can set @file{/dev/null}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22529
#, no-wrap
msgid "WPA Supplicant"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22530
#, no-wrap
msgid "wpa-supplicant-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22534
msgid "This is the service type to run @url{https://w1.fi/wpa_supplicant/,WPA supplicant}, an authentication daemon required to authenticate against encrypted WiFi or ethernet networks."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22536
#, no-wrap
msgid "{Data Type} wpa-supplicant-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22538
msgid "Data type representing the configuration of WPA Supplicant."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22540 guix-git/doc/guix.texi:42845
msgid "It takes the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22542
#, no-wrap
msgid "@code{wpa-supplicant} (default: @code{wpa-supplicant})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22544
msgid "The WPA Supplicant package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22545
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{shepherd-requirement} (default: @code{(user-processes loopback syslogd)}"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22547
msgid "List of services that should be started before WPA Supplicant starts."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22548
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{shepherd-provision} (default: @code{(wpa-supplicant wireless-daemon)}) (type: list-of-symbols)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22550 guix-git/doc/guix.texi:22619
#: guix-git/doc/guix.texi:31471
msgid "The name(s) of the service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22551
#, no-wrap
msgid "@code{dbus?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22553
msgid "Whether to listen for requests on D-Bus."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22554
#, no-wrap
msgid "@code{pid-file} (default: @code{\"/var/run/wpa_supplicant.pid\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22556
msgid "Where to store the PID file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22557 guix-git/doc/guix.texi:41051
#: guix-git/doc/guix.texi:41193
#, no-wrap
msgid "@code{interface} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22560
msgid "If this is set, it must specify the name of a network interface that WPA supplicant will control."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22563
msgid "Optional configuration file to use."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22566
msgid "List of additional command-line arguments to pass to the daemon."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22569
#, no-wrap
msgid "iwd, iNet Wireless Daemon"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22570
#, fuzzy, no-wrap
#| msgid "Services"
msgid "iwd-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:22574
msgid "This is the service type to run iwd, the @uref{https://iwd.wiki.kernel.org/, iNet Wireless Daemon}, a daemon required to authenticate against encrypted WiFi networks."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:22582
msgid "By default @code{iwd} removes and re-creates interfaces it manages.  It doesn't play nicely with @code{dhcp-client-service-type} that enumerates wireless interfaces before starting the Shepherd service.  Use either @code{dhcpcd-service-type} or the @code{iwd}'s built-in DHCP client (see @code{enable-network-configuration} option below)."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:22587
msgid "@code{iwd-service-type} conflicts with @code{wpa-supplicant-service-type}.  Make sure only one is configured."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22591
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} iwd-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:22593
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{iwd-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:22595
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{iwd} (default: @code{iwd}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22597
#, fuzzy
#| msgid "Updating the Guix package definition."
msgid "The IWD package to use."
msgstr "Aggiornamento della definizione del pacchetto Guix."

#. type: item
#: guix-git/doc/guix.texi:22598
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{interfaces} (default: @code{()}) (type: list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22601
msgid "If this is set, it must specify @dfn{glob patterns} matching network interfaces that IWD will control."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22602
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ignored-interfaces} (default: @code{()}) (type: list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22605
msgid "If this is set, it must specify @dfn{glob patterns} matching network interfaces that IWD will not manage."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22606
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{phys} (default: @code{()}) (type: list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22609
msgid "If this is set, it must specify @dfn{glob patterns} matching network PHYs names that IWD will control."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22610
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ignored-phys} (default: @code{()}) (type: list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22613
msgid "If this is set, it must specify @dfn{glob patterns} matching network PHYs names that IWD will not manage."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22616 guix-git/doc/guix.texi:31003
#: guix-git/doc/guix.texi:31474
msgid "Shepherd requirements the service should depend on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22617
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{shepherd-provision} (default: @code{(iwd wireless-daemon)}) (type: list-of-symbols)"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:22620
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{config} (type: iwd-settings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22622
#, fuzzy
#| msgid "Documentation"
msgid "Configuration settings."
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:22632
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} iwd-settings"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:22634
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{iwd-settings} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:22636
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{general} (type: iwd-general-settings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22638
msgid "General settings."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22639
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{network} (default: @code{(iwd-network-settings)}) (type: maybe-iwd-network-settings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22641
#, fuzzy
#| msgid "Networking"
msgid "Network settings."
msgstr "Rete"

#. type: item
#: guix-git/doc/guix.texi:22642
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{scan} (type: maybe-iwd-scan-settings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22644
msgid "Scan settings."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22645
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{extra-config} (default: @code{()}) (type: list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22647
#, fuzzy
#| msgid "Documentation"
msgid "Extra configuration values to append to the IWD configuration file."
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:22657
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} iwd-general-settings"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:22659
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{iwd-general-settings} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:22661
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{enable-network-configuration?} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22664
msgid "Setting this option to true enables @code{iwd} to configure the network interfaces with the IP addresses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22665 guix-git/doc/guix.texi:22689
#: guix-git/doc/guix.texi:22720 guix-git/doc/guix.texi:36851
#: guix-git/doc/guix.texi:36867 guix-git/doc/guix.texi:36886
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{extra-options} (default: @code{()}) (type: alist)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22668
msgid "An association list of option symbols/strings to string values to be appended to the General settings group."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22678
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} iwd-network-settings"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:22680
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{iwd-network-settings} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:22682
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{enable-ipv6?} (default: @code{#t}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22685
msgid "Sets the global default that tells @code{iwd} whether it should configure IPv6 addresses and routes"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22686
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{name-resolving-service} (default: @code{none}) (type: resolving-service)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22688
msgid "Configures a DNS resolution method used by the system."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22692
msgid "An association list of option symbols/strings to string values to be appended to the Network settings group."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22702
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} iwd-scan-settings"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:22704
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{iwd-scan-settings} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:22706
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{disable-periodic-scan?} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22709
msgid "Setting this option to @code{#t} will prevent @code{iwd} from issuing the periodic scans for the available networks while disconnected."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22710
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{initial-periodic-scan-interval} (default: @code{10}) (type: number)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22712
msgid "The initial periodic scan interval upon disconnect (in seconds)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22713
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{maximum-periodic-scan-interval} (default: @code{300}) (type: number)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22715
msgid "The maximum periodic scan interval (in seconds)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22716
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{disable-roaming-scan?} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22719
msgid "Setting this option to @code{#t} will prevent @code{iwd} from trying to scan when roaming decisions are activated."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22723
msgid "An association list of option symbols/strings to string values to be appended to the Scan settings group."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22731
#, no-wrap
msgid "ModemManager"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:22734
msgid "Some networking devices such as modems require special care, and this is what the services below focus on."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22735
#, no-wrap
msgid "modem-manager-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22740
msgid "This is the service type for the @uref{https://wiki.gnome.org/Projects/ModemManager, ModemManager} service.  The value for this service type is a @code{modem-manager-configuration} record."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22745
#, no-wrap
msgid "{Data Type} modem-manager-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22747
msgid "Data type representing the configuration of ModemManager."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22749
#, no-wrap
msgid "@code{modem-manager} (default: @code{modem-manager})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22751
msgid "The ModemManager package to use."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22755
#, no-wrap
msgid "USB_ModeSwitch"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22756
#, no-wrap
msgid "Modeswitching"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22758
#, no-wrap
msgid "usb-modeswitch-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22763
msgid "This is the service type for the @uref{https://www.draisberghof.de/usb_modeswitch/, USB_ModeSwitch} service.  The value for this service type is a @code{usb-modeswitch-configuration} record."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22769
msgid "When plugged in, some USB modems (and other USB devices) initially present themselves as a read-only storage medium and not as a modem.  They need to be @dfn{modeswitched} before they are usable.  The USB_ModeSwitch service type installs udev rules to automatically modeswitch these devices when they are plugged in."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22774
#, no-wrap
msgid "{Data Type} usb-modeswitch-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22776
msgid "Data type representing the configuration of USB_ModeSwitch."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22778
#, no-wrap
msgid "@code{usb-modeswitch} (default: @code{usb-modeswitch})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22780
msgid "The USB_ModeSwitch package providing the binaries for modeswitching."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22781
#, no-wrap
msgid "@code{usb-modeswitch-data} (default: @code{usb-modeswitch-data})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22784
msgid "The package providing the device data and udev rules file used by USB_ModeSwitch."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22785
#, no-wrap
msgid "@code{config-file} (default: @code{#~(string-append #$usb-modeswitch:dispatcher \"/etc/usb_modeswitch.conf\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22790
msgid "Which config file to use for the USB_ModeSwitch dispatcher.  By default the config file shipped with USB_ModeSwitch is used which disables logging to @file{/var/log} among other default settings.  If set to @code{#f}, no config file is used."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:22804
msgid "The @code{(gnu services networking)} module discussed in the previous section provides services for more advanced setups: providing a DHCP service for others to use, filtering packets with iptables or nftables, running a WiFi access point with @command{hostapd}, running the @command{inetd} ``superdaemon'', and more.  This section describes those."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22805
#, fuzzy, no-wrap
#| msgid "Services"
msgid "dhcpd-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:22809
msgid "This type defines a service that runs a DHCP daemon.  To create a service of this type, you must supply a @code{<dhcpd-configuration>}.  For example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:22815
#, no-wrap
msgid ""
"(service dhcpd-service-type\n"
"         (dhcpd-configuration\n"
"          (config-file (local-file \"my-dhcpd.conf\"))\n"
"          (interfaces '(\"enp0s25\"))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22818
#, no-wrap
msgid "{Data Type} dhcpd-configuration"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22825
msgid "The package that provides the DHCP daemon.  This package is expected to provide the daemon at @file{sbin/dhcpd} relative to its output directory.  The default package is the @uref{https://www.isc.org/dhcp/, ISC's DHCP server}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22830
msgid "The configuration file to use.  This is required.  It will be passed to @code{dhcpd} via its @code{-cf} option.  This may be any ``file-like'' object (@pxref{G-Expressions, file-like objects}).  See @code{man dhcpd.conf} for details on the configuration file syntax."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22835
msgid "The DHCP version to use.  The ISC DHCP server supports the values ``4'', ``6'', and ``4o6''.  These correspond to the @code{dhcpd} program options @code{-4}, @code{-6}, and @code{-4o6}.  See @code{man dhcpd} for details."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22835
#, no-wrap
msgid "@code{run-directory} (default: @code{\"/run/dhcpd\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22838
msgid "The run directory to use.  At service activation time, this directory will be created if it does not exist."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22838
#, no-wrap
msgid "@code{pid-file} (default: @code{\"/run/dhcpd/dhcpd.pid\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22841
msgid "The PID file to use.  This corresponds to the @code{-pf} option of @code{dhcpd}.  See @code{man dhcpd} for details."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22841
#, no-wrap
msgid "@code{interfaces} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22847
msgid "The names of the network interfaces on which dhcpd should listen for broadcasts.  If this list is not empty, then its elements (which must be strings) will be appended to the @code{dhcpd} invocation when starting the daemon.  It may not be necessary to explicitly specify any interfaces here; see @code{man dhcpd} for details."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22850
#, no-wrap
msgid "hostapd service, for Wi-Fi access points"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22851
#, no-wrap
msgid "Wi-Fi access points, hostapd service"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22852
#, no-wrap
msgid "hostapd-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22857
msgid "This is the service type to run the @uref{https://w1.fi/hostapd/, hostapd} daemon to set up WiFi (IEEE 802.11) access points and authentication servers.  Its associated value must be a @code{hostapd-configuration} as shown below:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:22865
#, no-wrap
msgid ""
";; Use wlan1 to run the access point for \"My Network\".\n"
"(service hostapd-service-type\n"
"         (hostapd-configuration\n"
"          (interface \"wlan1\")\n"
"          (ssid \"My Network\")\n"
"          (channel 12)))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22868
#, no-wrap
msgid "{Data Type} hostapd-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22871
msgid "This data type represents the configuration of the hostapd service, with the following fields:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22873
#, no-wrap
msgid "@code{package} (default: @code{hostapd})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22875
msgid "The hostapd package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22876
#, no-wrap
msgid "@code{interface} (default: @code{\"wlan0\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22878
msgid "The network interface to run the WiFi access point."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:22879
#, no-wrap
msgid "ssid"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22882
msgid "The SSID (@dfn{service set identifier}), a string that identifies this network."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22883
#, no-wrap
msgid "@code{broadcast-ssid?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22885
msgid "Whether to broadcast this SSID."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22886
#, no-wrap
msgid "@code{channel} (default: @code{1})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22888
msgid "The WiFi channel to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22889
#, no-wrap
msgid "@code{driver} (default: @code{\"nl80211\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22893
msgid "The driver interface type.  @code{\"nl80211\"} is used with all Linux mac80211 drivers.  Use @code{\"none\"} if building hostapd as a standalone RADIUS server that does not control any wireless/wired driver."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22894 guix-git/doc/guix.texi:30943
#: guix-git/doc/guix.texi:35223
#, no-wrap
msgid "@code{extra-settings} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22898
msgid "Extra settings to append as-is to the hostapd configuration file.  See @uref{https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf} for the configuration file reference."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22901
#, no-wrap
msgid "simulated-wifi-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22908
msgid "This is the type of a service to simulate WiFi networking, which can be useful in virtual machines for testing purposes.  The service loads the Linux kernel @uref{https://www.kernel.org/doc/html/latest/networking/mac80211_hwsim/mac80211_hwsim.html, @code{mac80211_hwsim} module} and starts hostapd to create a pseudo WiFi network that can be seen on @code{wlan0}, by default."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22910
msgid "The service's value is a @code{hostapd-configuration} record."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22913
#, no-wrap
msgid "iptables"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22914
#, no-wrap
msgid "iptables-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22920
msgid "This is the service type to set up an iptables configuration.  iptables is a packet filtering framework supported by the Linux kernel.  This service supports configuring iptables for both IPv4 and IPv6.  A simple example configuration rejecting all incoming connections except those to the ssh port 22 is shown below."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:22942
#, no-wrap
msgid ""
"(service iptables-service-type\n"
"         (iptables-configuration\n"
"          (ipv4-rules (plain-file \"iptables.rules\" \"*filter\n"
":INPUT ACCEPT\n"
":FORWARD ACCEPT\n"
":OUTPUT ACCEPT\n"
"-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT\n"
"-A INPUT -p tcp --dport 22 -j ACCEPT\n"
"-A INPUT -j REJECT --reject-with icmp-port-unreachable\n"
"COMMIT\n"
"\"))\n"
"          (ipv6-rules (plain-file \"ip6tables.rules\" \"*filter\n"
":INPUT ACCEPT\n"
":FORWARD ACCEPT\n"
":OUTPUT ACCEPT\n"
"-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT\n"
"-A INPUT -p tcp --dport 22 -j ACCEPT\n"
"-A INPUT -j REJECT --reject-with icmp6-port-unreachable\n"
"COMMIT\n"
"\"))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22945
#, no-wrap
msgid "{Data Type} iptables-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22947
msgid "The data type representing the configuration of iptables."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22949
#, no-wrap
msgid "@code{iptables} (default: @code{iptables})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22952
msgid "The iptables package that provides @code{iptables-restore} and @code{ip6tables-restore}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22952
#, no-wrap
msgid "@code{ipv4-rules} (default: @code{%iptables-accept-all-rules})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22956
msgid "The iptables rules to use.  It will be passed to @code{iptables-restore}.  This may be any ``file-like'' object (@pxref{G-Expressions, file-like objects})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22956
#, no-wrap
msgid "@code{ipv6-rules} (default: @code{%iptables-accept-all-rules})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22960
msgid "The ip6tables rules to use.  It will be passed to @code{ip6tables-restore}.  This may be any ``file-like'' object (@pxref{G-Expressions, file-like objects})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22963
#, no-wrap
msgid "nftables"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22964
#, no-wrap
msgid "firewall, nftables"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22965
#, no-wrap
msgid "nftables-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22973
msgid "This is the service type to set up a nftables configuration.  nftables is a netfilter project that aims to replace the iptables, ip6tables, arptables and ebtables framework.  It provides a new packet filtering framework, a new user-space utility @command{nft}, and a compatibility layer for iptables.  This service comes with a default ruleset, @code{%default-nftables-ruleset}, that rejects all incoming connections except those to the SSH port 22 (TCP).  To use it, simply write:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:22976
#, no-wrap
msgid "(service nftables-service-type)\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22981
#, no-wrap
msgid "{Data Type} nftables-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22983
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{nftables-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:22985
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{package} (default: @code{nftables}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22987
#, fuzzy
#| msgid "Updating the Guix package definition."
msgid "The @code{nftables} package to use."
msgstr "Aggiornamento della definizione del pacchetto Guix."

#. type: item
#: guix-git/doc/guix.texi:22988
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{debug-levels} (type: maybe-list-of-debug-levels)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22993
msgid "A list of debug levels, for enabling debugging output.  Valid debug level values are the @samp{scanner}, @samp{parser}, @samp{eval}, @samp{netlink}, @samp{mnl}, @samp{proto-ctx}, @samp{segtree} or @samp{all} symbols."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22994
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ruleset} (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:22998
msgid "A file-like object containing the complete nftables ruleset.  The default ruleset rejects all incoming connections except those to TCP port 22, with connections from the loopback interface are allowed."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23006
#, no-wrap
msgid "NTP (Network Time Protocol), service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23007
#, no-wrap
msgid "ntpd, service for the Network Time Protocol daemon"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23008
#, no-wrap
msgid "real time clock"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23009
#, no-wrap
msgid "ntp-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23013
msgid "This is the type of the service running the @uref{https://www.ntp.org, Network Time Protocol (NTP)} daemon, @command{ntpd}.  The daemon will keep the system clock synchronized with that of the specified NTP servers."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23016
msgid "The value of this service is an @code{ntpd-configuration} object, as described below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23018
#, no-wrap
msgid "{Data Type} ntp-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23020
msgid "This is the data type for the NTP service configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23022
#, no-wrap
msgid "@code{servers} (default: @code{%ntp-servers})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23026
msgid "This is the list of servers (@code{<ntp-server>} records) with which @command{ntpd} will be synchronized.  See the @code{ntp-server} data type definition below."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23027
#, no-wrap
msgid "@code{allow-large-adjustment?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23030
msgid "This determines whether @command{ntpd} is allowed to make an initial adjustment of more than 1,000 seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23031
#, no-wrap
msgid "@code{ntp} (default: @code{ntp})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23033
msgid "The NTP package to use."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23036
#, no-wrap
msgid "%ntp-servers"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23039
msgid "List of host names used as the default NTP servers.  These are servers of the @uref{https://www.ntppool.org/en/, NTP Pool Project}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23041
#, no-wrap
msgid "{Data Type} ntp-server"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23043
msgid "The data type representing the configuration of a NTP server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23045
#, no-wrap
msgid "@code{type} (default: @code{'server})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23048
msgid "The type of the NTP server, given as a symbol.  One of @code{'pool}, @code{'server}, @code{'peer}, @code{'broadcast} or @code{'manycastclient}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:23049
#, no-wrap
msgid "address"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23051
msgid "The address of the server, as a string."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:23052 guix-git/doc/guix.texi:44454
#: guix-git/doc/guix.texi:44474
#, no-wrap
msgid "options"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23057
msgid "NTPD options to use with that specific server, given as a list of option names and/or of option names and values tuples.  The following example define a server to use with the options @option{iburst} and @option{prefer}, as well as @option{version} 3 and a @option{maxpoll} time of 16 seconds."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:23063
#, no-wrap
msgid ""
"(ntp-server\n"
" (type 'server)\n"
" (address \"some.ntp.server.org\")\n"
" (options `(iburst (version 3) (maxpoll 16) prefer))))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23067
#, no-wrap
msgid "OpenNTPD"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23068
#, fuzzy, no-wrap
#| msgid "Services"
msgid "openntpd-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:23072
msgid "Run the @command{ntpd}, the Network Time Protocol (NTP) daemon, as implemented by @uref{http://www.openntpd.org, OpenNTPD}.  The daemon will keep the system clock synchronized with that of the given servers."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:23081
#, no-wrap
msgid ""
"(service\n"
" openntpd-service-type\n"
" (openntpd-configuration\n"
"  (listen-on '(\"127.0.0.1\" \"::1\"))\n"
"  (sensor '(\"udcf0 correction 70000\"))\n"
"  (constraint-from '(\"www.gnu.org\"))\n"
"  (constraints-from '(\"https://www.google.com/\"))))\n"
"\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23085
#, no-wrap
msgid "%openntpd-servers"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23088
msgid "This variable is a list of the server addresses defined in @code{%ntp-servers}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23090
#, no-wrap
msgid "{Data Type} openntpd-configuration"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23092
#, no-wrap
msgid "@code{openntpd} (default: @code{openntpd})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23094
msgid "The openntpd package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23094
#, no-wrap
msgid "@code{listen-on} (default: @code{'(\"127.0.0.1\" \"::1\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23096
msgid "A list of local IP addresses or hostnames the ntpd daemon should listen on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23096
#, no-wrap
msgid "@code{query-from} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23098
msgid "A list of local IP address the ntpd daemon should use for outgoing queries."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23098
#, no-wrap
msgid "@code{sensor} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23103
msgid "Specify a list of timedelta sensor devices ntpd should use.  @code{ntpd} will listen to each sensor that actually exists and ignore non-existent ones.  See @uref{https://man.openbsd.org/ntpd.conf, upstream documentation} for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23103
#, no-wrap
msgid "@code{server} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23105
msgid "Specify a list of IP addresses or hostnames of NTP servers to synchronize to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23105
#, no-wrap
msgid "@code{servers} (default: @code{%openntp-servers})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23107
msgid "Specify a list of IP addresses or hostnames of NTP pools to synchronize to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23107
#, no-wrap
msgid "@code{constraint-from} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23114
msgid "@code{ntpd} can be configured to query the ‘Date’ from trusted HTTPS servers via TLS.  This time information is not used for precision but acts as an authenticated constraint, thereby reducing the impact of unauthenticated NTP man-in-the-middle attacks.  Specify a list of URLs, IP addresses or hostnames of HTTPS servers to provide a constraint."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23114
#, no-wrap
msgid "@code{constraints-from} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23118
msgid "As with constraint from, specify a list of URLs, IP addresses or hostnames of HTTPS servers to provide a constraint.  Should the hostname resolve to multiple IP addresses, @code{ntpd} will calculate a median constraint from all of them."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23121
#, no-wrap
msgid "inetd"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23122
#, no-wrap
msgid "inetd-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23127
msgid "This service runs the @command{inetd} (@pxref{inetd invocation,,, inetutils, GNU Inetutils}) daemon.  @command{inetd} listens for connections on internet sockets, and lazily starts the specified server program when a connection is made on one of these sockets."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23133
msgid "The value of this service is an @code{inetd-configuration} object.  The following example configures the @command{inetd} daemon to provide the built-in @command{echo} service, as well as an smtp service which forwards smtp traffic over ssh to a server @code{smtp-server} behind a gateway @code{hostname}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:23156
#, no-wrap
msgid ""
"(service\n"
" inetd-service-type\n"
" (inetd-configuration\n"
"  (entries (list\n"
"            (inetd-entry\n"
"             (name \"echo\")\n"
"             (socket-type 'stream)\n"
"             (protocol \"tcp\")\n"
"             (wait? #f)\n"
"             (user \"root\"))\n"
"            (inetd-entry\n"
"             (node \"127.0.0.1\")\n"
"             (name \"smtp\")\n"
"             (socket-type 'stream)\n"
"             (protocol \"tcp\")\n"
"             (wait? #f)\n"
"             (user \"root\")\n"
"             (program (file-append openssh \"/bin/ssh\"))\n"
"             (arguments\n"
"              '(\"ssh\" \"-qT\" \"-i\" \"/path/to/ssh_key\"\n"
"                \"-W\" \"smtp-server:25\" \"user@@hostname\")))))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23159
msgid "See below for more details about @code{inetd-configuration}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23161
#, no-wrap
msgid "{Data Type} inetd-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23163
msgid "Data type representing the configuration of @command{inetd}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23165
#, no-wrap
msgid "@code{program} (default: @code{(file-append inetutils \"/libexec/inetd\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23167
msgid "The @command{inetd} executable to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23168 guix-git/doc/guix.texi:36216
#, no-wrap
msgid "@code{entries} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23171
msgid "A list of @command{inetd} service entries.  Each entry should be created by the @code{inetd-entry} constructor."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23174
#, no-wrap
msgid "{Data Type} inetd-entry"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23178
msgid "Data type representing an entry in the @command{inetd} configuration.  Each entry corresponds to a socket where @command{inetd} will listen for requests."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23180
#, no-wrap
msgid "@code{node} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23185
msgid "Optional string, a comma-separated list of local addresses @command{inetd} should use when listening for this service.  @xref{Configuration file,,, inetutils, GNU Inetutils} for a complete description of all options."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23187
msgid "A string, the name must correspond to an entry in @code{/etc/services}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:23187
#, no-wrap
msgid "socket-type"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23190
msgid "One of @code{'stream}, @code{'dgram}, @code{'raw}, @code{'rdm} or @code{'seqpacket}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:23190
#, no-wrap
msgid "protocol"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23192
msgid "A string, must correspond to an entry in @code{/etc/protocols}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23192
#, no-wrap
msgid "@code{wait?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23195
msgid "Whether @command{inetd} should wait for the server to exit before listening to new service requests."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23200
msgid "A string containing the user (and, optionally, group) name of the user as whom the server should run.  The group name can be specified in a suffix, separated by a colon or period, i.e.@: @code{\"user\"}, @code{\"user:group\"} or @code{\"user.group\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23200
#, no-wrap
msgid "@code{program} (default: @code{\"internal\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23203
msgid "The server program which will serve the requests, or @code{\"internal\"} if @command{inetd} should use a built-in service."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23208
msgid "A list strings or file-like objects, which are the server program's arguments, starting with the zeroth argument, i.e.@: the name of the program itself.  For @command{inetd}'s internal services, this entry must be @code{'()} or @code{'(\"internal\")}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23212
msgid "@xref{Configuration file,,, inetutils, GNU Inetutils} for a more detailed discussion of each configuration field."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23214
#, no-wrap
msgid "opendht, distributed hash table network service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23215
#, no-wrap
msgid "dhtproxy, for use with jami"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23216
#, no-wrap
msgid "opendht-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23221
msgid "This is the type of the service running a @uref{https://opendht.net, OpenDHT} node, @command{dhtnode}.  The daemon can be used to host your own proxy service to the distributed hash table (DHT), for example to connect to with Jami, among other applications."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:23231
msgid "When using the OpenDHT proxy server, the IP addresses it ``sees'' from the clients should be addresses reachable from other peers.  In practice this means that a publicly reachable address is best suited for a proxy server, outside of your private network.  For example, hosting the proxy server on a IPv4 private local network and exposing it via port forwarding could work for external peers, but peers local to the proxy would have their private addresses shared with the external peers, leading to connectivity problems."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23235
msgid "The value of this service is a @code{opendht-configuration} object, as described below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23240
#, no-wrap
msgid "{Data Type} opendht-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23242
msgid "Available @code{opendht-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23244
#, no-wrap
msgid "@code{opendht} (default: @code{opendht}) (type: file-like)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23246
msgid "The @code{opendht} package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23247
#, no-wrap
msgid "@code{peer-discovery?} (default: @code{#f}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23249
msgid "Whether to enable the multicast local peer discovery mechanism."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23250
#, no-wrap
msgid "@code{enable-logging?} (default: @code{#f}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23253
msgid "Whether to enable logging messages to syslog.  It is disabled by default as it is rather verbose."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23254 guix-git/doc/guix.texi:25211
#: guix-git/doc/guix.texi:30449 guix-git/doc/guix.texi:30998
#: guix-git/doc/guix.texi:31876
#, no-wrap
msgid "@code{debug?} (default: @code{#f}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23257
msgid "Whether to enable debug-level logging messages.  This has no effect if logging is disabled."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23258
#, no-wrap
msgid "@code{bootstrap-host} (default: @code{\"bootstrap.jami.net:4222\"}) (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23265
msgid "The node host name that is used to make the first connection to the network.  A specific port value can be provided by appending the @code{:PORT} suffix.  By default, it uses the Jami bootstrap nodes, but any host can be specified here.  It's also possible to disable bootstrapping by explicitly setting this field to the @code{%unset-value} value."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23266
#, no-wrap
msgid "@code{port} (default: @code{4222}) (type: maybe-number)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23269
msgid "The UDP port to bind to.  When left unspecified, an available port is automatically selected."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23270
#, no-wrap
msgid "@code{proxy-server-port} (type: maybe-number)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23272
msgid "Spawn a proxy server listening on the specified port."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23273
#, no-wrap
msgid "@code{proxy-server-port-tls} (type: maybe-number)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23275
msgid "Spawn a proxy server listening to TLS connections on the specified port."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23279
#, no-wrap
msgid "Tor"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23280
#, no-wrap
msgid "tor-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23285
msgid "Type for a service that runs the @uref{https://torproject.org, Tor} anonymous networking daemon.  The service is configured using a @code{<tor-configuration>} record.  By default, the Tor daemon runs as the @code{tor} unprivileged user, which is a member of the @code{tor} group."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23286
#, no-wrap
msgid "onion services, for Tor"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23290
msgid "Services of this type can be extended by other services to specify @dfn{onion services} (in addition to those already specified in @code{tor-configuration}) as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:23296
#, no-wrap
msgid ""
"(simple-service 'my-extra-onion-service tor-service-type\n"
"                (list (tor-onion-service-configuration\n"
"                        (name \"extra-onion-service\")\n"
"                        (mapping '((80 \"127.0.0.1:8080\"))))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23299
#, no-wrap
msgid "{Data Type} tor-configuration"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23301
#, no-wrap
msgid "@code{tor} (default: @code{tor})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23306
msgid "The package that provides the Tor daemon.  This package is expected to provide the daemon at @file{bin/tor} relative to its output directory.  The default package is the @uref{https://www.torproject.org, Tor Project's} implementation."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23307
#, no-wrap
msgid "@code{config-file} (default: @code{(plain-file \"empty\" \"\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23313
msgid "The configuration file to use.  It will be appended to a default configuration file, and the final configuration file will be passed to @code{tor} via its @code{-f} option.  This may be any ``file-like'' object (@pxref{G-Expressions, file-like objects}).  See @code{man tor} for details on the configuration file syntax."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23314
#, no-wrap
msgid "@code{hidden-services} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23319
msgid "The list of @code{<tor-onion-service-configuration>} records to use.  For any onion service you include in this list, appropriate configuration to enable the onion service will be automatically added to the default configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23320
#, no-wrap
msgid "@code{socks-socket-type} (default: @code{'tcp})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23327
msgid "The default socket type that Tor should use for its SOCKS socket.  This must be either @code{'tcp} or @code{'unix}.  If it is @code{'tcp}, then by default Tor will listen on TCP port 9050 on the loopback interface (i.e., localhost).  If it is @code{'unix}, then Tor will listen on the UNIX domain socket @file{/var/run/tor/socks-sock}, which will be made writable by members of the @code{tor} group."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23332
msgid "If you want to customize the SOCKS socket in more detail, leave @code{socks-socket-type} at its default value of @code{'tcp} and use @code{config-file} to override the default by providing your own @code{SocksPort} option."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23333
#, no-wrap
msgid "@code{control-socket?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23339
msgid "Whether or not to provide a ``control socket'' by which Tor can be controlled to, for instance, dynamically instantiate tor onion services.  If @code{#t}, Tor will listen for control commands on the UNIX domain socket @file{/var/run/tor/control-sock}, which will be made writable by members of the @code{tor} group."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23340
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{transport-plugins} (default: @code{'()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23345
msgid "The list of @code{<tor-transport-plugin>} records to use.  For any transport plugin you include in this list, appropriate configuration line to enable transport plugin will be automatically added to the default configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23346 guix-git/doc/guix.texi:48918
#, no-wrap
msgid "@code{auto-start?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23348
msgid "Whether or not to start the Tor daemon on boot."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23352
#, fuzzy, no-wrap
#| msgid "Services"
msgid "onion service, tor"
msgstr "Servizi"

#. type: deftp
#: guix-git/doc/guix.texi:23353
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} tor-onion-service-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:23358
msgid "Data Type representing a Tor @dfn{Onion Service} configuration.  See @url{https://community.torproject.org/onion-services/, the Tor project's documentation} for more information.  Available @code{tor-onion-service-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23360 guix-git/doc/guix.texi:25477
#: guix-git/doc/guix.texi:31276 guix-git/doc/guix.texi:31299
#: guix-git/doc/guix.texi:31354 guix-git/doc/guix.texi:36877
#: guix-git/doc/guix.texi:39425 guix-git/doc/guix.texi:45052
#: guix-git/doc/guix.texi:45097 guix-git/doc/guix.texi:45332
#: guix-git/doc/guix.texi:45668 guix-git/doc/guix.texi:45682
#: guix-git/doc/guix.texi:45780 guix-git/doc/guix.texi:45945
#: guix-git/doc/guix.texi:51010 guix-git/doc/guix.texi:51861
#, no-wrap
msgid "@code{name} (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23365
msgid "Name for this Onion Service.  This creates a @file{/var/lib/tor/hidden-services/@var{name}} directory, where the @file{hostname} file contains the @indicateurl{.onion} host name for this Onion Service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23366
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{mapping} (type: alist)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23368
msgid "Association list of port to address mappings.  The following example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:23371
#, no-wrap
msgid ""
"'((22 \"127.0.0.1:22\")\n"
"  (80 \"127.0.0.1:8080\"))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23373
msgid "maps ports 22 and 80 of the Onion Service to the local ports 22 and 8080."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23377
#, no-wrap
msgid "pluggable transports, tor"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23378
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} tor-transport-plugin"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:23387
msgid "Data type representing a Tor pluggable transport plugin in @code{tor-configuration}.  Plugguble transports are programs that disguise Tor traffic, which can be useful in case Tor is censored.  See the the Tor project's @url{https://tb-manual.torproject.org/circumvention/, documentation} and @url{https://spec.torproject.org/pt-spec/index.html, specification} for more information."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23393
msgid "Each transport plugin corresponds either to @code{ClientTransportPlugin ...} or to @code{ServerTransportPlugin ...} line in the default configuration file, see @command{man tor}.  Available @code{tor-transport-plugin} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23395
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{role} (default: @code{'client})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23406
msgid "This must be either @code{'client} or @code{'server}.  Otherwise, an error is raised.  Set the @code{'server} value if you want to run a bridge to help censored users connect to the Tor network, see @url{https://community.torproject.org/relay/setup/bridge/, the Tor project's bridge guide}.  Set the @code{'client} value if you want to connect to somebody else's bridge, see @url{https://bridges.torproject.org/, the Tor project's ``Get Bridges'' page}.  In both cases the required additional configuration should be provided via @code{#:config-file} option of @code{tor-configuration}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23406
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{protocol} (default: @code{\"obfs4\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23408
msgid "A string that specifies a pluggable transport protocol."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:23408 guix-git/doc/guix.texi:46145
#, no-wrap
msgid "program"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23414
msgid "This must be a ``file-like'' object or a string pointing to the pluggable transport plugin executable.  This option allows the Tor daemon run inside the container to access the executable and all the references (e.g. package dependencies) attached to it."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23422
msgid "Suppose you would like Tor daemon to use obfs4 type obfuscation and to connect to Tor network via obfs4 bridge (a nonpublic Tor relay with support for obfs4 type obfuscation). Then you may go to @url{https://bridges.torproject.org/, https://bridges.torproject.org/} and get there a couple of bridge lines (each starts with @code{obfs4 ...})  and use these lines in tor-service-type configuration as follows:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:23433
#, no-wrap
msgid ""
"(service tor-service-type\n"
"\t (tor-configuration\n"
"\t  (config-file (plain-file \"torrc\"\n"
"\t\t\t\t   \"\\\n"
"UseBridges 1\n"
"Bridge obfs4 ...\n"
"Bridge obfs4 ...\"))\n"
"\t  (transport-plugins\n"
"\t   (list (tor-transport-plugin\n"
"\t\t  (program (file-append lyrebird \"/bin/lyrebird\")))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:23437
msgid "The @code{(gnu services rsync)} module provides the following services:"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:23441
msgid "You might want an rsync daemon if you have files that you want available so anyone (or just yourself) can download existing files or upload new files."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23442
#, no-wrap
msgid "rsync-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23446
msgid "This is the service type for the @uref{https://rsync.samba.org, rsync} daemon, The value for this service type is a @command{rsync-configuration} record as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:23459
#, no-wrap
msgid ""
";; Export two directories over rsync.  By default rsync listens on\n"
";; all the network interfaces.\n"
"(service rsync-service-type\n"
"         (rsync-configuration\n"
"           (modules (list (rsync-module\n"
"                            (name \"music\")\n"
"                            (file-name \"/srv/zik\")\n"
"                            (read-only? #f))\n"
"                          (rsync-module\n"
"                            (name \"movies\")\n"
"                            (file-name \"/home/charlie/movies\"))))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23462
msgid "See below for details about @code{rsync-configuration}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23464
#, no-wrap
msgid "{Data Type} rsync-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23466
msgid "Data type representing the configuration for @code{rsync-service}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23468
#, no-wrap
msgid "@code{package} (default: @var{rsync})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23470
msgid "@code{rsync} package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23471 guix-git/doc/guix.texi:41285
#, no-wrap
msgid "@code{address} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23474
msgid "IP address on which @command{rsync} listens for incoming connections.  If unspecified, it defaults to listening on all available addresses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23475
#, no-wrap
msgid "@code{port-number} (default: @code{873})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23479
msgid "TCP port on which @command{rsync} listens for incoming connections.  If port is less than @code{1024} @command{rsync} needs to be started as the @code{root} user and group."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23480
#, no-wrap
msgid "@code{pid-file} (default: @code{\"/var/run/rsyncd/rsyncd.pid\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23482
msgid "Name of the file where @command{rsync} writes its PID."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23483
#, no-wrap
msgid "@code{lock-file} (default: @code{\"/var/run/rsyncd/rsyncd.lock\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23485
msgid "Name of the file where @command{rsync} writes its lock file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23486
#, no-wrap
msgid "@code{log-file} (default: @code{\"/var/log/rsyncd.log\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23488
msgid "Name of the file where @command{rsync} writes its log file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23489 guix-git/doc/guix.texi:47894
#, no-wrap
msgid "@code{user} (default: @code{\"root\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23491
msgid "Owner of the @code{rsync} process."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23492
#, no-wrap
msgid "@code{group} (default: @code{\"root\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23494
msgid "Group of the @code{rsync} process."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23495
#, no-wrap
msgid "@code{uid} (default: @code{\"rsyncd\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23498
msgid "User name or user ID that file transfers to and from that module should take place as when the daemon was run as @code{root}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23499
#, no-wrap
msgid "@code{gid} (default: @code{\"rsyncd\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23501 guix-git/doc/guix.texi:24374
msgid "Group name or group ID that will be used when accessing the module."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23502 guix-git/doc/guix.texi:48932
#, no-wrap
msgid "@code{modules} (default: @code{%default-modules})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23505
msgid "List of ``modules''---i.e., directories exported over rsync.  Each element must be a @code{rsync-module} record, as described below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23508
#, no-wrap
msgid "{Data Type} rsync-module"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23511
msgid "This is the data type for rsync ``modules''.  A module is a directory exported over the rsync protocol.  The available fields are as follows:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23517
msgid "The module name.  This is the name that shows up in URLs.  For example, if the module is called @code{music}, the corresponding URL will be @code{rsync://host.example.org/music}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:23518
#, fuzzy, no-wrap
msgid "file-name"
msgstr "Canali"

#. type: table
#: guix-git/doc/guix.texi:23520
msgid "Name of the directory being exported."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23524
msgid "Comment associated with the module.  Client user interfaces may display it when they obtain the list of available modules."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23525
#, no-wrap
msgid "@code{read-only?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23529
msgid "Whether or not client will be able to upload files.  If this is false, the uploads will be authorized if permissions on the daemon side permit it."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23530
#, no-wrap
msgid "@code{chroot?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23534
msgid "When this is true, the rsync daemon changes root to the module's directory before starting file transfers with the client.  This improves security, but requires rsync to run as root."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23535
#, no-wrap
msgid "@code{timeout} (default: @code{300})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23538
msgid "Idle time in seconds after which the daemon closes a connection with the client."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23541 guix-git/doc/guix.texi:52870
#, no-wrap
msgid "Syncthing, file synchronization service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23542 guix-git/doc/guix.texi:52871
#, no-wrap
msgid "backup service, Syncthing"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:23544
msgid "The @code{(gnu services syncthing)} module provides the following services:"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23544
#, no-wrap
msgid "syncthing"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:23549
msgid "You might want a Syncthing daemon if you have files between two or more computers and want to sync them in real time, safely protected from prying eyes."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23550
#, no-wrap
msgid "syncthing-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23554
msgid "This is the service type for the @uref{https://syncthing.net/, syncthing} daemon, The value for this service type is a @command{syncthing-configuration} record as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:23558
#, no-wrap
msgid ""
"(service syncthing-service-type\n"
"         (syncthing-configuration (user \"alice\")))\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:23564
msgid "This service is also available for Guix Home, where it runs directly with your user privileges (@pxref{Networking Home Services, @code{home-syncthing-service-type}})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23567
msgid "See below for details about @code{syncthing-configuration}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23569
#, no-wrap
msgid "{Data Type} syncthing-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23571
msgid "Data type representing the configuration for @code{syncthing-service-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23573
#, no-wrap
msgid "@code{syncthing} (default: @var{syncthing})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23575
msgid "@code{syncthing} package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23576
#, no-wrap
msgid "@code{arguments} (default: @var{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23578
msgid "List of command-line arguments passing to @code{syncthing} binary."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23579
#, no-wrap
msgid "@code{logflags} (default: @var{0})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23582
msgid "Sum of logging flags, see @uref{https://docs.syncthing.net/users/syncthing.html#cmdoption-logflags, Syncthing documentation logflags}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23583
#, no-wrap
msgid "@code{user} (default: @var{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23586
msgid "The user as which the Syncthing service is to be run.  This assumes that the specified user exists."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23587
#, no-wrap
msgid "@code{group} (default: @var{\"users\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23590
msgid "The group as which the Syncthing service is to be run.  This assumes that the specified group exists."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23591
#, no-wrap
msgid "@code{home} (default: @var{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23594
msgid "Sets the @code{HOME} variable for the Syncthing daemon.  The default is @file{$HOME} of the specified Syncthing @code{user}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23595
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{config-file} (default: @var{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23604
msgid "Either a file-like object that resolves to a Syncthing configuration XML file, or a @code{syncthing-config-file} record (see below).  If set to @code{#f}, Guix will not try to generate a config file, and Syncthing will generate a default configuration which will not be touched on reconfigure.  Specifying this in a system service moves Syncthing's common configuration and data directory (@code{--home} in @uref{https://docs.syncthing.net/users/syncthing.html}) to @file{/var/lib/syncthing-<user>}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23613
msgid "When used as a home service, syncthing configuration will be populated in @file{~/.local/state/syncthing/}.  Old Syncthing installs may have files in @file{$XDG_CONFIG_HOME/syncthing/} (usually @file{~/.config/syncthing/}), which will override configuration in @file{~/.local/state/syncthing} managed by this service.  In such cases, you should move the contents of @file{$XDG_CONFIG_HOME/syncthing/} into @file{~/.local/state/syncthing/}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:23629
msgid "This section documents a subset of the Syncthing configuration options—specifically those related to Guix or those affecting how your computer will connect to other computers over the network (such as Syncthing relays or discovery servers).  The configuration is fully documented in the upstream @uref{https://docs.syncthing.net/users/config.html, Syncthing config documentation}; camelCase there is converted to kebab-case here.  If you are migrating from a Syncthing-managed configuration to one managed by Guix, you can check what changes were introduced by @code{diff}ing the respective @file{config.xml} files.  Note that you will need to add whitespace with 4-space indentation to the file generated by Guix, using the @code{xmllint} program from the @code{libxml2} package like so:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:23632
#, no-wrap
msgid "XMLLINT_INDENT=\"    \" xmllint --format /path/to/new/config.xml | diff /path/to/old/config.xml -\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:23638
msgid "When generating a configuration file through Guix, you can still temporarily modify Syncthing from the GUI or through @code{introducer} and @code{autoAcceptFolders} mechanisms, but such changes will be reset on reconfigure."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23639
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} syncthing-config-file"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:23642
#, fuzzy
#| msgid "Documentation"
msgid "Data type representing the configuration file read by the Syncthing daemon."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23644
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{folders} (default: @code{(list (syncthing-folder (id \"default\") (label \"Default Folder\") (path \"~/Sync\")))}"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23647
msgid "The default here is the same as Syncthing's default.  The value should be a list of @code{syncthing-folder}s."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23648
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{devices} (default: @code{'()}"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23657
msgid "This should be a list of @code{syncthing-device}s.  Guix will automatically add any devices specified in any `folders' to this list.  There are instances when you want to connect to a device despite not (initially) sharing any folders (such as a device with autoAcceptFolders).  In such instances, you should specify those devices here.  If multiple versions of the same device (as determined by comparing device ID) are discovered, the one in this list is prioritized.  Otherwise, the first instance in the first folder is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23658
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{gui-enabled?} (default: @code{#t})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23662
msgid "By default, any user on the computer can access the GUI and make changes to Syncthing.  If you leave this enabled, you should probably set @code{gui-user} and @code{gui-password} (see below)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23663
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{gui-tls?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23664
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{gui-debugging?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23665
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{gui-send-basic-authorization-prompt?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23666
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{gui-address} (default: @code{\"127.0.0.1:8384\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23667
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{gui-user} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23668
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{gui-password} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23671
msgid "A bcrypt hash of the GUI password.  Remember that this will be globally exposed in @file{/gnu/store}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23672
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{gui-apikey} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23675
msgid "You must specify this to use the Syncthing REST interface.  This key is kept in @file{/gnu/store} and is accessible to all users of the system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23676
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{gui-theme} (default: @code{\"default\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23677
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ldap-enabled?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23678
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ldap-address} (default: @code{\"\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23679
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ldap-bind-dn} (default: @code{\"\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23680
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ldap-transport} (default: @code{\"\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23681
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ldap-insecure-skip-verify} (default: @code{\"\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23682
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ldap-search-base-dn} (default: @code{\"\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23683
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ldap-search-filter} (default: @code{\"\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23684
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{listen-address} (default: @code{\"default\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23685
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{global-announce-server} (default: @code{\"default\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23686
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{global-announce-enabled?} (default: @code{#t})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23689
msgid "Global discovery servers can be used to help connect devices at unknown IP addresses by storing the last known IP address."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23690
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{local-announce-enabled?} (default: @code{#t})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23694
msgid "This makes devices find each other very easily on the same LAN.  Often, this will allow you to just plug an Ethernet between two devices, or connect one device to the other's hotspot and start syncing."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23695
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{local-announce-port} (default: @code{21027})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23696
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{local-announce-mac-address} (default: @code{\"[ff12::8384]:21027\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23697 guix-git/doc/guix.texi:23861
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-send-kbps} (default: @code{0})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23698 guix-git/doc/guix.texi:23862
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-receive-kbps} (default: @code{0})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23699
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{reconnection-interval-seconds} (default: @code{60})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23700
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{relays-enabled?} (default: @code{#t})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23706
msgid "This option allows your Syncthing instance to use a global network of @uref{https://docs.syncthing.net/users/relaying.html, relays} to enable syncing between devices when all other methods fail.  As always, Syncthing traffic is encrypted in transport and the relays are unable to decrypt it."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23707
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{relay-reconnect-interval-minutes} (default: @code{10})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23708
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{start-browser?} (default: @code{#t})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23709
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{nat-enabled?} (default: @code{#t})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23710
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{nat-lease-minutes} (default: @code{60})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23711
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{nat-renewal-minutes} (default: @code{30})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23712
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{nat-timeout-seconds} (default: @code{10})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23713
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{usage-reporting-accepted} (default: @code{0})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23718
msgid "Options whose names begin with `usage-reporting-' control usage reporting.  Set to -1 to disable, or to a positive value to enable.  The default (0) disables reporting, but causes a usage reporting consent prompt to be displayed in the Syncthing GUI."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23719
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{usage-reporting-seen} (default: @code{0})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23720
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{usage-reporting-unique-id} (default: @code{\"\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23721
#, no-wrap
msgid "@code{usage-reporting-url} (default: @code{\"https://data.syncthing.net/newdata\"})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23722
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{usage-reporting-post-insecurely?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23723
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{usage-reporting-initial-delay-seconds} (default: @code{1800})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23724
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{auto-upgrade-interval-hours} (default: @code{12})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23725
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{upgrade-to-pre-releases?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23726
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{keep-temporaries-hours} (default: @code{24})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23727
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{cache-ignored-files?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23728
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{progress-update-interval-seconds} (default: @code{5})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23729
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{limit-bandwidth-in-lan?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23730
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{min-home-disk-free-unit} (default: @code{\"%\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23731
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{min-home-disk-free} (default: @code{1})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23732
#, no-wrap
msgid "@code{releases-url} (default: @code{\"https://upgrades.syncthing.net/meta.json\"})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23733
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{overwrite-remote-device-names-on-connect?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23734
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{temp-index-min-blocks} (default: @code{10})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23735
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{unacked-notification-id} (default: @code{\"authenticationUserAndPassword\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23736
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{traffic-class} (default: @code{0})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23737
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{set-low-priority?} (default: @code{#t})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23738
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-folder-concurrency} (default: @code{0})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23739
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{crash-reporting-url} (default: @code{\"https://crash.syncthing.net/newcrash\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23740
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{crash-reporting-enabled?} (default: @code{#t})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23741
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{stun-keepalive-start-seconds} (default: @code{180})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23742
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{stun-keepalive-min-seconds} (default: @code{20})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23743
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{stun-server} (default: @code{\"default\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23744
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{database-tuning} (default: @code{\"auto\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23745
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-concurrent-incoming-request-kib} (default: @code{0})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23746
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{announce-lan-addresses?} (default: @code{#t})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23747
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{send-full-index-on-upgrade?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23748
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{connection-limit-enough} (default: @code{0})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23749
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{connection-limit-max} (default: @code{0})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23750
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{insecure-allow-old-tls-versions?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23751
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{connection-priority-tcp-lan} (default: @code{10})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23752
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{connection-priority-quic-lan} (default: @code{20})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23753
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{connection-priority-tcp-wan} (default: @code{30})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23754
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{connection-priority-quic-wan} (default: @code{40})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23755
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{connection-priority-relay} (default: @code{50})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23756
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{connection-priority-upgrade-threshold} (default: @code{0})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23757
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{default-folder} (default: @code{(syncthing-folder (label \"\"))})"
msgstr "Documentazione"

#. type: itemx
#: guix-git/doc/guix.texi:23758
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{default-device} (default: @code{(syncthing-device (id \"\"))})"
msgstr "Documentazione"

#. type: itemx
#: guix-git/doc/guix.texi:23759
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{default-ignores} (default: @code{\"\")})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23765
msgid "Options whose names begin with `default-' above do not affect folders and devices added through the Guix configuration interface.  They will, however, affect folders and devices that are added through the Syncthing GUI, by an @code{introducer}, or a device with @code{auto-accept-folders}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23768
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} syncthing-folder"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:23770
#, fuzzy
#| msgid "Documentation"
msgid "Data type representing a folder to be synchronized."
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23775
msgid "This ID cannot match the ID of any other folder on this device.  If left unspecified, it will default to the label (see below)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23778
msgid "A human readable label for the folder."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:23779
#, no-wrap
msgid "path"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23781
msgid "The path at which to store this folder."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23782
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{type} (default: @code{\"sendreceive\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23783
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{rescan-interval-seconds} (default: @code{3600})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23784
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{file-system-watcher-enabled?} (default: @code{#t})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23785
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{file-system-watcher-delay-seconds} (default: @code{10})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23786
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{file-system-watcher-timeout-seconds} (default: @code{0})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23787
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ignore-permissions?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23788
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{auto-normalize?} (default: @code{#t})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23789
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{devices} (default: @code{'()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23794
msgid "This should be a list of other Syncthing devices.  You do not need to specify the current device.  Each device can be listed as a a @code{syncthing-device} record or a @code{syncthing-folder-device} record if you want files to be encrypted on disk.  See below."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23795
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{filesystem-type} (default: @code{\"basic\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23796
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{min-disk-free-unit} (default: @code{\"%\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23797
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{min-disk-free} (default: @code{1})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23798
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{versioning-type} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23799
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{versioning-file-system-path} (default: @code{\"\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23800
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{versioning-file-system-type} (default: @code{\"basic\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23801
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{versioning-cleanup-interval-seconds} (default: @code{3600})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23802
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{versioning-cleanout-days} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23803
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{versioning-keep} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23804
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{versioning-max-age} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23805
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{versioning-command} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23806
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{copiers} (default: @code{0})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23807
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{puller-max-pending-kib} (default: @code{0})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23808
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{hashers} (default: @code{0})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23809
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{order} (default: @code{\"random\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23810
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ignore-delete?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23811
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{scan-progress-interval-seconds} (default: @code{0})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23812
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{puller-pause-seconds} (default: @code{0})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23813
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-conflicts} (default: @code{10})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23814
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{disable-sparse-files?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23815
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{disable-temp-indexes?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23816 guix-git/doc/guix.texi:23859
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{paused?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23817
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{weak-hash-threshold-percentage} (default: @code{25})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23818
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{marker-name} (default: @code{\".stfolder\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23819
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{copy-ownership-from-parent?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23820
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{mod-time-window-seconds} (default: @code{0})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23821
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-concurrent-writes} (default: @code{2})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23822
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{disable-fsync?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23823
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{block-pull-order} (default: @code{\"standard\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23824
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{copy-range-method} (default: @code{\"standard\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23825
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{case-sensitive-file-system?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23826
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{junctions-as-dirs?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23827
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{sync-ownership?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23828
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{send-ownership?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23829
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{sync-xattrs?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23830
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{send-xattrs?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23831
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{xattr-filter-max-single-entry-size} (default: @code{1024})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23832
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{xattr-filter-max-total-size} (default: @code{4096})"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:23836
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} syncthing-device"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:23838
#, fuzzy
#| msgid "Documentation"
msgid "Data type representing a device to synchronize folders with."
msgstr "Documentazione"

#. type: code{#1}
#: guix-git/doc/guix.texi:23840
#, no-wrap
msgid "id"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23844
msgid "A long hash representing the keys generated by Syncthing on the first launch.  You can obtain this from the Syncthing GUI or by inspecting an existing Syncthing configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23845
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{name} (default: @code{\"\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23847
msgid "A human readable device name for viewing in the GUI or in Scheme."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23848
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{compression} (default: @code{\"metadata\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23849
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{introducer?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23850
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{skip-introduction-removals?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23851 guix-git/doc/guix.texi:23887
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{introduced-by} (default: @code{\"\"})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23852
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{addresses} (default: @code{'(\"dynamic\")})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23858
msgid "List of addresses at which to search for this device.  When the special value ``dynamic'' is included, Syncthing will search for the device locally as well as via the Syncthing project's @uref{https://docs.syncthing.net/users/security.html#global-discovery, global discovery} servers."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23860
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{auto-accept-folders?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23863
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-request-kib} (default: @code{0})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23864
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{untrusted?} (default: @code{#f})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23865
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{remote-gui-port} (default: @code{0})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:23866
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{num-connections} (default: @code{0})"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:23871
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} syncthing-folder-device"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:23874
msgid "This data type offers two folder-specific device options: @code{introduced-by} and @code{encryption-password}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23878
msgid "@code{syncthing-folder-device} corresponds to the @uref{https://docs.syncthing.net/users/config.html#config-option-folder.device, `device'} option in the upstream `folder' element."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23882
msgid "If you don't need to use these options, then you can just use @code{syncthing-device} instead of @code{syncthing-folder-device} in the @code{devices} field of a @code{syncthing-folder} instance."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23886
msgid "The @code{syncthing-device} for which this configuration applies."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23893
msgid "The name of the device that \"introduced\" our device to the device sharing this folder.  This is only used when \"introduced\" devices are removed by the introducer.  See @uref{https://docs.syncthing.net/users/introducer.html, Syncthing introductions}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23894
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{encryption-password} (default: @code{\"\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23897
msgid "The password used to encrypt data that is synchronized to untrusted devices."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23907
msgid "Beware: specifying this field will include this password as plain text (not encrypted) and globally visible in @file{/gnu/store/}.  If the encryption-password is non-empty, then it will be used as a password to encrypt file chunks as they are synchronized to untrusted devices.  For more information on syncing to devices you don't totally trust, see Syncthing's documentation on @uref{https://docs.syncthing.net/users/untrusted.html, Untrusted (Encrypted) Devices}.  Note that data transfer is always encrypted while in transport (\"end-to-end encryption\"), regardless of this setting."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:23912
msgid "Here is a more complex example configuration for illustrative purposes:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:23936
#, no-wrap
msgid ""
"(service syncthing-service-type\n"
"         (let ((laptop (syncthing-device (id \"VHOD2D6-...-7XRMDEN\")))\n"
"               (desktop (syncthing-device (id \"64SAZ37-...-FZJ5GUA\")\n"
"                                          (addresses '(\"tcp://example.com\"))))\n"
"               (bob-desktop (syncthing-device (id \"KYIMEGO-...-FT77EAO\"))))\n"
"           (syncthing-configuration\n"
"            (user \"alice\")\n"
"            (config-file\n"
"             (syncthing-config-file\n"
"               (folders (list (syncthing-folder\n"
"                               (label \"some-files\")\n"
"                               (path \"~/data\")\n"
"                               (devices (list desktop laptop)))\n"
"                              (syncthing-folder\n"
"                               (label \"critical-files\")\n"
"                               (path \"~/secrets\")\n"
"                               (devices\n"
"                                (list desktop\n"
"                                      laptop\n"
"                                      (syncthing-folder-device\n"
"                                       (device bob-desktop)\n"
"                                       (encryption-password \"mypassword\"))))))))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:23940
msgid "Furthermore, @code{(gnu services ssh)} provides the following services."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23940 guix-git/doc/guix.texi:24009
#: guix-git/doc/guix.texi:48180
#, no-wrap
msgid "SSH"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23941 guix-git/doc/guix.texi:24010
#: guix-git/doc/guix.texi:48181
#, no-wrap
msgid "SSH server"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23943
#, fuzzy, no-wrap
#| msgid "Services"
msgid "lsh-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:23947
msgid "Type of the service that runs the GNU@tie{}lsh secure shell (SSH)  daemon, @command{lshd}.  The value for this service is a @code{<lsh-configuration>} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23949
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} lsh-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:23951
msgid "Data type representing the configuration of @command{lshd}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23953
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{lsh} (default: @code{lsh}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23955
msgid "The package object of the GNU@tie{}lsh secure shell (SSH) daemon."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23956
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{daemonic?} (default: @code{#t}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23958
msgid "Whether to detach from the controlling terminal."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23959
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{host-key} (default: @code{\"/etc/lsh/host-key\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23962
msgid "File containing the @dfn{host key}.  This file must be readable by root only."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23963
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{interfaces} (default: @code{'()}) (type: list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23967
msgid "List of host names or addresses that @command{lshd} will listen on.  If empty, @command{lshd} listens for connections on all the network interfaces."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23968
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{port-number} (default: @code{22}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23970
msgid "Port to listen on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23971 guix-git/doc/guix.texi:25208
#, no-wrap
msgid "@code{allow-empty-passwords?} (default: @code{#f}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23973
msgid "Whether to accept log-ins with empty passwords."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23974
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{root-login?} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23976
msgid "Whether to accept log-ins as root."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23977
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{syslog-output?} (default: @code{#t}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23980
msgid "Whether to log @command{lshd} standard output to syslogd.  This will make the service depend on the existence of a syslogd service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23981
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{pid-file?} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23984
msgid "When @code{#t}, @command{lshd} writes its PID to the file specified in @var{pid-file}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23985
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{pid-file} (default: @code{\"/var/run/lshd.pid\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23987
msgid "File that @command{lshd} will write its PID to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23988
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{x11-forwarding?} (default: @code{#t}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23990
msgid "Whether to enable X11 forwarding."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23991
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{tcp/ip-forwarding?} (default: @code{#t}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23993
msgid "Whether to enable TCP/IP forwarding."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23994
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{password-authentication?} (default: @code{#t}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23996
msgid "Whether to accept log-ins using password authentication."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23997
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{public-key-authentication?} (default: @code{#t}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:23999
msgid "Whether to accept log-ins using public key authentication."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24000
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{initialize?} (default: @code{#t}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:24005
msgid "When @code{#f}, it is up to the user to initialize the randomness generator (@pxref{lsh-make-seed,,, lsh, LSH Manual}), and to create a key pair with the private key stored in file @var{host-key} (@pxref{lshd basics,,, lsh, LSH Manual})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24011
#, no-wrap
msgid "openssh-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24015
msgid "This is the type for the @uref{http://www.openssh.org, OpenSSH} secure shell daemon, @command{sshd}.  Its value must be an @code{openssh-configuration} record as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24024
#, no-wrap
msgid ""
"(service openssh-service-type\n"
"         (openssh-configuration\n"
"           (x11-forwarding? #t)\n"
"           (permit-root-login 'prohibit-password)\n"
"           (authorized-keys\n"
"             `((\"alice\" ,(local-file \"alice.pub\"))\n"
"               (\"bob\" ,(local-file \"bob.pub\"))))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24027
msgid "See below for details about @code{openssh-configuration}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24030
msgid "This service can be extended with extra authorized keys, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24035
#, no-wrap
msgid ""
"(service-extension openssh-service-type\n"
"                   (const `((\"charlie\"\n"
"                             ,(local-file \"charlie.pub\")))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24038
#, no-wrap
msgid "{Data Type} openssh-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24040
msgid "This is the configuration record for OpenSSH's @command{sshd}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24042
#, no-wrap
msgid "@code{openssh} (default @var{openssh})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24044 guix-git/doc/guix.texi:51185
msgid "The OpenSSH package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24045
#, no-wrap
msgid "@code{pid-file} (default: @code{\"/var/run/sshd.pid\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24047
msgid "Name of the file where @command{sshd} writes its PID."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24048
#, no-wrap
msgid "@code{port-number} (default: @code{22})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24050
msgid "TCP port on which @command{sshd} listens for incoming connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24051
#, no-wrap
msgid "@code{max-connections} (default: @code{200})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24056
msgid "Hard limit on the maximum number of simultaneous client connections, enforced by the inetd-style Shepherd service (@pxref{Service De- and Constructors, @code{make-inetd-constructor},, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24057
#, no-wrap
msgid "@code{permit-root-login} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24062
msgid "This field determines whether and when to allow logins as root.  If @code{#f}, root logins are disallowed; if @code{#t}, they are allowed.  If it's the symbol @code{'prohibit-password}, then root logins are permitted but not with password-based authentication."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24063 guix-git/doc/guix.texi:24233
#, no-wrap
msgid "@code{allow-empty-passwords?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24066
msgid "When true, users with empty passwords may log in.  When false, they may not."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24067 guix-git/doc/guix.texi:24236
#, no-wrap
msgid "@code{password-authentication?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24070
msgid "When true, users may log in with their password.  When false, they have other authentication methods."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24071
#, no-wrap
msgid "@code{public-key-authentication?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24074
msgid "When true, users may log in using public key authentication.  When false, users have to use other authentication method."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24077
msgid "Authorized public keys are stored in @file{~/.ssh/authorized_keys}.  This is used only by protocol version 2."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24078
#, no-wrap
msgid "@code{x11-forwarding?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24082
msgid "When true, forwarding of X11 graphical client connections is enabled---in other words, @command{ssh} options @option{-X} and @option{-Y} will work."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24083
#, no-wrap
msgid "@code{allow-agent-forwarding?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24085
msgid "Whether to allow agent forwarding."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24086
#, no-wrap
msgid "@code{allow-tcp-forwarding?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24088
msgid "Whether to allow TCP forwarding."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24089
#, no-wrap
msgid "@code{gateway-ports?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24091
msgid "Whether to allow gateway ports."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24092
#, no-wrap
msgid "@code{challenge-response-authentication?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24095
msgid "Specifies whether challenge response authentication is allowed (e.g.@: via PAM)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24096
#, no-wrap
msgid "@code{use-pam?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24102
msgid "Enables the Pluggable Authentication Module interface.  If set to @code{#t}, this will enable PAM authentication using @code{challenge-response-authentication?} and @code{password-authentication?}, in addition to PAM account and session module processing for all authentication types."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24107
msgid "Because PAM challenge response authentication usually serves an equivalent role to password authentication, you should disable either @code{challenge-response-authentication?} or @code{password-authentication?}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24108
#, no-wrap
msgid "@code{print-last-log?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24111
msgid "Specifies whether @command{sshd} should print the date and time of the last user login when a user logs in interactively."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24112
#, no-wrap
msgid "@code{subsystems} (default: @code{'((\"sftp\" \"internal-sftp\"))})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24114
msgid "Configures external subsystems (e.g.@: file transfer daemon)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24118
msgid "This is a list of two-element lists, each of which containing the subsystem name and a command (with optional arguments) to execute upon subsystem request."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24121
msgid "The command @command{internal-sftp} implements an in-process SFTP server.  Alternatively, one can specify the @command{sftp-server} command:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24126
#, no-wrap
msgid ""
"(service openssh-service-type\n"
"         (openssh-configuration\n"
"          (subsystems\n"
"           `((\"sftp\" ,(file-append openssh \"/libexec/sftp-server\"))))))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24128
#, no-wrap
msgid "@code{accepted-environment} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24130
msgid "List of strings describing which environment variables may be exported."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24133
msgid "Each string gets on its own line.  See the @code{AcceptEnv} option in @code{man sshd_config}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24138
msgid "This example allows ssh-clients to export the @env{COLORTERM} variable.  It is set by terminal emulators, which support colors.  You can use it in your shell's resource file to enable colors for the prompt and commands if this variable is set."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24143
#, no-wrap
msgid ""
"(service openssh-service-type\n"
"         (openssh-configuration\n"
"           (accepted-environment '(\"COLORTERM\"))))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24146
#, no-wrap
msgid "authorized keys, SSH"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24147
#, no-wrap
msgid "SSH authorized keys"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24151
msgid "This is the list of authorized keys.  Each element of the list is a user name followed by one or more file-like objects that represent SSH public keys.  For example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24158
#, no-wrap
msgid ""
"(openssh-configuration\n"
"  (authorized-keys\n"
"    `((\"rekado\" ,(local-file \"rekado.pub\"))\n"
"      (\"chris\" ,(local-file \"chris.pub\"))\n"
"      (\"root\" ,(local-file \"rekado.pub\") ,(local-file \"chris.pub\")))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24163
msgid "registers the specified public keys for user accounts @code{rekado}, @code{chris}, and @code{root}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24166
msgid "Additional authorized keys can be specified @i{via} @code{service-extension}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24169
msgid "Note that this does @emph{not} interfere with the use of @file{~/.ssh/authorized_keys}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24170
#, no-wrap
msgid "@code{generate-host-keys?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24173
msgid "Whether to generate host key pairs with @command{ssh-keygen -A} under @file{/etc/ssh} if there are none."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24179
msgid "Generating key pairs takes a few seconds when enough entropy is available and is only done once.  You might want to turn it off for instance in a virtual machine that does not need it because host keys are provided in some other way, and where the extra boot time is a problem."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24180 guix-git/doc/guix.texi:24582
#, no-wrap
msgid "@code{log-level} (default: @code{'info})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24184
msgid "This is a symbol specifying the logging level: @code{quiet}, @code{fatal}, @code{error}, @code{info}, @code{verbose}, @code{debug}, etc.  See the man page for @file{sshd_config} for the full list of level names."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24185 guix-git/doc/guix.texi:28269
#: guix-git/doc/guix.texi:34790 guix-git/doc/guix.texi:42613
#: guix-git/doc/guix.texi:42637
#, no-wrap
msgid "@code{extra-content} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24190
msgid "This field can be used to append arbitrary text to the configuration file.  It is especially useful for elaborate configurations that cannot be expressed otherwise.  This configuration, for example, would generally disable root logins, but permit them from one specific IP address:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24196
#, no-wrap
msgid ""
"(openssh-configuration\n"
"  (extra-content \"\\\n"
"Match Address 192.168.0.1\n"
"  PermitRootLogin yes\"))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24201
#, fuzzy, no-wrap
#| msgid "Services"
msgid "dropbear-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:24205
msgid "Type of the service that runs the @url{https://matt.ucc.asn.au/dropbear/dropbear.html, Dropbear SSH daemon}, whose value is a @code{<dropbear-configuration>} object."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24207
msgid "For example, to specify a Dropbear service listening on port 1234:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24211
#, no-wrap
msgid ""
"(service dropbear-service-type (dropbear-configuration\n"
"                                 (port-number 1234)))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24214
#, no-wrap
msgid "{Data Type} dropbear-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24216
msgid "This data type represents the configuration of a Dropbear SSH daemon."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24218
#, no-wrap
msgid "@code{dropbear} (default: @var{dropbear})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24220
msgid "The Dropbear package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24221
#, no-wrap
msgid "@code{port-number} (default: 22)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24223
msgid "The TCP port where the daemon waits for incoming connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24224
#, no-wrap
msgid "@code{syslog-output?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24226
msgid "Whether to enable syslog output."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24227
#, no-wrap
msgid "@code{pid-file} (default: @code{\"/var/run/dropbear.pid\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24229
msgid "File name of the daemon's PID file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24230
#, no-wrap
msgid "@code{root-login?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24232
msgid "Whether to allow @code{root} logins."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24235 guix-git/doc/guix.texi:25485
msgid "Whether to allow empty passwords."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24238
msgid "Whether to enable password-based authentication."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24241
#, no-wrap
msgid "AutoSSH"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24242
#, no-wrap
msgid "autossh-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24250
msgid "This is the type for the @uref{https://www.harding.motd.ca/autossh, AutoSSH} program that runs a copy of @command{ssh} and monitors it, restarting it as necessary should it die or stop passing traffic.  AutoSSH can be run manually from the command-line by passing arguments to the binary @command{autossh} from the package @code{autossh}, but it can also be run as a Guix service.  This latter use case is documented here."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24254
msgid "AutoSSH can be used to forward local traffic to a remote machine using an SSH tunnel, and it respects the @file{~/.ssh/config} of the user it is run as."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24259
msgid "For example, to specify a service running autossh as the user @code{pino} and forwarding all local connections to port @code{8081} to @code{remote:8081} using an SSH tunnel, add this call to the operating system's @code{services} field:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24265
#, no-wrap
msgid ""
"(service autossh-service-type\n"
"         (autossh-configuration\n"
"          (user \"pino\")\n"
"          (ssh-options (list \"-T\" \"-N\" \"-L\" \"8081:localhost:8081\" \"remote.net\"))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24268
#, no-wrap
msgid "{Data Type} autossh-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24270
msgid "This data type represents the configuration of an AutoSSH service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24273
#, no-wrap
msgid "@code{user} (default @code{\"autossh\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24276
msgid "The user as which the AutoSSH service is to be run.  This assumes that the specified user exists."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24277
#, no-wrap
msgid "@code{poll} (default @code{600})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24279
msgid "Specifies the connection poll time in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24280
#, no-wrap
msgid "@code{first-poll} (default @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24286
msgid "Specifies how many seconds AutoSSH waits before the first connection test.  After this first test, polling is resumed at the pace defined in @code{poll}.  When set to @code{#f}, the first poll is not treated specially and will also use the connection poll specified in @code{poll}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24287
#, no-wrap
msgid "@code{gate-time} (default @code{30})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24290
msgid "Specifies how many seconds an SSH connection must be active before it is considered successful."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24291
#, no-wrap
msgid "@code{log-level} (default @code{1})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24294
msgid "The log level, corresponding to the levels used by syslog---so @code{0} is the most silent while @code{7} is the chattiest."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24295
#, no-wrap
msgid "@code{max-start} (default @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24298
msgid "The maximum number of times SSH may be (re)started before AutoSSH exits.  When set to @code{#f}, no maximum is configured and AutoSSH may restart indefinitely."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24299
#, no-wrap
msgid "@code{message} (default @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24301
msgid "The message to append to the echo message sent when testing connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24302
#, no-wrap
msgid "@code{port} (default @code{\"0\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24312
msgid "The ports used for monitoring the connection.  When set to @code{\"0\"}, monitoring is disabled.  When set to @code{\"@var{n}\"} where @var{n} is a positive integer, ports @var{n} and @var{n}+1 are used for monitoring the connection, such that port @var{n} is the base monitoring port and @code{n+1} is the echo port.  When set to @code{\"@var{n}:@var{m}\"} where @var{n} and @var{m} are positive integers, the ports @var{n} and @var{m} are used for monitoring the connection, such that port @var{n} is the base monitoring port and @var{m} is the echo port."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24313
#, no-wrap
msgid "@code{ssh-options} (default @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24317
msgid "The list of command-line arguments to pass to @command{ssh} when it is run.  Options @option{-f} and @option{-M} are reserved for AutoSSH and may cause undefined behaviour."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24321
#, no-wrap
msgid "WebSSH"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24322
#, no-wrap
msgid "webssh-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24328
msgid "This is the type for the @uref{https://webssh.huashengdun.org/, WebSSH} program that runs a web SSH client.  WebSSH can be run manually from the command-line by passing arguments to the binary @command{wssh} from the package @code{webssh}, but it can also be run as a Guix service.  This latter use case is documented here."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24334
msgid "For example, to specify a service running WebSSH on loopback interface on port @code{8888} with reject policy with a list of allowed to connection hosts, and NGINX as a reverse-proxy to this service listening for HTTPS connection, add this call to the operating system's @code{services} field:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24342
#, no-wrap
msgid ""
"(service webssh-service-type\n"
"  (webssh-configuration (address \"127.0.0.1\")\n"
"                        (port 8888)\n"
"                        (policy 'reject)\n"
"                        (known-hosts '(\"localhost ecdsa-sha2-nistp256 AAAA…\"\n"
"                                       \"127.0.0.1 ecdsa-sha2-nistp256 AAAA…\"))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24358
#, no-wrap
msgid ""
"(service nginx-service-type\n"
"         (nginx-configuration\n"
"          (server-blocks\n"
"           (list\n"
"            (nginx-server-configuration\n"
"             (inherit %webssh-configuration-nginx)\n"
"             (server-name '(\"webssh.example.com\"))\n"
"             (listen '(\"443 ssl\"))\n"
"             (ssl-certificate (letsencrypt-certificate \"webssh.example.com\"))\n"
"             (ssl-certificate-key (letsencrypt-key \"webssh.example.com\"))\n"
"             (locations\n"
"              (cons (nginx-location-configuration\n"
"                     (uri \"/.well-known\")\n"
"                     (body '(\"root /var/www;\")))\n"
"                    (nginx-server-configuration-locations %webssh-configuration-nginx))))))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24361
#, no-wrap
msgid "{Data Type} webssh-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24363
msgid "Data type representing the configuration for @code{webssh-service}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24365
#, no-wrap
msgid "@code{package} (default: @var{webssh})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24367
msgid "@code{webssh} package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24368
#, no-wrap
msgid "@code{user-name} (default: @var{\"webssh\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24371
msgid "User name or user ID that file transfers to and from that module should take place."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24372
#, no-wrap
msgid "@code{group-name} (default: @var{\"webssh\"})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24375
#, no-wrap
msgid "@code{address} (default: @var{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24377
msgid "IP address on which @command{webssh} listens for incoming connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24378
#, no-wrap
msgid "@code{port} (default: @var{8888})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24380
msgid "TCP port on which @command{webssh} listens for incoming connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24381
#, no-wrap
msgid "@code{policy} (default: @var{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24383
msgid "Connection policy.  @var{reject} policy requires to specify @var{known-hosts}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24384
#, no-wrap
msgid "@code{known-hosts} (default: @var{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24386
msgid "List of hosts which allowed for SSH connection from @command{webssh}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24387
#, no-wrap
msgid "@code{log-file} (default: @file{\"/var/log/webssh.log\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24389
msgid "Name of the file where @command{webssh} writes its log file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24390
#, no-wrap
msgid "@code{log-level} (default: @var{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24392
msgid "Logging level."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24396
#, fuzzy, no-wrap
#| msgid "Services"
msgid "block-facebook-hosts-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:24403
msgid "This service type adds a list of known Facebook hosts to the @file{/etc/hosts} file.  (@pxref{Host Names,,, libc, The GNU C Library Reference Manual})  Each line contains an entry that maps a known server name of the Facebook on-line service---e.g., @code{www.facebook.com}---to unroutable IPv4 and IPv6 addresses."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24406
msgid "This mechanism can prevent programs running locally, such as Web browsers, from accessing Facebook."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:24409
msgid "The @code{(gnu services avahi)} provides the following definition."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24410
#, no-wrap
msgid "avahi-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24415
msgid "This is the service that runs @command{avahi-daemon}, a system-wide mDNS/DNS-SD responder that allows for service discovery and ``zero-configuration'' host name lookups (see @uref{https://avahi.org/}).  Its value must be an @code{avahi-configuration} record---see below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24420
msgid "This service extends the name service cache daemon (nscd) so that it can resolve @code{.local} host names using @uref{https://0pointer.de/lennart/projects/nss-mdns/, nss-mdns}.  @xref{Name Service Switch}, for information on host name resolution."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24423
msgid "Additionally, add the @var{avahi} package to the system profile so that commands such as @command{avahi-browse} are directly usable."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24425
#, no-wrap
msgid "{Data Type} avahi-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24427
msgid "Data type representation the configuration for Avahi."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24430 guix-git/doc/guix.texi:37785
#: guix-git/doc/guix.texi:42603
#, no-wrap
msgid "@code{host-name} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24433
msgid "If different from @code{#f}, use that as the host name to publish for this machine; otherwise, use the machine's actual host name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24434 guix-git/doc/guix.texi:37997
#, no-wrap
msgid "@code{publish?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24437
msgid "When true, allow host names and services to be published (broadcast) over the network."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24438
#, no-wrap
msgid "@code{publish-workstation?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24442
msgid "When true, @command{avahi-daemon} publishes the machine's host name and IP address via mDNS on the local network.  To view the host names published on your local network, you can run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:24445
#, no-wrap
msgid "avahi-browse _workstation._tcp\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24447
#, no-wrap
msgid "@code{wide-area?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24449
msgid "When true, DNS-SD over unicast DNS is enabled."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24450
#, no-wrap
msgid "@code{ipv4?} (default: @code{#t})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:24451
#, no-wrap
msgid "@code{ipv6?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24453
msgid "These fields determine whether to use IPv4/IPv6 sockets."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24454
#, no-wrap
msgid "@code{domains-to-browse} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24456
msgid "This is a list of domains to browse."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24459
#, no-wrap
msgid "openvswitch-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24463
msgid "This is the type of the @uref{https://www.openvswitch.org, Open vSwitch} service, whose value should be an @code{openvswitch-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24465
#, no-wrap
msgid "{Data Type} openvswitch-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24469
msgid "Data type representing the configuration of Open vSwitch, a multilayer virtual switch which is designed to enable massive network automation through programmatic extension."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24471
#, no-wrap
msgid "@code{package} (default: @var{openvswitch})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24473
msgid "Package object of the Open vSwitch."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24477
#, no-wrap
msgid "pagekite-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24482
msgid "This is the service type for the @uref{https://pagekite.net, PageKite} service, a tunneling solution for making localhost servers publicly visible, even from behind restrictive firewalls or NAT without forwarded ports.  The value for this service type is a @code{pagekite-configuration} record."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24484
msgid "Here's an example exposing the local HTTP and SSH daemons:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24491
#, no-wrap
msgid ""
"(service pagekite-service-type\n"
"         (pagekite-configuration\n"
"           (kites '(\"http:@@kitename:localhost:80:@@kitesecret\"\n"
"                    \"raw/22:@@kitename:localhost:22:@@kitesecret\"))\n"
"           (extra-file \"/etc/pagekite.rc\")))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24494
#, no-wrap
msgid "{Data Type} pagekite-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24496
msgid "Data type representing the configuration of PageKite."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24498
#, no-wrap
msgid "@code{package} (default: @var{pagekite})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24500
msgid "Package object of PageKite."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24501
#, no-wrap
msgid "@code{kitename} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24503
msgid "PageKite name for authenticating to the frontend server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24504
#, no-wrap
msgid "@code{kitesecret} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24507
msgid "Shared secret for authenticating to the frontend server.  You should probably put this inside @code{extra-file} instead."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24508
#, no-wrap
msgid "@code{frontend} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24511
msgid "Connect to the named PageKite frontend server instead of the @uref{https://pagekite.net,,pagekite.net} service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24512
#, no-wrap
msgid "@code{kites} (default: @code{'(\"http:@@kitename:localhost:80:@@kitesecret\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24515
msgid "List of service kites to use.  Exposes HTTP on port 80 by default.  The format is @code{proto:kitename:host:port:secret}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24516
#, no-wrap
msgid "@code{extra-file} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24519
msgid "Extra configuration file to read, which you are expected to create manually.  Use this to add additional options and manage shared secrets out-of-band."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24523
#, no-wrap
msgid "yggdrasil-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24527
msgid "The service type for connecting to the @uref{https://yggdrasil-network.github.io/, Yggdrasil network}, an early-stage implementation of a fully end-to-end encrypted IPv6 network."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:24534
msgid "Yggdrasil provides name-independent routing with cryptographically generated addresses.  Static addressing means you can keep the same address as long as you want, even if you move to a new location, or generate a new address (by generating new keys) whenever you want.  @uref{https://yggdrasil-network.github.io/2018/07/28/addressing.html}"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24538
msgid "Pass it a value of @code{yggdrasil-configuration} to connect it to public peers and/or local peers."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24542
msgid "Here is an example using public peers and a static address.  The static signing and encryption keys are defined in @file{/etc/yggdrasil-private.conf} (the default value for @code{config-file})."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24554
#, no-wrap
msgid ""
";; part of the operating-system declaration\n"
"(service yggdrasil-service-type\n"
"              (yggdrasil-configuration\n"
"               (autoconf? #f) ;; use only the public peers\n"
"               (json-config\n"
"               ;; choose one from\n"
"               ;; https://github.com/yggdrasil-network/public-peers\n"
"                '((peers . #(\"tcp://1.2.3.4:1337\"))))\n"
"               ;; /etc/yggdrasil-private.conf is the default value for config-file\n"
"               ))\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:24561
#, no-wrap
msgid ""
"# sample content for /etc/yggdrasil-private.conf\n"
"@{\n"
"  # Your private key. DO NOT share this with anyone!\n"
"  PrivateKey: 5c750...\n"
"@}\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24564
#, no-wrap
msgid "{Data Type} yggdrasil-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24566
msgid "Data type representing the configuration of Yggdrasil."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24568
#, no-wrap
msgid "@code{package} (default: @code{yggdrasil})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24570
msgid "Package object of Yggdrasil."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24571
#, no-wrap
msgid "@code{json-config} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24577
msgid "Contents of @file{/etc/yggdrasil.conf}.  Will be merged with @file{/etc/yggdrasil-private.conf}.  Note that these settings are stored in the Guix store, which is readable to all users. @strong{Do not store your private keys in it}.  See the output of @code{yggdrasil -genconf} for a quick overview of valid keys and their default values."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24578
#, no-wrap
msgid "@code{autoconf?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24581
msgid "Whether to use automatic mode.  Enabling it makes Yggdrasil use a dynamic IP and peer with IPv6 neighbors."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24584
msgid "How much detail to include in logs.  Use @code{'debug} for more detail."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24585
#, no-wrap
msgid "@code{log-to} (default: @code{'stdout})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24589
msgid "Where to send logs.  By default, the service logs standard output to @file{/var/log/yggdrasil.log}.  The alternative is @code{'syslog}, which sends output to the running syslog service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24590
#, no-wrap
msgid "@code{config-file} (default: @code{\"/etc/yggdrasil-private.conf\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24597
msgid "What HJSON file to load sensitive data from.  This is where private keys should be stored, which are necessary to specify if you don't want a randomized address after each restart.  Use @code{#f} to disable.  Options defined in this file take precedence over @code{json-config}.  Use the output of @code{yggdrasil -genconf} as a starting point.  To configure a static address, delete everything except PrivateKey option."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24601
#, no-wrap
msgid "IPFS"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24602
#, no-wrap
msgid "ipfs-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24606
msgid "The service type for connecting to the @uref{https://ipfs.io,IPFS network}, a global, versioned, peer-to-peer file system. Pass it a @code{ipfs-configuration} to change the ports used for the gateway and API."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24608
msgid "Here's an example configuration, using some non-standard ports:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24614
#, no-wrap
msgid ""
"(service ipfs-service-type\n"
"         (ipfs-configuration\n"
"          (gateway \"/ip4/127.0.0.1/tcp/8880\")\n"
"          (api \"/ip4/127.0.0.1/tcp/8881\")))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24617
#, no-wrap
msgid "{Data Type} ipfs-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24619
msgid "Data type representing the configuration of IPFS."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24621
#, no-wrap
msgid "@code{package} (default: @code{go-ipfs})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24623
msgid "Package object of IPFS."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24624
#, no-wrap
msgid "@code{gateway} (default: @code{\"/ip4/127.0.0.1/tcp/8082\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24626
msgid "Address of the gateway, in ‘multiaddress’ format."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24627
#, no-wrap
msgid "@code{api} (default: @code{\"/ip4/127.0.0.1/tcp/5001\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24629
msgid "Address of the API endpoint, in ‘multiaddress’ format."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24632
#, no-wrap
msgid "keepalived"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24633
#, no-wrap
msgid "keepalived-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24638
msgid "This is the type for the @uref{https://www.keepalived.org/, Keepalived} routing software, @command{keepalived}.  Its value must be an @code{keepalived-configuration} record as in this example for master machine:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24643
#, no-wrap
msgid ""
"(service keepalived-service-type\n"
"         (keepalived-configuration\n"
"           (config-file (local-file \"keepalived-master.conf\"))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24646
msgid "where @file{keepalived-master.conf}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:24658
#, no-wrap
msgid ""
"vrrp_instance my-group @{\n"
"  state MASTER\n"
"  interface enp9s0\n"
"  virtual_router_id 100\n"
"  priority 100\n"
"  unicast_peer @{ 10.0.0.2 @}\n"
"  virtual_ipaddress @{\n"
"    10.0.0.4/24\n"
"  @}\n"
"@}\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24661
msgid "and for backup machine:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24666
#, no-wrap
msgid ""
"(service keepalived-service-type\n"
"         (keepalived-configuration\n"
"          (config-file (local-file \"keepalived-backup.conf\"))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24669
msgid "where @file{keepalived-backup.conf}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:24681
#, no-wrap
msgid ""
"vrrp_instance my-group @{\n"
"  state BACKUP\n"
"  interface enp9s0\n"
"  virtual_router_id 100\n"
"  priority 99\n"
"  unicast_peer @{ 10.0.0.3 @}\n"
"  virtual_ipaddress @{\n"
"    10.0.0.4/24\n"
"  @}\n"
"@}\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24687
#, no-wrap
msgid "unattended upgrades"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24688
#, no-wrap
msgid "upgrades, unattended"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:24693
msgid "The @code{(gnu services admin)} module provides a service to perform @emph{unattended upgrades}: periodically, the system automatically reconfigures itself from the latest Guix.  Guix System has several properties that make unattended upgrades safe:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:24698
msgid "upgrades are transactional (either the upgrade succeeds or it fails, but you cannot end up with an ``in-between'' system state);"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:24702
msgid "the upgrade log is kept---you can view it with @command{guix system list-generations}---and you can roll back to any previous generation, should the upgraded system fail to behave as intended;"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:24705
msgid "channel code is authenticated so you know you can only run genuine code (@pxref{Channels});"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:24708
msgid "@command{guix system reconfigure} prevents downgrades, which makes it immune to @dfn{downgrade attacks}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:24713
msgid "To set up unattended upgrades, add an instance of @code{unattended-upgrade-service-type} like the one below to the list of your operating system services:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24716
#, no-wrap
msgid "(service unattended-upgrade-service-type)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:24723
msgid "The defaults above set up weekly upgrades: every Sunday at midnight.  You do not need to provide the operating system configuration file: it uses @file{/run/current-system/configuration.scm}, which ensures it always uses your latest configuration---@pxref{provenance-service-type}, for more information about this file."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:24729
msgid "There are several things that can be configured, in particular the periodicity and services (daemons) to be restarted upon completion.  When the upgrade is successful, the service takes care of deleting system generations older that some threshold, as per @command{guix system delete-generations}.  See the reference below for details."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:24733
msgid "To ensure that upgrades are actually happening, you can run @command{guix system describe}.  To investigate upgrade failures, visit the unattended upgrade log file (see below)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24734
#, no-wrap
msgid "unattended-upgrade-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24738
msgid "This is the service type for unattended upgrades.  It sets up an mcron job (@pxref{Scheduled Job Execution}) that runs @command{guix system reconfigure} from the latest version of the specified channels."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24741
msgid "Its value must be a @code{unattended-upgrade-configuration} record (see below)."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24743
#, no-wrap
msgid "{Data Type} unattended-upgrade-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24746
msgid "This data type represents the configuration of the unattended upgrade service.  The following fields are available:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24748
#, no-wrap
msgid "@code{schedule} (default: @code{\"30 01 * * 0\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24752
msgid "This is the schedule of upgrades, expressed as a string in traditional cron syntax or as a gexp evaluating to a Shepherd calendar event (@pxref{Timers,,, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24753 guix-git/doc/guix.texi:27952
#, no-wrap
msgid "@code{channels} (default: @code{#~%default-channels})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24757
msgid "This gexp specifies the channels to use for the upgrade (@pxref{Channels}).  By default, the tip of the official @code{guix} channel is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24758
#, no-wrap
msgid "@code{operating-system-file} (default: @code{\"/run/current-system/configuration.scm\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24761
msgid "This field specifies the operating system configuration file to use.  The default is to reuse the config file of the current configuration."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24767
msgid "There are cases, though, where referring to @file{/run/current-system/configuration.scm} is not enough, for instance because that file refers to extra files (SSH public keys, extra configuration files, etc.) @i{via} @code{local-file} and similar constructs.  For those cases, we recommend something along these lines:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24773
#, no-wrap
msgid ""
"(unattended-upgrade-configuration\n"
"  (operating-system-file\n"
"    (file-append (local-file \".\" \"config-dir\" #:recursive? #t)\n"
"                 \"/config.scm\")))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24780
msgid "The effect here is to import all of the current directory into the store, and to refer to @file{config.scm} within that directory.  Therefore, uses of @code{local-file} within @file{config.scm} will work as expected.  @xref{G-Expressions}, for information about @code{local-file} and @code{file-append}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24781
#, no-wrap
msgid "@code{operating-system-expression} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24785
msgid "This field specifies an expression that evaluates to the operating system to use for the upgrade.  If no value is provided the @code{operating-system-file} field value is used."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24790
#, no-wrap
msgid ""
"(unattended-upgrade-configuration\n"
"  (operating-system-expression\n"
"    #~(@@ (guix system install) installation-os)))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24792
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{reboot?} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:24795
msgid "This field specifies whether the system should reboot after completing an unattended upgrade."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24799
msgid "When @code{reboot?} is @code{#t}, services are not restarted before rebooting.  This means that the value for @code{services-to-restart} is ignored.  The updated services will be started after the system reboots."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24800
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{services-to-restart} (default: @code{'(unattended-upgrade)})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:24803
msgid "This field specifies the Shepherd services to restart when the upgrade completes."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24810
msgid "Those services are restarted right away upon completion, as with @command{herd restart}, which ensures that the latest version is running---remember that by default @command{guix system reconfigure} only restarts services that are not currently running, which is conservative: it minimizes disruption but leaves outdated services running."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24814
msgid "Use @command{herd status} to find out candidates for restarting.  @xref{Services}, for general information about services.  Common services to restart would include @code{ntpd} and @code{ssh-daemon}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24818
msgid "By default, the @code{unattended-upgrade} service is restarted.  This ensures that the latest version of the unattended upgrade job will be used next time."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24819
#, no-wrap
msgid "@code{system-expiration} (default: @code{(* 3 30 24 3600)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24823
msgid "This is the expiration time in seconds for system generations.  System generations older that this amount of time are deleted with @command{guix system delete-generations} when an upgrade completes."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:24828
msgid "The unattended upgrade service does not run the garbage collector.  You will probably want to set up your own mcron job to run @command{guix gc} periodically."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24830
#, no-wrap
msgid "@code{maximum-duration} (default: @code{3600})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24833
msgid "Maximum duration in seconds for the upgrade; past that time, the upgrade aborts."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24836
msgid "This is primarily useful to ensure the upgrade does not end up rebuilding or re-downloading ``the world''."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24837
#, no-wrap
msgid "@code{log-file} (default: @code{\"/var/log/unattended-upgrade.log\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24839
msgid "File where unattended upgrades are logged."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24845
#, no-wrap
msgid "X11"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24846
#, no-wrap
msgid "X Window System"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24847 guix-git/doc/guix.texi:25043
#, no-wrap
msgid "login manager"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:24852
msgid "Support for the X Window graphical display system---specifically Xorg---is provided by the @code{(gnu services xorg)} module.  Note that there is no @code{xorg-service} procedure.  Instead, the X server is started by the @dfn{login manager}, by default the GNOME Display Manager (GDM)."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24853
#, no-wrap
msgid "GDM"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24854
#, no-wrap
msgid "GNOME, login manager"
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:24859
msgid "gdm"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:24859
msgid "GDM of course allows users to log in into window managers and desktop environments other than GNOME; for those using GNOME, GDM is required for features such as automatic screen locking."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24860
#, no-wrap
msgid "window manager"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:24865
msgid "To use X11, you must install at least one @dfn{window manager}---for example the @code{windowmaker} or @code{openbox} packages---preferably by adding it to the @code{packages} field of your operating system definition (@pxref{operating-system Reference, system-wide packages})."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:24871
msgid "wayland-gdm"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:24871
msgid "GDM also supports Wayland: it can itself use Wayland instead of X11 for its user interface, and it can also start Wayland sessions.  Wayland support is enabled by default.  To disable it, set @code{wayland?} to @code{#f} in @code{gdm-configuration}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24872
#, no-wrap
msgid "gdm-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24877
msgid "This is the type for the @uref{https://wiki.gnome.org/Projects/GDM/, GNOME Desktop Manager} (GDM), a program that manages graphical display servers and handles graphical user logins.  Its value must be a @code{gdm-configuration} (see below)."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24878
#, no-wrap
msgid "session types"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24886
msgid "GDM looks for @dfn{session types} described by the @file{.desktop} files in @file{/run/current-system/profile/share/xsessions} (for X11 sessions) and @file{/run/current-system/profile/share/wayland-sessions} (for Wayland sessions) and allows users to choose a session from the log-in screen.  Packages such as @code{gnome}, @code{xfce}, @code{i3} and @code{sway} provide @file{.desktop} files; adding them to the system-wide set of packages automatically makes them available at the log-in screen."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24890
msgid "In addition, @file{~/.xsession} files are honored.  When available, @file{~/.xsession} must be an executable that starts a window manager and/or other X clients."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24892
#, no-wrap
msgid "{Data Type} gdm-configuration"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24894 guix-git/doc/guix.texi:24988
#, no-wrap
msgid "@code{auto-login?} (default: @code{#f})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:24895
#, no-wrap
msgid "@code{default-user} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24897
msgid "When @code{auto-login?} is false, GDM presents a log-in screen."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24900
msgid "When @code{auto-login?} is true, GDM logs in directly as @code{default-user}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24901
#, no-wrap
msgid "@code{auto-suspend?} (default @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24906
msgid "When true, GDM will automatically suspend to RAM when nobody is physically connected.  When a machine is used via remote desktop or SSH, this should be set to false to avoid GDM interrupting remote sessions or rendering the machine unavailable."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24907 guix-git/doc/guix.texi:33044
#: guix-git/doc/guix.texi:35202 guix-git/doc/guix.texi:41071
#: guix-git/doc/guix.texi:41100 guix-git/doc/guix.texi:41129
#: guix-git/doc/guix.texi:41156 guix-git/doc/guix.texi:41211
#: guix-git/doc/guix.texi:41236 guix-git/doc/guix.texi:41263
#: guix-git/doc/guix.texi:41289 guix-git/doc/guix.texi:41334
#, no-wrap
msgid "@code{debug?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24909
msgid "When true, GDM writes debug messages to its log."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24910
#, no-wrap
msgid "@code{gnome-shell-assets} (default: ...)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24912
msgid "List of GNOME Shell assets needed by GDM: icon theme, fonts, etc."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24913
#, no-wrap
msgid "@code{xorg-configuration} (default: @code{(xorg-configuration)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24915 guix-git/doc/guix.texi:25015
#: guix-git/doc/guix.texi:25125
msgid "Configuration of the Xorg graphical server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24916
#, no-wrap
msgid "@code{x-session} (default: @code{(xinitrc)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24918 guix-git/doc/guix.texi:25140
msgid "Script to run before starting a X session."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24919
#, no-wrap
msgid "@code{xdmcp?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24924
msgid "When true, enable the X Display Manager Control Protocol (XDMCP).  This should only be enabled in trusted environments, as the protocol is not secure.  When enabled, GDM listens for XDMCP queries on the UDP port 177."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24925
#, no-wrap
msgid "@code{dbus-daemon} (default: @code{dbus-daemon-wrapper})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24927
msgid "File name of the @code{dbus-daemon} executable."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24928
#, no-wrap
msgid "@code{gdm} (default: @code{gdm})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24930
msgid "The GDM package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24931
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{wayland?} (default: @code{#t})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:24933
msgid "When true, enables Wayland in GDM, necessary to use Wayland sessions."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24934
#, no-wrap
msgid "@code{wayland-session} (default: @code{gdm-wayland-session-wrapper})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24937
msgid "The Wayland session wrapper to use, needed to setup the environment."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24940
#, no-wrap
msgid "slim-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24942
msgid "This is the type for the SLiM graphical login manager for X11."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24946
msgid "Like GDM, SLiM looks for session types described by @file{.desktop} files and allows users to choose a session from the log-in screen using @kbd{F1}.  It also honors @file{~/.xsession} files."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24953
msgid "Unlike GDM, SLiM does not spawn the user session on a different VT after logging in, which means that you can only start one graphical session.  If you want to be able to run multiple graphical sessions at the same time you have to add multiple SLiM services to your system services.  The following example shows how to replace the default GDM service with two SLiM services on tty7 and tty8."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24958
#, no-wrap
msgid ""
"(use-modules (gnu services)\n"
"             (gnu services desktop)\n"
"             (gnu services xorg))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24969
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; ...\n"
"  (services (cons* (service slim-service-type (slim-configuration\n"
"                                               (display \":0\")\n"
"                                               (vt \"vt7\")))\n"
"                   (service slim-service-type (slim-configuration\n"
"                                               (display \":1\")\n"
"                                               (vt \"vt8\")))\n"
"                   (modify-services %desktop-services\n"
"                     (delete gdm-service-type)))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24973
#, no-wrap
msgid "{Data Type} slim-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24975
msgid "Data type representing the configuration of @code{slim-service-type}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24979
msgid "Whether to allow logins with empty passwords."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24980
#, no-wrap
msgid "@code{gnupg?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24987
msgid "If enabled, @code{pam-gnupg} will attempt to automatically unlock the user's GPG keys with the login password via @code{gpg-agent}.  The keygrips of all keys to be unlocked should be written to @file{~/.pam-gnupg}, and can be queried with @code{gpg -K --with-keygrip}.  Presetting passphrases must be enabled by adding @code{allow-preset-passphrase} in @file{~/.gnupg/gpg-agent.conf}."
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:24989
#, no-wrap
msgid "@code{default-user} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24991
msgid "When @code{auto-login?} is false, SLiM presents a log-in screen."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24994
msgid "When @code{auto-login?} is true, SLiM logs in directly as @code{default-user}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24995
#, no-wrap
msgid "@code{theme} (default: @code{%default-slim-theme})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:24996
#, no-wrap
msgid "@code{theme-name} (default: @code{%default-slim-theme-name})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24998
msgid "The graphical theme to use and its name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24999
#, no-wrap
msgid "@code{auto-login-session} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25002
msgid "If true, this must be the name of the executable to start as the default session---e.g., @code{(file-append windowmaker \"/bin/windowmaker\")}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25006
msgid "If false, a session described by one of the available @file{.desktop} files in @code{/run/current-system/profile} and @code{~/.guix-profile} will be used."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:25011
msgid "You must install at least one window manager in the system profile or in your user profile.  Failing to do that, if @code{auto-login-session} is false, you will be unable to log in."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25013 guix-git/doc/guix.texi:25123
#, no-wrap
msgid "@code{xorg-configuration} (default @code{(xorg-configuration)})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25016
#, no-wrap
msgid "@code{display} (default @code{\":0\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25018
msgid "The display on which to start the Xorg graphical server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25019
#, no-wrap
msgid "@code{vt} (default @code{\"vt7\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25021
msgid "The VT on which to start the Xorg graphical server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25022
#, no-wrap
msgid "@code{xauth} (default: @code{xauth})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25024
msgid "The XAuth package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25025
#, no-wrap
msgid "@code{shepherd} (default: @code{shepherd})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25028
msgid "The Shepherd package used when invoking @command{halt} and @command{reboot}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25029
#, no-wrap
msgid "@code{sessreg} (default: @code{sessreg})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25031
msgid "The sessreg package used in order to register the session."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25032
#, no-wrap
msgid "@code{slim} (default: @code{slim})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25034
msgid "The SLiM package to use."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25037
#, no-wrap
msgid "%default-theme"
msgstr ""

#. type: defvarx
#: guix-git/doc/guix.texi:25038
#, no-wrap
msgid "%default-theme-name"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25040
msgid "The default SLiM theme and its name."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:25044
#, no-wrap
msgid "X11 login"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25045
#, no-wrap
msgid "sddm-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25049
msgid "This is the type of the service to run the @uref{https://github.com/sddm/sddm,SDDM display manager}.  Its value must be a @code{sddm-configuration} record (see below)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25051
msgid "Here's an example use:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:25057
#, no-wrap
msgid ""
"(service sddm-service-type\n"
"         (sddm-configuration\n"
"           (auto-login-user \"alice\")\n"
"           (auto-login-session \"xfce.desktop\")))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:25060
#, no-wrap
msgid "{Data Type} sddm-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:25063
msgid "This data type represents the configuration of the SDDM login manager.  The available fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25065
#, no-wrap
msgid "@code{sddm} (default: @code{sddm})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25067
msgid "The SDDM package to use."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:25071
msgid "sddm has Qt6 enabled by default. If you want to still use a Qt5 theme, you need to set it to @code{sddm-qt5}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25073
#, no-wrap
msgid "@code{display-server} (default: \"x11\")"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25076
msgid "Select display server to use for the greeter.  Valid values are @samp{\"x11\"} or @samp{\"wayland\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25077
#, no-wrap
msgid "@code{numlock} (default: \"on\")"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25079
msgid "Valid values are @samp{\"on\"}, @samp{\"off\"} or @samp{\"none\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25080
#, no-wrap
msgid "@code{halt-command} (default @code{#~(string-append #$shepherd \"/sbin/halt\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25082
msgid "Command to run when halting."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25083
#, no-wrap
msgid "@code{reboot-command} (default @code{#~(string-append #$shepherd \"/sbin/reboot\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25085
msgid "Command to run when rebooting."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25086
#, no-wrap
msgid "@code{theme} (default \"maldives\")"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25089
msgid "Theme to use.  Default themes provided by SDDM are @samp{\"elarun\"}, @samp{\"maldives\"} or @samp{\"maya\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25090
#, no-wrap
msgid "@code{themes-directory} (default \"/run/current-system/profile/share/sddm/themes\")"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25092
msgid "Directory to look for themes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25093
#, no-wrap
msgid "@code{faces-directory} (default \"/run/current-system/profile/share/sddm/faces\")"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25095
msgid "Directory to look for faces."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25096
#, no-wrap
msgid "@code{default-path} (default \"/run/current-system/profile/bin\")"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25098
msgid "Default PATH to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25099
#, no-wrap
msgid "@code{minimum-uid} (default: 1000)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25101
msgid "Minimum UID displayed in SDDM and allowed for log-in."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25102
#, no-wrap
msgid "@code{maximum-uid} (default: 2000)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25104
msgid "Maximum UID to display in SDDM."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25105
#, no-wrap
msgid "@code{remember-last-user?} (default #t)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25107
msgid "Remember last user."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25108
#, no-wrap
msgid "@code{remember-last-session?} (default #t)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25110
msgid "Remember last session."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25111
#, no-wrap
msgid "@code{hide-users} (default \"\")"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25113
msgid "Usernames to hide from SDDM greeter."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25114
#, no-wrap
msgid "@code{hide-shells} (default @code{#~(string-append #$shadow \"/sbin/nologin\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25116
msgid "Users with shells listed will be hidden from the SDDM greeter."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25117
#, no-wrap
msgid "@code{session-command} (default @code{#~(string-append #$sddm \"/share/sddm/scripts/wayland-session\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25119
msgid "Script to run before starting a wayland session."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25120
#, no-wrap
msgid "@code{sessions-directory} (default \"/run/current-system/profile/share/wayland-sessions\")"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25122
msgid "Directory to look for desktop files starting wayland sessions."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25126
#, no-wrap
msgid "@code{xauth-path} (default @code{#~(string-append #$xauth \"/bin/xauth\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25128
msgid "Path to xauth."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25129
#, no-wrap
msgid "@code{xephyr-path} (default @code{#~(string-append #$xorg-server \"/bin/Xephyr\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25131
msgid "Path to Xephyr."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25132
#, no-wrap
msgid "@code{xdisplay-start} (default @code{#~(string-append #$sddm \"/share/sddm/scripts/Xsetup\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25134
msgid "Script to run after starting xorg-server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25135
#, no-wrap
msgid "@code{xdisplay-stop} (default @code{#~(string-append #$sddm \"/share/sddm/scripts/Xstop\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25137
msgid "Script to run before stopping xorg-server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25138
#, no-wrap
msgid "@code{xsession-command} (default: @code{xinitrc})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25141
#, no-wrap
msgid "@code{xsessions-directory} (default: \"/run/current-system/profile/share/xsessions\")"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25143
msgid "Directory to look for desktop files starting X sessions."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25144
#, no-wrap
msgid "@code{minimum-vt} (default: 7)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25146
msgid "Minimum VT to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25147
#, no-wrap
msgid "@code{auto-login-user} (default \"\")"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25150
msgid "User account that will be automatically logged in.  Setting this to the empty string disables auto-login."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25151
#, no-wrap
msgid "@code{auto-login-session} (default \"\")"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25153
msgid "The @file{.desktop} file name to use as the auto-login session, or the empty string."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25154
#, no-wrap
msgid "@code{relogin?} (default #f)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25156
msgid "Relogin after logout."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:25160
#, no-wrap
msgid "lightdm, graphical login manager"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:25161
#, no-wrap
msgid "display manager, lightdm"
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:25163
msgid "lightdm"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25163
#, no-wrap
msgid "lightdm-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25171
msgid "This is the type of the service to run the @url{https://github.com/canonical/lightdm,LightDM display manager}.  Its value must be a @code{lightdm-configuration} record, which is documented below.  Among its distinguishing features are TigerVNC integration for easily remoting your desktop as well as support for the XDMCP protocol, which can be used by remote clients to start a session from the login manager."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25173
msgid "In its most basic form, it can be used simply as:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:25176
#, no-wrap
msgid "(service lightdm-service-type)\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25180
msgid "A more elaborate example making use of the VNC capabilities and enabling more features and verbose logs could look like:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:25194
#, no-wrap
msgid ""
"(service lightdm-service-type\n"
"         (lightdm-configuration\n"
"          (allow-empty-passwords? #t)\n"
"          (xdmcp? #t)\n"
"          (vnc-server? #t)\n"
"          (vnc-server-command\n"
"           (file-append tigervnc-server \"/bin/Xvnc\"\n"
"                        \"  -SecurityTypes None\"))\n"
"          (seats\n"
"           (list (lightdm-seat-configuration\n"
"                  (name \"*\")\n"
"                  (user-session \"ratpoison\"))))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:25201
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} lightdm-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:25203
msgid "Available @code{lightdm-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25205
#, no-wrap
msgid "@code{lightdm} (default: @code{lightdm}) (type: file-like)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25207
msgid "The lightdm package to use."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25210
msgid "Whether users not having a password set can login."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25213
msgid "Enable verbose output."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25214
#, no-wrap
msgid "@code{xorg-configuration} (type: xorg-configuration)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25218
msgid "The default Xorg server configuration to use to generate the Xorg server start script.  It can be refined per seat via the @code{xserver-command} of the @code{<lightdm-seat-configuration>} record, if desired."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25219
#, no-wrap
msgid "@code{greeters} (type: list-of-greeter-configurations)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25221
msgid "The LightDM greeter configurations specifying the greeters to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25222
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{seats} (type: list-of-seat-configurations)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:25224
msgid "The seat configurations to use.  A LightDM seat is akin to a user."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25225 guix-git/doc/guix.texi:37008
#, no-wrap
msgid "@code{xdmcp?} (default: @code{#f}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25227
msgid "Whether a XDMCP server should listen on port UDP 177."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25228
#, no-wrap
msgid "@code{xdmcp-listen-address} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25231
msgid "The host or IP address the XDMCP server listens for incoming connections.  When unspecified, listen on for any hosts/IP addresses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25232
#, no-wrap
msgid "@code{vnc-server?} (default: @code{#f}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25234
msgid "Whether a VNC server is started."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25235
#, no-wrap
msgid "@code{vnc-server-command} (type: file-like)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25239
msgid "The Xvnc command to use for the VNC server, it's possible to provide extra options not otherwise exposed along the command, for example to disable security:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:25243
#, no-wrap
msgid ""
"(vnc-server-command (file-append tigervnc-server \"/bin/Xvnc\"\n"
"                                 \" -SecurityTypes None\" ))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25247
msgid "Or to set a PasswordFile for the classic (unsecure) VncAuth mechanism:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:25251
#, no-wrap
msgid ""
"(vnc-server-command (file-append tigervnc-server \"/bin/Xvnc\"\n"
"                                 \" -PasswordFile /var/lib/lightdm/.vnc/passwd\"))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25257
msgid "The password file should be manually created using the @command{vncpasswd} command.  Note that LightDM will create new sessions for VNC users, which means they need to authenticate in the same way as local users would."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25258
#, no-wrap
msgid "@code{vnc-server-listen-address} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25261
msgid "The host or IP address the VNC server listens for incoming connections.  When unspecified, listen for any hosts/IP addresses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25262
#, no-wrap
msgid "@code{vnc-server-port} (default: @code{5900}) (type: number)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25264
msgid "The TCP port the VNC server should listen to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25265 guix-git/doc/guix.texi:25314
#: guix-git/doc/guix.texi:25352
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{extra-config} (default: @code{'()}) (type: list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:25267
msgid "Extra configuration values to append to the LightDM configuration file."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:25275
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} lightdm-gtk-greeter-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:25277
msgid "Available @code{lightdm-gtk-greeter-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25279
#, no-wrap
msgid "@code{lightdm-gtk-greeter} (default: @code{lightdm-gtk-greeter}) (type: file-like)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25281
msgid "The lightdm-gtk-greeter package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25282
#, no-wrap
msgid "@code{assets} (default: @code{(adwaita-icon-theme gnome-themes-extra hicolor-icon-theme)}) (type: list-of-file-likes)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25285
msgid "The list of packages complementing the greeter, such as package providing icon themes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25286
#, no-wrap
msgid "@code{theme-name} (default: @code{\"Adwaita\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25288
msgid "The name of the theme to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25289
#, no-wrap
msgid "@code{icon-theme-name} (default: @code{\"Adwaita\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25291
msgid "The name of the icon theme to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25292
#, no-wrap
msgid "@code{cursor-theme-name} (default: @code{\"Adwaita\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25294
msgid "The name of the cursor theme to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25295
#, no-wrap
msgid "@code{cursor-theme-size} (default: @code{16}) (type: number)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25297
msgid "The size to use for the cursor theme."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25298
#, no-wrap
msgid "@code{allow-debugging?} (type: maybe-boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25300
msgid "Set to #t to enable debug log level."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25301
#, no-wrap
msgid "@code{background} (type: file-like)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25303
msgid "The background image to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25304
#, no-wrap
msgid "@code{at-spi-enabled?} (default: @code{#f}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25307
msgid "Enable accessibility support through the Assistive Technology Service Provider Interface (AT-SPI)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25308
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{a11y-states} (default: @code{(contrast font keyboard reader)}) (type: list-of-a11y-states)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:25310
msgid "The accessibility features to enable, given as list of symbols."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25311
#, no-wrap
msgid "@code{reader} (type: maybe-file-like)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25313
msgid "The command to use to launch a screen reader."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25317
msgid "Extra configuration values to append to the LightDM GTK Greeter configuration file."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:25324
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} lightdm-seat-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:25326
msgid "Available @code{lightdm-seat-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25328
#, no-wrap
msgid "@code{name} (type: seat-name)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25331
msgid "The name of the seat.  An asterisk (*) can be used in the name to apply the seat configuration to all the seat names it matches."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25332
#, no-wrap
msgid "@code{user-session} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25335
msgid "The session to use by default.  The session name must be provided as a lowercase string, such as @code{\"gnome\"}, @code{\"ratpoison\"}, etc."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25336
#, no-wrap
msgid "@code{type} (default: @code{local}) (type: seat-type)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25338
msgid "The type of the seat, either the @code{local} or @code{xremote} symbol."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25339
#, no-wrap
msgid "@code{autologin-user} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25341
msgid "The username to automatically log in with by default."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25342
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{greeter-session} (default: @code{lightdm-gtk-greeter}) (type: greeter-session)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:25345
msgid "The greeter session to use, specified as a symbol.  Currently, only @code{lightdm-gtk-greeter} is supported."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25346
#, no-wrap
msgid "@code{xserver-command} (type: maybe-file-like)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25348
msgid "The Xorg server command to run."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25349
#, no-wrap
msgid "@code{session-wrapper} (type: file-like)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25351
msgid "The xinitrc session wrapper to use."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25354
msgid "Extra configuration values to append to the seat configuration section."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:25360
#, no-wrap
msgid "Xorg, configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:25361
#, no-wrap
msgid "{Data Type} xorg-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:25367
msgid "This data type represents the configuration of the Xorg graphical display server.  Note that there is no Xorg service; instead, the X server is started by a ``display manager'' such as GDM, SDDM, LightDM or SLiM@.  Thus, the configuration of these display managers aggregates an @code{xorg-configuration} record."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25369
#, no-wrap
msgid "@code{modules} (default: @code{%default-xorg-modules})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25372
msgid "This is a list of @dfn{module packages} loaded by the Xorg server---e.g., @code{xf86-video-vesa}, @code{xf86-input-libinput}, and so on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25373
#, no-wrap
msgid "@code{fonts} (default: @code{%default-xorg-fonts})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25375
msgid "This is a list of font directories to add to the server's @dfn{font path}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25376
#, no-wrap
msgid "@code{drivers} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25380
msgid "This must be either the empty list, in which case Xorg chooses a graphics driver automatically, or a list of driver names that will be tried in this order---e.g., @code{'(\"modesetting\" \"vesa\")}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25381
#, no-wrap
msgid "@code{resolutions} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25385
msgid "When @code{resolutions} is the empty list, Xorg chooses an appropriate screen resolution.  Otherwise, it must be a list of resolutions---e.g., @code{'((1024 768) (640 480))}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:25386
#, no-wrap
msgid "keyboard layout, for Xorg"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:25387
#, no-wrap
msgid "keymap, for Xorg"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25391
msgid "If this is @code{#f}, Xorg uses the default keyboard layout---usually US English (``qwerty'') for a 105-key PC keyboard."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25395
msgid "Otherwise this must be a @code{keyboard-layout} object specifying the keyboard layout in use when Xorg is running.  @xref{Keyboard Layout}, for more information on how to specify the keyboard layout."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25396 guix-git/doc/guix.texi:28139
#: guix-git/doc/guix.texi:45531
#, no-wrap
msgid "@code{extra-config} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25399 guix-git/doc/guix.texi:45535
msgid "This is a list of strings or objects appended to the configuration file.  It is used to pass extra text to be added verbatim to the configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25400
#, no-wrap
msgid "@code{server} (default: @code{xorg-server})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25402
msgid "This is the package providing the Xorg server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25403
#, no-wrap
msgid "@code{server-arguments} (default: @code{%default-xorg-server-arguments})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25406
msgid "This is the list of command-line arguments to pass to the X server.  The default is @code{-nolisten tcp}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:25409
#, no-wrap
msgid "{Procedure} set-xorg-configuration config [login-manager-service-type]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:25412
msgid "Tell the log-in manager (of type @var{login-manager-service-type}) to use @var{config}, an @code{<xorg-configuration>} record."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:25416
msgid "Since the Xorg configuration is embedded in the log-in manager's configuration---e.g., @code{gdm-configuration}---this procedure provides a shorthand to set the Xorg configuration."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:25418
#, no-wrap
msgid "{Procedure} xorg-start-command [config]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:25422
msgid "Return a @code{startx} script in which the modules, fonts, etc. specified in @var{config}, are available.  The result should be used in place of @code{startx}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:25424
msgid "Usually the X server is started by a login manager."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:25426
#, no-wrap
msgid "{Procedure} xorg-start-command-xinit [config]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:25435
msgid "Return a @code{startx} script in which the modules, fonts, etc. specified in @var{config} are available.  The result should be used in place of @code{startx} and should be invoked by the user from a tty after login.  Unlike @code{xorg-start-command}, this script calls xinit.  Therefore it works well when executed from a tty.  This script can be set up as @code{startx} using @code{startx-command-service-type} or @code{home-startx-command-service-type}.  If you are using a desktop environment, you are unlikely to need this procedure."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25438
#, fuzzy, no-wrap
#| msgid "Services"
msgid "screen-locker-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:25442
msgid "Type for a service that adds a package for a screen locker or screen saver to the set of privileged programs and/or add a PAM entry for it.  The value for this service is a @code{<screen-locker-configuration>} object."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25447
msgid "While the default behavior is to setup both a privileged program and PAM entry, these two methods are redundant.  Screen locker programs may not execute when PAM is configured and @code{setuid} is set on their executable.  In this case, @code{using-setuid?} can be set to @code{#f}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25449
msgid "For example, to make XlockMore usable:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:25455
#, no-wrap
msgid ""
"(service screen-locker-service-type\n"
"         (screen-locker-configuration\n"
"           (name \"xlock\")\n"
"           (program (file-append xlockmore \"/bin/xlock\"))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25458
msgid "makes the good ol' XlockMore usable."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25461
msgid "For example, swaylock fails to execute when compiled with PAM support and setuid enabled.  One can thus disable setuid:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:25469
#, no-wrap
msgid ""
"(service screen-locker-service-type\n"
"         (screen-locker-configuration\n"
"           (name \"swaylock\")\n"
"           (program (file-append swaylock \"/bin/swaylock\"))\n"
"           (using-pam? #t)\n"
"           (using-setuid? #f)))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:25473
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} screen-locker-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:25475
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{screen-locker-configuration} fields are:"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:25479
msgid "Name of the screen locker."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25480
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{program} (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:25482
msgid "Path to the executable for the screen locker as a G-Expression."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25483
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{allow-empty-password?} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:25486
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{using-pam?} (default: @code{#t}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:25488
msgid "Whether to setup PAM entry."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25489
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{using-setuid?} (default: @code{#t}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:25491
msgid "Whether to setup program as setuid binary."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25496
#, fuzzy, no-wrap
#| msgid "Services"
msgid "startx-command-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:25498
msgid "Add @command{startx} to the system profile putting it onto @env{PATH}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25502 guix-git/doc/guix.texi:51480
msgid "The value for this service is a @code{<xorg-configuration>} object which is passed to the @code{xorg-start-command-xinit} procedure producing the @command{startx} used.  Default value is @code{(xorg-configuration)}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:25508
#, no-wrap
msgid "printer support with CUPS"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:25512
msgid "The @code{(gnu services cups)} module provides a Guix service definition for the CUPS printing service.  To add printer support to a Guix system, add a @code{cups-service} to the operating system definition:"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25513
#, no-wrap
msgid "cups-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25517
msgid "The service type for the CUPS print server.  Its value should be a valid CUPS configuration (see below).  To use the default settings, simply write:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:25519
#, no-wrap
msgid "(service cups-service-type)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:25529
msgid "The CUPS configuration controls the basic things about your CUPS installation: what interfaces it listens on, what to do if a print job fails, how much logging to do, and so on.  To actually add a printer, you have to visit the @url{http://localhost:631} URL, or use a tool such as GNOME's printer configuration services.  By default, configuring a CUPS service will generate a self-signed certificate if needed, for secure connections to the print server."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:25535
msgid "Suppose you want to enable the Web interface of CUPS and also add support for Epson printers @i{via} the @code{epson-inkjet-printer-escpr} package and for HP printers @i{via} the @code{hplip-minimal} package.  You can do that directly, like this (you need to use the @code{(gnu packages cups)} module):"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:25542
#, no-wrap
msgid ""
"(service cups-service-type\n"
"         (cups-configuration\n"
"           (web-interface? #t)\n"
"           (extensions\n"
"             (list cups-filters epson-inkjet-printer-escpr hplip-minimal))))\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:25548
msgid "If you wish to use the Qt5 based GUI which comes with the hplip package then it is suggested that you install the @code{hplip} package, either in your OS configuration file or as your user."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:25556
msgid "The available configuration parameters follow.  Each parameter definition is preceded by its type; for example, @samp{string-list foo} indicates that the @code{foo} parameter should be specified as a list of strings.  There is also a way to specify the configuration as a string, if you have an old @code{cupsd.conf} file that you want to port over from some other system; see the end for more details."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:25567
msgid "Available @code{cups-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25568
#, no-wrap
msgid "{@code{cups-configuration} parameter} package cups"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25570 guix-git/doc/guix.texi:26305
msgid "The CUPS package."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25572
#, no-wrap
msgid "{@code{cups-configuration} parameter} package-list extensions (default: @code{(list brlaser cups-filters epson-inkjet-printer-escpr foomatic-filters hplip-minimal splix)})"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25574
msgid "Drivers and other extensions to the CUPS package."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25576
#, no-wrap
msgid "{@code{cups-configuration} parameter} files-configuration files-configuration"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25579
msgid "Configuration of where to write logs, what directories to use for print spools, and related privileged configuration parameters."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25581
msgid "Available @code{files-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25582
#, no-wrap
msgid "{@code{files-configuration} parameter} log-location access-log"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25590
msgid "Defines the access log filename.  Specifying a blank filename disables access log generation.  The value @code{stderr} causes log entries to be sent to the standard error file when the scheduler is running in the foreground, or to the system log daemon when run in the background.  The value @code{syslog} causes log entries to be sent to the system log daemon.  The server name may be included in filenames using the string @code{%s}, as in @code{/var/log/cups/%s-access_log}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25592
msgid "Defaults to @samp{\"/var/log/cups/access_log\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25594
#, no-wrap
msgid "{@code{files-configuration} parameter} file-name cache-dir"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25596
msgid "Where CUPS should cache data."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25598
msgid "Defaults to @samp{\"/var/cache/cups\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25600
#, no-wrap
msgid "{@code{files-configuration} parameter} string config-file-perm"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25603
msgid "Specifies the permissions for all configuration files that the scheduler writes."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25609
msgid "Note that the permissions for the printers.conf file are currently masked to only allow access from the scheduler user (typically root).  This is done because printer device URIs sometimes contain sensitive authentication information that should not be generally known on the system.  There is no way to disable this security feature."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25611
msgid "Defaults to @samp{\"0640\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25613
#, no-wrap
msgid "{@code{files-configuration} parameter} log-location error-log"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25621
msgid "Defines the error log filename.  Specifying a blank filename disables error log generation.  The value @code{stderr} causes log entries to be sent to the standard error file when the scheduler is running in the foreground, or to the system log daemon when run in the background.  The value @code{syslog} causes log entries to be sent to the system log daemon.  The server name may be included in filenames using the string @code{%s}, as in @code{/var/log/cups/%s-error_log}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25623
msgid "Defaults to @samp{\"/var/log/cups/error_log\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25625
#, no-wrap
msgid "{@code{files-configuration} parameter} string fatal-errors"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25628
msgid "Specifies which errors are fatal, causing the scheduler to exit.  The kind strings are:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25632
msgid "No errors are fatal."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25635
msgid "All of the errors below are fatal."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25636
#, no-wrap
msgid "browse"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25639
msgid "Browsing initialization errors are fatal, for example failed connections to the DNS-SD daemon."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25640
#, no-wrap
msgid "config"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25642
msgid "Configuration file syntax errors are fatal."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25643
#, no-wrap
msgid "listen"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25646
msgid "Listen or Port errors are fatal, except for IPv6 failures on the loopback or @code{any} addresses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25647
#, no-wrap
msgid "log"
msgstr "log"

#. type: table
#: guix-git/doc/guix.texi:25649
msgid "Log file creation or write errors are fatal."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25650
#, no-wrap
msgid "permissions"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25653
msgid "Bad startup file permissions are fatal, for example shared TLS certificate and key files with world-read permissions."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25656
msgid "Defaults to @samp{\"all -browse\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25658
#, no-wrap
msgid "{@code{files-configuration} parameter} boolean file-device?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25661
msgid "Specifies whether the file pseudo-device can be used for new printer queues.  The URI @uref{file:///dev/null} is always allowed."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25663 guix-git/doc/guix.texi:25739
#: guix-git/doc/guix.texi:25781 guix-git/doc/guix.texi:25800
#: guix-git/doc/guix.texi:25806 guix-git/doc/guix.texi:25894
#: guix-git/doc/guix.texi:25971 guix-git/doc/guix.texi:26279
#: guix-git/doc/guix.texi:26292 guix-git/doc/guix.texi:28453
#: guix-git/doc/guix.texi:29945 guix-git/doc/guix.texi:30051
#: guix-git/doc/guix.texi:30116 guix-git/doc/guix.texi:30125
#: guix-git/doc/guix.texi:32350 guix-git/doc/guix.texi:32394
#: guix-git/doc/guix.texi:32411 guix-git/doc/guix.texi:32419
#: guix-git/doc/guix.texi:32434 guix-git/doc/guix.texi:32452
#: guix-git/doc/guix.texi:32476 guix-git/doc/guix.texi:32529
#: guix-git/doc/guix.texi:32662 guix-git/doc/guix.texi:32696
#: guix-git/doc/guix.texi:32732 guix-git/doc/guix.texi:32748
#: guix-git/doc/guix.texi:32776 guix-git/doc/guix.texi:32837
#: guix-git/doc/guix.texi:32920 guix-git/doc/guix.texi:38440
#: guix-git/doc/guix.texi:38454 guix-git/doc/guix.texi:38654
#: guix-git/doc/guix.texi:38699 guix-git/doc/guix.texi:38786
#: guix-git/doc/guix.texi:41705 guix-git/doc/guix.texi:41714
#: guix-git/doc/guix.texi:41722 guix-git/doc/guix.texi:41730
#: guix-git/doc/guix.texi:41746 guix-git/doc/guix.texi:41762
#: guix-git/doc/guix.texi:41770 guix-git/doc/guix.texi:41778
#: guix-git/doc/guix.texi:41787 guix-git/doc/guix.texi:41796
#: guix-git/doc/guix.texi:41812 guix-git/doc/guix.texi:41876
#: guix-git/doc/guix.texi:41982 guix-git/doc/guix.texi:41990
#: guix-git/doc/guix.texi:41998 guix-git/doc/guix.texi:42024
#: guix-git/doc/guix.texi:42078 guix-git/doc/guix.texi:42126
#: guix-git/doc/guix.texi:42327 guix-git/doc/guix.texi:42334
msgid "Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25665
#, no-wrap
msgid "{@code{files-configuration} parameter} string group"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25668
msgid "Specifies the group name or ID that will be used when executing external programs."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25670 guix-git/doc/guix.texi:25756
msgid "Defaults to @samp{\"lp\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25672
#, no-wrap
msgid "{@code{files-configuration} parameter} string log-file-group"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25674
msgid "Specifies the group name or ID that will be used for log files."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25676
msgid "Defaults to @samp{\"lpadmin\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25678
#, no-wrap
msgid "{@code{files-configuration} parameter} string log-file-perm"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25680
msgid "Specifies the permissions for all log files that the scheduler writes."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25682
msgid "Defaults to @samp{\"0644\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25684
#, no-wrap
msgid "{@code{files-configuration} parameter} log-location page-log"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25692
msgid "Defines the page log filename.  Specifying a blank filename disables page log generation.  The value @code{stderr} causes log entries to be sent to the standard error file when the scheduler is running in the foreground, or to the system log daemon when run in the background.  The value @code{syslog} causes log entries to be sent to the system log daemon.  The server name may be included in filenames using the string @code{%s}, as in @code{/var/log/cups/%s-page_log}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25694
msgid "Defaults to @samp{\"/var/log/cups/page_log\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25696
#, no-wrap
msgid "{@code{files-configuration} parameter} string remote-root"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25699
msgid "Specifies the username that is associated with unauthenticated accesses by clients claiming to be the root user.  The default is @code{remroot}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25701
msgid "Defaults to @samp{\"remroot\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25703
#, no-wrap
msgid "{@code{files-configuration} parameter} file-name request-root"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25706
msgid "Specifies the directory that contains print jobs and other HTTP request data."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25708
msgid "Defaults to @samp{\"/var/spool/cups\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25710
#, no-wrap
msgid "{@code{files-configuration} parameter} sandboxing sandboxing"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25715
msgid "Specifies the level of security sandboxing that is applied to print filters, backends, and other child processes of the scheduler; either @code{relaxed} or @code{strict}.  This directive is currently only used/supported on macOS."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25717
msgid "Defaults to @samp{strict}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25719
#, no-wrap
msgid "{@code{files-configuration} parameter} file-name server-keychain"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25724
msgid "Specifies the location of TLS certificates and private keys.  CUPS will look for public and private keys in this directory: @file{.crt} files for PEM-encoded certificates and corresponding @file{.key} files for PEM-encoded private keys."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25726
msgid "Defaults to @samp{\"/etc/cups/ssl\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25728
#, no-wrap
msgid "{@code{files-configuration} parameter} file-name server-root"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25730
msgid "Specifies the directory containing the server configuration files."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25732
msgid "Defaults to @samp{\"/etc/cups\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25734
#, no-wrap
msgid "{@code{files-configuration} parameter} boolean sync-on-close?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25737
msgid "Specifies whether the scheduler calls fsync(2) after writing configuration or state files."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25741
#, no-wrap
msgid "{@code{files-configuration} parameter} space-separated-string-list system-group"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25743
msgid "Specifies the group(s) to use for @code{@@SYSTEM} group authentication."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25745
#, no-wrap
msgid "{@code{files-configuration} parameter} file-name temp-dir"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25747
msgid "Specifies the directory where temporary files are stored."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25749
msgid "Defaults to @samp{\"/var/spool/cups/tmp\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25751
#, no-wrap
msgid "{@code{files-configuration} parameter} string user"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25754
msgid "Specifies the user name or ID that is used when running external programs."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25758
#, no-wrap
msgid "{@code{files-configuration} parameter} string set-env"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25760
msgid "Set the specified environment variable to be passed to child processes."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25762
msgid "Defaults to @samp{\"variable value\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25765
#, no-wrap
msgid "{@code{cups-configuration} parameter} access-log-level access-log-level"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25772
msgid "Specifies the logging level for the AccessLog file.  The @code{config} level logs when printers and classes are added, deleted, or modified and when configuration files are accessed or updated.  The @code{actions} level logs when print jobs are submitted, held, released, modified, or canceled, and any of the conditions for @code{config}.  The @code{all} level logs all requests."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25774
msgid "Defaults to @samp{actions}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25776
#, no-wrap
msgid "{@code{cups-configuration} parameter} boolean auto-purge-jobs?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25779
msgid "Specifies whether to purge job history data automatically when it is no longer required for quotas."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25783
#, no-wrap
msgid "{@code{cups-configuration} parameter} comma-separated-string-list browse-dns-sd-sub-types"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25785
msgid "Specifies a list of DNS-SD sub-types to advertise for each shared printer."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25788
msgid "The default @samp{(list \"_cups\" \"_print\" \"_universal\")} tells clients that CUPS sharing, IPP Everywhere, AirPrint, and Mopria are supported."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25790
#, no-wrap
msgid "{@code{cups-configuration} parameter} browse-local-protocols browse-local-protocols"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25792
msgid "Specifies which protocols to use for local printer sharing."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25794
msgid "Defaults to @samp{dnssd}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25796
#, no-wrap
msgid "{@code{cups-configuration} parameter} boolean browse-web-if?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25798
msgid "Specifies whether the CUPS web interface is advertised."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25802
#, no-wrap
msgid "{@code{cups-configuration} parameter} boolean browsing?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25804
msgid "Specifies whether shared printers are advertised."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25808
#, no-wrap
msgid "{@code{cups-configuration} parameter} default-auth-type default-auth-type"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25810
msgid "Specifies the default type of authentication to use."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25812
msgid "Defaults to @samp{Basic}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25814
#, no-wrap
msgid "{@code{cups-configuration} parameter} default-encryption default-encryption"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25816
msgid "Specifies whether encryption will be used for authenticated requests."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25818
msgid "Defaults to @samp{Required}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25820
#, no-wrap
msgid "{@code{cups-configuration} parameter} string default-language"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25822
msgid "Specifies the default language to use for text and web content."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25824
msgid "Defaults to @samp{\"en\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25826
#, no-wrap
msgid "{@code{cups-configuration} parameter} string default-paper-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25831
msgid "Specifies the default paper size for new print queues.  @samp{\"Auto\"} uses a locale-specific default, while @samp{\"None\"} specifies there is no default paper size.  Specific size names are typically @samp{\"Letter\"} or @samp{\"A4\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25833
msgid "Defaults to @samp{\"Auto\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25835
#, no-wrap
msgid "{@code{cups-configuration} parameter} string default-policy"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25837
msgid "Specifies the default access policy to use."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25839
msgid "Defaults to @samp{\"default\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25841
#, no-wrap
msgid "{@code{cups-configuration} parameter} boolean default-shared?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25843
msgid "Specifies whether local printers are shared by default."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25845 guix-git/doc/guix.texi:25925
#: guix-git/doc/guix.texi:26195 guix-git/doc/guix.texi:30042
#: guix-git/doc/guix.texi:30093 guix-git/doc/guix.texi:30100
#: guix-git/doc/guix.texi:32374 guix-git/doc/guix.texi:32562
#: guix-git/doc/guix.texi:32679 guix-git/doc/guix.texi:32715
#: guix-git/doc/guix.texi:32766 guix-git/doc/guix.texi:32785
#: guix-git/doc/guix.texi:32795 guix-git/doc/guix.texi:32805
#: guix-git/doc/guix.texi:32864 guix-git/doc/guix.texi:32886
#: guix-git/doc/guix.texi:32911 guix-git/doc/guix.texi:32937
#: guix-git/doc/guix.texi:32955 guix-git/doc/guix.texi:38307
#: guix-git/doc/guix.texi:38447 guix-git/doc/guix.texi:38661
#: guix-git/doc/guix.texi:38668 guix-git/doc/guix.texi:38690
#: guix-git/doc/guix.texi:38729 guix-git/doc/guix.texi:38749
#: guix-git/doc/guix.texi:38763 guix-git/doc/guix.texi:41650
#: guix-git/doc/guix.texi:41738 guix-git/doc/guix.texi:41754
#: guix-git/doc/guix.texi:41804
msgid "Defaults to @samp{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25847
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer dirty-clean-interval"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25851
msgid "Specifies the delay for updating of configuration and state files, in seconds.  A value of 0 causes the update to happen as soon as possible, typically within a few milliseconds."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25853 guix-git/doc/guix.texi:25901
#: guix-git/doc/guix.texi:25910 guix-git/doc/guix.texi:26213
#: guix-git/doc/guix.texi:32724 guix-git/doc/guix.texi:32757
msgid "Defaults to @samp{30}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25855
#, no-wrap
msgid "{@code{cups-configuration} parameter} error-policy error-policy"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25861
msgid "Specifies what to do when an error occurs.  Possible values are @code{abort-job}, which will discard the failed print job; @code{retry-job}, which will retry the job at a later time; @code{retry-current-job}, which retries the failed job immediately; and @code{stop-printer}, which stops the printer."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25863
msgid "Defaults to @samp{stop-printer}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25865
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer filter-limit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25873
msgid "Specifies the maximum cost of filters that are run concurrently, which can be used to minimize disk, memory, and CPU resource problems.  A limit of 0 disables filter limiting.  An average print to a non-PostScript printer needs a filter limit of about 200.  A PostScript printer needs about half that (100).  Setting the limit below these thresholds will effectively limit the scheduler to printing a single job at any time."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25875 guix-git/doc/guix.texi:25883
#: guix-git/doc/guix.texi:25932 guix-git/doc/guix.texi:26037
#: guix-git/doc/guix.texi:26051 guix-git/doc/guix.texi:26058
#: guix-git/doc/guix.texi:26079 guix-git/doc/guix.texi:26087
#: guix-git/doc/guix.texi:26095 guix-git/doc/guix.texi:26103
#: guix-git/doc/guix.texi:28583 guix-git/doc/guix.texi:28599
#: guix-git/doc/guix.texi:29256 guix-git/doc/guix.texi:29268
#: guix-git/doc/guix.texi:30061 guix-git/doc/guix.texi:30070
#: guix-git/doc/guix.texi:30078 guix-git/doc/guix.texi:30086
#: guix-git/doc/guix.texi:38323 guix-git/doc/guix.texi:38676
#: guix-git/doc/guix.texi:41643 guix-git/doc/guix.texi:41943
#: guix-git/doc/guix.texi:42118
msgid "Defaults to @samp{0}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25877
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer filter-nice"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25881
msgid "Specifies the scheduling priority of filters that are run to print a job.  The nice value ranges from 0, the highest priority, to 19, the lowest priority."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25885
#, no-wrap
msgid "{@code{cups-configuration} parameter} host-name-lookups host-name-lookups"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25892
msgid "Specifies whether to do reverse lookups on connecting clients.  The @code{double} setting causes @code{cupsd} to verify that the hostname resolved from the address matches one of the addresses returned for that hostname.  Double lookups also prevent clients with unregistered addresses from connecting to your server.  Only set this option to @code{#t} or @code{double} if absolutely required."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25896
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer job-kill-delay"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25899
msgid "Specifies the number of seconds to wait before killing the filters and backend associated with a canceled or held job."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25903
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer job-retry-interval"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25908
msgid "Specifies the interval between retries of jobs in seconds.  This is typically used for fax queues but can also be used with normal print queues whose error policy is @code{retry-job} or @code{retry-current-job}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25912
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer job-retry-limit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25917
msgid "Specifies the number of retries that are done for jobs.  This is typically used for fax queues but can also be used with normal print queues whose error policy is @code{retry-job} or @code{retry-current-job}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25919 guix-git/doc/guix.texi:32688
#: guix-git/doc/guix.texi:41595 guix-git/doc/guix.texi:41603
#: guix-git/doc/guix.texi:41611 guix-git/doc/guix.texi:41635
msgid "Defaults to @samp{5}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25921
#, no-wrap
msgid "{@code{cups-configuration} parameter} boolean keep-alive?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25923
msgid "Specifies whether to support HTTP keep-alive connections."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25927
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer limit-request-body"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25930
msgid "Specifies the maximum size of print files, IPP requests, and HTML form data.  A limit of 0 disables the limit check."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25934
#, no-wrap
msgid "{@code{cups-configuration} parameter} multiline-string-list listen"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25941
msgid "Listens on the specified interfaces for connections.  Valid values are of the form @var{address}:@var{port}, where @var{address} is either an IPv6 address enclosed in brackets, an IPv4 address, or @code{*} to indicate all addresses.  Values can also be file names of local UNIX domain sockets.  The Listen directive is similar to the Port directive but allows you to restrict access to specific interfaces or networks."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25943
#, no-wrap
msgid "{@code{cups-configuration} parameter} location-access-control-list location-access-controls"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25945
msgid "Specifies a set of additional access controls."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25947
msgid "Available @code{location-access-controls} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25948
#, no-wrap
msgid "{@code{location-access-controls} parameter} file-name path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25950
msgid "Specifies the URI path to which the access control applies."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25952
#, no-wrap
msgid "{@code{location-access-controls} parameter} access-control-list access-controls"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25955
msgid "Access controls for all access to this path, in the same format as the @code{access-controls} of @code{operation-access-control}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25957 guix-git/doc/guix.texi:25963
#: guix-git/doc/guix.texi:25977 guix-git/doc/guix.texi:25984
#: guix-git/doc/guix.texi:26117 guix-git/doc/guix.texi:26176
#: guix-git/doc/guix.texi:26258 guix-git/doc/guix.texi:26272
#: guix-git/doc/guix.texi:28463 guix-git/doc/guix.texi:28472
#: guix-git/doc/guix.texi:29742 guix-git/doc/guix.texi:29959
#: guix-git/doc/guix.texi:29987 guix-git/doc/guix.texi:30017
#: guix-git/doc/guix.texi:30132 guix-git/doc/guix.texi:30145
#: guix-git/doc/guix.texi:30152 guix-git/doc/guix.texi:32894
#: guix-git/doc/guix.texi:33969 guix-git/doc/guix.texi:33977
#: guix-git/doc/guix.texi:34222 guix-git/doc/guix.texi:41658
#: guix-git/doc/guix.texi:41665 guix-git/doc/guix.texi:42007
#: guix-git/doc/guix.texi:42086 guix-git/doc/guix.texi:42180
#: guix-git/doc/guix.texi:42188 guix-git/doc/guix.texi:42224
#: guix-git/doc/guix.texi:42374 guix-git/doc/guix.texi:42425
#: guix-git/doc/guix.texi:42434
msgid "Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25959
#, no-wrap
msgid "{@code{location-access-controls} parameter} method-access-control-list method-access-controls"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25961
msgid "Access controls for method-specific access to this path."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25965
msgid "Available @code{method-access-controls} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25966
#, no-wrap
msgid "{@code{method-access-controls} parameter} boolean reverse?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25969
msgid "If @code{#t}, apply access controls to all methods except the listed methods.  Otherwise apply to only the listed methods."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25973
#, no-wrap
msgid "{@code{method-access-controls} parameter} method-list methods"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25975
msgid "Methods to which this access control applies."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25979
#, no-wrap
msgid "{@code{method-access-controls} parameter} access-control-list access-controls"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25982
msgid "Access control directives, as a list of strings.  Each string should be one directive, such as @samp{\"Order allow,deny\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25988
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer log-debug-history"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25992
msgid "Specifies the number of debugging messages that are retained for logging if an error occurs in a print job.  Debug messages are logged regardless of the LogLevel setting."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25994 guix-git/doc/guix.texi:26015
#: guix-git/doc/guix.texi:26022 guix-git/doc/guix.texi:29502
#: guix-git/doc/guix.texi:32426 guix-git/doc/guix.texi:32441
msgid "Defaults to @samp{100}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25996
#, no-wrap
msgid "{@code{cups-configuration} parameter} log-level log-level"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25999
msgid "Specifies the level of logging for the ErrorLog file.  The value @code{none} stops all logging while @code{debug2} logs everything."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26001 guix-git/doc/guix.texi:32903
msgid "Defaults to @samp{info}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26003
#, no-wrap
msgid "{@code{cups-configuration} parameter} log-time-format log-time-format"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26006
msgid "Specifies the format of the date and time in the log files.  The value @code{standard} logs whole seconds while @code{usecs} logs microseconds."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26008
msgid "Defaults to @samp{standard}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26010
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-clients"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26013
msgid "Specifies the maximum number of simultaneous clients that are allowed by the scheduler."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26017
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-clients-per-host"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26020
msgid "Specifies the maximum number of simultaneous clients that are allowed from a single address."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26024
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-copies"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26027
msgid "Specifies the maximum number of copies that a user can print of each job."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26029
msgid "Defaults to @samp{9999}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26031
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-hold-time"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26035
msgid "Specifies the maximum time a job may remain in the @code{indefinite} hold state before it is canceled.  A value of 0 disables cancellation of held jobs."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26039
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-jobs"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26042
msgid "Specifies the maximum number of simultaneous jobs that are allowed.  Set to 0 to allow an unlimited number of jobs."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26044
msgid "Defaults to @samp{500}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26046
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-jobs-per-printer"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26049
msgid "Specifies the maximum number of simultaneous jobs that are allowed per printer.  A value of 0 allows up to @code{max-jobs} per printer."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26053
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-jobs-per-user"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26056
msgid "Specifies the maximum number of simultaneous jobs that are allowed per user.  A value of 0 allows up to @code{max-jobs} per user."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26060
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-job-time"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26063
msgid "Specifies the maximum time a job may take to print before it is canceled, in seconds.  Set to 0 to disable cancellation of ``stuck'' jobs."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26065
msgid "Defaults to @samp{10800}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26067
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-log-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26070
msgid "Specifies the maximum size of the log files before they are rotated, in bytes.  The value 0 disables log rotation."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26072
msgid "Defaults to @samp{1048576}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26074
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-subscriptions"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26077
msgid "Specifies the maximum number of simultaneous event subscriptions that are allowed.  Set to @samp{0} to allow an unlimited number of subscriptions."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26081
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-subscriptions-per-job"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26085
msgid "Specifies the maximum number of simultaneous event subscriptions that are allowed per job.  A value of @samp{0} allows up to @code{max-subscriptions} per job."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26089
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-subscriptions-per-printer"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26093
msgid "Specifies the maximum number of simultaneous event subscriptions that are allowed per printer.  A value of @samp{0} allows up to @code{max-subscriptions} per printer."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26097
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-subscriptions-per-user"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26101
msgid "Specifies the maximum number of simultaneous event subscriptions that are allowed per user.  A value of @samp{0} allows up to @code{max-subscriptions} per user."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26105
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer multiple-operation-timeout"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26108
msgid "Specifies the maximum amount of time to allow between files in a multiple file print job, in seconds."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26110 guix-git/doc/guix.texi:26285
msgid "Defaults to @samp{900}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26112
#, no-wrap
msgid "{@code{cups-configuration} parameter} environment-variables environment-variables"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26115
msgid "Passes the specified environment variable(s) to child processes; a list of strings."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26119
#, no-wrap
msgid "{@code{cups-configuration} parameter} policy-configuration-list policies"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26121
msgid "Specifies named access control policies."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26123
msgid "Available @code{policy-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26124
#, no-wrap
msgid "{@code{policy-configuration} parameter} string name"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26126
msgid "Name of the policy."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26128
#, no-wrap
msgid "{@code{policy-configuration} parameter} string job-private-access"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26138
msgid "Specifies an access list for a job's private values.  @code{@@ACL} maps to the printer's requesting-user-name-allowed or requesting-user-name-denied values.  @code{@@OWNER} maps to the job's owner.  @code{@@SYSTEM} maps to the groups listed for the @code{system-group} field of the @code{files-configuration}, which is reified into the @code{cups-files.conf(5)} file.  Other possible elements of the access list include specific user names, and @code{@@@var{group}} to indicate members of a specific group.  The access list may also be simply @code{all} or @code{default}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26140 guix-git/doc/guix.texi:26162
msgid "Defaults to @samp{\"@@OWNER @@SYSTEM\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26142
#, no-wrap
msgid "{@code{policy-configuration} parameter} string job-private-values"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26145 guix-git/doc/guix.texi:26167
msgid "Specifies the list of job values to make private, or @code{all}, @code{default}, or @code{none}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26148
msgid "Defaults to @samp{\"job-name job-originating-host-name job-originating-user-name phone\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26150
#, no-wrap
msgid "{@code{policy-configuration} parameter} string subscription-private-access"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26160
msgid "Specifies an access list for a subscription's private values.  @code{@@ACL} maps to the printer's requesting-user-name-allowed or requesting-user-name-denied values.  @code{@@OWNER} maps to the job's owner.  @code{@@SYSTEM} maps to the groups listed for the @code{system-group} field of the @code{files-configuration}, which is reified into the @code{cups-files.conf(5)} file.  Other possible elements of the access list include specific user names, and @code{@@@var{group}} to indicate members of a specific group.  The access list may also be simply @code{all} or @code{default}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26164
#, no-wrap
msgid "{@code{policy-configuration} parameter} string subscription-private-values"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26170
msgid "Defaults to @samp{\"notify-events notify-pull-method notify-recipient-uri notify-subscriber-user-name notify-user-data\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26172
#, no-wrap
msgid "{@code{policy-configuration} parameter} operation-access-control-list access-controls"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26174
msgid "Access control by IPP operation."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26179
#, no-wrap
msgid "{@code{cups-configuration} parameter} boolean-or-non-negative-integer preserve-job-files"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26184
msgid "Specifies whether job files (documents) are preserved after a job is printed.  If a numeric value is specified, job files are preserved for the indicated number of seconds after printing.  Otherwise a boolean value applies indefinitely."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26186
msgid "Defaults to @samp{86400}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26188
#, no-wrap
msgid "{@code{cups-configuration} parameter} boolean-or-non-negative-integer preserve-job-history"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26193
msgid "Specifies whether the job history is preserved after a job is printed.  If a numeric value is specified, the job history is preserved for the indicated number of seconds after printing.  If @code{#t}, the job history is preserved until the MaxJobs limit is reached."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26197
#, no-wrap
msgid "{@code{cups-configuration} parameter} comma-separated-string-list-or-#f ready-paper-sizes"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26201
msgid "Specifies a list of potential paper sizes that are reported as ready, that is: loaded.  The actual list will contain only the sizes that each printer supports."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26206
msgid "The default value of @code{#f} is a special case: CUPS will use @samp{(list \\\"Letter\\\" \\\"Legal\\\" \\\"Tabloid\\\" \\\"4x6\\\" \\\"Env10\\\")} if the default paper size is \\\"Letter\\\", and @samp{(list \\\"A3\\\" \\\"A4\\\" \\\"A5\\\" \\\"A6\\\" \\\"EnvDL\\\")} otherwise."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26208
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer reload-timeout"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26211
msgid "Specifies the amount of time to wait for job completion before restarting the scheduler."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26215
#, no-wrap
msgid "{@code{cups-configuration} parameter} string server-admin"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26217
msgid "Specifies the email address of the server administrator."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26219
msgid "Defaults to @samp{\"root@@localhost.localdomain\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26221
#, no-wrap
msgid "{@code{cups-configuration} parameter} host-name-list-or-* server-alias"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26229
msgid "The ServerAlias directive is used for HTTP Host header validation when clients connect to the scheduler from external interfaces.  Using the special name @code{*} can expose your system to known browser-based DNS rebinding attacks, even when accessing sites through a firewall.  If the auto-discovery of alternate names does not work, we recommend listing each alternate name with a ServerAlias directive instead of using @code{*}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26231
msgid "Defaults to @samp{*}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26233
#, no-wrap
msgid "{@code{cups-configuration} parameter} string server-name"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26235
msgid "Specifies the fully-qualified host name of the server."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26237
msgid "Defaults to @samp{\"localhost\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26239
#, no-wrap
msgid "{@code{cups-configuration} parameter} server-tokens server-tokens"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26247
msgid "Specifies what information is included in the Server header of HTTP responses.  @code{None} disables the Server header.  @code{ProductOnly} reports @code{CUPS}.  @code{Major} reports @code{CUPS 2}.  @code{Minor} reports @code{CUPS 2.0}.  @code{Minimal} reports @code{CUPS 2.0.0}.  @code{OS} reports @code{CUPS 2.0.0 (@var{uname})} where @var{uname} is the output of the @code{uname} command.  @code{Full} reports @code{CUPS 2.0.0 (@var{uname}) IPP/2.0}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26249
msgid "Defaults to @samp{Minimal}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26251
#, no-wrap
msgid "{@code{cups-configuration} parameter} multiline-string-list ssl-listen"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26256
msgid "Listens on the specified interfaces for encrypted connections.  Valid values are of the form @var{address}:@var{port}, where @var{address} is either an IPv6 address enclosed in brackets, an IPv4 address, or @code{*} to indicate all addresses."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26260
#, no-wrap
msgid "{@code{cups-configuration} parameter} ssl-options ssl-options"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26270
msgid "Sets encryption options.  By default, CUPS only supports encryption using TLS v1.0 or higher using known secure cipher suites.  Security is reduced when @code{Allow} options are used, and enhanced when @code{Deny} options are used.  The @code{AllowRC4} option enables the 128-bit RC4 cipher suites, which are required for some older clients.  The @code{AllowSSL3} option enables SSL v3.0, which is required for some older clients that do not support TLS v1.0.  The @code{DenyCBC} option disables all CBC cipher suites.  The @code{DenyTLS1.0} option disables TLS v1.0 support - this sets the minimum protocol version to TLS v1.1."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26274
#, no-wrap
msgid "{@code{cups-configuration} parameter} boolean strict-conformance?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26277
msgid "Specifies whether the scheduler requires clients to strictly adhere to the IPP specifications."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26281
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer timeout"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26283
msgid "Specifies the HTTP request timeout, in seconds."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26288
#, no-wrap
msgid "{@code{cups-configuration} parameter} boolean web-interface?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26290
msgid "Specifies whether the web interface is enabled."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26300
msgid "At this point you're probably thinking ``oh dear, Guix manual, I like you but you can stop already with the configuration options''.  Indeed.  However, one more point: it could be that you have an existing @code{cupsd.conf} that you want to use.  In that case, you can pass an @code{opaque-cups-configuration} as the configuration of a @code{cups-service-type}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26302
msgid "Available @code{opaque-cups-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26303
#, no-wrap
msgid "{@code{opaque-cups-configuration} parameter} package cups"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26307
#, no-wrap
msgid "{@code{opaque-cups-configuration} parameter} string cupsd.conf"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26309
msgid "The contents of the @code{cupsd.conf}, as a string."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26311
#, no-wrap
msgid "{@code{opaque-cups-configuration} parameter} string cups-files.conf"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26313
msgid "The contents of the @code{cups-files.conf} file, as a string."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26318
msgid "For example, if your @code{cupsd.conf} and @code{cups-files.conf} are in strings of the same name, you could instantiate a CUPS service like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:26324
#, no-wrap
msgid ""
"(service cups-service-type\n"
"         (opaque-cups-configuration\n"
"           (cupsd.conf cupsd.conf)\n"
"           (cups-files.conf cups-files.conf)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26335
msgid "The @code{(gnu services desktop)} module provides services that are usually useful in the context of a ``desktop'' setup---that is, on a machine running a graphical display server, possibly with graphical user interfaces, etc.  It also defines services that provide specific desktop environments like GNOME, Xfce or MATE."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26339
msgid "To simplify things, the module defines a variable containing the set of services that users typically expect on a machine with a graphical environment and networking:"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26340
#, fuzzy, no-wrap
#| msgid "Services"
msgid "%desktop-services"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:26343
msgid "This is a list of services that builds upon @code{%base-services} and adds or adjusts services for a typical ``desktop'' setup."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26352
msgid "In particular, it adds a graphical login manager (@pxref{X Window, @code{gdm-service-type}}), screen lockers, a network management tool (@pxref{Networking Services, @code{network-manager-service-type}}) with modem support (@pxref{Networking Services, @code{modem-manager-service-type}}), energy and color management services, the @code{elogind} login and seat manager, the Polkit privilege service, the GeoClue location service, the AccountsService daemon that allows authorized users change system passwords, a NTP client (@pxref{Networking Services}) and the Avahi daemon."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26357
msgid "The @code{%desktop-services} variable can be used as the @code{services} field of an @code{operating-system} declaration (@pxref{operating-system Reference, @code{services}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26360
msgid "Additionally, the following procedures add one (or more!) desktop environments to a system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26362
#, fuzzy, no-wrap
#| msgid "Services"
msgid "@code{gnome-desktop-service-type} adds GNOME,"
msgstr "Servizi"

#. type: item
#: guix-git/doc/guix.texi:26363
#, fuzzy, no-wrap
#| msgid "Services"
msgid "@code{plasma-desktop-service-type} adds KDE Plasma,"
msgstr "Servizi"

#. type: item
#: guix-git/doc/guix.texi:26364
#, no-wrap
msgid "@code{enlightenment-desktop-service-type} adds Enlightenment,"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26365
#, fuzzy, no-wrap
#| msgid "Services"
msgid "@code{lxqt-desktop-service-type} adds LXQt,"
msgstr "Servizi"

#. type: item
#: guix-git/doc/guix.texi:26366
#, fuzzy, no-wrap
#| msgid "Services"
msgid "@code{mate-desktop-service-type} adds MATE, and"
msgstr "Servizi"

#. type: item
#: guix-git/doc/guix.texi:26367
#, fuzzy, no-wrap
#| msgid "Services"
msgid "@code{xfce-desktop-service-type} adds Xfce."
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:26373
msgid "These service types add ``metapackages'' such as @code{gnome} or @code{plasma} to the system profile, but most of them also set up other useful services that mere packages can't do."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26378
msgid "For example, they may elevate privileges on a limited number of special-purpose system interfaces and programs.  This allows backlight adjustment helpers, power management utilities, screen lockers, and other integrated functionality to work as expected."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26388
msgid "The desktop environments in Guix use the Xorg display server by default.  If you'd like to use the newer display server protocol called Wayland, you need to enable Wayland support in GDM (@pxref{wayland-gdm}).  Another solution is to use the @code{sddm-service} instead of GDM as the graphical login manager.  You should then select the ``GNOME (Wayland)'' session in SDDM@.  Alternatively you can also try starting GNOME on Wayland manually from a TTY with the command ``XDG_SESSION_TYPE=wayland exec dbus-run-session gnome-session``.  Currently only GNOME has support for Wayland."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26389
#, no-wrap
msgid "gnome-desktop-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26393
msgid "This is the type of the service that adds the @uref{https://www.gnome.org, GNOME} desktop environment.  Its value is a @code{gnome-desktop-configuration} object (see below)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26396
msgid "This service adds the @code{gnome} package to the system profile, and extends polkit with the actions from @code{gnome-settings-daemon}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26398
#, no-wrap
msgid "{Data Type} gnome-desktop-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26401
msgid "Configuration record for the GNOME desktop environment.  Available @code{gnome-desktop-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26403
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{core-services} (type: list-of-packages)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26405
msgid "A list of packages that the GNOME Shell and applications may rely on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26406
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{shell} (type: list-of-packages)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26409
msgid "A list of packages that constitute the GNOME Shell, without applications."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26410
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{utilities} (type: list-of-packages)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26412
msgid "A list of packages that serve as applications to use on top of the GNOME Shell."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26413
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{gnome} (type: maybe-package)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26418
msgid "This field used to be the only configuration point and specified a GNOME meta-package to install system-wide.  Since the meta-package itself provides neither sources nor the actual packages and is only used to propagate them, this field is deprecated."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26419
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{extra-packages} (type: list-of-packages)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26424
msgid "A list of GNOME-adjacent packages to also include.  This field is intended for users to add their own packages to their GNOME experience.  Note, that it already includes some packages that are considered essential by some (most?) GNOME users."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26425
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{udev-ignorelist} (default: @code{()}) (type: list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26430
msgid "A list of regular expressions denoting udev rules or hardware file names provided by any package that should not be installed.  By default, every udev rule and hardware file specified by any package referenced in the other fields are installed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26431
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{polkit-ignorelist} (default: @code{()}) (type: list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26435
msgid "A list of regular expressions denoting polkit rules provided by any package that should not be installed.  By default, every polkit rule added by any package referenced in the other fields are installed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26436
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{keyring} (type: gnome-keyring-configuration-or-#f)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26441
msgid "A <gnome-keyring-configuration> record used to better integrate the GNOME keyring with the system.  Refer to the documentation of the @code{gnome-keyring-service-type} for more information.  If you'd rather avoid integrating the GNOME keyring, you can set this to @code{#f}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26445
#, fuzzy, no-wrap
#| msgid "Services"
msgid "plasma-desktop-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:26449
msgid "This is the type of the service that adds the @uref{https://kde.org/plasma-desktop/, Plasma} desktop environment.  Its value is a @code{plasma-desktop-configuration} object (see below)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26451
msgid "This service adds the @code{plasma} package to the system profile."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26453
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} plasma-desktop-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:26455
msgid "Configuration record for the Plasma desktop environment."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26457
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{plasma} (default: @code{plasma})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26459
msgid "The Plasma package to use."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26462
#, no-wrap
msgid "xfce-desktop-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26466
msgid "This is the type of a service to run the @uref{Xfce, https://xfce.org/} desktop environment.  Its value is an @code{xfce-desktop-configuration} object (see below)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26471
msgid "This service adds the @code{xfce} package to the system profile, and extends polkit with the ability for @code{thunar} to manipulate the file system as root from within a user session, after the user has authenticated with the administrator's password."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26477
msgid "Note that @code{xfce4-panel} and its plugin packages should be installed in the same profile to ensure compatibility.  When using this service, you should add extra plugins (@code{xfce4-whiskermenu-plugin}, @code{xfce4-weather-plugin}, etc.) to the @code{packages} field of your @code{operating-system}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26479
#, no-wrap
msgid "{Data Type} xfce-desktop-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26481
msgid "Configuration record for the Xfce desktop environment."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26483
#, no-wrap
msgid "@code{xfce} (default: @code{xfce})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26485
msgid "The Xfce package to use."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26488
#, no-wrap
msgid "mate-desktop-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26492
msgid "This is the type of the service that runs the @uref{https://mate-desktop.org/, MATE desktop environment}.  Its value is a @code{mate-desktop-configuration} object (see below)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26496
msgid "This service adds the @code{mate} package to the system profile, and extends polkit with the actions from @code{mate-settings-daemon}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26498
#, no-wrap
msgid "{Data Type} mate-desktop-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26500
msgid "Configuration record for the MATE desktop environment."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26502
#, no-wrap
msgid "@code{mate} (default: @code{mate})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26504
msgid "The MATE package to use."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26507
#, no-wrap
msgid "lxqt-desktop-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26511
msgid "This is the type of the service that runs the @uref{https://lxqt-project.org, LXQt desktop environment}.  Its value is a @code{lxqt-desktop-configuration} object (see below)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26514
msgid "This service adds the @code{lxqt} package to the system profile."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26516
#, no-wrap
msgid "{Data Type} lxqt-desktop-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26518
msgid "Configuration record for the LXQt desktop environment."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26520
#, no-wrap
msgid "@code{lxqt} (default: @code{lxqt})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26522
msgid "The LXQT package to use."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26525
#, fuzzy, no-wrap
#| msgid "Services"
msgid "sugar-desktop-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:26529
msgid "This is the type of the service that runs the @uref{https://www.sugarlabs.org, Sugar desktop environment}.  Its value is a @code{sugar-desktop-configuration} object (see below)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26533
msgid "This service adds the @code{sugar} package to the system profile, as well as any selected Sugar activities.  By default it only includes a minimal set of activities."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26535
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} sugar-desktop-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:26537
msgid "Configuration record for the Sugar desktop environment."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26539
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{sugar} (default: @code{sugar})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26541
msgid "The Sugar package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26541
#, no-wrap
msgid "@code{gobject-introspection} (default: @code{gobject-introspection})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26544
msgid "The @code{gobject-introspection} package to use.  This package is used to access libraries installed as dependencies of Sugar activities."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26544
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{activities} (default: @code{(list sugar-help-activity)})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26546
msgid "A list of Sugar activities to install."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26551
msgid "The following example configures the Sugar desktop environment with a number of useful activities:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:26566
#, no-wrap
msgid ""
"(use-modules (gnu))\n"
"(use-package-modules sugar)\n"
"(use-service-modules desktop)\n"
"(operating-system\n"
"  ...\n"
"  (services (cons* (service sugar-desktop-service-type\n"
"                            (sugar-desktop-configuration\n"
"                              (activities (list sugar-browse-activity\n"
"                                                sugar-help-activity\n"
"                                                sugar-jukebox-activity\n"
"                                                sugar-typing-turtle-activity))))\n"
"                   %desktop-services))\n"
"  ...)\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26568
#, no-wrap
msgid "enlightenment-desktop-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26571
msgid "Return a service that adds the @code{enlightenment} package to the system profile, and extends dbus with actions from @code{efl}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26573
#, no-wrap
msgid "{Data Type} enlightenment-desktop-service-configuration"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26575
#, no-wrap
msgid "@code{enlightenment} (default: @code{enlightenment})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26577
msgid "The enlightenment package to use."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26585
msgid "Because the GNOME, Xfce and MATE desktop services pull in so many packages, the default @code{%desktop-services} variable doesn't include any of them by default.  To add GNOME, Xfce or MATE, just @code{cons} them onto @code{%desktop-services} in the @code{services} field of your @code{operating-system}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:26596
#, no-wrap
msgid ""
"(use-modules (gnu))\n"
"(use-service-modules desktop)\n"
"(operating-system\n"
"  ...\n"
"  ;; cons* adds items to the list given as its last argument.\n"
"  (services (cons* (service gnome-desktop-service-type)\n"
"                   (service xfce-desktop-service-type)\n"
"                   %desktop-services))\n"
"  ...)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26600
msgid "These desktop environments will then be available as options in the graphical login window."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26604
msgid "The actual service definitions included in @code{%desktop-services} and provided by @code{(gnu services dbus)} and @code{(gnu services desktop)} are described below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26605
#, fuzzy, no-wrap
#| msgid "Services"
msgid "dbus-root-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:26610
msgid "Type for a service that runs the D-Bus ``system bus''.  @footnote{@uref{https://dbus.freedesktop.org/, D-Bus} is an inter-process communication facility.  Its system bus is used to allow system services to communicate and to be notified of system-wide events.}"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26612
msgid "The value for this service type is a @code{<dbus-configuration>} record."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26614
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} dbus-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:26616
msgid "Data type representing the configuration for @code{dbus-root-service-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26618
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{dbus} (default: @code{dbus}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26620
msgid "Package object for dbus."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26621
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{services} (default: @code{'()}) (type: list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26626
msgid "List of packages that provide an @file{etc/dbus-1/system.d} directory containing additional D-Bus configuration and policy files.  For example, to allow avahi-daemon to use the system bus, @var{services} must be equal to @code{(list avahi)}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26627 guix-git/doc/guix.texi:44872
#: guix-git/doc/guix.texi:45967 guix-git/doc/guix.texi:51134
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{verbose?} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26633
msgid "When @code{#t}, D-Bus is launched with environment variable @samp{DBUS_VERBOSE} set to @samp{1}.  A verbose-enabled D-Bus package such as @code{dbus-verbose} should be provided to @var{dbus} in this scenario. The verbose output is logged to @file{/var/log/dbus-daemon.log}."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:26637
#, no-wrap
msgid "Elogind"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26643
msgid "@uref{https://github.com/elogind/elogind, Elogind} is a login and seat management daemon that also handles most system-level power events for a computer, for example suspending the system when a lid is closed, or shutting it down when the power button is pressed."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26647
msgid "It also provides a D-Bus interface that can be used to know which users are logged in, know what kind of sessions they have open, suspend the system, inhibit system suspend, reboot the system, and other tasks."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26648
#, fuzzy, no-wrap
#| msgid "Services"
msgid "elogind-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:26652
msgid "Type of the service that runs @command{elogind}, a login and seat management daemon.  The value for this service is a @code{<elogind-configuration>} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26657
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} elogind-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:26659
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{elogind-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:26661
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{elogind} (default: @code{elogind}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26663
#, fuzzy
#| msgid "Updating the Guix package definition."
msgid "The elogind package to use."
msgstr "Aggiornamento della definizione del pacchetto Guix."

#. type: item
#: guix-git/doc/guix.texi:26664
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{system-sleep-hook-files} (default: @code{()}) (type: list-of-file-likes)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26668
msgid "A list of executables (file-like objects) that will be installed into the @file{/etc/elogind/system-sleep} hook directory.  See `Hook directories' in the @samp{loginctl(1)} man page for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26669
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{system-shutdown-hook-files} (default: @code{()}) (type: list-of-file-likes)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26672
msgid "A list of executables (file-like objects) that will be installed into the @file{/etc/elogind/system-shutdown/} hook directory."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26673
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{allow-power-off-interrupts?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26677
msgid "Whether the executables in elogind's hook directories (see above) can cause a power-off action to be cancelled (interrupted) by printing an appropriate error message to stdout."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26678
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{allow-suspend-interrupts?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26681
msgid "Likewise as the @code{allow-power-off-interrupts?} option, but for the suspend action."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26682
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{broadcast-power-off-interrupts?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26684
msgid "Whether an interrupt of a power-off action is broadcasted."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26685
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{broadcast-suspend-interrupts?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26687
msgid "Whether an interrupt of a suspend action is broadcasted."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26688
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{kill-user-processes?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26690
msgid "Whether the processes of a user should be killed when the user logs out."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26691
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{kill-only-users} (type: maybe-list-of-user-names)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26694
msgid "Usernames whose processes should be killed, regardless the value of @code{kill-user-processes?}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26695
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{kill-exclude-users} (default: @code{(\"root\")}) (type: maybe-list-of-user-names)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26698
msgid "Usernames whose processes should @emph{not} be killed, regardless the value of @code{kill-user-processes?}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26699
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{inhibit-delay-max-seconds} (default: @code{5}) (type: maybe-non-negative-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26703
msgid "The maximum time a system shutdown or sleep request is delayed due to an inhibitor lock of type delay being active before the inhibitor is ignored and the operation executes anyway."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26704
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{handle-power-key} (default: @code{poweroff}) (type: maybe-action)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26707
msgid "The action done when the power key is pressed.  The compiled default is @code{'poweroff}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26708
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{handle-suspend-key} (default: @code{suspend}) (type: maybe-action)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26710
msgid "The action done when the suspend key is pressed.  The"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26711
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{handle-hibernate-key} (default: @code{hibernate}) (type: maybe-action)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26713
msgid "The action done when the hibernate key is pressed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26714
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{handle-lid-switch} (default: @code{suspend}) (type: maybe-action)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26716
msgid "The action done when the lid is closed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26717
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{handle-lid-switch-docked} (default: @code{ignore}) (type: maybe-action)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26719
msgid "The action done when the lid is closed and the device docked."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26720
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{handle-lid-switch-external-power} (default: @code{suspend}) (type: maybe-action)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26723
msgid "The action done when the lid is closed and the device is externally powered."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26724
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{power-key-ignore-inhibited?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26727
msgid "Whether to ignore high-level inhibitor locks (shutdown, reboot, sleep or idle) when the power key is pressed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26728
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{suspend-key-ignore-inhibited?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26731
msgid "Whether to ignore high-level inhibitor locks (shutdown, reboot, sleep or idle) when the suspend key is pressed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26732
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{hibernate-key-ignore-inhibited?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26735
msgid "Whether to ignore high-level inhibitor locks (shutdown, reboot, sleep or idle) when the hibernate key is pressed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26736
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{lid-switch-ignore-inhibited?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26739
msgid "Whether to ignore high-level inhibitor locks (shutdown, reboot, sleep or idle) when the lid is closed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26740
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{holdoff-timeout-seconds} (default: @code{30}) (type: maybe-non-negative-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26743
msgid "Specifies the number of seconds after system startup or system resume during which elogind will hold off on reacting to lid events."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26744
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{idle-action} (default: @code{ignore}) (type: maybe-action)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26746
msgid "Action to take when the system is idle."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26747
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{idle-action-seconds} (type: maybe-non-negative-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26750
msgid "The delay after which the action configured in @code{idle-action} is taken after the system is idle."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26751
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{runtime-directory-size-percent} (type: maybe-percent)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26757
msgid "Set the size limit, in percent, on the @env{XDG_RUNTIME_DIR} runtime directory for each user who logs in.  This specifies the per-user size limit relative to the amount of physical @acronym{RAM,read access memory}.  This value takes precedence over that specified via @code{runtime-directory-size}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26758
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{runtime-directory-size} (type: maybe-non-negative-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26761
msgid "Set the size limit, in bytes, on the @env{XDG_RUNTIME_DIR} runtime directory for each user who logs in."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26762
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{remove-ipc?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26765
msgid "Whether @acronym{IPC,inter-process communication} objects belonging to the user shall be removed when the user fully logs out."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26766
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{suspend-state} (default: @code{(mem standby freeze)}) (type: maybe-list-of-suspend-states)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26770
msgid "The suspend state values to be write to @file{/sys/power/state} by elogind when suspending the system.  They will be tried in turn, until one is written without error."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26771
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{suspend-mode} (type: maybe-list-of-suspend-modes)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26774
msgid "The suspend mode values to write to @file{/sys/power/mem_sleep} by elogind when suspending the system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26775
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{suspend-estimation-seconds} (default: @code{3600}) (type: maybe-non-negative-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26781
msgid "Cause the RTC alarm to wake the system after the specified time span to measure the system battery capacity level and estimate the battery discharging rate, which is used for estimating the time span until the system battery charge level goes down to 5%.  This option is only used by elogind when using the @code{'suspend-then-hibernate} action."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26782
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{hibernate-mode} (default: @code{(platform shutdown)}) (type: maybe-list-of-hibernation-modes)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26785
msgid "The hibernation mode values to write to @file{/sys/power/disk} by elogind when hibernating the system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26786
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{hibernate-delay-seconds} (type: maybe-non-negative-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26789
msgid "The amount of time the system spends in suspend mode before the system is automatically put into hibernate mode."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26790
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{hibernate-state} (type: maybe-list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26792 guix-git/doc/guix.texi:26795
#: guix-git/doc/guix.texi:26798
msgid "Deprecated option."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26793
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{hybrid-sleep-state} (type: maybe-list-of-strings)"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:26796
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{hybrid-sleep-mode} (type: maybe-list-of-strings)"
msgstr "Documentazione"

#. type: defvar
#: guix-git/doc/guix.texi:26806
#, fuzzy, no-wrap
#| msgid "Services"
msgid "accountsservice-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:26813
msgid "Type for the service that runs AccountsService, a system service that can list available accounts, change their passwords, and so on.  AccountsService integrates with PolicyKit to enable unprivileged users to acquire the capability to modify their system configuration.  See @url{https://www.freedesktop.org/wiki/Software/AccountsService/, AccountsService} for more information."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26816
msgid "The value for this service is a file-like object, by default it is set to @code{accountsservice} (the package object for AccountsService)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26818
#, fuzzy, no-wrap
#| msgid "Services"
msgid "polkit-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:26826
msgid "Type for the service that runs the @url{https://www.freedesktop.org/wiki/Software/polkit/, Polkit privilege management service}, which allows system administrators to grant access to privileged operations in a structured way.  By querying the Polkit service, a privileged system component can know when it should grant additional capabilities to ordinary users.  For example, an ordinary user can be granted the capability to suspend the system if the user is logged in locally."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26828
msgid "The value for this service is a @code{<polkit-configuration>} object."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26833
#, no-wrap
msgid "polkit-wheel-service"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26838
msgid "Service that adds the @code{wheel} group as admins to the Polkit service.  This makes it so that users in the @code{wheel} group are queried for their own passwords when performing administrative actions instead of @code{root}'s, similar to the behaviour used by @code{sudo}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26840
#, no-wrap
msgid "upower-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26844
msgid "Service that runs @uref{https://upower.freedesktop.org/, @command{upowerd}}, a system-wide monitor for power consumption and battery levels, with the given configuration settings."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26847
msgid "It implements the @code{org.freedesktop.UPower} D-Bus interface, and is notably used by GNOME."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26849
#, no-wrap
msgid "{Data Type} upower-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26851
msgid "Data type representation the configuration for UPower."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26854
#, no-wrap
msgid "@code{upower} (default: @var{upower})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26856
msgid "Package to use for @code{upower}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26857
#, no-wrap
msgid "@code{watts-up-pro?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26859
msgid "Enable the Watts Up Pro device."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26860
#, no-wrap
msgid "@code{poll-batteries?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26862
msgid "Enable polling the kernel for battery level changes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26863
#, no-wrap
msgid "@code{ignore-lid?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26865
msgid "Ignore the lid state, this can be useful if it's incorrect on a device."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26866
#, no-wrap
msgid "@code{use-percentage-for-policy?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26870
msgid "Whether to use a policy based on battery percentage rather than on estimated time left.  A policy based on battery percentage is usually more reliable."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26871
#, no-wrap
msgid "@code{percentage-low} (default: @code{20})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26874
msgid "When @code{use-percentage-for-policy?} is @code{#t}, this sets the percentage at which the battery is considered low."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26875
#, no-wrap
msgid "@code{percentage-critical} (default: @code{5})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26878
msgid "When @code{use-percentage-for-policy?} is @code{#t}, this sets the percentage at which the battery is considered critical."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26879
#, no-wrap
msgid "@code{percentage-action} (default: @code{2})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26882
msgid "When @code{use-percentage-for-policy?} is @code{#t}, this sets the percentage at which action will be taken."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26883
#, no-wrap
msgid "@code{time-low} (default: @code{1200})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26886
msgid "When @code{use-time-for-policy?} is @code{#f}, this sets the time remaining in seconds at which the battery is considered low."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26887
#, no-wrap
msgid "@code{time-critical} (default: @code{300})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26890
msgid "When @code{use-time-for-policy?} is @code{#f}, this sets the time remaining in seconds at which the battery is considered critical."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26891
#, no-wrap
msgid "@code{time-action} (default: @code{120})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26894
msgid "When @code{use-time-for-policy?} is @code{#f}, this sets the time remaining in seconds at which action will be taken."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26895
#, no-wrap
msgid "@code{critical-power-action} (default: @code{'hybrid-sleep})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26898
msgid "The action taken when @code{percentage-action} or @code{time-action} is reached (depending on the configuration of @code{use-percentage-for-policy?})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26900 guix-git/doc/guix.texi:27086
#: guix-git/doc/guix.texi:27118 guix-git/doc/guix.texi:27138
#: guix-git/doc/guix.texi:27359 guix-git/doc/guix.texi:27377
#: guix-git/doc/guix.texi:27408 guix-git/doc/guix.texi:27421
#: guix-git/doc/guix.texi:27471
msgid "Possible values are:"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:26904
msgid "'power-off"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:26907
msgid "'hibernate"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:26910
msgid "@code{'hybrid-sleep}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26915
#, fuzzy, no-wrap
#| msgid "Services"
msgid "udisks-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:26926
msgid "Type for the service that runs @uref{https://udisks.freedesktop.org/docs/latest/, UDisks}, a @dfn{disk management} daemon that provides user interfaces with notifications and ways to mount/unmount disks.  Programs that talk to UDisks include the @command{udisksctl} command, part of UDisks, and GNOME Disks.  Note that Udisks relies on the @command{mount} command, so it will only be able to use the file-system utilities installed in the system profile.  For example if you want to be able to mount NTFS file-systems in read and write fashion, you'll need to have @code{ntfs-3g} installed system-wide."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26928
msgid "The value for this service is a @code{<udisks-configuration>} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26930
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} udisks-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:26932
msgid "Data type representing the configuration for @code{udisks-service-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26934
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{udisks} (default: @code{udisks}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26936
msgid "Package object for UDisks."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26940
#, fuzzy, no-wrap
#| msgid "Services"
msgid "gvfs-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:26945
msgid "Type for the service that provides virtual file systems for GIO applications, which enables support for @code{trash://}, @code{ftp://}, @code{sftp://} and many other location schemas in file managers like Nautilus (GNOME Files) and Thunar."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26947
msgid "The value for this service is a @code{<gvfs-configuration>} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26949
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} gvfs-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:26951
#, fuzzy
#| msgid "Documentation"
msgid "Data type representing the configuration for @code{gvfs-service-type}."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:26953
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{gvfs} (default: @code{gvfs}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:26955
msgid "Package object for GVfs."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26959
#, no-wrap
msgid "colord-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26966
msgid "This is the type of the service that runs @command{colord}, a system service with a D-Bus interface to manage the color profiles of input and output devices such as screens and scanners.  It is notably used by the GNOME Color Manager graphical tool.  See @uref{https://www.freedesktop.org/software/colord/, the colord web site} for more information."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:26968
#, no-wrap
msgid "scanner access"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26969
#, no-wrap
msgid "sane-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26975
msgid "This service provides access to scanners @i{via} @uref{http://www.sane-project.org, SANE} by installing the necessary udev rules.  It is included in @code{%desktop-services} (@pxref{Desktop Services}) and relies by default on @code{sane-backends-minimal} package (see below) for hardware support."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26977
#, no-wrap
msgid "sane-backends-minimal"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26980
msgid "The default package which the @code{sane-service-type} installs.  It supports many recent scanners."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26982
#, no-wrap
msgid "sane-backends"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26989
msgid "This package includes support for all scanners that @code{sane-backends-minimal} supports, plus older Hewlett-Packard scanners supported by @code{hplip} package.  In order to use this on a system which relies on @code{%desktop-services}, you may use @code{modify-services} (@pxref{Service Reference, @code{modify-services}}) as illustrated below:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:26998
#, no-wrap
msgid ""
"(use-modules (gnu))\n"
"(use-service-modules\n"
"  @dots{}\n"
"  desktop)\n"
"(use-package-modules\n"
"  @dots{}\n"
"  scanner)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27003
#, no-wrap
msgid ""
"(define %my-desktop-services\n"
"  ;; List of desktop services that supports a broader range of scanners.\n"
"  (modify-services %desktop-services\n"
"    (sane-service-type _ => sane-backends)))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27007
#, no-wrap
msgid ""
"(operating-system\n"
"  @dots{}\n"
"  (services %my-desktop-services))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:27010
#, no-wrap
msgid "{Procedure} geoclue-application name [#:allowed? #t] [#:system? #f] [#:users '()]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:27019
msgid "Return a configuration allowing an application to access GeoClue location data.  @var{name} is the Desktop ID of the application, without the @code{.desktop} part.  If @var{allowed?} is true, the application will have access to location information by default.  The boolean @var{system?} value indicates whether an application is a system component or not.  Finally @var{users} is a list of UIDs of all users for which this application is allowed location info access.  An empty users list means that all users are allowed."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27021
#, no-wrap
msgid "%standard-geoclue-applications"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27028
msgid "The standard list of well-known GeoClue application configurations, granting authority to the GNOME date-and-time utility to ask for the current location in order to set the time zone, and allowing the IceCat and Epiphany web browsers to request location information.  IceCat and Epiphany both query the user before allowing a web page to know the user's location."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27030
#, fuzzy, no-wrap
#| msgid "Services"
msgid "geoclue-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:27036
msgid "Type for the service that runs the @url{https://wiki.freedesktop.org/www/Software/GeoClue/, GeoClue} location service.  This service provides a D-Bus interface to allow applications to request access to a user's physical location, and optionally to add information to online location databases."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27038
msgid "The value for this service is a @code{<geoclue-configuration>} object."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27043
#, no-wrap
msgid "bluetooth-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27048
msgid "This is the type for the @uref{https://bluez.org/, Linux Bluetooth Protocol Stack} (BlueZ) system, which generates the @file{/etc/bluetooth/main.conf} configuration file.  The value for this type is a @command{bluetooth-configuration} record as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27051
#, no-wrap
msgid "(service bluetooth-service-type)\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27054
msgid "See below for details about @code{bluetooth-configuration}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27056
#, no-wrap
msgid "{Data Type} bluetooth-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27058
msgid "Data type representing the configuration for @code{bluetooth-service}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27060
#, no-wrap
msgid "@code{bluez} (default: @code{bluez})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27062
msgid "@code{bluez} package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27063
#, no-wrap
msgid "@code{name} (default: @code{\"BlueZ\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27065
msgid "Default adapter name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27066
#, no-wrap
msgid "@code{class} (default: @code{#x000000})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27068
msgid "Default device class. Only the major and minor device class bits are considered."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27069
#, no-wrap
msgid "@code{discoverable-timeout} (default: @code{180})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27072
msgid "How long to stay in discoverable mode before going back to non-discoverable. The value is in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27073
#, no-wrap
msgid "@code{always-pairable?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27075
msgid "Always allow pairing even if there are no agents registered."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27076
#, no-wrap
msgid "@code{pairable-timeout} (default: @code{0})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27079
msgid "How long to stay in pairable mode before going back to non-discoverable. The value is in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27080
#, no-wrap
msgid "@code{device-id} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27084
msgid "Use vendor id source (assigner), vendor, product and version information for DID profile support. The values are separated by \":\" and @var{assigner}, @var{VID}, @var{PID} and @var{version}."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27090
msgid "@code{#f} to disable it,"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27094
msgid "@code{\"assigner:1234:5678:abcd\"}, where @var{assigner} is either @code{usb} (default)  or @code{bluetooth}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27097
#, no-wrap
msgid "@code{reverse-service-discovery?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27103
msgid "Do reverse service discovery for previously unknown devices that connect to us. For BR/EDR this option is really only needed for qualification since the BITE tester doesn't like us doing reverse SDP for some test cases, for LE this disables the GATT client functionally so it can be used in system which can only operate as peripheral."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27104
#, no-wrap
msgid "@code{name-resolving?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27107
msgid "Enable name resolving after inquiry. Set it to @code{#f} if you don't need remote devices name and want shorter discovery cycle."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27108
#, no-wrap
msgid "@code{debug-keys?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27112
msgid "Enable runtime persistency of debug link keys. Default is false which makes debug link keys valid only for the duration of the connection that they were created for."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27113
#, no-wrap
msgid "@code{controller-mode} (default: @code{'dual})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27116
msgid "Restricts all controllers to the specified transport. @code{'dual} means both BR/EDR and LE are enabled (if supported by the hardware)."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27122
msgid "'dual"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27125
msgid "'bredr"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27128
msgid "'le"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27131
#, no-wrap
msgid "@code{multi-profile} (default: @code{'off})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27136
msgid "Enables Multi Profile Specification support. This allows to specify if system supports only Multiple Profiles Single Device (MPSD) configuration or both Multiple Profiles Single Device (MPSD) and Multiple Profiles Multiple Devices (MPMD) configurations."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27142
msgid "'off"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27145
msgid "'single"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27148
msgid "'multiple"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27151
#, no-wrap
msgid "@code{fast-connectable?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27156
msgid "Permanently enables the Fast Connectable setting for adapters that support it. When enabled other devices can connect faster to us, however the tradeoff is increased power consumptions. This feature will fully work only on kernel version 4.1 and newer."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27157
#, no-wrap
msgid "@code{privacy} (default: @code{'off})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27159
msgid "Default privacy settings."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27163
msgid "@code{'off}: Disable local privacy"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27168
msgid "@code{'network/on}: A device will only accept advertising packets from peer devices that contain private addresses. It may not be compatible with some legacy devices since it requires the use of RPA(s) all the time"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27174
msgid "@code{'device}: A device in device privacy mode is only concerned about the privacy of the device and will accept advertising packets from peer devices that contain their Identity Address as well as ones that contain a private address, even if the peer device has distributed its IRK in the past"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27178
msgid "and additionally, if @var{controller-mode} is set to @code{'dual}:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27184
msgid "@code{'limited-network}: Apply Limited Discoverable Mode to advertising, which follows the same policy as to BR/EDR that publishes the identity address when discoverable, and Network Privacy Mode for scanning"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27189
msgid "@code{'limited-device}: Apply Limited Discoverable Mode to advertising, which follows the same policy as to BR/EDR that publishes the identity address when discoverable, and Device Privacy Mode for scanning."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27192
#, no-wrap
msgid "@code{just-works-repairing} (default: @code{'never})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27194
msgid "Specify the policy to the JUST-WORKS repairing initiated by peer."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27196 guix-git/doc/guix.texi:27221
#: guix-git/doc/guix.texi:27438
msgid "Possible values:"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27199
msgid "'never"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27202
msgid "'confirm"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27205
msgid "'always"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27208
#, no-wrap
msgid "@code{temporary-timeout} (default: @code{30})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27211
msgid "How long to keep temporary devices around. The value is in seconds. @code{0} disables the timer completely."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27212
#, no-wrap
msgid "@code{refresh-discovery?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27215
msgid "Enables the device to issue an SDP request to update known services when profile is connected."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27216
#, no-wrap
msgid "@code{experimental} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27219
msgid "Enables experimental features and interfaces, alternatively a list of UUIDs can be given."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27225
msgid "#t"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27228
msgid "#f"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27231 guix-git/doc/guix.texi:27445
msgid "@code{(list (uuid <uuid-1>) (uuid <uuid-2>) ...)}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27234
msgid "List of possible UUIDs:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27237
msgid "@code{d4992530-b9ec-469f-ab01-6c481c47da1c}: BlueZ Experimental Debug,"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27240
msgid "@code{671b10b5-42c0-4696-9227-eb28d1b049d6}: BlueZ Experimental Simultaneous Central and Peripheral,"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27243
msgid "@code{15c0a148-c273-11ea-b3de-0242ac130004}: BlueZ Experimental LL privacy,"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27246
msgid "@code{330859bc-7506-492d-9370-9a6f0614037f}: BlueZ Experimental Bluetooth Quality Report,"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27249
msgid "@code{a6695ace-ee7f-4fb9-881a-5fac66c629af}: BlueZ Experimental Offload Codecs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27251
#, no-wrap
msgid "@code{remote-name-request-retry-delay} (default: @code{300})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27254
msgid "The duration to avoid retrying to resolve a peer's name, if the previous try failed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27255
#, no-wrap
msgid "@code{page-scan-type} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27257
msgid "BR/EDR Page scan activity type."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27258
#, no-wrap
msgid "@code{page-scan-interval} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27260
msgid "BR/EDR Page scan activity interval."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27261
#, no-wrap
msgid "@code{page-scan-window} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27263
msgid "BR/EDR Page scan activity window."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27264
#, no-wrap
msgid "@code{inquiry-scan-type} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27266
msgid "BR/EDR Inquiry scan activity type."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27267
#, no-wrap
msgid "@code{inquiry-scan-interval} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27269
msgid "BR/EDR Inquiry scan activity interval."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27270
#, no-wrap
msgid "@code{inquiry-scan-window} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27272
msgid "BR/EDR Inquiry scan activity window."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27273
#, no-wrap
msgid "@code{link-supervision-timeout} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27275
msgid "BR/EDR Link supervision timeout."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27276
#, no-wrap
msgid "@code{page-timeout} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27278
msgid "BR/EDR Page timeout."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27279
#, no-wrap
msgid "@code{min-sniff-interval} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27281
msgid "BR/EDR minimum sniff interval."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27282
#, no-wrap
msgid "@code{max-sniff-interval} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27284
msgid "BR/EDR maximum sniff interval."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27285
#, no-wrap
msgid "@code{min-advertisement-interval} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27287
msgid "LE minimum advertisement interval (used for legacy advertisement only)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27288
#, no-wrap
msgid "@code{max-advertisement-interval} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27290
msgid "LE maximum advertisement interval (used for legacy advertisement only)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27291
#, no-wrap
msgid "@code{multi-advertisement-rotation-interval} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27293
msgid "LE multiple advertisement rotation interval."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27294
#, no-wrap
msgid "@code{scan-interval-auto-connect} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27296
msgid "LE scanning interval used for passive scanning supporting auto connect."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27297
#, no-wrap
msgid "@code{scan-window-auto-connect} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27299
msgid "LE scanning window used for passive scanning supporting auto connect."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27300
#, no-wrap
msgid "@code{scan-interval-suspend} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27302
msgid "LE scanning interval used for active scanning supporting wake from suspend."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27303
#, no-wrap
msgid "@code{scan-window-suspend} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27305
msgid "LE scanning window used for active scanning supporting wake from suspend."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27306
#, no-wrap
msgid "@code{scan-interval-discovery} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27308
msgid "LE scanning interval used for active scanning supporting discovery."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27309
#, no-wrap
msgid "@code{scan-window-discovery} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27311
msgid "LE scanning window used for active scanning supporting discovery."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27312
#, no-wrap
msgid "@code{scan-interval-adv-monitor} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27314
msgid "LE scanning interval used for passive scanning supporting the advertisement monitor APIs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27315
#, no-wrap
msgid "@code{scan-window-adv-monitor} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27317
msgid "LE scanning window used for passive scanning supporting the advertisement monitor APIs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27318
#, no-wrap
msgid "@code{scan-interval-connect} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27320
msgid "LE scanning interval used for connection establishment."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27321
#, no-wrap
msgid "@code{scan-window-connect} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27323
msgid "LE scanning window used for connection establishment."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27324
#, no-wrap
msgid "@code{min-connection-interval} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27327
msgid "LE default minimum connection interval. This value is superseded by any specific value provided via the Load Connection Parameters interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27328
#, no-wrap
msgid "@code{max-connection-interval} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27331
msgid "LE default maximum connection interval. This value is superseded by any specific value provided via the Load Connection Parameters interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27332
#, no-wrap
msgid "@code{connection-latency} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27335
msgid "LE default connection latency. This value is superseded by any specific value provided via the Load Connection Parameters interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27336
#, no-wrap
msgid "@code{connection-supervision-timeout} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27339
msgid "LE default connection supervision timeout. This value is superseded by any specific value provided via the Load Connection Parameters interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27340
#, no-wrap
msgid "@code{autoconnect-timeout} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27343
msgid "LE default autoconnect timeout. This value is superseded by any specific value provided via the Load Connection Parameters interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27344
#, no-wrap
msgid "@code{adv-mon-allowlist-scan-duration} (default: @code{300})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27347
msgid "Allowlist scan duration during interleaving scan. Only used when scanning for ADV monitors. The units are msec."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27348
#, no-wrap
msgid "@code{adv-mon-no-filter-scan-duration} (default: @code{500})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27351
msgid "No filter scan duration during interleaving scan. Only used when scanning for ADV monitors. The units are msec."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27352
#, no-wrap
msgid "@code{enable-adv-mon-interleave-scan?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27354
msgid "Enable/Disable Advertisement Monitor interleave scan for power saving."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27355
#, no-wrap
msgid "@code{cache} (default: @code{'always})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27357
msgid "GATT attribute cache."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27365
msgid "@code{'always}: Always cache attributes even for devices not paired, this is recommended as it is best for interoperability, with more consistent reconnection times and enables proper tracking of notifications for all devices"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27368
msgid "@code{'yes}: Only cache attributes of paired devices"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27371
msgid "@code{'no}: Never cache attributes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27373
#, no-wrap
msgid "@code{key-size} (default: @code{0})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27375
msgid "Minimum required Encryption Key Size for accessing secured characteristics."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27380
msgid "@code{0}: Don't care"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27383
msgid "7 <= N <= 16"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27385
#, no-wrap
msgid "@code{exchange-mtu} (default: @code{517})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27387
msgid "Exchange MTU size. Possible values are:"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27391
msgid "23 <= N <= 517"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27393
#, no-wrap
msgid "@code{att-channels} (default: @code{3})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27395
msgid "Number of ATT channels. Possible values are:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27399
msgid "@code{1}: Disables EATT"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27402
msgid "2 <= N <= 5"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27404
#, no-wrap
msgid "@code{session-mode} (default: @code{'basic})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27406
msgid "AVDTP L2CAP signalling channel mode."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27412 guix-git/doc/guix.texi:27425
msgid "@code{'basic}: Use L2CAP basic mode"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27415
msgid "@code{'ertm}: Use L2CAP enhanced retransmission mode."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27417
#, no-wrap
msgid "@code{stream-mode} (default: @code{'basic})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27419
msgid "AVDTP L2CAP transport channel mode."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27428
msgid "@code{'streaming}: Use L2CAP streaming mode."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27430
#, no-wrap
msgid "@code{reconnect-uuids} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27436
msgid "The ReconnectUUIDs defines the set of remote services that should try to be reconnected to in case of a link loss (link supervision timeout). The policy plugin should contain a sane set of values by default, but this list can be overridden here. By setting the list to empty the reconnection feature gets disabled."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27442
msgid "'()"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27447
#, no-wrap
msgid "@code{reconnect-attempts} (default: @code{7})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27450
msgid "Defines the number of attempts to reconnect after a link lost. Setting the value to 0 disables reconnecting feature."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27451
#, no-wrap
msgid "@code{reconnect-intervals} (default: @code{'(1 2 4 8 16 32 64)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27455
msgid "Defines a list of intervals in seconds to use in between attempts. If the number of attempts defined in @var{reconnect-attempts} is bigger than the list of intervals the last interval is repeated until the last attempt."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27456
#, no-wrap
msgid "@code{auto-enable?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27459
msgid "Defines option to enable all controllers when they are found. This includes adapters present on start as well as adapters that are plugged in later on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27460
#, no-wrap
msgid "@code{resume-delay} (default: @code{2})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27465
msgid "Audio devices that were disconnected due to suspend will be reconnected on resume. @var{resume-delay} determines the delay between when the controller resumes from suspend and a connection attempt is made. A longer delay is better for better co-existence with Wi-Fi. The value is in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27466
#, no-wrap
msgid "@code{rssi-sampling-period} (default: @code{#xFF})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27469
msgid "Default RSSI Sampling Period. This is used when a client registers an advertisement monitor and leaves the RSSISamplingPeriod unset."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27474
msgid "@code{#x0}: Report all advertisements"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27477
msgid "@code{N = #xXX}: Report advertisements every N x 100 msec (range: #x01 to #xFE)"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27480
msgid "@code{#xFF}: Report only one advertisement per device during monitoring period."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27485
#, no-wrap
msgid "gnome-keyring-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27491
msgid "This is the type of the service that adds the @uref{https://wiki.gnome.org/Projects/GnomeKeyring, GNOME Keyring}.  Its value is a @code{gnome-keyring-configuration} object (see below).  Note that there is no need to use this service when using @code{gnome-desktop-service-type}, which includes it."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27495
msgid "This service adds the @code{gnome-keyring} package to the system profile and extends PAM with entries using @code{pam_gnome_keyring.so}, unlocking a user's login keyring when they log in or setting its password with passwd."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27497
#, no-wrap
msgid "{Data Type} gnome-keyring-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27499
msgid "Configuration record for the GNOME Keyring service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27501
#, no-wrap
msgid "@code{keyring} (default: @code{gnome-keyring})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27503
msgid "The GNOME keyring package to use."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27504 guix-git/doc/guix.texi:27543
#, no-wrap
msgid "pam-services"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27509
msgid "A list of @code{(@var{service} . @var{kind})} pairs denoting PAM services to extend, where @var{service} is the name of an existing service to extend and @var{kind} is one of @code{login} or @code{passwd}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27515
msgid "If @code{login} is given, it adds an optional @code{pam_gnome_keyring.so} to the auth block without arguments and to the session block with @code{auto_start}.  If @code{passwd} is given, it adds an optional @code{pam_gnome_keyring.so} to the password block without arguments."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27518
msgid "By default, this field contains ``gdm-password'' with the value @code{login} and ``passwd'' is with the value @code{passwd}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27521
#, fuzzy, no-wrap
#| msgid "Services"
msgid "kwallet-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:27529
msgid "This is the type of the service that adds the @uref{https://invent.kde.org/plasma/kwallet-pam, KWallet keyring}.  Its value is a @code{kwallet-configuration} object (see below).  Note that, contrary to @code{gnome-desktop-service-type}, which includes the respective keyring for that service, @code{gnome-keyring-service-type}, @code{plasma-desktop-service-type} does not include @code{kwallet-service-type}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27534
msgid "This service adds the @code{kwallet-pam} package to the system profile and extends PAM with entries using @code{pam_kwallet5.so}.  It can unlock the user's login keyring or set their password with @command{passwd} at the time they log in."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27536
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} kwallet-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:27538
#, fuzzy
#| msgid "Documentation"
msgid "Configuration record for the KWallet Keyring service."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:27540
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{keyring} (default: @code{kwallet-pam})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:27542
#, fuzzy
#| msgid "Updating the Guix package definition."
msgid "The KWallet keyring package to use."
msgstr "Aggiornamento della definizione del pacchetto Guix."

#. type: table
#: guix-git/doc/guix.texi:27548
msgid "A list of @code{(@var{service} . @var{kind})} pairs denoting PAM services to extend, where @var{service} is the name of an existing service to extend and @var{kind} is one of @code{login} or @code{passwd} symbols."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27554
msgid "If @code{login} is given, it adds an optional @code{pam_kwallet5.so} to the auth block without arguments and to the session block with @code{auto_start}.  If @code{passwd} is given, it adds an optional @code{pam_kwallet5.so} to the password block without arguments."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27558
msgid "By default, it takes for value an alist associating the @code{\"sddm\"} key with the @code{'login} value, and the @code{\"passwd\"} key with the @code{'passwd} value."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27561
#, no-wrap
msgid "seatd-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27564
msgid "@uref{https://sr.ht/~kennylevinsen/seatd/, seatd} is a minimal seat management daemon."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27567
msgid "Seat management takes care of mediating access to shared devices (graphics, input), without requiring the applications needing access to be root."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27573
#, no-wrap
msgid ""
"(append\n"
"  (list\n"
"   ;; make sure seatd is running\n"
"   (service seatd-service-type))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27576
#, no-wrap
msgid ""
"  ;; normally one would want %base-services\n"
"  %base-services)\n"
"\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27585
msgid "@code{seatd} operates over a UNIX domain socket, with @code{libseat} providing the client side of the protocol.  Applications that acquire access to the shared resources via @code{seatd} (e.g. @code{sway})  need to be able to talk to this socket.  This can be achieved by adding the user they run under to the group owning @code{seatd}'s socket (usually ``seat''), like so:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27596
#, no-wrap
msgid ""
"(user-account\n"
"  (name \"alice\")\n"
"  (group \"users\")\n"
"  (supplementary-groups '(\"wheel\"   ; allow use of sudo, etc.\n"
"                          \"seat\"    ; seat management\n"
"                          \"audio\"   ; sound card\n"
"                          \"video\"   ; video devices such as webcams\n"
"                          \"cdrom\")) ; the good ol' CD-ROM\n"
"  (comment \"Bob's sister\"))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27601
msgid "Depending on your setup, you will have to not only add regular users, but also system users to this group.  For instance, some greetd greeters require graphics and therefore also need to negotiate with seatd."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27604
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} seatd-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:27606
msgid "Configuration record for the seatd daemon service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27608
#, no-wrap
msgid "@code{seatd} (default: @code{seatd})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27610
msgid "The seatd package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27611
#, no-wrap
msgid "@code{group} (default: @samp{\"seat\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27613
msgid "Group to own the seatd socket."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27614
#, no-wrap
msgid "@code{socket} (default: @samp{\"/run/seatd.sock\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27616
msgid "Where to create the seatd socket."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27617
#, no-wrap
msgid "@code{logfile} (default: @samp{\"/var/log/seatd.log\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27619
msgid "Log file to write to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27620
#, no-wrap
msgid "@code{loglevel} (default: @samp{\"error\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27623
msgid "Log level to output logs. Possible values: @samp{\"silent\"}, @samp{\"error\"}, @samp{\"info\"} and @samp{\"debug\"}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:27631
#, no-wrap
msgid "sound support"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:27632
#, no-wrap
msgid "ALSA"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:27633
#, no-wrap
msgid "PulseAudio, sound support"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:27638
msgid "The @code{(gnu services sound)} module provides a service to configure the Advanced Linux Sound Architecture (ALSA) system, which makes PulseAudio the preferred ALSA output driver."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27639
#, fuzzy, no-wrap
#| msgid "Services"
msgid "alsa-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:27644
msgid "This is the type for the @uref{https://alsa-project.org/, Advanced Linux Sound Architecture} (ALSA) system, which generates the @file{/etc/asound.conf} configuration file.  The value for this type is a @command{alsa-configuration} record as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27647
#, no-wrap
msgid "(service alsa-service-type)\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27650
msgid "See below for details about @code{alsa-configuration}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27652
#, no-wrap
msgid "{Data Type} alsa-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27654
msgid "Data type representing the configuration for @code{alsa-service}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27656
#, no-wrap
msgid "@code{alsa-plugins} (default: @var{alsa-plugins})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27658
msgid "@code{alsa-plugins} package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27659
#, no-wrap
msgid "@code{pulseaudio?} (default: @var{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27662
msgid "Whether ALSA applications should transparently be made to use the @uref{https://www.pulseaudio.org/, PulseAudio} sound server."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27666
msgid "Using PulseAudio allows you to run several sound-producing applications at the same time and to individual control them @i{via} @command{pavucontrol}, among other things."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27667
#, no-wrap
msgid "@code{extra-options} (default: @var{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27669
msgid "String to append to the @file{/etc/asound.conf} file."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:27675
msgid "Individual users who want to override the system configuration of ALSA can do it with the @file{~/.asoundrc} file:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:27681
#, no-wrap
msgid ""
"# In guix, we have to specify the absolute path for plugins.\n"
"pcm_type.jack @{\n"
"  lib \"/home/alice/.guix-profile/lib/alsa-lib/libasound_module_pcm_jack.so\"\n"
"@}\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:27690
#, no-wrap
msgid ""
"# Routing ALSA to jack:\n"
"# <http://jackaudio.org/faq/routing_alsa.html>.\n"
"pcm.rawjack @{\n"
"  type jack\n"
"  playback_ports @{\n"
"    0 system:playback_1\n"
"    1 system:playback_2\n"
"  @}\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:27696
#, no-wrap
msgid ""
"  capture_ports @{\n"
"    0 system:capture_1\n"
"    1 system:capture_2\n"
"  @}\n"
"@}\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:27703
#, no-wrap
msgid ""
"pcm.!default @{\n"
"  type plug\n"
"  slave @{\n"
"    pcm \"rawjack\"\n"
"  @}\n"
"@}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:27707
msgid "See @uref{https://www.alsa-project.org/main/index.php/Asoundrc} for the details."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27708
#, no-wrap
msgid "pulseaudio-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27712
msgid "This is the type for the @uref{https://www.pulseaudio.org/, PulseAudio} sound server.  It exists to allow system overrides of the default settings via @code{pulseaudio-configuration}, see below."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:27718
msgid "This service overrides per-user configuration files.  If you want PulseAudio to honor configuration files in @file{~/.config/pulse}, you have to unset the environment variables @env{PULSE_CONFIG} and @env{PULSE_CLIENTCONFIG} in your @file{~/.bash_profile}."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:27726
msgid "This service on its own does not ensure, that the @code{pulseaudio} package exists on your machine.  It merely adds configuration files for it, as detailed below.  In the (admittedly unlikely) case, that you find yourself without a @code{pulseaudio} package, consider enabling it through the @code{alsa-service-type} above."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27729
#, no-wrap
msgid "{Data Type} pulseaudio-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27731
msgid "Data type representing the configuration for @code{pulseaudio-service}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27733
#, no-wrap
msgid "@code{client-conf} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27738
msgid "List of settings to set in @file{client.conf}.  Accepts a list of strings or symbol-value pairs.  A string will be inserted as-is with a newline added.  A pair will be formatted as ``key = value'', again with a newline added."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27739
#, no-wrap
msgid "@code{daemon-conf} (default: @code{'((flat-volumes . no))})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27742
msgid "List of settings to set in @file{daemon.conf}, formatted just like @var{client-conf}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27743
#, no-wrap
msgid "@code{script-file} (default: @code{(file-append pulseaudio \"/etc/pulse/default.pa\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27748
msgid "Script file to use as @file{default.pa}.  In case the @code{extra-script-files} field below is used, an @code{.include} directive pointing to @file{/etc/pulse/default.pa.d} is appended to the provided script."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27749
#, no-wrap
msgid "@code{extra-script-files} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27756
msgid "A list of file-like objects defining extra PulseAudio scripts to run at the initialization of the @command{pulseaudio} daemon, after the main @code{script-file}.  The scripts are deployed to the @file{/etc/pulse/default.pa.d} directory; they should have the @samp{.pa} file name extension.  For a reference of the available commands, refer to @command{man pulse-cli-syntax}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27757
#, no-wrap
msgid "@code{system-script-file} (default: @code{(file-append pulseaudio \"/etc/pulse/system.pa\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27759
msgid "Script file to use as @file{system.pa}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27764
msgid "The example below sets the default PulseAudio card profile, the default sink and the default source to use for a old SoundBlaster Audigy sound card:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27773
#, no-wrap
msgid ""
"(pulseaudio-configuration\n"
" (extra-script-files\n"
"  (list (plain-file \"audigy.pa\"\n"
"                    (string-append \"\\\n"
"set-card-profile alsa_card.pci-0000_01_01.0 \\\n"
"  output:analog-surround-40+input:analog-mono\n"
"set-default-source alsa_input.pci-0000_01_01.0.analog-mono\n"
"set-default-sink alsa_output.pci-0000_01_01.0.analog-surround-40\\n\")))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27781
msgid "Note that @code{pulseaudio-service-type} is part of @code{%desktop-services}; if your operating system declaration was derived from one of the desktop templates, you'll want to adjust the above example to modify the existing @code{pulseaudio-service-type} via @code{modify-services} (@pxref{Service Reference, @code{modify-services}}), instead of defining a new one."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27784
#, no-wrap
msgid "ladspa-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27787
msgid "This service sets the @var{LADSPA_PATH} variable, so that programs, which respect it, e.g.@: PulseAudio, can load LADSPA plugins."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27790
msgid "The following example will setup the service to enable modules from the @code{swh-plugins} package:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27794
#, no-wrap
msgid ""
"(service ladspa-service-type\n"
"         (ladspa-configuration (plugins (list swh-plugins))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27798
msgid "See @uref{http://plugin.org.uk/ladspa-swh/docs/ladspa-swh.html} for the details."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:27801
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Speaker Safety Daemon System Service"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:27807
msgid "@uref{https://github.com/AsahiLinux/speakersafetyd, Speaker Safety Daemon} is a user-space daemon that implements an analogue of the Texas Instruments Smart Amp speaker protection model.  It can be used to protect the speakers on Apple Silicon devices."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27808
#, fuzzy, no-wrap
#| msgid "Services"
msgid "speakersafetyd-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:27811
msgid "This is the type for the @code{speakersafetyd} system service, whose value is a @command{speakersafetyd-configuration} record."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27814
#, fuzzy, no-wrap
#| msgid "Services"
msgid "(service speakersafetyd-service-type)\n"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:27817
msgid "See below for details about @code{speakersafetyd-configuration}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27820
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} speakersafetyd-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:27822
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{speakersafetyd-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:27824
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{blackbox-directory} (default: @code{\"/var/lib/speakersafetyd/blackbox\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:27829
msgid "The directory to which blackbox files are written when the speakers are getting too hot.  The blackbox files contain audio and debug information which the developers of @code{speakersafetyd} might ask for when reporting bugs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27830
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{configuration-directory} (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:27833
msgid "The base directory as a G-expression (@pxref{G-Expressions}) that contains the configuration files of the speaker models."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27834
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{group} (default: @code{\"speakersafetyd\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:27836
msgid "The group to run the Speaker Safety Daemon as."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27837
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{log-file} (default: @code{\"/var/log/speakersafetyd.log\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:27839
msgid "The file name to the Speaker Safety Daemon log file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27840
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{maximum-gain-reduction} (default: @code{7}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:27842
msgid "Maximum gain reduction before panicking, useful for debugging."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27843
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{speakersafetyd} (default: @code{speakersafetyd}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:27845
msgid "The Speaker Safety Daemon package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27846
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{user} (default: @code{\"speakersafetyd\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:27848
msgid "The user to run the Speaker Safety Daemon as."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:27857
#, no-wrap
msgid "searching for a file"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:27861
msgid "The services in this section populate @dfn{file databases} that let you search for files on your machine.  These services are provided by the @code{(gnu services admin)} module."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:27867
msgid "The first one, @code{file-database-service-type}, periodically runs the venerable @command{updatedb} command (@pxref{Invoking updatedb,,, find, GNU Findutils}).  That command populates a database of file names that you can then search with the @command{locate} command (@pxref{Invoking locate,,, find, GNU Findutils}), as in this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:27870
#, no-wrap
msgid "locate important-notes.txt\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:27874
msgid "You can enable this service with its default settings by adding this snippet to your operating system services:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27877
#, fuzzy, no-wrap
#| msgid "Services"
msgid "(service file-database-service-type)\n"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:27883
msgid "This updates the database once a week, excluding files from @file{/gnu/store}---these are more usefully handled by @command{guix locate} (@pxref{Invoking guix locate}).  You can of course provide a custom configuration, as described below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27884
#, fuzzy, no-wrap
#| msgid "Services"
msgid "file-database-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:27888
msgid "This is the type of the file database service, which runs @command{updatedb} periodically.  Its associated value must be a @code{file-database-configuration} record, as described below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27890
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} file-database-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:27893
msgid "Record type for the @code{file-database-service-type} configuration, with the following fields:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27895
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{package} (default: @code{findutils})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:27898
msgid "The package from which the @command{updatedb} command is taken.  Examples of such packages are GNU@tie{}Findutils and Plocate."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27899
#, no-wrap
msgid "@code{schedule} (default: @code{%default-file-database-update-schedule})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27903
msgid "This is the schedule of database updates, expressed as a string in traditional cron syntax or as a gexp evaluating to a Shepherd calendar event (@pxref{Timers,,, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27904
#, no-wrap
msgid "@code{excluded-directories} (default @code{%default-file-database-excluded-directories})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27910
msgid "List of regular expressions of directories to ignore when building the file database.  By default, this includes @file{/tmp} and @file{/gnu/store}; the latter should instead be indexed by @command{guix locate} (@pxref{Invoking guix locate}).  This list is passed to the @option{--prunepaths} option of @command{updatedb} (@pxref{Invoking updatedb,,, find, GNU@tie{}Findutils})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:27920
msgid "The second service, @code{package-database-service-type}, builds the database used by @command{guix locate}, which lets you search for packages that contain a given file (@pxref{Invoking guix locate}).  The service periodically updates a system-wide database, which will be readily available to anyone running @command{guix locate} on the system.  To use this service with its default settings, add this snippet to your service list:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27923
#, fuzzy, no-wrap
#| msgid "Services"
msgid "(service package-database-service-type)\n"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:27926
msgid "This will run @command{guix locate --update} once a week."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27927
#, fuzzy, no-wrap
#| msgid "Services"
msgid "package-database-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:27931
msgid "This is the service type for periodic @command{guix locate} updates (@pxref{Invoking guix locate}).  Its value must be a @code{package-database-configuration} record, as shown below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27933
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} package-database-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:27936
msgid "Data type to configure periodic package database updates.  It has the following fields:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27938
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{package} (default: @code{guix})"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:27941
#, no-wrap
msgid "@code{schedule} (default: @code{%default-package-database-update-schedule})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27946
msgid "This is the schedule of the periodic @command{guix locate --update} job, expressed as a string in traditional cron syntax or as a gexp evaluating to a Shepherd calendar event (@pxref{Timers,,, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27947
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{method} (default: @code{'store})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:27951
msgid "Indexing method for @command{guix locate}.  The default value, @code{'store}, yields a more complete database but is relatively expensive in terms of CPU and input/output."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27955
msgid "G-exp denoting the channels to use when updating the database (@pxref{Channels})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:27963
#, no-wrap
msgid "SQL"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:27965
msgid "The @code{(gnu services databases)} module provides the following services."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:27966
#, no-wrap
msgid "PostgreSQL"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27968
#, fuzzy, no-wrap
#| msgid "Services"
msgid "postgresql-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:27973
msgid "The service type for the PostgreSQL database server.  Its value should be a valid @code{postgresql-configuration} object, documented below.  The following example describes a PostgreSQL service with the default configuration."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27978
#, no-wrap
msgid ""
"(service postgresql-service-type\n"
"         (postgresql-configuration\n"
"          (postgresql postgresql)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27984
msgid "If the services fails to start, it may be due to an incompatible cluster already present in @var{data-directory}.  Adjust it (or, if you don't need the cluster anymore, delete @var{data-directory}), then restart the service."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27991
msgid "Peer authentication is used by default and the @code{postgres} user account has no shell (unless @code{allow-login?} is @code{#t}), which prevents the direct execution of @code{psql} commands as this user.  To use @code{psql}, you can temporarily log in as @code{postgres} using a shell, create a PostgreSQL superuser with the same name as one of the system users and then create the associated database."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:27996
#, no-wrap
msgid ""
"sudo -u postgres -s /bin/sh\n"
"createuser --interactive\n"
"createdb $MY_USER_LOGIN      # Replace appropriately.\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27999
#, no-wrap
msgid "{Data Type} postgresql-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:28002
msgid "Data type representing the configuration for the @code{postgresql-service-type}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:28004
#, fuzzy, no-wrap
#| msgid "Services"
msgid "postgresql"
msgstr "Servizi"

#. type: table
#: guix-git/doc/guix.texi:28006
msgid "PostgreSQL package to use for the service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28007
#, no-wrap
msgid "@code{port} (default: @code{5432})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28009
msgid "Port on which PostgreSQL should listen."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28012
msgid "Locale to use as the default when creating the database cluster."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28013
#, no-wrap
msgid "@code{config-file} (default: @code{(postgresql-config-file)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28017
msgid "The configuration file to use when running PostgreSQL@.  The default behaviour uses the postgresql-config-file record with the default values for the fields."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28018
#, no-wrap
msgid "@code{log-directory} (default: @code{\"/var/log/postgresql\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28022
msgid "The directory where @command{pg_ctl} output will be written in a file named @code{\"pg_ctl.log\"}.  This file can be useful to debug PostgreSQL configuration errors for instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28023
#, no-wrap
msgid "@code{data-directory} (default: @code{\"/var/lib/postgresql/data\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28025
msgid "Directory in which to store the data."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28026
#, no-wrap
msgid "@code{extension-packages} (default: @code{'()})"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:28027
#, no-wrap
msgid "postgresql extension-packages"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28032
msgid "Additional extensions are loaded from packages listed in @var{extension-packages}.  Extensions are available at runtime.  For instance, to create a geographic database using the @code{postgis} extension, a user can configure the postgresql-service as in this example:"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:28033
#, no-wrap
msgid "postgis"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:28036
#, no-wrap
msgid ""
"(use-package-modules databases geo)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:28049
#, no-wrap
msgid ""
"(operating-system\n"
"  ...\n"
"  ;; postgresql is required to run `psql' but postgis is not required for\n"
"  ;; proper operation.\n"
"  (packages (cons* postgresql %base-packages))\n"
"  (services\n"
"    (cons*\n"
"      (service postgresql-service-type\n"
"               (postgresql-configuration\n"
"                (postgresql postgresql)\n"
"                (extension-packages (list postgis))))\n"
"      %base-services)))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28053
msgid "Then the extension becomes visible and you can initialise an empty geographic database in this way:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:28060
#, no-wrap
msgid ""
"psql -U postgres\n"
"> create database postgistest;\n"
"> \\connect postgistest;\n"
"> create extension postgis;\n"
"> create extension postgis_topology;\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28065
msgid "There is no need to add this field for contrib extensions such as hstore or dblink as they are already loadable by postgresql.  This field is only required to add extensions provided by other packages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28066
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{create-account?} (default: @code{#t})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:28068
msgid "Whether or not the @code{postgres} user and group should be created."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28069
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{allow-login?} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:28071
msgid "Whether or not to allow login into the created account."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28072
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{home-directory} (default: @code{\"/var/empty\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:28075
msgid "The home directory of the user.  It is strongly advised to change this if you set @code{allow-login?} to @code{#t}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28080
msgid "Explicitly specify the UID of the @code{postgres} daemon account.  You normally do not need to specify this, in which case a free UID will be automatically assigned."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28083
msgid "One situation where this option might be useful is if the @var{data-directory} is located on a mounted network share."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28084
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{gid} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:28086
msgid "Explicitly specify the GID of the @code{postgres} group."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:28090
#, no-wrap
msgid "{Data Type} postgresql-config-file"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:28096
msgid "Data type representing the PostgreSQL configuration file.  As shown in the following example, this can be used to customize the configuration of PostgreSQL@.  Note that you can use any G-expression or filename in place of this record, if you already have a configuration file you'd like to use for example."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:28116
#, no-wrap
msgid ""
"(service postgresql-service-type\n"
"         (postgresql-configuration\n"
"          (config-file\n"
"           (postgresql-config-file\n"
"            (log-destination \"stderr\")\n"
"            (hba-file\n"
"             (plain-file \"pg_hba.conf\"\n"
"                         \"\n"
"local\tall\tall\t\t\ttrust\n"
"host\tall\tall\t127.0.0.1/32 \tmd5\n"
"host\tall\tall\t::1/128 \tmd5\"))\n"
"            (extra-config\n"
"             '((\"session_preload_libraries\"     \"auto_explain\")\n"
"               (\"random_page_cost\"              2)\n"
"               (\"auto_explain.log_min_duration\" \"100 ms\")\n"
"               (\"work_mem\"                      \"500 MB\")\n"
"               (\"logging_collector\"             #t)\n"
"               (\"log_directory\"                 \"/var/log/postgresql\")))))))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28119
#, no-wrap
msgid "@code{log-destination} (default: @code{\"syslog\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28122
msgid "The logging method to use for PostgreSQL@.  Multiple values are accepted, separated by commas."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28123
#, no-wrap
msgid "@code{hba-file} (default: @code{%default-postgres-hba})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28126
msgid "Filename or G-expression for the host-based authentication configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28127
#, no-wrap
msgid "@code{ident-file} (default: @code{%default-postgres-ident})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28129
msgid "Filename or G-expression for the user name mapping configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28130
#, no-wrap
msgid "@code{socket-directory} (default: @code{\"/var/run/postgresql\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28135
msgid "Specifies the directory of the Unix-domain socket(s) on which PostgreSQL is to listen for connections from client applications. If set to @code{\"\"} PostgreSQL does not listen on any Unix-domain sockets, in which case only TCP/IP sockets can be used to connect to the server."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28138
msgid "By default, the @code{#false} value means the PostgreSQL default value will be used, which is currently @samp{/tmp}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28143
msgid "List of additional keys and values to include in the PostgreSQL config file.  Each entry in the list should be a list where the first element is the key, and the remaining elements are the values."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28149
msgid "The values can be numbers, booleans or strings and will be mapped to PostgreSQL parameters types @code{Boolean}, @code{String}, @code{Numeric}, @code{Numeric with Unit} and @code{Enumerated} described @uref{https://www.postgresql.org/docs/current/config-setting.html, here}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:28153
#, no-wrap
msgid "postgresql-role-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:28156
msgid "This service allows to create PostgreSQL roles and databases after PostgreSQL service start.  Here is an example of its use."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:28164
#, no-wrap
msgid ""
"(service postgresql-role-service-type\n"
"            (postgresql-role-configuration\n"
"             (roles\n"
"              (list (postgresql-role\n"
"                     (name \"test\")\n"
"                     (create-database? #t))))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:28168
msgid "This service can be extended with extra roles, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:28175
#, no-wrap
msgid ""
"(service-extension postgresql-role-service-type\n"
"                   (const (list\n"
"                           (postgresql-role\n"
"                            (name \"alice\")\n"
"                            (create-database? #t)))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:28178
#, no-wrap
msgid "{Data Type} postgresql-role"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:28184
msgid "PostgreSQL manages database access permissions using the concept of roles.  A role can be thought of as either a database user, or a group of database users, depending on how the role is set up.  Roles can own database objects (for example, tables) and can assign privileges on those objects to other roles to control who has access to which objects."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28188
msgid "The role name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28189
#, no-wrap
msgid "@code{permissions} (default: @code{'(createdb login)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28193
msgid "The role permissions list.  Supported permissions are @code{bypassrls}, @code{createdb}, @code{createrole}, @code{login}, @code{replication} and @code{superuser}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28194
#, no-wrap
msgid "@code{create-database?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28196
msgid "whether to create a database with the same name as the role."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28197
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{password-file} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:28200
msgid "A string representing the path of a file that contains the password to be set for the role."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28201
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{encoding} (default: @code{\"UTF8\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:28203
msgid "The character set to use for storing text in the database."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28204
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{collation} (default: @code{\"en_US.utf8\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:28206
msgid "The string sort order locale setting."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28207
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ctype} (default: @code{\"en_US.utf8\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:28209
msgid "The character classification locale setting."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28210
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{template} (default: @code{\"template1\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:28214
msgid "The default template to copy the new database from when creating it.  Use @code{\"template0\"} for a pristine database with no system-local modifications."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:28218
#, no-wrap
msgid "{Data Type} postgresql-role-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:28221
msgid "Data type representing the configuration of @var{postgresql-role-service-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28223
#, no-wrap
msgid "@code{host} (default: @code{\"/var/run/postgresql\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28225
msgid "The PostgreSQL host to connect to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28226
#, no-wrap
msgid "@code{log} (default: @code{\"/var/log/postgresql_roles.log\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28228
msgid "File name of the log file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28229
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{shepherd-requirement} (default: @code{'(user-processes postgres)})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:28234
msgid "The Shepherd services dependencies to use.  Add extra dependencies to @code{%default-postgresql-role-shepherd-requirement} to extend its value."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28235
#, no-wrap
msgid "@code{roles} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28237
msgid "The initial PostgreSQL roles to create."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:28240
#, no-wrap
msgid "MariaDB/MySQL"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:28242
#, no-wrap
msgid "mysql-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:28246
msgid "This is the service type for a MySQL or MariaDB database server.  Its value is a @code{mysql-configuration} object that specifies which package to use, as well as various settings for the @command{mysqld} daemon."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:28248
#, no-wrap
msgid "{Data Type} mysql-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:28250
msgid "Data type representing the configuration of @var{mysql-service-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28252
#, no-wrap
msgid "@code{mysql} (default: @var{mariadb})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28255
msgid "Package object of the MySQL database server, can be either @var{mariadb} or @var{mysql}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28258
msgid "For MySQL, a temporary root password will be displayed at activation time.  For MariaDB, the root password is empty."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28259 guix-git/doc/guix.texi:33105
#, no-wrap
msgid "@code{bind-address} (default: @code{\"127.0.0.1\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28262
msgid "The IP on which to listen for network connections.  Use @code{\"0.0.0.0\"} to bind to all available network interfaces."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28263
#, no-wrap
msgid "@code{port} (default: @code{3306})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28265
msgid "TCP port on which the database server listens for incoming connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28266
#, no-wrap
msgid "@code{socket} (default: @code{\"/run/mysqld/mysqld.sock\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28268
msgid "Socket file to use for local (non-network) connections."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28271
msgid "Additional settings for the @file{my.cnf} configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28272
#, no-wrap
msgid "@code{extra-environment} (default: @code{#~'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28274
msgid "List of environment variables passed to the @command{mysqld} process."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28275
#, no-wrap
msgid "@code{auto-upgrade?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28280
msgid "Whether to automatically run @command{mysql_upgrade} after starting the service.  This is necessary to upgrade the @dfn{system schema} after ``major'' updates (such as switching from MariaDB 10.4 to 10.5), but can be disabled if you would rather do that manually."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:28284
#, no-wrap
msgid "Memcached"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:28286
#, no-wrap
msgid "memcached-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:28290
msgid "This is the service type for the @uref{https://memcached.org/, Memcached} service, which provides a distributed in memory cache.  The value for the service type is a @code{memcached-configuration} object."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:28294
#, no-wrap
msgid "(service memcached-service-type)\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:28296
#, no-wrap
msgid "{Data Type} memcached-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:28298
msgid "Data type representing the configuration of memcached."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28300
#, no-wrap
msgid "@code{memcached} (default: @code{memcached})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28302
msgid "The Memcached package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28303
#, no-wrap
msgid "@code{interfaces} (default: @code{'(\"0.0.0.0\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28305
msgid "Network interfaces on which to listen."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28306
#, no-wrap
msgid "@code{tcp-port} (default: @code{11211})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28308
msgid "Port on which to accept connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28309
#, no-wrap
msgid "@code{udp-port} (default: @code{11211})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28312
msgid "Port on which to accept UDP connections on, a value of 0 will disable listening on a UDP socket."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28313
#, no-wrap
msgid "@code{additional-options} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28315
msgid "Additional command line options to pass to @code{memcached}."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:28318
#, no-wrap
msgid "Redis"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:28320
#, no-wrap
msgid "redis-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:28323
msgid "This is the service type for the @uref{https://redis.io/, Redis} key/value store, whose value is a @code{redis-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:28325
#, no-wrap
msgid "{Data Type} redis-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:28327
msgid "Data type representing the configuration of redis."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28329
#, no-wrap
msgid "@code{redis} (default: @code{redis})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28331
msgid "The Redis package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28332
#, no-wrap
msgid "@code{bind} (default: @code{\"127.0.0.1\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28334
msgid "Network interface on which to listen."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28335
#, no-wrap
msgid "@code{port} (default: @code{6379})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28338
msgid "Port on which to accept connections on, a value of 0 will disable listening on a TCP socket."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28339
#, no-wrap
msgid "@code{working-directory} (default: @code{\"/var/lib/redis\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28341
msgid "Directory in which to store the database and related files."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:28347
#, no-wrap
msgid "mail"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:28348 guix-git/doc/guix.texi:30410
#, no-wrap
msgid "email"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:28353
msgid "The @code{(gnu services mail)} module provides Guix service definitions for email services: IMAP, POP3, and LMTP servers, as well as mail transport agents (MTAs).  Lots of acronyms! These services are detailed in the subsections below."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:28354
#, no-wrap
msgid "Dovecot Service"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:28356
#, fuzzy, no-wrap
#| msgid "Services"
msgid "dovecot-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:28359
msgid "Type for the service that runs the Dovecot IMAP/POP3/LMTP mail server, whose value is a @code{<dovecot-configuration>} object."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:28369
msgid "By default, Dovecot does not need much configuration; the default configuration object created by @code{(dovecot-configuration)} will suffice if your mail is delivered to @code{~/Maildir}.  A self-signed certificate will be generated for TLS-protected connections, though Dovecot will also listen on cleartext ports by default.  There are a number of options, though, which mail administrators might need to change, and as is the case with other services, Guix allows the system administrator to specify these parameters via a uniform Scheme interface."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:28372
msgid "For example, to specify that mail is located at @code{maildir~/.mail}, one would instantiate the Dovecot service like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:28377
#, no-wrap
msgid ""
"(service dovecot-service-type\n"
"         (dovecot-configuration\n"
"           (mail-location \"maildir:~/.mail\")))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:28385
msgid "The available configuration parameters follow.  Each parameter definition is preceded by its type; for example, @samp{string-list foo} indicates that the @code{foo} parameter should be specified as a list of strings.  There is also a way to specify the configuration as a string, if you have an old @code{dovecot.conf} file that you want to port over from some other system; see the end for more details."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:28395
msgid "Available @code{dovecot-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28396
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} package dovecot"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28398 guix-git/doc/guix.texi:29766
msgid "The dovecot package."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28400
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} package-list extensions"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28404
msgid "A list of additional Dovecot plugin packages to make available at runtime. During service activation, the @file{lib/dovecot} directory from each specified package is combined with Dovecot's core modules into a unified module directory."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28406
msgid "For example, to enable Sieve filtering:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:28409
#, no-wrap
msgid "(extensions (list dovecot-pigeonhole))\n"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28415
msgid "Each package in the list must provide its modules at @file{lib/dovecot}, as this is where @code{make-dovecot-moduledir} expects to find its extensions. The service combines these directories to create a unified module structure."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28417
msgid "The default value is an empty list, providing only core Dovecot functionality."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28419
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} comma-separated-string-list listen"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28425
msgid "A list of IPs or hosts where to listen for connections.  @samp{*} listens on all IPv4 interfaces, @samp{::} listens on all IPv6 interfaces.  If you want to specify non-default ports or anything more complex, customize the address and port fields of the @samp{inet-listener} of the specific services you are interested in."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28427
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} protocol-configuration-list protocols"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28430
msgid "List of protocols we want to serve.  Available protocols include @samp{imap}, @samp{pop3}, and @samp{lmtp}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28432
msgid "Available @code{protocol-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28433
#, no-wrap
msgid "{@code{protocol-configuration} parameter} string name"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28435
msgid "The name of the protocol."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28437
#, no-wrap
msgid "{@code{protocol-configuration} parameter} string auth-socket-path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28441
msgid "UNIX socket path to the master authentication server to find users.  This is used by imap (for shared users) and lda.  It defaults to @samp{\"/var/run/dovecot/auth-userdb\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28443
#, no-wrap
msgid "{@code{protocol-configuration} parameter} boolean imap-metadata?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28448
msgid "Whether to enable the @code{IMAP METADATA} extension as defined in @uref{https://tools.ietf.org/html/rfc5464,RFC@tie{}5464}, which provides a means for clients to set and retrieve per-mailbox, per-user metadata and annotations over IMAP."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28451
msgid "If this is @samp{#t}, you must also specify a dictionary @i{via} the @code{mail-attribute-dict} setting."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28456
#, no-wrap
msgid "{@code{protocol-configuration} parameter} space-separated-string-list managesieve-notify-capabilities"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28461
msgid "Which NOTIFY capabilities to report to clients that first connect to the ManageSieve service, before authentication.  These may differ from the capabilities offered to authenticated users.  If this field is left empty, report what the Sieve interpreter supports by default."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28465
#, no-wrap
msgid "{@code{protocol-configuration} parameter} space-separated-string-list managesieve-sieve-capability"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28470
msgid "Which SIEVE capabilities to report to clients that first connect to the ManageSieve service, before authentication.  These may differ from the capabilities offered to authenticated users.  If this field is left empty, report what the Sieve interpreter supports by default."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28475
#, no-wrap
msgid "{@code{protocol-configuration} parameter} space-separated-string-list mail-plugins"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28477
msgid "Space separated list of plugins to load."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28479
#, no-wrap
msgid "{@code{protocol-configuration} parameter} non-negative-integer mail-max-userip-connections"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28483
msgid "Maximum number of IMAP connections allowed for a user from each IP address.  NOTE: The username is compared case-sensitively.  Defaults to @samp{10}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28487
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} service-configuration-list services"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28491
msgid "List of services to enable.  Available services include @samp{imap}, @samp{imap-login}, @samp{pop3}, @samp{pop3-login}, @samp{auth}, and @samp{lmtp}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28493
msgid "Available @code{service-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28494
#, no-wrap
msgid "{@code{service-configuration} parameter} string kind"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28499
msgid "The service kind.  Valid values include @code{director}, @code{imap-login}, @code{pop3-login}, @code{lmtp}, @code{imap}, @code{pop3}, @code{auth}, @code{auth-worker}, @code{dict}, @code{tcpwrap}, @code{quota-warning}, or anything else."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28501
#, no-wrap
msgid "{@code{service-configuration} parameter} listener-configuration-list listeners"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28506
msgid "Listeners for the service.  A listener is either a @code{unix-listener-configuration}, a @code{fifo-listener-configuration}, or an @code{inet-listener-configuration}.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28508
msgid "Available @code{unix-listener-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28509
#, no-wrap
msgid "{@code{unix-listener-configuration} parameter} string path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28512 guix-git/doc/guix.texi:28535
msgid "Path to the file, relative to @code{base-dir} field.  This is also used as the section name."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28514
#, no-wrap
msgid "{@code{unix-listener-configuration} parameter} string mode"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28517 guix-git/doc/guix.texi:28540
msgid "The access mode for the socket.  Defaults to @samp{\"0600\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28519
#, no-wrap
msgid "{@code{unix-listener-configuration} parameter} string user"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28522 guix-git/doc/guix.texi:28545
msgid "The user to own the socket.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28524
#, no-wrap
msgid "{@code{unix-listener-configuration} parameter} string group"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28527 guix-git/doc/guix.texi:28550
msgid "The group to own the socket.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28531
msgid "Available @code{fifo-listener-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28532
#, no-wrap
msgid "{@code{fifo-listener-configuration} parameter} string path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28537
#, no-wrap
msgid "{@code{fifo-listener-configuration} parameter} string mode"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28542
#, no-wrap
msgid "{@code{fifo-listener-configuration} parameter} string user"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28547
#, no-wrap
msgid "{@code{fifo-listener-configuration} parameter} string group"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28554
msgid "Available @code{inet-listener-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28555
#, no-wrap
msgid "{@code{inet-listener-configuration} parameter} string protocol"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28557
msgid "The protocol to listen for."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28559
#, no-wrap
msgid "{@code{inet-listener-configuration} parameter} string address"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28562
msgid "The address on which to listen, or empty for all addresses.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28564
#, no-wrap
msgid "{@code{inet-listener-configuration} parameter} non-negative-integer port"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28566
msgid "The port on which to listen."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28568
#, no-wrap
msgid "{@code{inet-listener-configuration} parameter} boolean ssl?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28572
msgid "Whether to use SSL for this service; @samp{yes}, @samp{no}, or @samp{required}.  Defaults to @samp{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28576
#, no-wrap
msgid "{@code{service-configuration} parameter} non-negative-integer client-limit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28581
msgid "Maximum number of simultaneous client connections per process.  Once this number of connections is received, the next incoming connection will prompt Dovecot to spawn another process.  If set to 0, @code{default-client-limit} is used instead."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28586
#, no-wrap
msgid "{@code{service-configuration} parameter} non-negative-integer service-count"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28591
msgid "Number of connections to handle before starting a new process.  Typically the only useful values are 0 (unlimited) or 1.  1 is more secure, but 0 is faster.  <doc/wiki/LoginProcess.txt>.  Defaults to @samp{1}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28594
#, no-wrap
msgid "{@code{service-configuration} parameter} non-negative-integer process-limit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28597
msgid "Maximum number of processes that can exist for this service.  If set to 0, @code{default-process-limit} is used instead."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28602
#, no-wrap
msgid "{@code{service-configuration} parameter} non-negative-integer process-min-avail"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28605
msgid "Number of processes to always keep waiting for more connections.  Defaults to @samp{0}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28607
#, no-wrap
msgid "{@code{service-configuration} parameter} non-negative-integer vsz-limit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28611
msgid "If you set @samp{service-count 0}, you probably need to grow this.  Defaults to @samp{256000000}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28615
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} dict-configuration dict"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28618
msgid "Dict configuration, as created by the @code{dict-configuration} constructor."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28620
msgid "Available @code{dict-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28621
#, no-wrap
msgid "{@code{dict-configuration} parameter} free-form-fields entries"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28624
msgid "A list of key-value pairs that this dict should hold.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28628
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} passdb-configuration-list passdbs"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28631
msgid "A list of passdb configurations, each one created by the @code{passdb-configuration} constructor."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28633
msgid "Available @code{passdb-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28634
#, no-wrap
msgid "{@code{passdb-configuration} parameter} string driver"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28639
msgid "The driver that the passdb should use.  Valid values include @samp{pam}, @samp{passwd}, @samp{shadow}, @samp{bsdauth}, and @samp{static}.  Defaults to @samp{\"pam\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28641
#, no-wrap
msgid "{@code{passdb-configuration} parameter} space-separated-string-list args"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28644
msgid "Space separated list of arguments to the passdb driver.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28648
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} userdb-configuration-list userdbs"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28651
msgid "List of userdb configurations, each one created by the @code{userdb-configuration} constructor."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28653
msgid "Available @code{userdb-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28654
#, no-wrap
msgid "{@code{userdb-configuration} parameter} string driver"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28658
msgid "The driver that the userdb should use.  Valid values include @samp{passwd} and @samp{static}.  Defaults to @samp{\"passwd\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28660
#, no-wrap
msgid "{@code{userdb-configuration} parameter} space-separated-string-list args"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28663
msgid "Space separated list of arguments to the userdb driver.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28665
#, no-wrap
msgid "{@code{userdb-configuration} parameter} free-form-args override-fields"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28668
msgid "Override fields from passwd.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28672
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} plugin-configuration plugin-configuration"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28675
msgid "Plug-in configuration, created by the @code{plugin-configuration} constructor."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28677
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} list-of-namespace-configuration namespaces"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28680
msgid "List of namespaces.  Each item in the list is created by the @code{namespace-configuration} constructor."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28682
msgid "Available @code{namespace-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28683
#, no-wrap
msgid "{@code{namespace-configuration} parameter} string name"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28685
msgid "Name for this namespace."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28687
#, no-wrap
msgid "{@code{namespace-configuration} parameter} string type"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28690
msgid "Namespace type: @samp{private}, @samp{shared} or @samp{public}.  Defaults to @samp{\"private\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28692
#, no-wrap
msgid "{@code{namespace-configuration} parameter} string separator"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28698
msgid "Hierarchy separator to use.  You should use the same separator for all namespaces or some clients get confused.  @samp{/} is usually a good one.  The default however depends on the underlying mail storage format.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28700
#, no-wrap
msgid "{@code{namespace-configuration} parameter} string prefix"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28704
msgid "Prefix required to access this namespace.  This needs to be different for all namespaces.  For example @samp{Public/}.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28706
#, no-wrap
msgid "{@code{namespace-configuration} parameter} string location"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28710
msgid "Physical location of the mailbox. This is in the same format as mail_location, which is also the default for it.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28712
#, no-wrap
msgid "{@code{namespace-configuration} parameter} boolean inbox?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28716
msgid "There can be only one INBOX, and this setting defines which namespace has it.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28718
#, no-wrap
msgid "{@code{namespace-configuration} parameter} boolean hidden?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28726
msgid "If namespace is hidden, it's not advertised to clients via NAMESPACE extension.  You'll most likely also want to set @samp{list? #f}.  This is mostly useful when converting from another server with different namespaces which you want to deprecate but still keep working.  For example you can create hidden namespaces with prefixes @samp{~/mail/}, @samp{~%u/mail/} and @samp{mail/}.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28728
#, no-wrap
msgid "{@code{namespace-configuration} parameter} boolean list?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28734
msgid "Show the mailboxes under this namespace with the LIST command.  This makes the namespace visible for clients that do not support the NAMESPACE extension.  The special @code{children} value lists child mailboxes, but hides the namespace prefix.  Defaults to @samp{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28736
#, no-wrap
msgid "{@code{namespace-configuration} parameter} boolean subscriptions?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28741
msgid "Namespace handles its own subscriptions.  If set to @code{#f}, the parent namespace handles them.  The empty prefix should always have this as @code{#t}).  Defaults to @samp{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28743
#, no-wrap
msgid "{@code{namespace-configuration} parameter} mailbox-configuration-list mailboxes"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28746
msgid "List of predefined mailboxes in this namespace.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28748
msgid "Available @code{mailbox-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28749
#, no-wrap
msgid "{@code{mailbox-configuration} parameter} string name"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28751
msgid "Name for this mailbox."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28753
#, no-wrap
msgid "{@code{mailbox-configuration} parameter} string auto"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28757
msgid "@samp{create} will automatically create this mailbox.  @samp{subscribe} will both create and subscribe to the mailbox.  Defaults to @samp{\"no\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28759
#, no-wrap
msgid "{@code{mailbox-configuration} parameter} space-separated-string-list special-use"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28764
msgid "List of IMAP @code{SPECIAL-USE} attributes as specified by RFC 6154.  Valid values are @code{\\All}, @code{\\Archive}, @code{\\Drafts}, @code{\\Flagged}, @code{\\Junk}, @code{\\Sent}, and @code{\\Trash}.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28770
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} file-name base-dir"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28773
msgid "Base directory where to store runtime data.  Defaults to @samp{\"/var/run/dovecot/\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28775
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string login-greeting"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28778
msgid "Greeting message for clients.  Defaults to @samp{\"Dovecot ready.\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28780
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} space-separated-string-list login-trusted-networks"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28787
msgid "List of trusted network ranges.  Connections from these IPs are allowed to override their IP addresses and ports (for logging and for authentication checks).  @samp{disable-plaintext-auth} is also ignored for these networks.  Typically you would specify your IMAP proxy servers here.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28789
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} space-separated-string-list login-access-sockets"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28792
msgid "List of login access check sockets (e.g.@: tcpwrap).  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28794
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean verbose-proctitle?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28800
msgid "Show more verbose process titles (in ps).  Currently shows user name and IP address.  Useful for seeing who is actually using the IMAP processes (e.g.@: shared mailboxes or if the same uid is used for multiple accounts).  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28802
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean shutdown-clients?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28808
msgid "Should all processes be killed when Dovecot master process shuts down.  Setting this to @code{#f} means that Dovecot can be upgraded without forcing existing client connections to close (although that could also be a problem if the upgrade is e.g.@: due to a security fix).  Defaults to @samp{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28810
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer doveadm-worker-count"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28814
msgid "If non-zero, run mail commands via this many connections to doveadm server, instead of running them directly in the same process.  Defaults to @samp{0}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28816
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string doveadm-socket-path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28819
msgid "UNIX socket or host:port used for connecting to doveadm server.  Defaults to @samp{\"doveadm-server\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28821
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} space-separated-string-list import-environment"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28825
msgid "List of environment variables that are preserved on Dovecot startup and passed down to all of its child processes.  You can also give key=value pairs to always set specific settings."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28827
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean disable-plaintext-auth?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28834
msgid "Disable LOGIN command and all other plaintext authentications unless SSL/TLS is used (LOGINDISABLED capability).  Note that if the remote IP matches the local IP (i.e.@: you're connecting from the same computer), the connection is considered secure and plaintext authentication is allowed.  See also the @samp{ssl=required} setting.  Defaults to @samp{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28836
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer auth-cache-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28841
msgid "Authentication cache size (e.g.@: @samp{#e10e6}).  0 means it's disabled.  Note that bsdauth, PAM and vpopmail require @samp{cache-key} to be set for caching to be used.  Defaults to @samp{0}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28843
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string auth-cache-ttl"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28851
msgid "Time to live for cached data.  After TTL expires the cached record is no longer used, *except* if the main database lookup returns internal failure.  We also try to handle password changes automatically: If user's previous authentication was successful, but this one wasn't, the cache isn't used.  For now this works only with plaintext authentication.  Defaults to @samp{\"1 hour\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28853
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string auth-cache-negative-ttl"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28857
msgid "TTL for negative hits (user not found, password mismatch).  0 disables caching them completely.  Defaults to @samp{\"1 hour\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28859
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} space-separated-string-list auth-realms"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28865
msgid "List of realms for SASL authentication mechanisms that need them.  You can leave it empty if you don't want to support multiple realms.  Many clients simply use the first one listed here, so keep the default realm first.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28867
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string auth-default-realm"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28872
msgid "Default realm/domain to use if none was specified.  This is used for both SASL realms and appending @@domain to username in plaintext logins.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28874
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string auth-username-chars"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28881
msgid "List of allowed characters in username.  If the user-given username contains a character not listed in here, the login automatically fails.  This is just an extra check to make sure user can't exploit any potential quote escaping vulnerabilities with SQL/LDAP databases.  If you want to allow all characters, set this value to empty.  Defaults to @samp{\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01234567890.-_@@\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28883
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string auth-username-translation"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28889
msgid "Username character translations before it's looked up from databases.  The value contains series of from -> to characters.  For example @samp{#@@/@@} means that @samp{#} and @samp{/} characters are translated to @samp{@@}.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28891
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string auth-username-format"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28898
msgid "Username formatting before it's looked up from databases.  You can use the standard variables here, e.g.@: %Lu would lowercase the username, %n would drop away the domain if it was given, or @samp{%n-AT-%d} would change the @samp{@@} into @samp{-AT-}.  This translation is done after @samp{auth-username-translation} changes.  Defaults to @samp{\"%Lu\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28900
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string auth-master-user-separator"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28908
msgid "If you want to allow master users to log in by specifying the master username within the normal username string (i.e.@: not using SASL mechanism's support for it), you can specify the separator character here.  The format is then <username><separator><master username>.  UW-IMAP uses @samp{*} as the separator, so that could be a good choice.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28910
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string auth-anonymous-username"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28914
msgid "Username to use for users logging in with ANONYMOUS SASL mechanism.  Defaults to @samp{\"anonymous\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28916
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer auth-worker-max-count"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28921
msgid "Maximum number of dovecot-auth worker processes.  They're used to execute blocking passdb and userdb queries (e.g.@: MySQL and PAM).  They're automatically created and destroyed as needed.  Defaults to @samp{30}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28923
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string auth-gssapi-hostname"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28928
msgid "Host name to use in GSSAPI principal names.  The default is to use the name returned by gethostname().  Use @samp{$ALL} (with quotes) to allow all keytab entries.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28930
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string auth-krb5-keytab"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28936
msgid "Kerberos keytab to use for the GSSAPI mechanism.  Will use the system default (usually @file{/etc/krb5.keytab}) if not specified.  You may need to change the auth service to run as root to be able to read this file.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28938
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean auth-use-winbind?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28943
msgid "Do NTLM and GSS-SPNEGO authentication using Samba's winbind daemon and @samp{ntlm-auth} helper.  <doc/wiki/Authentication/Mechanisms/Winbind.txt>.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28945
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} file-name auth-winbind-helper-path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28948
msgid "Path for Samba's @samp{ntlm-auth} helper binary.  Defaults to @samp{\"/usr/bin/ntlm_auth\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28950
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string auth-failure-delay"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28953
msgid "Time to delay before replying to failed authentications.  Defaults to @samp{\"2 secs\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28955
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean auth-ssl-require-client-cert?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28959
msgid "Require a valid SSL client certificate or the authentication fails.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28961
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean auth-ssl-username-from-cert?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28966
msgid "Take the username from client's SSL certificate, using @code{X509_NAME_get_text_by_NID()} which returns the subject's DN's CommonName.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28968
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} space-separated-string-list auth-mechanisms"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28974
msgid "List of wanted authentication mechanisms.  Supported mechanisms are: @samp{plain}, @samp{login}, @samp{digest-md5}, @samp{cram-md5}, @samp{ntlm}, @samp{rpa}, @samp{apop}, @samp{anonymous}, @samp{gssapi}, @samp{otp}, @samp{skey}, and @samp{gss-spnego}.  See also the @samp{disable-plaintext-auth} setting."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28976
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} space-separated-string-list director-servers"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28981
msgid "List of IPs or hostnames to all director servers, including ourself.  Ports can be specified as ip:port.  The default port is the same as what director service's @samp{inet-listener} is using.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28983
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} space-separated-string-list director-mail-servers"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28987
msgid "List of IPs or hostnames to all backend mail servers.  Ranges are allowed too, like 10.0.0.10-10.0.0.30.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28989
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string director-user-expire"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28993
msgid "How long to redirect users to a specific server after it no longer has any connections.  Defaults to @samp{\"15 min\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28995
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string director-username-hash"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29000
msgid "How the username is translated before being hashed.  Useful values include %Ln if user can log in with or without @@domain, %Ld if mailboxes are shared within domain.  Defaults to @samp{\"%Lu\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29002
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string log-path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29006
msgid "Log file to use for error messages.  @samp{syslog} logs to syslog, @samp{/dev/stderr} logs to stderr.  Defaults to @samp{\"syslog\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29008
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string info-log-path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29012
msgid "Log file to use for informational messages.  Defaults to @samp{log-path}.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29014
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string debug-log-path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29018
msgid "Log file to use for debug messages.  Defaults to @samp{info-log-path}.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29020
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string syslog-facility"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29025
msgid "Syslog facility to use if you're logging to syslog.  Usually if you don't want to use @samp{mail}, you'll use local0..local7.  Also other standard facilities are supported.  Defaults to @samp{\"mail\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29027
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean auth-verbose?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29031
msgid "Log unsuccessful authentication attempts and the reasons why they failed.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29033
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string auth-verbose-passwords"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29040
msgid "In case of password mismatches, log the attempted password.  Valid values are no, plain and sha1.  sha1 can be useful for detecting brute force password attempts vs.  user simply trying the same password over and over again.  You can also truncate the value to n chars by appending \":n\" (e.g.@: sha1:6).  Defaults to @samp{\"no\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29042
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean auth-debug?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29046
msgid "Even more verbose logging for debugging purposes.  Shows for example SQL queries.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29048
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean auth-debug-passwords?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29053
msgid "In case of password mismatches, log the passwords and used scheme so the problem can be debugged.  Enabling this also enables @samp{auth-debug}.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29055
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean mail-debug?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29059
msgid "Enable mail process debugging.  This can help you figure out why Dovecot isn't finding your mails.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29061
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean verbose-ssl?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29064
msgid "Show protocol level SSL errors.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29066
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string log-timestamp"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29070
msgid "Prefix for each line written to log file.  % codes are in strftime(3) format.  Defaults to @samp{\"\\\"%b %d %H:%M:%S \\\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29072
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} space-separated-string-list login-log-format-elements"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29076
msgid "List of elements we want to log.  The elements which have a non-empty variable value are joined together to form a comma-separated string."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29078
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string login-log-format"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29082
msgid "Login log format.  %s contains @samp{login-log-format-elements} string, %$ contains the data we want to log.  Defaults to @samp{\"%$: %s\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29084
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mail-log-prefix"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29088
msgid "Log prefix for mail processes.  See doc/wiki/Variables.txt for list of possible variables you can use.  Defaults to @samp{\"\\\"%s(%u)<%@{pid@}><%@{session@}>: \\\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29090
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string deliver-log-format"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29092
msgid "Format to use for logging mail deliveries.  You can use variables:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29093
#, no-wrap
msgid "%$"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29095
msgid "Delivery status message (e.g.@: @samp{saved to INBOX})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29095
#, no-wrap
msgid "%m"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29097
msgid "Message-ID"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29097 guix-git/doc/guix.texi:29640
#, no-wrap
msgid "%s"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29099
msgid "Subject"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29099
#, no-wrap
msgid "%f"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29101
msgid "From address"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29101
#, no-wrap
msgid "%p"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29103
msgid "Physical size"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29103
#, no-wrap
msgid "%w"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29105
msgid "Virtual size."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29107
msgid "Defaults to @samp{\"msgid=%m: %$\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29109
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mail-location"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29114
msgid "Location for users' mailboxes.  The default is empty, which means that Dovecot tries to find the mailboxes automatically.  This won't work if the user doesn't yet have any mail, so you should explicitly tell Dovecot the full location."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29120
msgid "If you're using mbox, giving a path to the INBOX file (e.g.@: @file{/var/mail/%u}) isn't enough.  You'll also need to tell Dovecot where the other mailboxes are kept.  This is called the @emph{root mail directory}, and it must be the first path given in the @samp{mail-location} setting."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29122
msgid "There are a few special variables you can use, e.g.:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29124
#, no-wrap
msgid "%u"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29126
msgid "username"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29126 guix-git/doc/guix.texi:29636
#, no-wrap
msgid "%n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29128
msgid "user part in user@@domain, same as %u if there's no domain"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29128
#, no-wrap
msgid "%d"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29130
msgid "domain part in user@@domain, empty if there's no domain"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29130
#, no-wrap
msgid "%h"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29132
msgid "home directory"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29135
msgid "See doc/wiki/Variables.txt for full list.  Some examples:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29136
#, no-wrap
msgid "maildir:~/Maildir"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29137
#, no-wrap
msgid "mbox:~/mail:INBOX=/var/mail/%u"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29138
#, no-wrap
msgid "mbox:/var/mail/%d/%1n/%n:INDEX=/var/indexes/%d/%1n/%"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29141 guix-git/doc/guix.texi:29153
#: guix-git/doc/guix.texi:29181 guix-git/doc/guix.texi:29952
#: guix-git/doc/guix.texi:29966 guix-git/doc/guix.texi:29973
#: guix-git/doc/guix.texi:29980 guix-git/doc/guix.texi:30010
#: guix-git/doc/guix.texi:30108 guix-git/doc/guix.texi:41548
#: guix-git/doc/guix.texi:41556 guix-git/doc/guix.texi:41564
#: guix-git/doc/guix.texi:41672 guix-git/doc/guix.texi:41697
#: guix-git/doc/guix.texi:41828 guix-git/doc/guix.texi:41836
#: guix-git/doc/guix.texi:41844 guix-git/doc/guix.texi:41852
#: guix-git/doc/guix.texi:41860 guix-git/doc/guix.texi:41868
#: guix-git/doc/guix.texi:41891 guix-git/doc/guix.texi:41899
#: guix-git/doc/guix.texi:41951 guix-git/doc/guix.texi:41967
#: guix-git/doc/guix.texi:41975 guix-git/doc/guix.texi:42015
#: guix-git/doc/guix.texi:42038 guix-git/doc/guix.texi:42060
#: guix-git/doc/guix.texi:42067 guix-git/doc/guix.texi:42102
#: guix-git/doc/guix.texi:42110 guix-git/doc/guix.texi:42134
#: guix-git/doc/guix.texi:42166 guix-git/doc/guix.texi:42195
#: guix-git/doc/guix.texi:42202 guix-git/doc/guix.texi:42209
#: guix-git/doc/guix.texi:42217 guix-git/doc/guix.texi:42231
#: guix-git/doc/guix.texi:42240 guix-git/doc/guix.texi:42250
#: guix-git/doc/guix.texi:42257 guix-git/doc/guix.texi:42264
#: guix-git/doc/guix.texi:42271 guix-git/doc/guix.texi:42342
#: guix-git/doc/guix.texi:42349 guix-git/doc/guix.texi:42356
#: guix-git/doc/guix.texi:42365 guix-git/doc/guix.texi:42381
#: guix-git/doc/guix.texi:42388 guix-git/doc/guix.texi:42395
#: guix-git/doc/guix.texi:42402 guix-git/doc/guix.texi:42410
#: guix-git/doc/guix.texi:42418
msgid "Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29143
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mail-uid"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29148
msgid "System user and group used to access mails.  If you use multiple, userdb can override these by returning uid or gid fields.  You can use either numbers or names.  <doc/wiki/UserIds.txt>.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29150
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mail-gid"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29155
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mail-privileged-group"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29161
msgid "Group to enable temporarily for privileged operations.  Currently this is used only with INBOX when either its initial creation or dotlocking fails.  Typically this is set to @samp{\"mail\"} to give access to @file{/var/mail}.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29163
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mail-access-groups"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29171
msgid "Grant access to these supplementary groups for mail processes.  Typically these are used to set up access to shared mailboxes.  Note that it may be dangerous to set these if users can create symlinks (e.g.@: if @samp{mail} group is set here, @code{ln -s /var/mail ~/mail/var} could allow a user to delete others' mailboxes, or @code{ln -s /secret/shared/box ~/mail/mybox} would allow reading it).  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29173
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mail-attribute-dict"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29176
msgid "The location of a dictionary used to store @code{IMAP METADATA} as defined by @uref{https://tools.ietf.org/html/rfc5464, RFC@tie{}5464}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29179
msgid "The IMAP METADATA commands are available only if the ``imap'' protocol configuration's @code{imap-metadata?} field is @samp{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29184
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean mail-full-filesystem-access?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29190
msgid "Allow full file system access to clients.  There's no access checks other than what the operating system does for the active UID/GID@.  It works with both maildir and mboxes, allowing you to prefix mailboxes names with e.g.@: @file{/path/} or @file{~user/}.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29192
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean mmap-disable?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29196
msgid "Don't use @code{mmap()} at all.  This is required if you store indexes to shared file systems (NFS or clustered file system).  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29198
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean dotlock-use-excl?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29203
msgid "Rely on @samp{O_EXCL} to work when creating dotlock files.  NFS supports @samp{O_EXCL} since version 3, so this should be safe to use nowadays by default.  Defaults to @samp{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29205
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mail-fsync"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29207
msgid "When to use fsync() or fdatasync() calls:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29208
#, no-wrap
msgid "optimized"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29210
msgid "Whenever necessary to avoid losing important data"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29212
msgid "Useful with e.g.@: NFS when @code{write()}s are delayed"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29214
msgid "Never use it (best performance, but crashes can lose data)."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29216
msgid "Defaults to @samp{\"optimized\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29218
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean mail-nfs-storage?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29223
msgid "Mail storage exists in NFS@.  Set this to yes to make Dovecot flush NFS caches whenever needed.  If you're using only a single mail server this isn't needed.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29225
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean mail-nfs-index?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29229
msgid "Mail index files also exist in NFS@.  Setting this to yes requires @samp{mmap-disable? #t} and @samp{fsync-disable? #f}.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29231
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string lock-method"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29237
msgid "Locking method for index files.  Alternatives are fcntl, flock and dotlock.  Dotlocking uses some tricks which may create more disk I/O than other locking methods.  NFS users: flock doesn't work, remember to change @samp{mmap-disable}.  Defaults to @samp{\"fcntl\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29239
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} file-name mail-temp-dir"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29243
msgid "Directory in which LDA/LMTP temporarily stores incoming mails >128 kB.  Defaults to @samp{\"/tmp\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29245
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer first-valid-uid"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29251
msgid "Valid UID range for users.  This is mostly to make sure that users can't log in as daemons or other system users.  Note that denying root logins is hardcoded to dovecot binary and can't be done even if @samp{first-valid-uid} is set to 0.  Defaults to @samp{500}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29253
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer last-valid-uid"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29258
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer first-valid-gid"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29263
msgid "Valid GID range for users.  Users having non-valid GID as primary group ID aren't allowed to log in.  If user belongs to supplementary groups with non-valid GIDs, those groups are not set.  Defaults to @samp{1}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29265
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer last-valid-gid"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29270
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer mail-max-keyword-length"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29274
msgid "Maximum allowed length for mail keyword name.  It's only forced when trying to create new keywords.  Defaults to @samp{50}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29276
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} colon-separated-file-name-list valid-chroot-dirs"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29286
msgid "List of directories under which chrooting is allowed for mail processes (i.e.@: @file{/var/mail} will allow chrooting to @file{/var/mail/foo/bar} too).  This setting doesn't affect @samp{login-chroot} @samp{mail-chroot} or auth chroot settings.  If this setting is empty, @samp{/./} in home dirs are ignored.  WARNING: Never add directories here which local users can modify, that may lead to root exploit.  Usually this should be done only if you don't allow shell access for users.  <doc/wiki/Chrooting.txt>.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29288
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mail-chroot"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29297
msgid "Default chroot directory for mail processes.  This can be overridden for specific users in user database by giving @samp{/./} in user's home directory (e.g.@: @samp{/home/./user} chroots into @file{/home}).  Note that usually there is no real need to do chrooting, Dovecot doesn't allow users to access files outside their mail directory anyway.  If your home directories are prefixed with the chroot directory, append @samp{/.} to @samp{mail-chroot}.  <doc/wiki/Chrooting.txt>.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29299
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} file-name auth-socket-path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29303
msgid "UNIX socket path to master authentication server to find users.  This is used by imap (for shared users) and lda.  Defaults to @samp{\"/var/run/dovecot/auth-userdb\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29305
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} file-name mail-plugin-dir"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29308
msgid "Directory where to look up mail plugins.  Defaults to @samp{\"/usr/lib/dovecot\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29310
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} space-separated-string-list mail-plugins"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29314
msgid "List of plugins to load for all services.  Plugins specific to IMAP, LDA, etc.@: are added to this list in their own .conf files.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29316
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer mail-cache-min-mail-count"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29321
msgid "The minimum number of mails in a mailbox before updates are done to cache file.  This allows optimizing Dovecot's behavior to do less disk writes at the cost of more disk reads.  Defaults to @samp{0}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29323
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mailbox-idle-check-interval"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29330
msgid "When IDLE command is running, mailbox is checked once in a while to see if there are any new mails or other changes.  This setting defines the minimum time to wait between those checks.  Dovecot can also use dnotify, inotify and kqueue to find out immediately when changes occur.  Defaults to @samp{\"30 secs\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29332
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean mail-save-crlf?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29339
msgid "Save mails with CR+LF instead of plain LF@.  This makes sending those mails take less CPU, especially with sendfile() syscall with Linux and FreeBSD@.  But it also creates a bit more disk I/O which may just make it slower.  Also note that if other software reads the mboxes/maildirs, they may handle the extra CRs wrong and cause problems.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29341
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean maildir-stat-dirs?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29349
msgid "By default LIST command returns all entries in maildir beginning with a dot.  Enabling this option makes Dovecot return only entries which are directories.  This is done by stat()ing each entry, so it causes more disk I/O.  (For systems setting struct @samp{dirent->d_type} this check is free and it's done always regardless of this setting).  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29351
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean maildir-copy-with-hardlinks?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29356
msgid "When copying a message, do it with hard links whenever possible.  This makes the performance much better, and it's unlikely to have any side effects.  Defaults to @samp{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29358
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean maildir-very-dirty-syncs?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29363
msgid "Assume Dovecot is the only MUA accessing Maildir: Scan cur/ directory only when its mtime changes unexpectedly or when we can't find the mail otherwise.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29365
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} space-separated-string-list mbox-read-locks"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29368
msgid "Which locking methods to use for locking mbox.  There are four available:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29370
#, no-wrap
msgid "dotlock"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29374
msgid "Create <mailbox>.lock file.  This is the oldest and most NFS-safe solution.  If you want to use /var/mail/ like directory, the users will need write access to that directory."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29374
#, no-wrap
msgid "dotlock-try"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29377
msgid "Same as dotlock, but if it fails because of permissions or because there isn't enough disk space, just skip it."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29377
#, no-wrap
msgid "fcntl"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29379
msgid "Use this if possible.  Works with NFS too if lockd is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29379
#, no-wrap
msgid "flock"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29381 guix-git/doc/guix.texi:29383
msgid "May not exist in all systems.  Doesn't work with NFS."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29381
#, no-wrap
msgid "lockf"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29389
msgid "You can use multiple locking methods; if you do the order they're declared in is important to avoid deadlocks if other MTAs/MUAs are using multiple locking methods as well.  Some operating systems don't allow using some of them simultaneously."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29391
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} space-separated-string-list mbox-write-locks"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29395
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mbox-lock-timeout"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29398
msgid "Maximum time to wait for lock (all of them) before aborting.  Defaults to @samp{\"5 mins\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29400
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mbox-dotlock-change-timeout"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29404
msgid "If dotlock exists but the mailbox isn't modified in any way, override the lock file after this much time.  Defaults to @samp{\"2 mins\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29406
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean mbox-dirty-syncs?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29417
msgid "When mbox changes unexpectedly we have to fully read it to find out what changed.  If the mbox is large this can take a long time.  Since the change is usually just a newly appended mail, it'd be faster to simply read the new mails.  If this setting is enabled, Dovecot does this but still safely fallbacks to re-reading the whole mbox file whenever something in mbox isn't how it's expected to be.  The only real downside to this setting is that if some other MUA changes message flags, Dovecot doesn't notice it immediately.  Note that a full sync is done with SELECT, EXAMINE, EXPUNGE and CHECK commands.  Defaults to @samp{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29419
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean mbox-very-dirty-syncs?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29424
msgid "Like @samp{mbox-dirty-syncs}, but don't do full syncs even with SELECT, EXAMINE, EXPUNGE or CHECK commands.  If this is set, @samp{mbox-dirty-syncs} is ignored.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29426
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean mbox-lazy-writes?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29432
msgid "Delay writing mbox headers until doing a full write sync (EXPUNGE and CHECK commands and when closing the mailbox).  This is especially useful for POP3 where clients often delete all mails.  The downside is that our changes aren't immediately visible to other MUAs.  Defaults to @samp{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29434
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer mbox-min-index-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29439
msgid "If mbox size is smaller than this (e.g.@: 100k), don't write index files.  If an index file already exists it's still read, just not updated.  Defaults to @samp{0}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29441
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer mdbox-rotate-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29444
msgid "Maximum dbox file size until it's rotated.  Defaults to @samp{10000000}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29446
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mdbox-rotate-interval"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29451
msgid "Maximum dbox file age until it's rotated.  Typically in days.  Day begins from midnight, so 1d = today, 2d = yesterday, etc.  0 = check disabled.  Defaults to @samp{\"1d\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29453
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean mdbox-preallocate-space?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29458
msgid "When creating new mdbox files, immediately preallocate their size to @samp{mdbox-rotate-size}.  This setting currently works only in Linux with some file systems (ext4, xfs).  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29460
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mail-attachment-dir"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29464
msgid "sdbox and mdbox support saving mail attachments to external files, which also allows single instance storage for them.  Other backends don't support this for now."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29466
msgid "WARNING: This feature hasn't been tested much yet.  Use at your own risk."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29469
msgid "Directory root where to store mail attachments.  Disabled, if empty.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29471
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer mail-attachment-min-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29476
msgid "Attachments smaller than this aren't saved externally.  It's also possible to write a plugin to disable saving specific attachments externally.  Defaults to @samp{128000}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29478
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mail-attachment-fs"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29480
msgid "File system backend to use for saving attachments:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29481
#, no-wrap
msgid "posix"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29483
msgid "No SiS done by Dovecot (but this might help FS's own deduplication)"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29483
#, no-wrap
msgid "sis posix"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29485
msgid "SiS with immediate byte-by-byte comparison during saving"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29485
#, no-wrap
msgid "sis-queue posix"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29487
msgid "SiS with delayed comparison and deduplication."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29489
msgid "Defaults to @samp{\"sis posix\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29491
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mail-attachment-hash"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29497
msgid "Hash format to use in attachment filenames.  You can add any text and variables: @code{%@{md4@}}, @code{%@{md5@}}, @code{%@{sha1@}}, @code{%@{sha256@}}, @code{%@{sha512@}}, @code{%@{size@}}.  Variables can be truncated, e.g.@: @code{%@{sha256:80@}} returns only first 80 bits.  Defaults to @samp{\"%@{sha1@}\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29499
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer default-process-limit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29504
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer default-client-limit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29507
msgid "Defaults to @samp{1000}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29509
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer default-vsz-limit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29514
msgid "Default VSZ (virtual memory size) limit for service processes.  This is mainly intended to catch and kill processes that leak memory before they eat up everything.  Defaults to @samp{256000000}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29516
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string default-login-user"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29521
msgid "Login user is internally used by login processes.  This is the most untrusted user in Dovecot system.  It shouldn't have access to anything at all.  Defaults to @samp{\"dovenull\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29523
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string default-internal-user"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29528
msgid "Internal user is used by unprivileged processes.  It should be separate from login user, so that login processes can't disturb other processes.  Defaults to @samp{\"dovecot\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29530
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string ssl?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29533
msgid "SSL/TLS support: yes, no, required.  <doc/wiki/SSL.txt>.  Defaults to @samp{\"required\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29535
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string ssl-cert"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29538
msgid "PEM encoded X.509 SSL/TLS certificate (public key).  Defaults to @samp{\"</etc/dovecot/default.pem\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29540
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string ssl-key"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29545
msgid "PEM encoded SSL/TLS private key.  The key is opened before dropping root privileges, so keep the key file unreadable by anyone but root.  Defaults to @samp{\"</etc/dovecot/private/default.pem\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29547
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string ssl-key-password"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29553
msgid "If key file is password protected, give the password here.  Alternatively give it when starting dovecot with -p parameter.  Since this file is often world-readable, you may want to place this setting instead to a different.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29555
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string ssl-ca"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29561
msgid "PEM encoded trusted certificate authority.  Set this only if you intend to use @samp{ssl-verify-client-cert? #t}.  The file should contain the CA certificate(s) followed by the matching CRL(s).  (e.g.@: @samp{ssl-ca </etc/ssl/certs/ca.pem}).  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29563
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean ssl-require-crl?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29566
msgid "Require that CRL check succeeds for client certificates.  Defaults to @samp{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29568
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean ssl-verify-client-cert?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29572
msgid "Request client to send a certificate.  If you also want to require it, set @samp{auth-ssl-require-client-cert? #t} in auth section.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29574
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string ssl-cert-username-field"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29579
msgid "Which field from certificate to use for username.  commonName and x500UniqueIdentifier are the usual choices.  You'll also need to set @samp{auth-ssl-username-from-cert? #t}.  Defaults to @samp{\"commonName\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29581
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string ssl-min-protocol"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29584
msgid "Minimum SSL protocol version to accept.  Defaults to @samp{\"TLSv1\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29586
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string ssl-cipher-list"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29589
msgid "SSL ciphers to use.  Defaults to @samp{\"ALL:!kRSA:!SRP:!kDHd:!DSS:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK:!RC4:!ADH:!LOW@@STRENGTH\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29591
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string ssl-crypto-device"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29594
msgid "SSL crypto device to use, for valid values run \"openssl engine\".  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29596
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string postmaster-address"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29600
msgid "Address to use when sending rejection mails.  %d expands to recipient domain.  Defaults to @samp{\"postmaster@@%d\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29602
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string hostname"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29606
msgid "Hostname to use in various parts of sent mails (e.g.@: in Message-Id)  and in LMTP replies.  Default is the system's real hostname@@domain.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29608
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean quota-full-tempfail?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29612
msgid "If user is over quota, return with temporary failure instead of bouncing the mail.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29614
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} file-name sendmail-path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29617
msgid "Binary to use for sending mails.  Defaults to @samp{\"/usr/sbin/sendmail\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29619
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string submission-host"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29623
msgid "If non-empty, send mails via this SMTP host[:port] instead of sendmail.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29625
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string rejection-subject"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29629
msgid "Subject: header to use for rejection mails.  You can use the same variables as for @samp{rejection-reason} below.  Defaults to @samp{\"Rejected: %s\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29631
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string rejection-reason"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29634
msgid "Human readable error message for rejection mails.  You can use variables:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29638
msgid "CRLF"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29638
#, no-wrap
msgid "%r"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29640
msgid "reason"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29642
msgid "original subject"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29642
#, no-wrap
msgid "%t"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29644
msgid "recipient"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29646
msgid "Defaults to @samp{\"Your message to <%t> was automatically rejected:%n%r\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29648
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string recipient-delimiter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29652
msgid "Delimiter character between local-part and detail in email address.  Defaults to @samp{\"+\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29654
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string lda-original-recipient-header"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29660
msgid "Header where the original recipient address (SMTP's RCPT TO: address) is taken from if not available elsewhere.  With dovecot-lda -a parameter overrides this.  A commonly used header for this is X-Original-To.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29662
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean lda-mailbox-autocreate?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29666
msgid "Should saving a mail to a nonexistent mailbox automatically create it?.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29668
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean lda-mailbox-autosubscribe?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29672
msgid "Should automatically created mailboxes be also automatically subscribed?.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29674
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer imap-max-line-length"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29680
msgid "Maximum IMAP command line length.  Some clients generate very long command lines with huge mailboxes, so you may need to raise this if you get \"Too long argument\" or \"IMAP command line too large\" errors often.  Defaults to @samp{64000}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29682
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string imap-logout-format"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29684
msgid "IMAP logout format string:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29685
#, no-wrap
msgid "%i"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29687
msgid "total number of bytes read from client"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29687
#, no-wrap
msgid "%o"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29689
msgid "total number of bytes sent to client."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29692
msgid "See @file{doc/wiki/Variables.txt} for a list of all the variables you can use.  Defaults to @samp{\"in=%i out=%o deleted=%@{deleted@} expunged=%@{expunged@} trashed=%@{trashed@} hdr_count=%@{fetch_hdr_count@} hdr_bytes=%@{fetch_hdr_bytes@} body_count=%@{fetch_body_count@} body_bytes=%@{fetch_body_bytes@}\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29694
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string imap-capability"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29698
msgid "Override the IMAP CAPABILITY response.  If the value begins with '+', add the given capabilities on top of the defaults (e.g.@: +XFOO XBAR).  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29700
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string imap-idle-notify-interval"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29704
msgid "How long to wait between \"OK Still here\" notifications when client is IDLEing.  Defaults to @samp{\"2 mins\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29706
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string imap-id-send"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29712
msgid "ID field names and values to send to clients.  Using * as the value makes Dovecot use the default value.  The following fields have default values currently: name, version, os, os-version, support-url, support-email.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29714
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string imap-id-log"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29717
msgid "ID fields sent by client to log.  * means everything.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29719
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} space-separated-string-list imap-client-workarounds"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29721
msgid "Workarounds for various client bugs:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29723
#, no-wrap
msgid "delay-newmail"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29730
msgid "Send EXISTS/RECENT new mail notifications only when replying to NOOP and CHECK commands.  Some clients ignore them otherwise, for example OSX Mail (<v2.1).  Outlook Express breaks more badly though, without this it may show user \"Message no longer in server\" errors.  Note that OE6 still breaks even with this workaround if synchronization is set to \"Headers Only\"."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29731
#, no-wrap
msgid "tb-extra-mailbox-sep"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29735
msgid "Thunderbird gets somehow confused with LAYOUT=fs (mbox and dbox) and adds extra @samp{/} suffixes to mailbox names.  This option causes Dovecot to ignore the extra @samp{/} instead of treating it as invalid mailbox name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29736
#, no-wrap
msgid "tb-lsub-flags"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29740
msgid "Show \\Noselect flags for LSUB replies with LAYOUT=fs (e.g.@: mbox).  This makes Thunderbird realize they aren't selectable and show them greyed out, instead of only later giving \"not selectable\" popup error."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29744
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string imap-urlauth-host"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29747
msgid "Host allowed in URLAUTH URLs sent by client.  \"*\" allows all.  Defaults to @samp{\"\"}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:29755
msgid "Whew! Lots of configuration options.  The nice thing about it though is that Guix has a complete interface to Dovecot's configuration language.  This allows not only a nice way to declare configurations, but also offers reflective capabilities as well: users can write code to inspect and transform configurations from within Scheme."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:29761
msgid "However, it could be that you just want to get a @code{dovecot.conf} up and running.  In that case, you can pass an @code{opaque-dovecot-configuration} as the @code{#:config} parameter to @code{dovecot-service}.  As its name indicates, an opaque configuration does not have easy reflective capabilities."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:29763
msgid "Available @code{opaque-dovecot-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29764
#, no-wrap
msgid "{@code{opaque-dovecot-configuration} parameter} package dovecot"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29768
#, no-wrap
msgid "{@code{opaque-dovecot-configuration} parameter} string string"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29770
msgid "The contents of the @code{dovecot.conf}, as a string."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:29774
msgid "For example, if your @code{dovecot.conf} is just the empty string, you could instantiate a dovecot service like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:29779
#, no-wrap
msgid ""
"(dovecot-service #:config\n"
"                 (opaque-dovecot-configuration\n"
"                  (string \"\")))\n"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:29781
#, no-wrap
msgid "OpenSMTPD Service"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:29783
#, no-wrap
msgid "opensmtpd-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:29787
msgid "This is the type of the @uref{https://www.opensmtpd.org, OpenSMTPD} service, whose value should be an @code{opensmtpd-configuration} object as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:29792
#, no-wrap
msgid ""
"(service opensmtpd-service-type\n"
"         (opensmtpd-configuration\n"
"           (config-file (local-file \"./my-smtpd.conf\"))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:29795
#, no-wrap
msgid "{Data Type} opensmtpd-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:29797
msgid "Data type representing the configuration of opensmtpd."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29799
#, no-wrap
msgid "@code{package} (default: @var{opensmtpd})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29801
msgid "Package object of the OpenSMTPD SMTP server."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29806
msgid "This option can be used to provide a list of symbols naming Shepherd services that this service will depend on, such as @code{'networking} if you want to configure OpenSMTPD to listen on non-loopback interfaces."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29807
#, no-wrap
msgid "@code{config-file} (default: @code{%default-opensmtpd-config-file})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29812
msgid "File-like object of the OpenSMTPD configuration file to use.  By default it listens on the loopback network interface, and allows for mail from users and daemons on the local machine, as well as permitting email to remote servers.  Run @command{man smtpd.conf} for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29813
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{log-file} (default: @code{\"/var/log/mail.log\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:29816
msgid "The file location for the OpenSMTPD log file.  Logging occurs in the foreground via the Shepherd, i.e. OpenSMTPD does not detach."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29817
#, no-wrap
msgid "@code{setgid-commands?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29822
msgid "Make the following commands setgid to @code{smtpq} so they can be executed: @command{smtpctl}, @command{sendmail}, @command{send-mail}, @command{makemap}, @command{mailq}, and @command{newaliases}.  @xref{Privileged Programs}, for more information on setgid programs."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:29825
#, no-wrap
msgid "Exim Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:29827
#, no-wrap
msgid "mail transfer agent (MTA)"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:29828
#, no-wrap
msgid "MTA (mail transfer agent)"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:29829
#, no-wrap
msgid "SMTP"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:29831
#, no-wrap
msgid "exim-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:29835
msgid "This is the type of the @uref{https://exim.org, Exim} mail transfer agent (MTA), whose value should be an @code{exim-configuration} object as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:29840
#, no-wrap
msgid ""
"(service exim-service-type\n"
"         (exim-configuration\n"
"           (config-file (local-file \"./my-exim.conf\"))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:29846
msgid "In order to use an @code{exim-service-type} service you must also have a @code{mail-aliases-service-type} service present in your @code{operating-system} (even if it has no aliases)."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:29847
#, no-wrap
msgid "{Data Type} exim-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:29849
msgid "Data type representing the configuration of exim."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29851
#, no-wrap
msgid "@code{package} (default: @var{exim})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29853
msgid "Package object of the Exim server."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29860
msgid "File-like object of the Exim configuration file to use.  If its value is @code{#f} then use the default configuration file from the package provided in @code{package}.  The resulting configuration file is loaded after setting the @code{exim_user} and @code{exim_group} configuration variables."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:29864
#, no-wrap
msgid "Getmail service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:29866
#, no-wrap
msgid "IMAP"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:29867
#, no-wrap
msgid "POP"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:29869
#, no-wrap
msgid "getmail-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:29872
msgid "This is the type of the @uref{http://pyropus.ca/software/getmail/, Getmail} mail retriever, whose value should be a @code{getmail-configuration}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:29875
msgid "Available @code{getmail-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29876
#, no-wrap
msgid "{@code{getmail-configuration} parameter} symbol name"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29878
msgid "A symbol to identify the getmail service."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29880
msgid "Defaults to @samp{\"unset\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29883
#, no-wrap
msgid "{@code{getmail-configuration} parameter} package package"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29885
msgid "The getmail package to use."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29888
#, no-wrap
msgid "{@code{getmail-configuration} parameter} string user"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29890
msgid "The user to run getmail as."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29892 guix-git/doc/guix.texi:29899
msgid "Defaults to @samp{\"getmail\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29895
#, no-wrap
msgid "{@code{getmail-configuration} parameter} string group"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29897
msgid "The group to run getmail as."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29902
#, no-wrap
msgid "{@code{getmail-configuration} parameter} string directory"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29904
msgid "The getmail directory to use."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29906
msgid "Defaults to @samp{\"/var/lib/getmail/default\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29909
#, no-wrap
msgid "{@code{getmail-configuration} parameter} getmail-configuration-file rcfile"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29911
msgid "The getmail configuration file to use."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29913
msgid "Available @code{getmail-configuration-file} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29914
#, no-wrap
msgid "{@code{getmail-configuration-file} parameter} getmail-retriever-configuration retriever"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29916
msgid "What mail account to retrieve mail from, and how to access that account."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29918
msgid "Available @code{getmail-retriever-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29919
#, no-wrap
msgid "{@code{getmail-retriever-configuration} parameter} string type"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29922
msgid "The type of mail retriever to use.  Valid values include @samp{passwd} and @samp{static}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29924
msgid "Defaults to @samp{\"SimpleIMAPSSLRetriever\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29927
#, no-wrap
msgid "{@code{getmail-retriever-configuration} parameter} string server"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29929 guix-git/doc/guix.texi:29936
msgid "Username to login to the mail server with."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29931 guix-git/doc/guix.texi:29938
#: guix-git/doc/guix.texi:30002
msgid "Defaults to @samp{unset}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29934
#, no-wrap
msgid "{@code{getmail-retriever-configuration} parameter} string username"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29941
#, no-wrap
msgid "{@code{getmail-retriever-configuration} parameter} non-negative-integer port"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29943
msgid "Port number to connect to."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29948
#, no-wrap
msgid "{@code{getmail-retriever-configuration} parameter} string password"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29950 guix-git/doc/guix.texi:29957
msgid "Override fields from passwd."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29955
#, no-wrap
msgid "{@code{getmail-retriever-configuration} parameter} list password-command"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29962
#, no-wrap
msgid "{@code{getmail-retriever-configuration} parameter} string keyfile"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29964
msgid "PEM-formatted key file to use for the TLS negotiation."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29969
#, no-wrap
msgid "{@code{getmail-retriever-configuration} parameter} string certfile"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29971
msgid "PEM-formatted certificate file to use for the TLS negotiation."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29976
#, no-wrap
msgid "{@code{getmail-retriever-configuration} parameter} string ca-certs"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29978
msgid "CA certificates to use."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29983
#, no-wrap
msgid "{@code{getmail-retriever-configuration} parameter} parameter-alist extra-parameters"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29985
msgid "Extra retriever parameters."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29992
#, no-wrap
msgid "{@code{getmail-configuration-file} parameter} getmail-destination-configuration destination"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29994
msgid "What to do with retrieved messages."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29996
msgid "Available @code{getmail-destination-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29997
#, no-wrap
msgid "{@code{getmail-destination-configuration} parameter} string type"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30000
msgid "The type of mail destination.  Valid values include @samp{Maildir}, @samp{Mboxrd} and @samp{MDA_external}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30005
#, no-wrap
msgid "{@code{getmail-destination-configuration} parameter} string-or-filelike path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30008
msgid "The path option for the mail destination.  The behaviour depends on the chosen type."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30013
#, no-wrap
msgid "{@code{getmail-destination-configuration} parameter} parameter-alist extra-parameters"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30015
msgid "Extra destination parameters"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30022
#, no-wrap
msgid "{@code{getmail-configuration-file} parameter} getmail-options-configuration options"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30024
msgid "Configure getmail."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30026
msgid "Available @code{getmail-options-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30027
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} non-negative-integer verbose"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30032
msgid "If set to @samp{0}, getmail will only print warnings and errors.  A value of @samp{1} means that messages will be printed about retrieving and deleting messages.  If set to @samp{2}, getmail will print messages about each of its actions."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30034 guix-git/doc/guix.texi:38683
msgid "Defaults to @samp{1}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30037
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} boolean read-all"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30040
msgid "If true, getmail will retrieve all available messages.  Otherwise it will only retrieve messages it hasn't seen previously."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30045
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} boolean delete"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30049
msgid "If set to true, messages will be deleted from the server after retrieving and successfully delivering them.  Otherwise, messages will be left on the server."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30054
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} non-negative-integer delete-after"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30059
msgid "Getmail will delete messages this number of days after seeing them, if they have been delivered.  This means messages will be left on the server this number of days after delivering them.  A value of @samp{0} disabled this feature."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30064
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} non-negative-integer delete-bigger-than"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30068
msgid "Delete messages larger than this of bytes after retrieving them, even if the delete and delete-after options are disabled.  A value of @samp{0} disables this feature."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30073
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} non-negative-integer max-bytes-per-session"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30076
msgid "Retrieve messages totalling up to this number of bytes before closing the session with the server.  A value of @samp{0} disables this feature."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30081
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} non-negative-integer max-message-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30084
msgid "Don't retrieve messages larger than this number of bytes.  A value of @samp{0} disables this feature."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30089
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} boolean delivered-to"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30091
msgid "If true, getmail will add a Delivered-To header to messages."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30096
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} boolean received"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30098
msgid "If set, getmail adds a Received header to the messages."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30103
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} string message-log"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30106
msgid "Getmail will record a log of its actions to the named file.  A value of @samp{\"\"} disables this feature."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30111
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} boolean message-log-syslog"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30114
msgid "If true, getmail will record a log of its actions using the system logger."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30119
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} boolean message-log-verbose"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30123
msgid "If true, getmail will log information about messages not retrieved and the reason for not retrieving them, as well as starting and ending information lines."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30128
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} parameter-alist extra-parameters"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30130
msgid "Extra options to include."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30139
#, no-wrap
msgid "{@code{getmail-configuration} parameter} list idle"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30143
msgid "A list of mailboxes that getmail should wait on the server for new mail notifications.  This depends on the server supporting the IDLE extension."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30148
#, no-wrap
msgid "{@code{getmail-configuration} parameter} list environment-variables"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30150
msgid "Environment variables to set for getmail."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:30155
#, no-wrap
msgid "Mail Aliases Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:30157
#, no-wrap
msgid "email aliases"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:30158
#, no-wrap
msgid "aliases, for email addresses"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:30160
#, no-wrap
msgid "mail-aliases-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:30163
msgid "This is the type of the service which provides @code{/etc/aliases}, specifying how to deliver mail to users on this system."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:30168
#, no-wrap
msgid ""
"(service mail-aliases-service-type\n"
"         '((\"postmaster\" \"bob\")\n"
"           (\"bob\" \"bob@@example.com\" \"bob@@example2.com\")))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:30176
msgid "The configuration for a @code{mail-aliases-service-type} service is an association list denoting how to deliver mail that comes to this system.  Each entry is of the form @code{(alias addresses ...)}, with @code{alias} specifying the local alias and @code{addresses} specifying where to deliver this user's mail."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:30182
msgid "The aliases aren't required to exist as users on the local system.  In the above example, there doesn't need to be a @code{postmaster} entry in the @code{operating-system}'s @code{user-accounts} in order to deliver the @code{postmaster} mail to @code{bob} (which subsequently would deliver mail to @code{bob@@example.com} and @code{bob@@example2.com})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:30183 guix-git/doc/guix.texi:30184
#, no-wrap
msgid "GNU Mailutils IMAP4 Daemon"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:30186
#, no-wrap
msgid "imap4d-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:30190
msgid "This is the type of the GNU Mailutils IMAP4 Daemon (@pxref{imap4d,,, mailutils, GNU Mailutils Manual}), whose value should be an @code{imap4d-configuration} object as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:30195
#, no-wrap
msgid ""
"(service imap4d-service-type\n"
"         (imap4d-configuration\n"
"           (config-file (local-file \"imap4d.conf\"))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:30198
#, no-wrap
msgid "{Data Type} imap4d-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:30200
msgid "Data type representing the configuration of @command{imap4d}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30202
#, no-wrap
msgid "@code{package} (default: @code{mailutils})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:30204
msgid "The package that provides @command{imap4d}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30205
#, no-wrap
msgid "@code{config-file} (default: @code{%default-imap4d-config-file})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:30209
msgid "File-like object of the configuration file to use, by default it will listen on TCP port 143 of @code{localhost}.  @xref{Conf-imap4d,,, mailutils, GNU Mailutils Manual}, for details."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:30213
#, no-wrap
msgid "Radicale Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:30214
#, no-wrap
msgid "CalDAV"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:30215
#, no-wrap
msgid "CardDAV"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:30217
#, no-wrap
msgid "radicale-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:30223
msgid "This is the type of the @uref{https://radicale.org, Radicale} CalDAV/CardDAV server whose value should be a @code{radicale-configuration}.  The default configuration matches the @uref{https://radicale.org/v3.html#configuration, upstream documentation}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:30225
#, no-wrap
msgid "{Data Type} radicale-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:30228
#, fuzzy
#| msgid "Documentation"
msgid "Data type representing the configuration of @command{radicale}.  Available @code{radicale-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:30230
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{package} (default: @code{radicale}) (type: package)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30232
msgid "Package that provides @command{radicale}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30233
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{auth} (default: @code{'()}) (type: radicale-auth-configuration)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30235
#, fuzzy
#| msgid "Documentation"
msgid "Configuration for auth-related variables."
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:30236
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} radicale-auth-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:30240
msgid "Data type representing the @code{auth} section of a @command{radicale} configuration file.  Available @code{radicale-auth-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30242
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{type} (default: @code{'none}) (type: symbol)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30247
msgid "The method to verify usernames and passwords.  Options are @code{none}, @code{htpasswd}, @code{remote-user}, and @code{http-x-remote-user}.  This value is tied to @code{htpasswd-filename} and @code{htpasswd-encryption}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30248
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{htpasswd-filename} (default: @code{\"/etc/radicale/users\"}) (type: file-name)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30251
msgid "Path to the htpasswd file.  Use htpasswd or similar to generate this file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30252
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{htpasswd-encryption} (default: @code{'md5}) (type: symbol)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30255
msgid "Encryption method used in the htpasswd file.  Options are @code{plain}, @code{bcrypt}, and @code{md5}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30256
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{delay} (default: @code{1}) (type: non-negative-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30258
msgid "Average delay after failed login attempts in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30259
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{realm} (default: @code{\"Radicale - Password Required\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30261
msgid "Message displayed in the client when a password is needed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30266
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{encoding} (default: @code{'()}) (type: radicale-encoding-configuration)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30268
msgid "Configuration for encoding-related variables."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:30269
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} radicale-encoding-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:30273
msgid "Data type representing the @code{encoding} section of a @command{radicale} configuration file.  Available @code{radicale-encoding-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30275
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{request} (default: @code{'utf-8}) (type: symbol)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30277
msgid "Encoding for responding requests."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30278
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{stock} (default: @code{'utf-8}) (type: symbol)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30280
msgid "Encoding for storing local collections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30285
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{headers-file} (default: none) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30287
msgid "Custom HTTP headers."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30288
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{logging} (default: @code{'()}) (type: radicale-logging-configuration)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30290
msgid "Configuration for logging-related variables."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:30291
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} radicale-logging-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:30295
msgid "Data type representing the @code{logging} section of a @command{radicale} configuration file.  Available @code{radicale-logging-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30297
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{level} (default: @code{'warning}) (type: symbol)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30300
msgid "Set the logging level.  One of @code{debug}, @code{info}, @code{warning}, @code{error}, or @code{critical}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30301
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{mask-passwords?} (default: @code{#t}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30303
msgid "Whether to include passwords in logs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30308
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{rights} (default: @code{'()}) (type: radicale-rights-configuration)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30311
msgid "Configuration for rights-related variables.  This should be a @code{radicale-rights-configuration}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:30312
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} radicale-rights-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:30316
msgid "Data type representing the @code{rights} section of a @command{radicale} configuration file.  Available @code{radicale-rights-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30318
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{type} (default: @code{'owner-only}) (type: symbol)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30326
msgid "Backend used to check collection access rights.  The recommended backend is @code{owner-only}.  If access to calendars and address books outside the home directory of users is granted, clients won't detect these collections and will not show them to the user.  Choosing any other method is only useful if you access calendars and address books directly via URL.  Options are @code{authenticate}, @code{owner-only}, @code{owner-write}, and @code{from-file}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30327
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{file} (default: @code{\"\"}) (type: file-name)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30329
msgid "File for the rights backend @code{from-file}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30334
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{server} (default: @code{'()}) (type: radicale-server-configuration)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30336
msgid "Configuration for server-related variables.  Ignored if WSGI is used."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:30337
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} radicale-server-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:30341
msgid "Data type representing the @code{server} section of a @command{radicale} configuration file.  Available @code{radicale-server-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30343
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{hosts} (default: @code{(list \"localhost:5232\")}) (type: list-of-ip-addresses)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30345
msgid "List of IP addresses that the server will bind to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30346
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-connections} (default: @code{8}) (type: non-negative-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30348
msgid "Maximum number of parallel connections.  Set to 0 to disable the limit."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30349
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-content-length} (default: @code{100000000}) (type: non-negative-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30351
msgid "Maximum size of the request body in bytes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30352
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{timeout} (default: @code{30}) (type: non-negative-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30354
msgid "Socket timeout in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30355 guix-git/doc/guix.texi:39605
#, no-wrap
msgid "@code{ssl?} (default: @code{#f}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:30357
msgid "Whether to enable transport layer encryption."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30358
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{certificate} (default: @code{\"/etc/ssl/radicale.cert.pem\"}) (type: file-name)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30360
msgid "Path of the SSL certificate."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30361
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{key} (default: @code{\"/etc/ssl/radicale.key.pem\"}) (type: file-name)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30364
msgid "Path to the private key for SSL.  Only effective if @code{ssl?} is @code{#t}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30365
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{certificate-authority} (default: @code{\"\"}) (type: file-name)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30371
msgid "Path to CA certificate for validating client certificates.  This can be used to secure TCP traffic between Radicale and a reverse proxy.  If you want to authenticate users with client-side certificates, you also have to write an authentication plugin that extracts the username from the certificate."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30376
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{storage} (default: @code{'()}) (type: radicale-storage-configuration)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30378
#, fuzzy
#| msgid "Documentation"
msgid "Configuration for storage-related variables."
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:30379
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} radicale-storage-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:30383
msgid "Data type representing the @code{storage} section of a @command{radicale} configuration file.  Available @code{radicale-storage-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30385
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{type} (default: @code{'multifilesystem}) (type: symbol)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30388
msgid "Backend used to store data.  Options are @code{multifilesystem} and @code{multifilesystem-nolock}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30389
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{filesystem-folder} (default: @code{\"/var/lib/radicale/collections\"}) (type: file-name)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30391
msgid "Folder for storing local collections.  Created if not present."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30392
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-sync-token-age} (default: @code{2592000}) (type: non-negative-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30394
msgid "Delete sync-tokens that are older than the specified time in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30395
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{hook} (default: @code{\"\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30397
msgid "Command run after changes to storage."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30402
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{web-interface?} (default: @code{#t}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30404
msgid "Whether to use Radicale's built-in web interface."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:30409
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Rspamd Service"
msgstr "Servizi"

#. type: cindex
#: guix-git/doc/guix.texi:30411
#, no-wrap
msgid "spam"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:30413
#, fuzzy, no-wrap
#| msgid "Services"
msgid "rspamd-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:30416
msgid "This is the type of the @uref{https://rspamd.com/, Rspamd} filtering system whose value should be a @code{rspamd-configuration}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:30420
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} rspamd-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:30422
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{rspamd-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:30424
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{package} (default: @code{rspamd}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30426
msgid "The package that provides rspamd."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30427
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{config-file} (default: @code{%default-rspamd-config-file}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30431
msgid "File-like object of the configuration file to use.  By default all workers are enabled except fuzzy and they are bound to their usual ports, e.g localhost:11334, localhost:11333 and so on"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30432
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{local.d-files} (default: @code{()}) (type: directory-tree)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30437
msgid "Configuration files in local.d, provided as a list of two element lists where the first element is the filename and the second one is a file-like object.  Settings in these files will be merged with the defaults."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30438
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{override.d-files} (default: @code{()}) (type: directory-tree)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30442
msgid "Configuration files in override.d, provided as a list of two element lists where the first element is the filename and the second one is a file-like object.  Settings in these files will override the defaults."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30443
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{user} (default: @code{%default-rspamd-account}) (type: user-account)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30445
msgid "The user to run rspamd as."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30446
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{group} (default: @code{%default-rspamd-group}) (type: user-group)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30448
msgid "The group to run rspamd as."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:30451
msgid "Force debug output."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30452
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{insecure?} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30454
msgid "Ignore running workers as privileged users."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30455
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{skip-template?} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30457
msgid "Do not apply Jinja templates."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30458
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{shepherd-requirements} (default: @code{(user-processes loopback)}) (type: list-of-symbols)"
msgstr "Documentazione"

#. type: cindex
#: guix-git/doc/guix.texi:30472
#, no-wrap
msgid "messaging"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:30473
#, no-wrap
msgid "jabber"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:30474
#, no-wrap
msgid "XMPP"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:30478
msgid "The @code{(gnu services messaging)} module provides Guix service definitions for messaging services.  Currently it provides the following services:"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:30479
#, no-wrap
msgid "Prosody Service"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:30481
#, no-wrap
msgid "prosody-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:30485
msgid "This is the type for the @uref{https://prosody.im, Prosody XMPP communication server}.  Its value must be a @code{prosody-configuration} record as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:30500
#, no-wrap
msgid ""
"(service prosody-service-type\n"
"         (prosody-configuration\n"
"          (modules-enabled (cons* \"groups\" \"mam\" %default-modules-enabled))\n"
"          (int-components\n"
"           (list\n"
"            (int-component-configuration\n"
"             (hostname \"conference.example.net\")\n"
"             (plugin \"muc\")\n"
"             (mod-muc (mod-muc-configuration)))))\n"
"          (virtualhosts\n"
"           (list\n"
"            (virtualhost-configuration\n"
"             (domain \"example.net\"))))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:30503
msgid "See below for details about @code{prosody-configuration}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:30509
msgid "By default, Prosody does not need much configuration.  Only one @code{virtualhosts} field is needed: it specifies the domain you wish Prosody to serve."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:30512
msgid "You can perform various sanity checks on the generated configuration with the @code{prosodyctl check} command."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:30516
msgid "Prosodyctl will also help you to import certificates from the @code{letsencrypt} directory so that the @code{prosody} user can access them.  See @url{https://prosody.im/doc/letsencrypt}."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:30519
#, no-wrap
msgid "prosodyctl --root cert import /etc/certs\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:30526
msgid "The available configuration parameters follow.  Each parameter definition is preceded by its type; for example, @samp{string-list foo} indicates that the @code{foo} parameter should be specified as a list of strings.  Types starting with @code{maybe-} denote parameters that won't show up in @code{prosody.cfg.lua} when their value is left unspecified."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:30530
msgid "There is also a way to specify the configuration as a string, if you have an old @code{prosody.cfg.lua} file that you want to port over from some other system; see the end for more details."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:30533
msgid "The @code{file-object} type designates either a file-like object (@pxref{G-Expressions, file-like objects}) or a file name."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:30543
msgid "Available @code{prosody-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30544
#, no-wrap
msgid "{@code{prosody-configuration} parameter} package prosody"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30546
msgid "The Prosody package."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30548
#, no-wrap
msgid "{@code{prosody-configuration} parameter} file-name data-path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30552
msgid "Location of the Prosody data storage directory.  See @url{https://prosody.im/doc/configure}.  Defaults to @samp{\"/var/lib/prosody\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30554
#, no-wrap
msgid "{@code{prosody-configuration} parameter} file-object-list plugin-paths"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30558
msgid "Additional plugin directories.  They are searched in all the specified paths in order.  See @url{https://prosody.im/doc/plugins_directory}.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30560
#, no-wrap
msgid "{@code{prosody-configuration} parameter} file-name certificates"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30565
msgid "Every virtual host and component needs a certificate so that clients and servers can securely verify its identity.  Prosody will automatically load certificates/keys from the directory specified here.  Defaults to @samp{\"/etc/prosody/certs\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30567
#, no-wrap
msgid "{@code{prosody-configuration} parameter} string-list admins"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30573
msgid "This is a list of accounts that are admins for the server.  Note that you must create the accounts separately.  See @url{https://prosody.im/doc/admins} and @url{https://prosody.im/doc/creating_accounts}.  Example: @code{(admins '(\"user1@@example.com\" \"user2@@example.net\"))} Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30575
#, no-wrap
msgid "{@code{prosody-configuration} parameter} boolean use-libevent?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30579
msgid "Enable use of libevent for better performance under high load.  See @url{https://prosody.im/doc/libevent}.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30581
#, no-wrap
msgid "{@code{prosody-configuration} parameter} module-list modules-enabled"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30587
msgid "This is the list of modules Prosody will load on startup.  It looks for @code{mod_modulename.lua} in the plugins folder, so make sure that exists too.  Documentation on modules can be found at: @url{https://prosody.im/doc/modules}.  Defaults to @samp{'(\"roster\" \"saslauth\" \"tls\" \"dialback\" \"disco\" \"carbons\" \"private\" \"blocklist\" \"vcard\" \"version\" \"uptime\" \"time\" \"ping\" \"pep\" \"register\" \"admin_adhoc\")}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30589
#, no-wrap
msgid "{@code{prosody-configuration} parameter} string-list modules-disabled"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30593
msgid "@samp{\"offline\"}, @samp{\"c2s\"} and @samp{\"s2s\"} are auto-loaded, but should you want to disable them then add them to this list.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30595
#, no-wrap
msgid "{@code{prosody-configuration} parameter} file-object groups-file"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30600
msgid "Path to a text file where the shared groups are defined.  If this path is empty then @samp{mod_groups} does nothing.  See @url{https://prosody.im/doc/modules/mod_groups}.  Defaults to @samp{\"/var/lib/prosody/sharedgroups.txt\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30602
#, no-wrap
msgid "{@code{prosody-configuration} parameter} boolean allow-registration?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30606
msgid "Disable account creation by default, for security.  See @url{https://prosody.im/doc/creating_accounts}.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30608
#, no-wrap
msgid "{@code{prosody-configuration} parameter} maybe-ssl-configuration ssl"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30613
msgid "These are the SSL/TLS-related settings.  Most of them are disabled so to use Prosody's defaults.  If you do not completely understand these options, do not add them to your config, it is easy to lower the security of your server using them.  See @url{https://prosody.im/doc/advanced_ssl_config}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30615
msgid "Available @code{ssl-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30616
#, no-wrap
msgid "{@code{ssl-configuration} parameter} maybe-string protocol"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30618
msgid "This determines what handshake to use."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30620
#, no-wrap
msgid "{@code{ssl-configuration} parameter} maybe-file-name key"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30622
msgid "Path to your private key file."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30624
#, no-wrap
msgid "{@code{ssl-configuration} parameter} maybe-file-name certificate"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30626
msgid "Path to your certificate file."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30628
#, no-wrap
msgid "{@code{ssl-configuration} parameter} file-object capath"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30632
msgid "Path to directory containing root certificates that you wish Prosody to trust when verifying the certificates of remote servers.  Defaults to @samp{\"/etc/ssl/certs\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30634
#, no-wrap
msgid "{@code{ssl-configuration} parameter} maybe-file-object cafile"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30637
msgid "Path to a file containing root certificates that you wish Prosody to trust.  Similar to @code{capath} but with all certificates concatenated together."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30639
#, no-wrap
msgid "{@code{ssl-configuration} parameter} maybe-string-list verify"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30642
msgid "A list of verification options (these mostly map to OpenSSL's @code{set_verify()} flags)."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30644
#, no-wrap
msgid "{@code{ssl-configuration} parameter} maybe-string-list options"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30648
msgid "A list of general options relating to SSL/TLS@.  These map to OpenSSL's @code{set_options()}.  For a full list of options available in LuaSec, see the LuaSec source."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30650
#, no-wrap
msgid "{@code{ssl-configuration} parameter} maybe-non-negative-integer depth"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30653
msgid "How long a chain of certificate authorities to check when looking for a trusted root certificate."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30655
#, no-wrap
msgid "{@code{ssl-configuration} parameter} maybe-string ciphers"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30658
msgid "An OpenSSL cipher string.  This selects what ciphers Prosody will offer to clients, and in what order."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30660
#, no-wrap
msgid "{@code{ssl-configuration} parameter} maybe-file-name dhparam"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30664
msgid "A path to a file containing parameters for Diffie-Hellman key exchange.  You can create such a file with: @code{openssl dhparam -out /etc/prosody/certs/dh-2048.pem 2048}"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30666
#, no-wrap
msgid "{@code{ssl-configuration} parameter} maybe-string curve"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30669
msgid "Curve for Elliptic curve Diffie-Hellman.  Prosody's default is @samp{\"secp384r1\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30671
#, no-wrap
msgid "{@code{ssl-configuration} parameter} maybe-string-list verifyext"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30673
msgid "A list of ``extra'' verification options."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30675
#, no-wrap
msgid "{@code{ssl-configuration} parameter} maybe-string password"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30677
msgid "Password for encrypted private keys."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30681
#, no-wrap
msgid "{@code{prosody-configuration} parameter} boolean c2s-require-encryption?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30685
msgid "Whether to force all client-to-server connections to be encrypted or not.  See @url{https://prosody.im/doc/modules/mod_tls}.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30687
#, no-wrap
msgid "{@code{prosody-configuration} parameter} string-list disable-sasl-mechanisms"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30691
msgid "Set of mechanisms that will never be offered.  See @url{https://prosody.im/doc/modules/mod_saslauth}.  Defaults to @samp{'(\"DIGEST-MD5\")}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30693
#, no-wrap
msgid "{@code{prosody-configuration} parameter} string-list insecure-sasl-mechanisms"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30697
msgid "Set of mechanisms that will not be offered on unencrypted connections.  See @url{https://prosody.im/doc/modules/mod_saslauth}.  Defaults to @samp{'(\"PLAIN\" \"LOGIN\")}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30699
#, no-wrap
msgid "{@code{prosody-configuration} parameter} boolean s2s-require-encryption?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30703
msgid "Whether to force all server-to-server connections to be encrypted or not.  See @url{https://prosody.im/doc/modules/mod_tls}.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30705
#, no-wrap
msgid "{@code{prosody-configuration} parameter} boolean s2s-secure-auth?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30711
msgid "Whether to require encryption and certificate authentication.  This provides ideal security, but requires servers you communicate with to support encryption AND present valid, trusted certificates.  See @url{https://prosody.im/doc/s2s#security}.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30713
#, no-wrap
msgid "{@code{prosody-configuration} parameter} string-list s2s-insecure-domains"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30719
msgid "Many servers don't support encryption or have invalid or self-signed certificates.  You can list domains here that will not be required to authenticate using certificates.  They will be authenticated using DNS@.  See @url{https://prosody.im/doc/s2s#security}.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30721
#, no-wrap
msgid "{@code{prosody-configuration} parameter} string-list s2s-secure-domains"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30726
msgid "Even if you leave @code{s2s-secure-auth?} disabled, you can still require valid certificates for some domains by specifying a list here.  See @url{https://prosody.im/doc/s2s#security}.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30728
#, no-wrap
msgid "{@code{prosody-configuration} parameter} string authentication"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30736
msgid "Select the authentication backend to use.  The default provider stores passwords in plaintext and uses Prosody's configured data storage to store the authentication data.  If you do not trust your server please see @url{https://prosody.im/doc/modules/mod_auth_internal_hashed} for information about using the hashed backend.  See also @url{https://prosody.im/doc/authentication} Defaults to @samp{\"internal_plain\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30738
#, no-wrap
msgid "{@code{prosody-configuration} parameter} maybe-string log"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30742
msgid "Set logging options.  Advanced logging configuration is not yet supported by the Prosody service.  See @url{https://prosody.im/doc/logging}.  Defaults to @samp{\"*syslog\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30744
#, no-wrap
msgid "{@code{prosody-configuration} parameter} file-name pidfile"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30747
msgid "File to write pid in.  See @url{https://prosody.im/doc/modules/mod_posix}.  Defaults to @samp{\"/var/run/prosody/prosody.pid\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30749
#, no-wrap
msgid "{@code{prosody-configuration} parameter} maybe-non-negative-integer http-max-content-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30751
msgid "Maximum allowed size of the HTTP body (in bytes)."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30753
#, no-wrap
msgid "{@code{prosody-configuration} parameter} maybe-string http-external-url"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30758
msgid "Some modules expose their own URL in various ways.  This URL is built from the protocol, host and port used.  If Prosody sits behind a proxy, the public URL will be @code{http-external-url} instead.  See @url{https://prosody.im/doc/http#external_url}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30760
#, no-wrap
msgid "{@code{prosody-configuration} parameter} virtualhost-configuration-list virtualhosts"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30765
msgid "A host in Prosody is a domain on which user accounts can be created.  For example if you want your users to have addresses like @samp{\"john.smith@@example.com\"} then you need to add a host @samp{\"example.com\"}.  All options in this list will apply only to this host."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:30772
msgid "The name @emph{virtual} host is used in configuration to avoid confusion with the actual physical host that Prosody is installed on.  A single Prosody instance can serve many domains, each one defined as a VirtualHost entry in Prosody's configuration.  Conversely a server that hosts a single domain would have just one VirtualHost entry."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:30774
msgid "See @url{https://prosody.im/doc/configure#virtual_host_settings}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30777
msgid "Available @code{virtualhost-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30779 guix-git/doc/guix.texi:30801
#: guix-git/doc/guix.texi:30854
msgid "all these @code{prosody-configuration} fields: @code{admins}, @code{use-libevent?}, @code{modules-enabled}, @code{modules-disabled}, @code{groups-file}, @code{allow-registration?}, @code{ssl}, @code{c2s-require-encryption?}, @code{disable-sasl-mechanisms}, @code{insecure-sasl-mechanisms}, @code{s2s-require-encryption?}, @code{s2s-secure-auth?}, @code{s2s-insecure-domains}, @code{s2s-secure-domains}, @code{authentication}, @code{log}, @code{http-max-content-size}, @code{http-external-url}, @code{raw-content}, plus:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30779
#, no-wrap
msgid "{@code{virtualhost-configuration} parameter} string domain"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30781
msgid "Domain you wish Prosody to serve."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30785
#, no-wrap
msgid "{@code{prosody-configuration} parameter} int-component-configuration-list int-components"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30790
msgid "Components are extra services on a server which are available to clients, usually on a subdomain of the main server (such as @samp{\"mycomponent.example.com\"}).  Example components might be chatroom servers, user directories, or gateways to other protocols."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30794
msgid "Internal components are implemented with Prosody-specific plugins.  To add an internal component, you simply fill the hostname field, and the plugin you wish to use for the component."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30797
msgid "See @url{https://prosody.im/doc/components}.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30799
msgid "Available @code{int-component-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30801
#, no-wrap
msgid "{@code{int-component-configuration} parameter} string hostname"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30803 guix-git/doc/guix.texi:30860
msgid "Hostname of the component."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30805
#, no-wrap
msgid "{@code{int-component-configuration} parameter} string plugin"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30807
msgid "Plugin you wish to use for the component."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30809
#, no-wrap
msgid "{@code{int-component-configuration} parameter} maybe-mod-muc-configuration mod-muc"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30812
msgid "Multi-user chat (MUC) is Prosody's module for allowing you to create hosted chatrooms/conferences for XMPP users."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30816
msgid "General information on setting up and using multi-user chatrooms can be found in the ``Chatrooms'' documentation (@url{https://prosody.im/doc/chatrooms}), which you should read if you are new to XMPP chatrooms."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30818
msgid "See also @url{https://prosody.im/doc/modules/mod_muc}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30820
msgid "Available @code{mod-muc-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30821
#, no-wrap
msgid "{@code{mod-muc-configuration} parameter} string name"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30824
msgid "The name to return in service discovery responses.  Defaults to @samp{\"Prosody Chatrooms\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30826
#, no-wrap
msgid "{@code{mod-muc-configuration} parameter} string-or-boolean restrict-room-creation"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30833
msgid "If @samp{#t}, this will only allow admins to create new chatrooms.  Otherwise anyone can create a room.  The value @samp{\"local\"} restricts room creation to users on the service's parent domain.  E.g.@: @samp{user@@example.com} can create rooms on @samp{rooms.example.com}.  The value @samp{\"admin\"} restricts to service administrators only.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30835
#, no-wrap
msgid "{@code{mod-muc-configuration} parameter} non-negative-integer max-history-messages"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30839
msgid "Maximum number of history messages that will be sent to the member that has just joined the room.  Defaults to @samp{20}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30845
#, no-wrap
msgid "{@code{prosody-configuration} parameter} ext-component-configuration-list ext-components"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30850
msgid "External components use XEP-0114, which most standalone components support.  To add an external component, you simply fill the hostname field.  See @url{https://prosody.im/doc/components}.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30852
msgid "Available @code{ext-component-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30854
#, no-wrap
msgid "{@code{ext-component-configuration} parameter} string component-secret"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30856
msgid "Password which the component will use to log in."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30858
#, no-wrap
msgid "{@code{ext-component-configuration} parameter} string hostname"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30864
#, no-wrap
msgid "{@code{prosody-configuration} parameter} non-negative-integer-list component-ports"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30867
msgid "Port(s) Prosody listens on for component connections.  Defaults to @samp{'(5347)}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30869
#, no-wrap
msgid "{@code{prosody-configuration} parameter} string component-interface"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30872
msgid "Interface Prosody listens on for component connections.  Defaults to @samp{\"127.0.0.1\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30874
#, no-wrap
msgid "{@code{prosody-configuration} parameter} maybe-raw-content raw-content"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30876
msgid "Raw content that will be added to the configuration file."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:30884
msgid "It could be that you just want to get a @code{prosody.cfg.lua} up and running.  In that case, you can pass an @code{opaque-prosody-configuration} record as the value of @code{prosody-service-type}.  As its name indicates, an opaque configuration does not have easy reflective capabilities.  Available @code{opaque-prosody-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30885
#, no-wrap
msgid "{@code{opaque-prosody-configuration} parameter} package prosody"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30887
msgid "The prosody package."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30889
#, no-wrap
msgid "{@code{opaque-prosody-configuration} parameter} string prosody.cfg.lua"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30891
msgid "The contents of the @code{prosody.cfg.lua} to use."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:30895
msgid "For example, if your @code{prosody.cfg.lua} is just the empty string, you could instantiate a prosody service like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:30900
#, no-wrap
msgid ""
"(service prosody-service-type\n"
"         (opaque-prosody-configuration\n"
"          (prosody.cfg.lua \"\")))\n"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:30904
#, no-wrap
msgid "BitlBee Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:30906 guix-git/doc/guix.texi:30953
#: guix-git/doc/guix.texi:31380 guix-git/doc/guix.texi:31593
#, no-wrap
msgid "IRC (Internet Relay Chat)"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:30907
#, no-wrap
msgid "IRC gateway"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:30910
msgid "@url{https://bitlbee.org,BitlBee} is a gateway that provides an IRC interface to a variety of messaging protocols such as XMPP."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:30911
#, no-wrap
msgid "bitlbee-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:30915
msgid "This is the service type for the @url{https://bitlbee.org,BitlBee} IRC gateway daemon.  Its value is a @code{bitlbee-configuration} (see below)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:30918
msgid "To have BitlBee listen on port 6667 on localhost, add this line to your services:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:30921
#, no-wrap
msgid "(service bitlbee-service-type)\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:30924
#, no-wrap
msgid "{Data Type} bitlbee-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:30926
msgid "This is the configuration for BitlBee, with the following fields:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30928
#, no-wrap
msgid "@code{interface} (default: @code{\"127.0.0.1\"})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:30929
#, no-wrap
msgid "@code{port} (default: @code{6667})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:30932
msgid "Listen on the network interface corresponding to the IP address specified in @var{interface}, on @var{port}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:30936
msgid "When @var{interface} is @code{127.0.0.1}, only local clients can connect; when it is @code{0.0.0.0}, connections can come from any networking interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30937
#, no-wrap
msgid "@code{bitlbee} (default: @code{bitlbee})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:30939
msgid "The BitlBee package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30940 guix-git/doc/guix.texi:35840
#, no-wrap
msgid "@code{plugins} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:30942
msgid "List of plugin packages to use---e.g., @code{bitlbee-discord}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:30945
msgid "Configuration snippet added as-is to the BitlBee configuration file."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:30948
#, fuzzy, no-wrap
#| msgid "Services"
msgid "ngIRCd service"
msgstr "Servizi"

#. type: cindex
#: guix-git/doc/guix.texi:30950
#, no-wrap
msgid "IRCd, Internet Relay Chat daemon"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:30951
#, fuzzy, no-wrap
#| msgid "Services"
msgid "IRC daemon service"
msgstr "Servizi"

#. type: cindex
#: guix-git/doc/guix.texi:30952
#, fuzzy, no-wrap
#| msgid "Services"
msgid "IRC server service"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:30958
msgid "@url{https://ngircd.barton.de/, ngIRCd}, is a lightweight @acronym{IRCd, Internet Relay Chat daemon}, which can be used to host your own IRC server."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:30959
#, fuzzy, no-wrap
#| msgid "Services"
msgid "ngircd-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:30962
#, fuzzy
#| msgid "Documentation"
msgid "The service type for ngIRCd.  Its value is a @code{ngircd-configuration} object, documented below."
msgstr "Documentazione"

#. type: defvar
#: guix-git/doc/guix.texi:30965
msgid "In its most simple form, the service can be used with its default configuration, like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:30968
#, fuzzy, no-wrap
#| msgid "Services"
msgid "(service ngircd-service-type)\n"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:30971
msgid "A slightly more complex example configuration could look like:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:30983
#, no-wrap
msgid ""
"(service ngircd-service-type\n"
"         (ngircd-configuration\n"
"          (channels\n"
"           (list (ngircd-channel\n"
"                  (name \"#fruits\")\n"
"                  (topic \"All things fruits -- veggies are off-topic\"))))\n"
"          (operators\n"
"           (list (ngircd-operator\n"
"                  (name \"mikan\")\n"
"                  (password \"tomatoes-are-fruits/carrots-are-not\"))))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:30991
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} ngircd-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:30993
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{ngircd-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:30995
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ngircd} (default: @code{ngircd}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:30997
#, fuzzy
#| msgid "Updating the Guix package definition."
msgid "The @code{ngircd} package to use."
msgstr "Aggiornamento della definizione del pacchetto Guix."

#. type: table
#: guix-git/doc/guix.texi:31000
msgid "Turn on debugging messages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31001 guix-git/doc/guix.texi:31472
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{shepherd-requirement} (default: @code{(user-processes networking)}) (type: list-of-symbols)"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:31004
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{global} (type: ngircd-global)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31006
msgid "A ngircd-global record object used to specify global options."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31007
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{limits} (type: maybe-ngircd-limits)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31009
msgid "The ngircd-limits record object used to specify limits options."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31010
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{options} (type: ngircd-options)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31013
msgid "The ngircd-options record object used to specify optional features and configuration options."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31014
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ssl} (type: maybe-ngircd-ssl)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31016
msgid "The ngircd-ssl record object used to specify the SSL-related options."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31017
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{operators} (type: maybe-list-of-ngircd-operators)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31019
msgid "A list of ngircd-operator record objects used to specify the operators."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31020
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{servers} (type: maybe-list-of-ngircd-servers)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31023
msgid "A list of ngircd-server record objects used to specify other remote servers to connect to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31024
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{channels} (type: maybe-list-of-ngircd-channels)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31027
msgid "A list of ngircd-channels record objects specifying pre-defined channels to be created by the server when starting up."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31037
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} ngircd-global"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:31039
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{ngircd-global} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:31041 guix-git/doc/guix.texi:38909
#: guix-git/doc/guix.texi:39406
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{name} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31047
msgid "Server name in the IRC network.  This is an individual name of the IRC server, it is not related to the DNS host name.  It must be unique in the IRC network and must contain at least one dot (@samp{.}) character.  When not set, ngIRCd tries to deduce a valid IRC server name from the local host name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31048
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{admin-info-1} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31050
#, fuzzy
#| msgid "Documentation"
msgid "First administrator information."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:31051
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{admin-info-2} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31053
#, fuzzy
#| msgid "Documentation"
msgid "Second administrator information."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:31054
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{admin-email} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31056
msgid "Email to reach administrators."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31057
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{help-file} (type: maybe-file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31059
msgid "File-like containing the ngIRCd help text."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31060
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{info} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31063
msgid "Info text of the server.  This will be shown by WHOIS and LINKS requests for example."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31064
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{listen} (default: @code{(\"::\" \"0.0.0.0\")}) (type: list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31067
msgid "A list of IP address on which the server should listen.  By default it listens on all configured IP addresses and interfaces."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31068
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{motd-file} (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31071
msgid "Text file with the @i{message of the day} (MOTD).  This message will be shown to all users connecting to the server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31072
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{motd-phrase} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31075
msgid "A simple phrase (<127 chars) to use if you don't want to use a MOTD file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31076
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{network} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31080
msgid "The name of the IRC network to which this server belongs.  This name is optional, should only contain ASCII characters, and can't contain spaces.  It is only used to inform clients."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31081
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{password} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31085
msgid "Global password or all users needed to connect to the server.  By default, no password is required.  PAM must be disabled for this option to have an effect."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31086
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{pid-file} (default: @code{\"/run/ngircd/ngircd.pid\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31088
msgid "The file name where the PID of ngIRCd should be written after it starts."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31089
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ports} (default: @code{(6667)}) (type: list-of-ports)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31092
msgid "Port number(s) on which the server should listen for @emph{unencrypted} connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31093
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{server-uid} (default: @code{\"ngircd\"}) (type: string-or-number)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31095
msgid "The user that the @command{ngircd} command should run as."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31096
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{server-gid} (default: @code{\"ngircd\"}) (type: string-or-number)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31098
msgid "The group that the @command{ngircd} command should run as."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31108
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} ngircd-limits"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:31110
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{ngircd-limits} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:31112
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{connect-retry} (default: @code{60}) (type: maybe-number)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31115
msgid "The number of seconds the server should wait before re-attempting to establish a link to not yet (or no longer) connected servers."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31116
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-connections} (default: @code{0}) (type: maybe-number)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31119
msgid "Maximum number of simultaneous in- and outbound connections the server is allowed to accept.  There is no limit by default."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31120
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-connections-ip} (default: @code{5}) (type: maybe-number)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31124
msgid "Maximum number of simultaneous connections from a single IP address that the server will accept.  This configuration options lowers the risk of denial of service attacks (DoS).  Set to 0 to remove the limit."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31125
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-joins} (default: @code{10}) (type: maybe-number)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31128
msgid "Maximum number of channels a user can be member of.  Set to 0 to remove the limit."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31129
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-list-size} (default: @code{100}) (type: maybe-number)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31131
msgid "Maximum number of channels returned in response to a LIST command."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31132
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ping-timeout} (default: @code{120}) (type: maybe-number)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31135
msgid "Number of seconds of inactivity after which the server will send a PING to the peer to test whether it is alive or not."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31136
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{pong-timeout} (default: @code{20}) (type: maybe-number)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31139
msgid "If a client fails to answer a PING with a PONG within this amount of seconds, it will be disconnected by the server."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31149
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} ngircd-options"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:31151
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{ngircd-options} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:31153
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{allowed-channel-types} (default: @code{\"#&+\"}) (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31157
msgid "List of allowed channel types (channel prefixes) for newly created channels on the local server.  By default, all supported channel types are allowed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31158
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{allow-remote-oper?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31162
msgid "If this option is active, IRC operators connected to remote servers are allowed to control this local server using administrative commands, for example like CONNECT, DIE, SQUIT, etc."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31163
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{connect-ipv4?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31166
msgid "Set to @code{#f} to prevent ngIRCd from connecting to other IRC servers using the IPv4 protocol, allowed by default."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31167
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{connect-ipv6?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31170
msgid "Set to @code{#f} to prevent ngIRCd from connecting to other IRC servers using the IPv6 protocol, allowed by default."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31171
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{dns?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31175
msgid "Set to @code{#f} to disable DNS lookups when clients connect.  If you configure the daemon to connect to other servers, ngIRCd may still perform a DNS lookup if required."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31176
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{more-privacy?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31184
msgid "Set this to @code{#t} to have ngIRCd censor user idle time, logon time as well as the PART/QUIT messages (that sometimes used to inform everyone about which client software is being used).  WHOWAS requests are also silently ignored, and NAMES output doesn't list any clients for non-members.  This option is most useful when ngIRCd is being used together with anonymizing software such as TOR or I2P and one does not wish to make it too easy to collect statistics on the users."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31185
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{notice-before-registration?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31189
msgid "Normally ngIRCd doesn't send any messages to a client until it is registered.  Enable this option to let the daemon send @samp{NOTICE *} messages to clients while connecting."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31190
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{oper-can-use-mode?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31193
msgid "Should IRC Operators be allowed to use the MODE command even if they are not(!) channel-operators?"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31194
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{oper-chan-p-auto-op?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31196
msgid "Should IRC Operators get AutoOp (+o) in persistent (+P) channels?"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31197
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{oper-server-mode?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31203
msgid "If @code{open-can-use-mode?} is @code{#t}, this may lead the compatibility problems with servers that run the ircd-irc2 software.  This option masks mode requests by non-chanops as if they were coming from the server.  Only enable this if you have ircd-irc2 servers in your IRC network."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31204
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{pam?} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31211
msgid "Set to @code{#t} to enable calls to the PAM library at runtime; all users connecting without password are allowed to connect, all passwords given will fail.  Users identified without PAM are registered with a tilde (@samp{~}) prepended to their user name.  This defaults to @code{#f} in Guix because the service runs as an unprivileged user and thus cannot authenticate other users via the @code{pam_unix} PAM module."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31212
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{pam-is-optional?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31217
msgid "Set to @code{#t} to make PAM authentication optional, causing clients not sending a password to still be able to connect, but won't become identified and keep the tilder (@samp{~}) character prepended to their supplied user name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31218
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{require-auth-ping?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31222
msgid "Set to @code{#t} to have ngIRCd send an authentication PING when a new client connects, and register this client only after receiving the corresponding PONG reply."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31232
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} ngircd-ssl"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:31234
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{ngircd-ssl} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:31236
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{cert-file} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31238
msgid "SSL certificate file of the private server key."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31239
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{key-file} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31242
msgid "File name of the SSL Server Key to be used for SSL connections, which is required for SSL/TLS support."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31243
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ca-file} (default: @code{\"/etc/ssl/certs/ca-certificates.crt\"}) (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31246
msgid "A file listing all the certificates of the trusted Certificate Authorities."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31247
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ports} (type: maybe-list-of-ports)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31251
msgid "Like the global configuration's @code{port} option, except that ngIRCd will expect incoming connections to be SSL/TLS encrypted.  Common port numbers for SSL-encrypted IRC are 6669 and 6697."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31252
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{cipher-list} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31256
msgid "The GnuTLS cipher suites allowed for SSL/TLS connections, a value such as @code{\"SECURE128:-VERS-SSL3.0\"}.  Refer to @samp{man 3 gnutls_priority_init} for details."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31257
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{dh-file} (type: maybe-file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31262
msgid "A file-like containing the Diffie-Hellman parameters, which can be created with GnuTLS via @samp{certtool --generate-dh-params}.  If this file is not present, the Diffie-Hellman parameters will be computed on startup, which may take some time."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31272
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} ngircd-operator"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:31274
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{ngircd-operator} fields are:"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31278
msgid "ID of the operator (may be different of the nickname)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31279
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{password} (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31281
msgid "Password of the IRC operator."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31282
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{mask} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31285
msgid "Mask that is to be checked before an /OPER for this account is accepted, for example: @code{\"nick!ident@@*.example.com\"}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31295
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} ngircd-server"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:31297
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{ngircd-server} fields are:"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31301
msgid "IRC name of the remote server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31302 guix-git/doc/guix.texi:31519
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{host} (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31304
msgid "Internet host name (or IP address) of the peer."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31305
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{my-password} (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31309
msgid "Own password for this connection.  This password has to be configured as @code{peer-password} on the other server and must not have @samp{:} as first character."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31310
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{peer-password} (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31313
msgid "Foreign password for this connection.  This password has to be configured as @code{my-password} on the other server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31314 guix-git/doc/guix.texi:31514
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{bind} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31317
msgid "IP address to use as source IP for the outgoing connection.  The default is to let the operating system decide."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31318 guix-git/doc/guix.texi:31522
#: guix-git/doc/guix.texi:36994
#, no-wrap
msgid "@code{port} (type: maybe-port)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31322
msgid "Port of the remote server to which ngIRCd should connect (active).  If no port is assigned to a configured server, the daemon only waits for incoming connections (passive, which is the default)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31323
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{group} (type: maybe-number)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31325
msgid "Group of this server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31326
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{passive?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31329
msgid "Set to @code{#t} to disable automatic connection even if the port value is specified."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31330
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ssl-connect?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31333
msgid "Set to @code{#t} to enforce the use of TLS to connect to the remote server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31334
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ssl-verify?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31340
msgid "Set to @code{#f} to disable the verification of the TLS certificate presented by the remote server.  This can be useful if the remote server uses a self-signed certificate.  Beware that this degrades security by enabling man-in-the-middle attacks, as the @emph{remote site is not verified at all}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31350
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} ngircd-channel"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:31352
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{ngircd-channel} fields are:"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31356
msgid "Name of the channel, including channel prefix (\"#\" or \"&\")."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31357
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{topic} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31359
msgid "Topic for this channel."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31360
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{modes} (type: maybe-list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31365
msgid "Initial channel modes, as used in MODE commands.  Modifying lists (ban list, invite list, exception list) is supported.  If multiple MODE strings are specified, they are evaluated in the order listed (left to right)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31366
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{key-file} (type: maybe-file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31370
msgid "Path and file name of a ngIRCd key file containing individual channel keys for different users.  Refer to @samp{man 5 ngircd.conf} for more details."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:31378
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Pounce Service"
msgstr "Servizi"

#. type: cindex
#: guix-git/doc/guix.texi:31381
#, no-wrap
msgid "bouncer, IRC"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:31382
#, no-wrap
msgid "Bounced Network Connection, BNC"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:31386
msgid "@url{https://git.causal.agency/pounce/about/, pounce} is a multi-client, TLS-only IRC bouncer.  It maintains a persistent connection to an IRC server, acting as a proxy and buffer for a number of clients."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31387
#, fuzzy, no-wrap
#| msgid "Services"
msgid "pounce-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:31391
#, fuzzy
#| msgid "Documentation"
msgid "This is the service type for the pounce IRC bouncer.  Its value is a @code{pounce-configuration} configuration instance, which is documented below."
msgstr "Documentazione"

#. type: cindex
#: guix-git/doc/guix.texi:31392
#, no-wrap
msgid "IRC bouncer configuration for Libera.Chat"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:31393
#, no-wrap
msgid "Libera.Chat, IRC bouncer configuration"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31408
msgid "The following example configures pounce to act as an IRC bouncer for the @url{https://libera.chat, Libera.Chat} server, using @acronym{CertFP, client certificate fingerprint} authentication to avoid leaking a sensitive password to the publicly readable store.  The equally sensitive TLS certificate file should be created in-place or transferred using a secure means such as SSH, prior to deploying the service.  The service activation will ensure the ownership and permissions of the certificate/key files are set correctly.  In the below example, it is placed at @file{/etc/pounce/libera.pem} on the target machine.  Pounce itself can be used to generate a TLS certificate, using the @samp{pounce -g libera.pem} command, which concatenates both the private key and the public certificate in the specified file name.  For more information regarding CertFP authentication, refer to @samp{man pounce} or the Libera.Chat guide at @url{https://libera.chat/guides/certfp}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:31416
#, no-wrap
msgid ""
"(service pounce-service-type\n"
"         (pounce-configuration\n"
"          (host \"irc.libera.chat\")\n"
"          (client-cert \"/etc/pounce/libera.pem\")\n"
"          (nick \"hannah\")\n"
"          (join (list \"#gnu\" \"#guix\" \"#guile\" \"#hurd\"))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31432
msgid "Once deployed on the target machine, pounce will act as an IRC server listening for TLS connections on the 6697 TCP port of the @samp{localhost} address of that machine.  By default, a self-signed certificate for pounce is created at @file{/var/lib/pounce/.config/pounce/localhost.cert}.  If you plan to expose the bouncer to the public Internet, it is advisable to use a @acronym{CA, Certificate Authority}-signed certificate, as can be obtained using a certificate service (@pxref{Certificate Services}), so that IRC clients can verify the certificate out of the box.  If you instead plan to connect to the bouncer strictly via a secure connection, for example using a @acronym{VPN, Virtual Private Network} or @acronym{SSH, Secure Shell}, then it is acceptable to simply let your IRC client trust the auto-generated, self-signed pounce certificate or even disable TLS certificate verification in your client."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:31433
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "IRC bouncer configuration for OFTC"
msgstr "Documentazione"

#. type: cindex
#: guix-git/doc/guix.texi:31434
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "OFTC, IRC bouncer configuration"
msgstr "Documentazione"

#. type: defvar
#: guix-git/doc/guix.texi:31444
msgid "To connect to a second server, a second pounce instance is needed, taking care to specify the @code{provision} field of its @code{pounce-configuration} to avoid a name clash with the previous service, along with a distinct @code{local-port} and @code{log-file}.  The following example shows how to configure another bouncer, this time for the @url{https://www.oftc.net, OFTC} IRC server.  Like in the previous example, CertFP authentication is used, which can be configured similarly.  For more details about using CertFP with the OFTC IRC server, refer to @url{https://www.oftc.net/NickServ/CertFP/}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:31455
#, no-wrap
msgid ""
"(service pounce-service-type\n"
"         (pounce-configuration\n"
"          (shepherd-provision '(pounce-oftc))\n"
"          (local-port 6698)\n"
"          (log-file \"/var/log/pounce-oftc.log\")\n"
"          (host \"irc.oftc.net\")\n"
"          (client-cert \"/etc/pounce/oftc.pem\")\n"
"          (nick \"sena\")\n"
"          (join (list \"#gcc\" \"#glibc\"))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31462
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} pounce-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:31464
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{pounce-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:31466
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{pounce} (default: @code{pounce}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31468
#, fuzzy
#| msgid "Updating the Guix package definition."
msgid "The @code{pounce} package to use."
msgstr "Aggiornamento della definizione del pacchetto Guix."

#. type: item
#: guix-git/doc/guix.texi:31469
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{shepherd-provision} (default: @code{(pounce)}) (type: list-of-symbols)"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:31475
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{log-file} (default: @code{\"/var/log/pounce.log\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31477
#, fuzzy
#| msgid "Updating the Guix package definition."
msgid "The log file name to use."
msgstr "Aggiornamento della definizione del pacchetto Guix."

#. type: item
#: guix-git/doc/guix.texi:31478
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{verbose?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31480
msgid "When true, log IRC messages to standard output."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31481
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{local-host} (default: @code{\"localhost\"}) (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31483
#, fuzzy
#| msgid "The right tools."
msgid "The host to bind to."
msgstr "Gli strumenti giusti."

#. type: item
#: guix-git/doc/guix.texi:31484
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{local-port} (default: @code{6697}) (type: maybe-port)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31486
#, fuzzy
#| msgid "The right tools."
msgid "The port to bind to."
msgstr "Gli strumenti giusti."

#. type: item
#: guix-git/doc/guix.texi:31487
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{local-ca} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31492
msgid "Require clients to authenticate using a TLS client certificate either contained in or signed by a certificate in the file loaded from @code{local-ca}, a file name.  The file is reloaded when the SIGUSR1 signal is received."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31493
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{local-cert} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31499
msgid "File name of the TLS certificate to load.  The file is reloaded when the SIGUSR1 signal is received.  Unless specified, a self-signed certificate is generated at @file{/var/lib/pounce/.config/pounce/@var{host}.pem}, where @var{host} corresponds to the value of the @code{local-host} field."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31500
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{local-priv} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31504
msgid "File name of the private TLS key to load.  Unless specified, a key is generated at @file{/var/lib/pounce/.config/pounce/@var{host}.key}, where @var{host} corresponds to the value of the @code{local-host} field."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31505
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{local-pass} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31508
msgid "Require the server password pass for clients to connect.  The pass string must be hashed using @samp{pounce -x}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31509
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{size} (default: @code{4096}) (type: maybe-power-of-two)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31513
msgid "Set the number of messages contained in the buffer to @var{size}.  This sets the maximum number of recent messages which can be relayed to a reconnecting client.  The size must be a power of two."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31518
msgid "Host to bind the @emph{source} address to when connecting to the server.  To connect from any address over IPv4 only, use @samp{0.0.0.0}.  To connect from any address over IPv6 only, use @samp{::}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31521
msgid "The host name to connect to."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31524
msgid "The port number to connect to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31525
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{pass} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31528
msgid "Password to use to log in with the server.  The password must have been hashed via the @samp{pounce -x} command."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31529
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{join} (type: maybe-list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31531
msgid "The list of channels to join."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31532 guix-git/doc/guix.texi:45783
#, no-wrap
msgid "@code{mode} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31534
msgid "The user mode."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31535 guix-git/doc/guix.texi:44837
#: guix-git/doc/guix.texi:51037 guix-git/doc/guix.texi:51068
#: guix-git/doc/guix.texi:51905
#, no-wrap
msgid "@code{user} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31537
msgid "To set the username.  The default username is the same as the nickname."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31538
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{nick} (default: @code{\"pounce\"}) (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31540
msgid "Set nickname to @var{nick}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31541
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{real} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31543
msgid "Set the real name.  The default is @code{nick}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31544
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{away} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31547
msgid "The away status to use when no clients are connected and no other away status has been set."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31548
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{quit} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31550
msgid "The message to use when quitting."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31551
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{no-names?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31555
msgid "Do not request @samp{NAMES} for each channel when a client connects.  This avoids already connected clients receiving unsolicited responses but prevents new clients from populating user lists."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31556
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{queue-interval} (default: @code{200}) (type: maybe-number)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31560
msgid "Set the server send queue interval in milliseconds.  The queue is used to send automated messages from pounce to the server.  Messages from clients are sent to the server directly."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31561
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{trust} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31564
msgid "File name of a certificate to trust.  When used, server name verification is disabled."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31565
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{client-cert} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31571
msgid "The file name of the TLS client.  If the private key is in a separate file, it is loaded with @code{client-priv}.  With @code{sasl-external?}, authenticate using SASL EXTERNAL.  Certificates can be generated with @samp{pounce -g}.  For more details, refer to ``Generating Client Certificates'' in @samp{man 1 pounce}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31572
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{client-priv} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31574
msgid "The file name of the TLS client private key."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31575
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{sasl-plain} (type: maybe-pair)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31579
msgid "A pair of the username and password in plain text to authenticate using SASL PLAIN.  Since this method requires the account password in plain text, it is recommended to use CertFP instead with @code{sasl-external}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31580
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{sasl-external?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31583
msgid "Authenticate using SASL EXTERNAL, also known as CertFP.  The TLS client certificate is loaded from @code{client-cert}."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:31591
#, no-wrap
msgid "Quassel Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:31597
msgid "@url{https://quassel-irc.org/,Quassel} is a distributed IRC client, meaning that one or more clients can attach to and detach from the central core."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31598
#, no-wrap
msgid "quassel-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31602
msgid "This is the service type for the @url{https://quassel-irc.org/,Quassel} IRC backend daemon.  Its value is a @code{quassel-configuration} (see below)."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31604
#, no-wrap
msgid "{Data Type} quassel-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31606
msgid "This is the configuration for Quassel, with the following fields:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31608
#, no-wrap
msgid "@code{quassel} (default: @code{quassel})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31610
msgid "The Quassel package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31611
#, no-wrap
msgid "@code{interface} (default: @code{\"::,0.0.0.0\"})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31612
#, no-wrap
msgid "@code{port} (default: @code{4242})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31616
msgid "Listen on the network interface(s) corresponding to the IPv4 or IPv6 interfaces specified in the comma delimited @var{interface}, on @var{port}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31617
#, no-wrap
msgid "@code{loglevel} (default: @code{\"Info\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31620
msgid "The level of logging desired.  Accepted values are Debug, Info, Warning and Error."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:31623
#, fuzzy, no-wrap
#| msgid "Linux Services"
msgid "Snuik Service"
msgstr "Servizi Linux"

#. type: cindex
#: guix-git/doc/guix.texi:31625 guix-git/doc/guix.texi:51962
#, no-wrap
msgid "irc-bot"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:31626 guix-git/doc/guix.texi:51963
#, no-wrap
msgid "snuik"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:31632
msgid "The @uref{https://gitlab.com/janneke/snuik, Snuik IRC bot} can be run as a daemon to aid talking to users that are currently offline.  With the @code{(gnu services messaging)} service, you can configure it by adding a @code{snuik-service-type} service to the @code{services} field of your operating system declaration."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31633
#, fuzzy, no-wrap
#| msgid "Services"
msgid "snuik-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:31636
msgid "This is the type of the Snuik service, whose value is a @code{snuik-configuration} object."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:31639
#, fuzzy
#| msgid "Documentation"
msgid "Here is an example of a service and its configuration:"
msgstr "Documentazione"

#. type: lisp
#: guix-git/doc/guix.texi:31648
#, no-wrap
msgid ""
"(service snuik-service-type\n"
"         (snuik-configuration\n"
"          (password-file \"/var/run/snuik/.password.snuik\")\n"
"          (channels '(\"#bootstrappable\"\n"
"                      \"#dezyne\"\n"
"                      \"#guix-risc-v\"\n"
"                      \"#lilypond\"))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31650
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} snuik-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:31652
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{snuik-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:31654
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{snuik} (default: @code{snuik}) (type: package)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31656
msgid "The Snuik package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31657
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{server} (default: @code{\"irc.libera.chat\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31659
msgid "The IRC server to connect to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31660
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{port} (default: @code{6665}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31662
msgid "Port number used by the IRC server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31663
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{nick} (default: @code{\"snuik\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31665
msgid "The nickname for snuik to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31666
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{password} (default: @code{#f}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31668
msgid "The password to use when logging in."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31669
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{password-file} (default: @code{\".password.<nick>})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31671
msgid "The file to read the password from to use when logging in."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31672
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{channels} (default: @code{'(\"##botchat\")})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31674
msgid "The channels for snuik to join, a list of strings."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31678
msgid "Extra options will be passed to @command{snuik}, please run @command{snuik --help } for more information."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:31682
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Mosquitto Service"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:31688
msgid "@url{https://mosquitto.org/,Mosquitto} is a lightweight message broker that implements the MQTT protocol versions 5.0, 3.1.1 and 3.1.  It is suitable for use on all devices from low power single board computers to full servers."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31689
#, fuzzy, no-wrap
#| msgid "Services"
msgid "mosquitto-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:31692
#, fuzzy
#| msgid "Documentation"
msgid "This is the service type for the @url{https://mosquitto.org/,Mosquitto} MQTT broker.  Its value is a @code{mosquitto-configuration} (see below)."
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:31694
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} mosquitto-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:31696
#, fuzzy
#| msgid "Documentation"
msgid "This is the configuration for Mosquitto, with the following fields:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:31698
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{package} (default: @code{mosquitto})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31700
#, fuzzy
#| msgid "Updating the Guix package definition."
msgid "The Mosquitto package to use."
msgstr "Aggiornamento della definizione del pacchetto Guix."

#. type: table
#: guix-git/doc/guix.texi:31704
msgid "The Mosquitto configuration file as a file-like object or the value @code{#f} to use the default configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31705
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{user} (default: @code{\"mosquitto\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31707
msgid "Owner of the broker process."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31708
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{group} (default: @code{\"mosquitto\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31710
msgid "Owner's group of the broker process."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:31716
#, no-wrap
msgid "telephony, services"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:31720
msgid "The @code{(gnu services telephony)} module contains Guix service definitions for telephony services.  Currently it provides the following services:"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:31721
#, no-wrap
msgid "Jami"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31723
#, fuzzy, no-wrap
#| msgid "Services"
msgid "jami-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:31730
msgid "The service type for running Jami as a service.  It takes a @code{jami-configuration} object as a value, documented below.  This section describes how to configure a Jami server that can be used to host video (or audio) conferences, among other uses.  The following example demonstrates how to specify Jami account archives (backups) to be provisioned automatically:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:31739
#, no-wrap
msgid ""
"(service jami-service-type\n"
"         (jami-configuration\n"
"          (accounts\n"
"           (list (jami-account\n"
"                  (archive \"/etc/jami/unencrypted-account-1.gz\"))\n"
"                 (jami-account\n"
"                  (archive \"/etc/jami/unencrypted-account-2.gz\"))))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31744
msgid "When the accounts field is specified, the Jami account files of the service found under @file{/var/lib/jami} are recreated every time the service starts."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31749
msgid "Jami accounts and their corresponding backup archives can be generated using the @code{jami} or @code{jami-gnome} Jami clients.  The accounts should not be password-protected, but it is wise to ensure their files are only readable by @samp{root}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31752
msgid "The next example shows how to declare that only some contacts should be allowed to communicate with a given account:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:31764
#, no-wrap
msgid ""
"(service jami-service-type\n"
"         (jami-configuration\n"
"          (accounts\n"
"           (list (jami-account\n"
"                  (archive \"/etc/jami/unencrypted-account-1.gz\")\n"
"                  (peer-discovery? #t)\n"
"                  (rendezvous-point? #t)\n"
"                  (allowed-contacts\n"
"                   '(\"1dbcb0f5f37324228235564b79f2b9737e9a008f\"\n"
"                     \"2dbcb0f5f37324228235564b79f2b9737e9a008f\")))))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31770
msgid "In this mode, only the declared @code{allowed-contacts} can initiate communication with the Jami account.  This can be used, for example, with rendezvous point accounts to create a private video conferencing space."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31773
msgid "To put the system administrator in full control of the conferences hosted on their system, the Jami service supports the following actions:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:31785
#, no-wrap
msgid ""
"# herd doc jami list-actions\n"
"(list-accounts\n"
" list-account-details\n"
" list-banned-contacts\n"
" list-contacts\n"
" list-moderators\n"
" add-moderator\n"
" ban-contact\n"
" enable-account\n"
" disable-account)\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31792
msgid "The above actions aim to provide the most valuable actions for moderation purposes, not to cover the whole Jami API.  Users wanting to interact with the Jami daemon from Guile may be interested in experimenting with the @code{(gnu build jami-service)} module, which powers the above Shepherd actions."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31798
msgid "The @code{add-moderator} and @code{ban-contact} actions accept a contact @emph{fingerprint} (40 characters long hash) as first argument and an account fingerprint or username as second argument:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:31802
#, no-wrap
msgid ""
"# herd add-moderator jami 1dbcb0f5f37324228235564b79f2b9737e9a008f \\\n"
"  f3345f2775ddfe07a4b0d95daea111d15fbc1199\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:31806
#, no-wrap
msgid ""
"# herd list-moderators jami\n"
"Moderators for account f3345f2775ddfe07a4b0d95daea111d15fbc1199:\n"
"  - 1dbcb0f5f37324228235564b79f2b9737e9a008f\n"
"\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31811
msgid "In the case of @code{ban-contact}, the second username argument is optional; when omitted, the account is banned from all Jami accounts:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:31814
#, no-wrap
msgid ""
"# herd ban-contact jami 1dbcb0f5f37324228235564b79f2b9737e9a008f\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:31818
#, no-wrap
msgid ""
"# herd list-banned-contacts jami\n"
"Banned contacts for account f3345f2775ddfe07a4b0d95daea111d15fbc1199:\n"
"  - 1dbcb0f5f37324228235564b79f2b9737e9a008f\n"
"\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31822
msgid "Banned contacts are also stripped from their moderation privileges."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31827
msgid "The @code{disable-account} action allows to completely disconnect an account from the network, making it unreachable, while @code{enable-account} does the inverse.  They accept a single account username or fingerprint as first argument:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:31830
#, no-wrap
msgid ""
"# herd disable-account jami f3345f2775ddfe07a4b0d95daea111d15fbc1199\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:31834
#, no-wrap
msgid ""
"# herd list-accounts jami\n"
"The following Jami accounts are available:\n"
"  - f3345f2775ddfe07a4b0d95daea111d15fbc1199 (dummy) [disabled]\n"
"\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31845
msgid "The @code{list-account-details} action prints the detailed parameters of each accounts in the Recutils format, which means the @command{recsel} command can be used to select accounts of interest (@pxref{Selection Expressions,,,recutils, GNU recutils manual}).  Note that period characters (@samp{.}) found in the account parameter keys are mapped to underscores (@samp{_}) in the output, to meet the requirements of the Recutils format.  The following example shows how to print the account fingerprints for all accounts operating in the rendezvous point mode:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:31850
#, no-wrap
msgid ""
"# herd list-account-details jami | \\\n"
"  recsel -p Account.username -e 'Account.rendezVous ~ \"true\"'\n"
"Account_username: f3345f2775ddfe07a4b0d95daea111d15fbc1199\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31853
msgid "The remaining actions should be self-explanatory."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31855
msgid "The complete set of available configuration options is detailed below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31860
#, no-wrap
msgid "{Data Type} jami-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31862
msgid "Available @code{jami-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31864
#, no-wrap
msgid "@code{libjami} (default: @code{libjami}) (type: package)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31866
msgid "The Jami daemon package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31867
#, no-wrap
msgid "@code{dbus} (default: @code{dbus-for-jami}) (type: package)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31869
msgid "The D-Bus package to use to start the required D-Bus session."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31870
#, no-wrap
msgid "@code{nss-certs} (default: @code{nss-certs}) (type: package)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31872
msgid "The nss-certs package to use to provide TLS certificates."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31873
#, no-wrap
msgid "@code{enable-logging?} (default: @code{#t}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31875
msgid "Whether to enable logging to syslog."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31878
msgid "Whether to enable debug level messages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31879
#, no-wrap
msgid "@code{auto-answer?} (default: @code{#f}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31881
msgid "Whether to force automatic answer to incoming calls."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31882
#, no-wrap
msgid "@code{accounts} (type: maybe-jami-account-list)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31887
msgid "A list of Jami accounts to be (re-)provisioned every time the Jami daemon service starts.  When providing this field, the account directories under @file{/var/lib/jami/} are recreated every time the service starts, ensuring a consistent state."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31893
#, no-wrap
msgid "{Data Type} jami-account"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31895
msgid "Available @code{jami-account} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31897
#, no-wrap
msgid "@code{archive} (type: string-or-computed-file)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31903
msgid "The account archive (backup) file name of the account.  This is used to provision the account when the service starts.  The account archive should @emph{not} be encrypted.  It is highly recommended to make it readable only to the @samp{root} user (i.e., not in the store), to guard against leaking the secret key material of the Jami account it contains."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31904
#, no-wrap
msgid "@code{allowed-contacts} (type: maybe-account-fingerprint-list)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31911
msgid "The list of allowed contacts for the account, entered as their 40 characters long fingerprint.  Messages or calls from accounts not in that list will be rejected.  When left specified, the configuration of the account archive is used as-is with respect to contacts and public inbound calls/messaging allowance, which typically defaults to allow any contact to communicate with the account."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31912
#, no-wrap
msgid "@code{moderators} (type: maybe-account-fingerprint-list)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31918
msgid "The list of contacts that should have moderation privileges (to ban, mute, etc.  other users) in rendezvous conferences, entered as their 40 characters long fingerprint.  When left unspecified, the configuration of the account archive is used as-is with respect to moderation, which typically defaults to allow anyone to moderate."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31919
#, no-wrap
msgid "@code{rendezvous-point?} (type: maybe-boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31923
msgid "Whether the account should operate in the rendezvous mode.  In this mode, all the incoming audio/video calls are mixed into a conference.  When left unspecified, the value from the account archive prevails."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31924
#, no-wrap
msgid "@code{peer-discovery?} (type: maybe-boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31930
msgid "Whether peer discovery should be enabled.  Peer discovery is used to discover other OpenDHT nodes on the local network, which can be useful to maintain communication between devices on such network even when the connection to the Internet has been lost.  When left unspecified, the value from the account archive prevails."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31931
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{bootstrap-hostnames} (type: maybe-list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:31935
msgid "A list of hostnames or IPs pointing to OpenDHT nodes, that should be used to initially join the OpenDHT network.  When left unspecified, the value from the account archive prevails."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31936
#, no-wrap
msgid "@code{name-server-uri} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31939
msgid "The URI of the name server to use, that can be used to retrieve the account fingerprint for a registered username."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:31944
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Mumble server"
msgstr "Servizi"

#. type: cindex
#: guix-git/doc/guix.texi:31946
#, no-wrap
msgid "Mumble"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:31947
#, no-wrap
msgid "Murmur"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:31948
#, no-wrap
msgid "VoIP server"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:31951
msgid "This section describes how to set up and run a @uref{https://mumble.info, Mumble} server (formerly known as Murmur)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31952
#, fuzzy, no-wrap
#| msgid "Services"
msgid "mumble-server-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:31956
msgid "This is the service to run a Mumble server.  It takes a @code{mumble-server-configuration} object as its value, defined below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31958
#, no-wrap
msgid "{Data Type} mumble-server-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31961
msgid "The service type for the Mumble server.  An example configuration can look like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:31970
#, no-wrap
msgid ""
"(service mumble-server-service-type\n"
"         (mumble-server-configuration\n"
"          (welcome-text\n"
"            \"Welcome to this Mumble server running on Guix!\")\n"
"          (cert-required? #t) ;disallow text password logins\n"
"          (ssl-cert \"/etc/certs/mumble.example.com/fullchain.pem\")\n"
"          (ssl-key \"/etc/certs/mumble.example.com/privkey.pem\")))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31975
msgid "After reconfiguring your system, you can manually set the mumble-server @code{SuperUser} password with the command that is printed during the activation phase."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31984
msgid "It is recommended to register a normal Mumble user account and grant it admin or moderator rights.  You can use the @code{mumble} client to login as new normal user, register yourself, and log out.  For the next step login with the name @code{SuperUser} use the @code{SuperUser} password that you set previously, and grant your newly registered mumble user administrator or moderator rights and create some channels."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31986
msgid "Available @code{mumble-server-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31988
#, no-wrap
msgid "@code{package} (default: @code{mumble})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31990
msgid "Package that contains @code{bin/mumble-server}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31991
#, no-wrap
msgid "@code{user} (default: @code{\"mumble-server\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31993
msgid "User who will run the Mumble-Server server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31994
#, no-wrap
msgid "@code{group} (default: @code{\"mumble-server\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31996
msgid "Group of the user who will run the mumble-server server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31997
#, no-wrap
msgid "@code{port} (default: @code{64738})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31999
msgid "Port on which the server will listen."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32000
#, no-wrap
msgid "@code{welcome-text} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32002
msgid "Welcome text sent to clients when they connect."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32003
#, no-wrap
msgid "@code{server-password} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32005
msgid "Password the clients have to enter in order to connect."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32006
#, no-wrap
msgid "@code{max-users} (default: @code{100})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32008
msgid "Maximum of users that can be connected to the server at once."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32009
#, no-wrap
msgid "@code{max-user-bandwidth} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32011
msgid "Maximum voice traffic a user can send per second."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32012
#, no-wrap
msgid "@code{database-file} (default: @code{\"/var/lib/mumble-server/db.sqlite\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32015
msgid "File name of the sqlite database.  The service's user will become the owner of the directory."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32016
#, no-wrap
msgid "@code{log-file} (default: @code{\"/var/log/mumble-server/mumble-server.log\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32019
msgid "File name of the log file.  The service's user will become the owner of the directory."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32020
#, no-wrap
msgid "@code{autoban-attempts} (default: @code{10})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32023
msgid "Maximum number of logins a user can make in @code{autoban-timeframe} without getting auto banned for @code{autoban-time}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32024
#, no-wrap
msgid "@code{autoban-timeframe} (default: @code{120})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32026
msgid "Timeframe for autoban in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32027
#, no-wrap
msgid "@code{autoban-time} (default: @code{300})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32030
msgid "Amount of time in seconds for which a client gets banned when violating the autoban limits."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32031
#, no-wrap
msgid "@code{opus-threshold} (default: @code{100})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32034
msgid "Percentage of clients that need to support opus before switching over to opus audio codec."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32035
#, no-wrap
msgid "@code{channel-nesting-limit} (default: @code{10})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32037
msgid "How deep channels can be nested at maximum."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32038
#, no-wrap
msgid "@code{channelname-regex} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32040
msgid "A string in form of a Qt regular expression that channel names must conform to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32041
#, no-wrap
msgid "@code{username-regex} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32043
msgid "A string in form of a Qt regular expression that user names must conform to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32044
#, no-wrap
msgid "@code{text-message-length} (default: @code{5000})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32046
msgid "Maximum size in bytes that a user can send in one text chat message."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32047
#, no-wrap
msgid "@code{image-message-length} (default: @code{(* 128 1024)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32049
msgid "Maximum size in bytes that a user can send in one image message."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32050
#, no-wrap
msgid "@code{cert-required?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32053
msgid "If it is set to @code{#t} clients that use weak password authentication will not be accepted.  Users must have completed the certificate wizard to join."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32054
#, no-wrap
msgid "@code{remember-channel?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32058
msgid "Should mumble-server remember the last channel each user was in when they disconnected and put them into the remembered channel when they rejoin."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32059
#, no-wrap
msgid "@code{allow-html?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32061
msgid "Should html be allowed in text messages, user comments, and channel descriptions."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32062
#, no-wrap
msgid "@code{allow-ping?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32066
msgid "Setting to true exposes the current user count, the maximum user count, and the server's maximum bandwidth per client to unauthenticated users.  In the Mumble client, this information is shown in the Connect dialog."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32068
msgid "Disabling this setting will prevent public listing of the server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32069
#, no-wrap
msgid "@code{bonjour?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32071
msgid "Should the server advertise itself in the local network through the bonjour protocol."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32072
#, no-wrap
msgid "@code{send-version?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32074
msgid "Should the mumble-server server version be exposed in ping requests."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32075
#, no-wrap
msgid "@code{log-days} (default: @code{31})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32079
msgid "Mumble also stores logs in the database, which are accessible via RPC.  The default is 31 days of months, but you can set this setting to 0 to keep logs forever, or -1 to disable logging to the database."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32080
#, no-wrap
msgid "@code{obfuscate-ips?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32082
msgid "Should logged ips be obfuscated to protect the privacy of users."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32083
#, no-wrap
msgid "@code{ssl-cert} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32085
msgid "File name of the SSL/TLS certificate used for encrypted connections."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:32088
#, no-wrap
msgid "(ssl-cert \"/etc/certs/example.com/fullchain.pem\")\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32089
#, no-wrap
msgid "@code{ssl-key} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32091
msgid "Filepath to the ssl private key used for encrypted connections."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:32093
#, no-wrap
msgid "(ssl-key \"/etc/certs/example.com/privkey.pem\")\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32095
#, no-wrap
msgid "@code{ssl-dh-params} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32100
msgid "File name of a PEM-encoded file with Diffie-Hellman parameters for the SSL/TLS encryption.  Alternatively you set it to @code{\"@@ffdhe2048\"}, @code{\"@@ffdhe3072\"}, @code{\"@@ffdhe4096\"}, @code{\"@@ffdhe6144\"} or @code{\"@@ffdhe8192\"} to use bundled parameters from RFC 7919."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32101
#, no-wrap
msgid "@code{ssl-ciphers} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32104
msgid "The @code{ssl-ciphers} option chooses the cipher suites to make available for use in SSL/TLS."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32108
msgid "This option is specified using @uref{https://www.openssl.org/docs/apps/ciphers.html#CIPHER-LIST-FORMAT, OpenSSL cipher list notation}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32115
msgid "It is recommended that you try your cipher string using 'openssl ciphers <string>' before setting it here, to get a feel for which cipher suites you will get.  After setting this option, it is recommend that you inspect your Mumble server log to ensure that Mumble is using the cipher suites that you expected it to."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:32119
msgid "Changing this option may impact the backwards compatibility of your Mumble-Server server, and can remove the ability for older Mumble clients to be able to connect to it."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32121
#, no-wrap
msgid "@code{public-registration} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32124
msgid "Must be a @code{<mumble-server-public-registration-configuration>} record or @code{#f}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32129
msgid "You can optionally register your server in the public server list that the @code{mumble} client shows on startup.  You cannot register your server if you have set a @code{server-password}, or set @code{allow-ping} to @code{#f}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32131
msgid "It might take a few hours until it shows up in the public list."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32132 guix-git/doc/guix.texi:34728
#, no-wrap
msgid "@code{file} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32134
msgid "Optional alternative override for this configuration."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:32137
#, no-wrap
msgid "{Data Type} mumble-server-public-registration-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:32139
msgid "Configuration for public registration of a mumble-server service."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32143
msgid "This is a display name for your server.  Not to be confused with the hostname."
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:32144 guix-git/doc/guix.texi:43341
#: guix-git/doc/guix.texi:46351
#, no-wrap
msgid "password"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32147
msgid "A password to identify your registration.  Subsequent updates will need the same password.  Don't lose your password."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32151
msgid "This should be a @code{http://} or @code{https://} link to your web site."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32152
#, no-wrap
msgid "@code{hostname} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32155
msgid "By default your server will be listed by its IP address.  If it is set your server will be linked by this host name instead."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:32158
#, no-wrap
msgid "Deprecation notice"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:32163
msgid "Due to historical reasons, all of the above @code{mumble-server-} procedures are also exported with the @code{murmur-} prefix.  It is recommended that you switch to using @code{mumble-server-} going forward."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32170
msgid "The @code{(gnu services file-sharing)} module provides services that assist with transferring files over peer-to-peer file-sharing networks."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:32171
#, no-wrap
msgid "Transmission Daemon Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32179
msgid "@uref{https://transmissionbt.com/, Transmission} is a flexible BitTorrent client that offers a variety of graphical and command-line interfaces.  A @code{transmission-daemon-service-type} service provides Transmission's headless variant, @command{transmission-daemon}, as a system service, allowing users to share files via BitTorrent even when they are not logged in."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:32180
#, no-wrap
msgid "transmission-daemon-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:32184
msgid "The service type for the Transmission Daemon BitTorrent client. Its value must be a @code{transmission-daemon-configuration} object as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:32195
#, no-wrap
msgid ""
"(service transmission-daemon-service-type\n"
"         (transmission-daemon-configuration\n"
"          ;; Restrict access to the RPC (\"control\") interface\n"
"          (rpc-authentication-required? #t)\n"
"          (rpc-username \"transmission\")\n"
"          (rpc-password\n"
"           (transmission-password-hash\n"
"            \"transmission\" ; desired password\n"
"            \"uKd1uMs9\"))   ; arbitrary salt value\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:32200
#, no-wrap
msgid ""
"          ;; Accept requests from this and other hosts on the\n"
"          ;; local network\n"
"          (rpc-whitelist-enabled? #t)\n"
"          (rpc-whitelist '(\"::1\" \"127.0.0.1\" \"192.168.0.*\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:32204
#, no-wrap
msgid ""
"          ;; Limit bandwidth use during work hours\n"
"          (alt-speed-down (* 1024 2)) ;   2 MB/s\n"
"          (alt-speed-up 512)          ; 512 kB/s\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:32211
#, no-wrap
msgid ""
"          (alt-speed-time-enabled? #t)\n"
"          (alt-speed-time-day 'weekdays)\n"
"          (alt-speed-time-begin\n"
"           (+ (* 60 8) 30))           ; 8:30 am\n"
"          (alt-speed-time-end\n"
"           (+ (* 60 (+ 12 5)) 30))))  ; 5:30 pm\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32224
msgid "Once the service is started, users can interact with the daemon through its Web interface (at @code{http://localhost:9091/}) or by using the @command{transmission-remote} command-line tool, available in the @code{transmission} package.  (Emacs users may want to also consider the @code{emacs-transmission} package.)  Both communicate with the daemon through its remote procedure call (RPC) interface, which by default is available to all users on the system; you may wish to change this by assigning values to the @code{rpc-authentication-required?}, @code{rpc-username} and @code{rpc-password} settings, as shown in the example above and documented further below."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32232
msgid "The value for @code{rpc-password} must be a password hash of the type generated and used by Transmission clients.  This can be copied verbatim from an existing @file{settings.json} file, if another Transmission client is already being used.  Otherwise, the @code{transmission-password-hash} and @code{transmission-random-salt} procedures provided by this module can be used to obtain a suitable hash value."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:32233
#, no-wrap
msgid "{Procedure} transmission-password-hash password salt"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:32237
msgid "Returns a string containing the result of hashing @var{password} together with @var{salt}, in the format recognized by Transmission clients for their @code{rpc-password} configuration setting."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:32241
msgid "@var{salt} must be an eight-character string.  The @code{transmission-random-salt} procedure can be used to generate a suitable salt value at random."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:32243
#, no-wrap
msgid "{Procedure} transmission-random-salt"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:32247
msgid "Returns a string containing a random, eight-character salt value of the type generated and used by Transmission clients, suitable for passing to the @code{transmission-password-hash} procedure."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32253
msgid "These procedures are accessible from within a Guile REPL started with the @command{guix repl} command (@pxref{Invoking guix repl}).  This is useful for obtaining a random salt value to provide as the second parameter to `transmission-password-hash`, as in this example session:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:32259
#, no-wrap
msgid ""
"$ guix repl\n"
"scheme@@(guix-user)> ,use (gnu services file-sharing)\n"
"scheme@@(guix-user)> (transmission-random-salt)\n"
"$1 = \"uKd1uMs9\"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32262
msgid "Alternatively, a complete password hash can generated in a single step:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:32267
#, no-wrap
msgid ""
"scheme@@(guix-user)> (transmission-password-hash \"transmission\"\n"
"(transmission-random-salt))\n"
"$2 = \"@{c8bbc6d1740cd8dc819a6e25563b67812c1c19c9VtFPfdsX\"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32272
msgid "The resulting string can be used as-is for the value of @code{rpc-password}, allowing the password to be kept hidden even in the operating-system configuration."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32281
msgid "Torrent files downloaded by the daemon are directly accessible only to users in the ``transmission'' user group, who receive read-only access to the directory specified by the @code{download-dir} configuration setting (and also the directory specified by @code{incomplete-dir}, if @code{incomplete-dir-enabled?} is @code{#t}).  Downloaded files can be moved to another directory or deleted altogether using @command{transmission-remote} with its @code{--move} and @code{--remove-and-delete} options."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32288
msgid "If the @code{watch-dir-enabled?} setting is set to @code{#t}, users in the ``transmission'' group are able also to place @file{.torrent} files in the directory specified by @code{watch-dir} to have the corresponding torrents added by the daemon.  (The @code{trash-original-torrent-files?} setting controls whether the daemon deletes these files after processing them.)"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32293
msgid "Some of the daemon's configuration settings can be changed temporarily by @command{transmission-remote} and similar tools. To undo these changes, use the service's @code{reload} action to have the daemon reload its settings from disk:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:32296
#, no-wrap
msgid "# herd reload transmission-daemon\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32300
msgid "The full set of available configuration settings is defined by the @code{transmission-daemon-configuration} data type."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:32301
#, no-wrap
msgid "{Data Type} transmission-daemon-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:32305
msgid "The data type representing configuration settings for Transmission Daemon.  These correspond directly to the settings recognized by Transmission clients in their @file{settings.json} file."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32319
msgid "Available @code{transmission-daemon-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32320
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} package transmission"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32322
msgid "The Transmission package to use."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32325
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer stop-wait-period"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32331
msgid "The period, in seconds, to wait when stopping the service for @command{transmission-daemon} to exit before killing its process.  This allows the daemon time to complete its housekeeping and send a final update to trackers as it shuts down.  On slow hosts, or hosts with a slow network connection, this value may need to be increased."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32333 guix-git/doc/guix.texi:32705
#: guix-git/doc/guix.texi:41906 guix-git/doc/guix.texi:42142
#: guix-git/doc/guix.texi:42150 guix-git/doc/guix.texi:42158
msgid "Defaults to @samp{10}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32336
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} string download-dir"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32338
msgid "The directory to which torrent files are downloaded."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32340
msgid "Defaults to @samp{\"/var/lib/transmission-daemon/downloads\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32343
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean incomplete-dir-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32348
msgid "If @code{#t}, files will be held in @code{incomplete-dir} while their torrent is being downloaded, then moved to @code{download-dir} once the torrent is complete.  Otherwise, files for all torrents (including those still being downloaded) will be placed in @code{download-dir}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32353
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} maybe-string incomplete-dir"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32356
msgid "The directory in which files from incompletely downloaded torrents will be held when @code{incomplete-dir-enabled?} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32358 guix-git/doc/guix.texi:32402
#: guix-git/doc/guix.texi:32615 guix-git/doc/guix.texi:32671
#: guix-git/doc/guix.texi:32845 guix-git/doc/guix.texi:32856
#: guix-git/doc/guix.texi:32929 guix-git/doc/guix.texi:33803
#: guix-git/doc/guix.texi:33846 guix-git/doc/guix.texi:33854
#: guix-git/doc/guix.texi:33862 guix-git/doc/guix.texi:33870
#: guix-git/doc/guix.texi:33879 guix-git/doc/guix.texi:33887
#: guix-git/doc/guix.texi:33894 guix-git/doc/guix.texi:33902
#: guix-git/doc/guix.texi:33910 guix-git/doc/guix.texi:33920
#: guix-git/doc/guix.texi:33927 guix-git/doc/guix.texi:33951
#: guix-git/doc/guix.texi:33959 guix-git/doc/guix.texi:33985
#: guix-git/doc/guix.texi:33994 guix-git/doc/guix.texi:34003
#: guix-git/doc/guix.texi:34012 guix-git/doc/guix.texi:34021
#: guix-git/doc/guix.texi:34030 guix-git/doc/guix.texi:34038
#: guix-git/doc/guix.texi:34046 guix-git/doc/guix.texi:34053
#: guix-git/doc/guix.texi:34061 guix-git/doc/guix.texi:34068
#: guix-git/doc/guix.texi:34076 guix-git/doc/guix.texi:34084
#: guix-git/doc/guix.texi:34093 guix-git/doc/guix.texi:34102
#: guix-git/doc/guix.texi:34110 guix-git/doc/guix.texi:34118
#: guix-git/doc/guix.texi:34126 guix-git/doc/guix.texi:34137
#: guix-git/doc/guix.texi:34147 guix-git/doc/guix.texi:34158
#: guix-git/doc/guix.texi:34167 guix-git/doc/guix.texi:34177
#: guix-git/doc/guix.texi:34185 guix-git/doc/guix.texi:34196
#: guix-git/doc/guix.texi:34205 guix-git/doc/guix.texi:34215
#: guix-git/doc/guix.texi:38353 guix-git/doc/guix.texi:38360
#: guix-git/doc/guix.texi:38367 guix-git/doc/guix.texi:38374
#: guix-git/doc/guix.texi:38381 guix-git/doc/guix.texi:38388
#: guix-git/doc/guix.texi:38396 guix-git/doc/guix.texi:38404
#: guix-git/doc/guix.texi:38411 guix-git/doc/guix.texi:38418
#: guix-git/doc/guix.texi:38425 guix-git/doc/guix.texi:38432
#: guix-git/doc/guix.texi:38462 guix-git/doc/guix.texi:38500
#: guix-git/doc/guix.texi:38507 guix-git/doc/guix.texi:38516
#: guix-git/doc/guix.texi:38538 guix-git/doc/guix.texi:38546
#: guix-git/doc/guix.texi:38553 guix-git/doc/guix.texi:38582
#: guix-git/doc/guix.texi:38589 guix-git/doc/guix.texi:38596
#: guix-git/doc/guix.texi:38603 guix-git/doc/guix.texi:38736
#: guix-git/doc/guix.texi:38756 guix-git/doc/guix.texi:38771
#: guix-git/doc/guix.texi:38778 guix-git/doc/guix.texi:42279
#: guix-git/doc/guix.texi:42287 guix-git/doc/guix.texi:42295
#: guix-git/doc/guix.texi:42303 guix-git/doc/guix.texi:42311
#: guix-git/doc/guix.texi:42319
msgid "Defaults to @samp{disabled}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32361
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} umask umask"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32364
msgid "The file mode creation mask used for downloaded files.  (See the @command{umask} man page for more information.)"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32366
msgid "Defaults to @samp{18}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32369
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean rename-partial-files?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32372
msgid "When @code{#t}, ``.part'' is appended to the name of partially downloaded files."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32377
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} preallocation-mode preallocation"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32382
msgid "The mode by which space should be preallocated for downloaded files, one of @code{none}, @code{fast} (or @code{sparse}) and @code{full}.  Specifying @code{full} will minimize disk fragmentation at a cost to file-creation speed."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32384
msgid "Defaults to @samp{fast}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32387
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean watch-dir-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32392
msgid "If @code{#t}, the directory specified by @code{watch-dir} will be watched for new @file{.torrent} files and the torrents they describe added automatically (and the original files removed, if @code{trash-original-torrent-files?} is @code{#t})."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32397
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} maybe-string watch-dir"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32400
msgid "The directory to be watched for @file{.torrent} files indicating new torrents to be added, when @code{watch-dir-enabled} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32405
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean trash-original-torrent-files?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32409
msgid "When @code{#t}, @file{.torrent} files will be deleted from the watch directory once their torrent has been added (see @code{watch-directory-enabled?})."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32414
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean speed-limit-down-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32417
msgid "When @code{#t}, the daemon's download speed will be limited to the rate specified by @code{speed-limit-down}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32422
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer speed-limit-down"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32424
msgid "The default global-maximum download speed, in kilobytes per second."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32429
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean speed-limit-up-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32432
msgid "When @code{#t}, the daemon's upload speed will be limited to the rate specified by @code{speed-limit-up}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32437
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer speed-limit-up"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32439
msgid "The default global-maximum upload speed, in kilobytes per second."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32444
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean alt-speed-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32450
msgid "When @code{#t}, the alternate speed limits @code{alt-speed-down} and @code{alt-speed-up} are used (in place of @code{speed-limit-down} and @code{speed-limit-up}, if they are enabled) to constrain the daemon's bandwidth usage.  This can be scheduled to occur automatically at certain times during the week; see @code{alt-speed-time-enabled?}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32455
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer alt-speed-down"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32457
msgid "The alternate global-maximum download speed, in kilobytes per second."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32459 guix-git/doc/guix.texi:32466
#: guix-git/doc/guix.texi:32638 guix-git/doc/guix.texi:41913
#: guix-git/doc/guix.texi:41928
msgid "Defaults to @samp{50}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32462
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer alt-speed-up"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32464
msgid "The alternate global-maximum upload speed, in kilobytes per second."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32469
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean alt-speed-time-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32474
msgid "When @code{#t}, the alternate speed limits @code{alt-speed-down} and @code{alt-speed-up} will be enabled automatically during the periods specified by @code{alt-speed-time-day}, @code{alt-speed-time-begin} and @code{alt-time-speed-end}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32479
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} day-list alt-speed-time-day"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32484
msgid "The days of the week on which the alternate-speed schedule should be used, specified either as a list of days (@code{sunday}, @code{monday}, and so on) or using one of the symbols @code{weekdays}, @code{weekends} or @code{all}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32486
msgid "Defaults to @samp{all}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32489
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer alt-speed-time-begin"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32492
msgid "The time of day at which to enable the alternate speed limits, expressed as a number of minutes since midnight."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32494
msgid "Defaults to @samp{540}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32497
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer alt-speed-time-end"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32500
msgid "The time of day at which to disable the alternate speed limits, expressed as a number of minutes since midnight."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32502
msgid "Defaults to @samp{1020}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32505
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} string bind-address-ipv4"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32508
msgid "The IP address at which to listen for peer connections, or ``0.0.0.0'' to listen at all available IP addresses."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32510 guix-git/doc/guix.texi:32813
msgid "Defaults to @samp{\"0.0.0.0\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32513
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} string bind-address-ipv6"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32516
msgid "The IPv6 address at which to listen for peer connections, or ``::'' to listen at all available IPv6 addresses."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32518
msgid "Defaults to @samp{\"::\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32521
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean peer-port-random-on-start?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32527
msgid "If @code{#t}, when the daemon starts it will select a port at random on which to listen for peer connections, from the range specified (inclusively) by @code{peer-port-random-low} and @code{peer-port-random-high}.  Otherwise, it listens on the port specified by @code{peer-port}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32532
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} port-number peer-port-random-low"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32535
msgid "The lowest selectable port number when @code{peer-port-random-on-start?} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32537
msgid "Defaults to @samp{49152}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32540
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} port-number peer-port-random-high"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32543
msgid "The highest selectable port number when @code{peer-port-random-on-start} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32545
msgid "Defaults to @samp{65535}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32548
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} port-number peer-port"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32551
msgid "The port on which to listen for peer connections when @code{peer-port-random-on-start?} is @code{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32553
msgid "Defaults to @samp{51413}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32556
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean port-forwarding-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32560
msgid "If @code{#t}, the daemon will attempt to configure port-forwarding on an upstream gateway automatically using @acronym{UPnP} and @acronym{NAT-PMP}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32565
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} encryption-mode encryption"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32570
msgid "The encryption preference for peer connections, one of @code{prefer-unencrypted-connections}, @code{prefer-encrypted-connections} or @code{require-encrypted-connections}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32572
msgid "Defaults to @samp{prefer-encrypted-connections}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32575
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} maybe-string peer-congestion-algorithm"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32580
msgid "The TCP congestion-control algorithm to use for peer connections, specified using a string recognized by the operating system in calls to @code{setsockopt}.  When left unspecified, the operating-system default is used."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32589
msgid "Note that on GNU/Linux systems, the kernel must be configured to allow processes to use a congestion-control algorithm not in the default set; otherwise, it will deny these requests with ``Operation not permitted''.  To see which algorithms are available on your system and which are currently permitted for use, look at the contents of the files @file{tcp_available_congestion_control} and @file{tcp_allowed_congestion_control} in the @file{/proc/sys/net/ipv4} directory."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32597
msgid "As an example, to have Transmission Daemon use @uref{http://www-ece.rice.edu/networks/TCP-LP/,the TCP Low Priority congestion-control algorithm}, you'll need to modify your kernel configuration to build in support for the algorithm, then update your operating-system configuration to allow its use by adding a @code{sysctl-service-type} service (or updating the existing one's configuration) with lines like the following:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:32604
#, no-wrap
msgid ""
"(service sysctl-service-type\n"
"         (sysctl-configuration\n"
"          (settings\n"
"           (\"net.ipv4.tcp_allowed_congestion_control\" .\n"
"            \"reno cubic lp\"))))\n"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32607
msgid "The Transmission Daemon configuration can then be updated with"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:32610
#, no-wrap
msgid "(peer-congestion-algorithm \"lp\")\n"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32613
msgid "and the system reconfigured to have the changes take effect."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32618
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} tcp-type-of-service peer-socket-tos"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32622
msgid "The type of service to request in outgoing @acronym{TCP} packets, one of @code{default}, @code{low-cost}, @code{throughput}, @code{low-delay} and @code{reliability}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32624
msgid "Defaults to @samp{default}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32627
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer peer-limit-global"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32629
msgid "The global limit on the number of connected peers."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32631
msgid "Defaults to @samp{200}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32634
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer peer-limit-per-torrent"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32636
msgid "The per-torrent limit on the number of connected peers."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32641
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer upload-slots-per-torrent"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32644
msgid "The maximum number of peers to which the daemon will upload data simultaneously for each torrent."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32646
msgid "Defaults to @samp{14}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32649
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer peer-id-ttl-hours"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32652
msgid "The maximum lifespan, in hours, of the peer ID associated with each public torrent before it is regenerated."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32654
msgid "Defaults to @samp{6}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32657
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean blocklist-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32660
msgid "When @code{#t}, the daemon will ignore peers mentioned in the blocklist it has most recently downloaded from @code{blocklist-url}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32665
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} maybe-string blocklist-url"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32669
msgid "The URL of a peer blocklist (in @acronym{P2P}-plaintext or eMule @file{.dat} format) to be periodically downloaded and applied when @code{blocklist-enabled?} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32674
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean download-queue-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32677
msgid "If @code{#t}, the daemon will be limited to downloading at most @code{download-queue-size} non-stalled torrents simultaneously."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32682
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer download-queue-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32686
msgid "The size of the daemon's download queue, which limits the number of non-stalled torrents it will download at any one time when @code{download-queue-enabled?} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32691
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean seed-queue-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32694
msgid "If @code{#t}, the daemon will be limited to seeding at most @code{seed-queue-size} non-stalled torrents simultaneously."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32699
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer seed-queue-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32703
msgid "The size of the daemon's seed queue, which limits the number of non-stalled torrents it will seed at any one time when @code{seed-queue-enabled?} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32708
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean queue-stalled-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32713
msgid "When @code{#t}, the daemon will consider torrents for which it has not shared data in the past @code{queue-stalled-minutes} minutes to be stalled and not count them against its @code{download-queue-size} and @code{seed-queue-size} limits."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32718
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer queue-stalled-minutes"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32722
msgid "The maximum period, in minutes, a torrent may be idle before it is considered to be stalled, when @code{queue-stalled-enabled?} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32727
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean ratio-limit-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32730
msgid "When @code{#t}, a torrent being seeded will automatically be paused once it reaches the ratio specified by @code{ratio-limit}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32735
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-rational ratio-limit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32738
msgid "The ratio at which a torrent being seeded will be paused, when @code{ratio-limit-enabled?} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32740
msgid "Defaults to @samp{2.0}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32743
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean idle-seeding-limit-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32746
msgid "When @code{#t}, a torrent being seeded will automatically be paused once it has been idle for @code{idle-seeding-limit} minutes."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32751
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer idle-seeding-limit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32755
msgid "The maximum period, in minutes, a torrent being seeded may be idle before it is paused, when @code{idle-seeding-limit-enabled?} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32760
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean dht-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32764
msgid "Enable @uref{http://bittorrent.org/beps/bep_0005.html,the distributed hash table (@acronym{DHT}) protocol}, which supports the use of trackerless torrents."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32769
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean lpd-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32774
msgid "Enable @uref{https://en.wikipedia.org/wiki/Local_Peer_Discovery,local peer discovery} (@acronym{LPD}), which allows the discovery of peers on the local network and may reduce the amount of data sent over the public Internet."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32779
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean pex-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32783
msgid "Enable @uref{https://en.wikipedia.org/wiki/Peer_exchange,peer exchange} (@acronym{PEX}), which reduces the daemon's reliance on external trackers and may improve its performance."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32788
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean utp-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32793
msgid "Enable @uref{http://bittorrent.org/beps/bep_0029.html,the micro transport protocol} (@acronym{uTP}), which aims to reduce the impact of BitTorrent traffic on other users of the local network while maintaining full utilization of the available bandwidth."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32798
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean rpc-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32803
msgid "If @code{#t}, enable the remote procedure call (@acronym{RPC})  interface, which allows remote control of the daemon via its Web interface, the @command{transmission-remote} command-line client, and similar tools."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32808
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} string rpc-bind-address"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32811
msgid "The IP address at which to listen for @acronym{RPC} connections, or ``0.0.0.0'' to listen at all available IP addresses."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32816
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} port-number rpc-port"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32818
msgid "The port on which to listen for @acronym{RPC} connections."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32820
msgid "Defaults to @samp{9091}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32823
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} string rpc-url"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32825
msgid "The path prefix to use in the @acronym{RPC}-endpoint @acronym{URL}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32827
msgid "Defaults to @samp{\"/transmission/\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32830
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean rpc-authentication-required?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32835
msgid "When @code{#t}, clients must authenticate (see @code{rpc-username} and @code{rpc-password}) when using the @acronym{RPC} interface.  Note this has the side effect of disabling host-name whitelisting (see @code{rpc-host-whitelist-enabled?}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32840
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} maybe-string rpc-username"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32843
msgid "The username required by clients to access the @acronym{RPC} interface when @code{rpc-authentication-required?} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32848
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} maybe-transmission-password-hash rpc-password"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32854
msgid "The password required by clients to access the @acronym{RPC} interface when @code{rpc-authentication-required?} is @code{#t}.  This must be specified using a password hash in the format recognized by Transmission clients, either copied from an existing @file{settings.json} file or generated using the @code{transmission-password-hash} procedure."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32859
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean rpc-whitelist-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32862
msgid "When @code{#t}, @acronym{RPC} requests will be accepted only when they originate from an address specified in @code{rpc-whitelist}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32867
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} string-list rpc-whitelist"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32871
msgid "The list of IP and IPv6 addresses from which @acronym{RPC} requests will be accepted when @code{rpc-whitelist-enabled?} is @code{#t}.  Wildcards may be specified using @samp{*}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32873
msgid "Defaults to @samp{'(\"127.0.0.1\" \"::1\")}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32876
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean rpc-host-whitelist-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32881
msgid "When @code{#t}, @acronym{RPC} requests will be accepted only when they are addressed to a host named in @code{rpc-host-whitelist}.  Note that requests to ``localhost'' or ``localhost.'', or to a numeric address, are always accepted regardless of these settings."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32884
msgid "Note also this functionality is disabled when @code{rpc-authentication-required?} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32889
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} string-list rpc-host-whitelist"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32892
msgid "The list of host names recognized by the @acronym{RPC} server when @code{rpc-host-whitelist-enabled?} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32897
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} message-level message-level"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32901
msgid "The minimum severity level of messages to be logged (to @file{/var/log/transmission.log}) by the daemon, one of @code{none} (no logging), @code{error}, @code{info} and @code{debug}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32906
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean start-added-torrents?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32909
msgid "When @code{#t}, torrents are started as soon as they are added; otherwise, they are added in ``paused'' state."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32914
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean script-torrent-done-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32918
msgid "When @code{#t}, the script specified by @code{script-torrent-done-filename} will be invoked each time a torrent completes."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32923
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} maybe-file-object script-torrent-done-filename"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32927
msgid "A file name or file-like object specifying a script to run each time a torrent completes, when @code{script-torrent-done-enabled?} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32932
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean scrape-paused-torrents-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32935
msgid "When @code{#t}, the daemon will scrape trackers for a torrent even when the torrent is paused."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32940
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer cache-size-mb"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32944
msgid "The amount of memory, in megabytes, to allocate for the daemon's in-memory cache.  A larger value may increase performance by reducing the frequency of disk I/O."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32946
msgid "Defaults to @samp{4}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32949
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean prefetch-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32953
msgid "When @code{#t}, the daemon will try to improve I/O performance by hinting to the operating system which data is likely to be read next from disk to satisfy requests from peers."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:32966
#, no-wrap
msgid "Tailon Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32970
msgid "@uref{https://tailon.readthedocs.io/, Tailon} is a web application for viewing and searching log files."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32973
msgid "The following example will configure the service with default values.  By default, Tailon can be accessed on port 8080 (@code{http://localhost:8080})."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:32976
#, no-wrap
msgid "(service tailon-service-type)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32980
msgid "The following example customises more of the Tailon configuration, adding @command{sed} to the list of allowed commands."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:32987
#, no-wrap
msgid ""
"(service tailon-service-type\n"
"         (tailon-configuration\n"
"           (config-file\n"
"             (tailon-configuration-file\n"
"               (allowed-commands '(\"tail\" \"grep\" \"awk\" \"sed\"))))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:32990
#, no-wrap
msgid "{Data Type} tailon-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:32993
msgid "Data type representing the configuration of Tailon.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32995
#, no-wrap
msgid "@code{config-file} (default: @code{(tailon-configuration-file)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32999
msgid "The configuration file to use for Tailon.  This can be set to a @dfn{tailon-configuration-file} record value, or any gexp (@pxref{G-Expressions})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33002
msgid "For example, to instead use a local file, the @code{local-file} function can be used:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:33007
#, no-wrap
msgid ""
"(service tailon-service-type\n"
"         (tailon-configuration\n"
"           (config-file (local-file \"./my-tailon.conf\"))))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33009
#, no-wrap
msgid "@code{package} (default: @code{tailon})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33011
msgid "The tailon package to use."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:33015
#, no-wrap
msgid "{Data Type} tailon-configuration-file"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:33018
msgid "Data type representing the configuration options for Tailon.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33020
#, no-wrap
msgid "@code{files} (default: @code{(list \"/var/log\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33025
msgid "List of files to display.  The list can include strings for a single file or directory, or a list, where the first item is the name of a subsection, and the remaining items are the files or directories in that subsection."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33026
#, no-wrap
msgid "@code{bind} (default: @code{\"localhost:8080\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33028
msgid "Address and port to which Tailon should bind on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33029
#, no-wrap
msgid "@code{relative-root} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33031
msgid "URL path to use for Tailon, set to @code{#f} to not use a path."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33032
#, no-wrap
msgid "@code{allow-transfers?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33034
msgid "Allow downloading the log files in the web interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33035
#, no-wrap
msgid "@code{follow-names?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33037
msgid "Allow tailing of not-yet existent files."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33038
#, no-wrap
msgid "@code{tail-lines} (default: @code{200})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33040
msgid "Number of lines to read initially from each file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33041
#, no-wrap
msgid "@code{allowed-commands} (default: @code{(list \"tail\" \"grep\" \"awk\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33043
msgid "Commands to allow running.  By default, @code{sed} is disabled."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33046
msgid "Set @code{debug?} to @code{#t} to show debug messages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33047
#, no-wrap
msgid "@code{wrap-lines} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33051
msgid "Initial line wrapping state in the web interface.  Set to @code{#t} to initially wrap lines (the default), or to @code{#f} to initially not wrap lines."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33052
#, no-wrap
msgid "@code{http-auth} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33056
msgid "HTTP authentication type to use.  Set to @code{#f} to disable authentication (the default).  Supported values are @code{\"digest\"} or @code{\"basic\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33057
#, no-wrap
msgid "@code{users} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33062
msgid "If HTTP authentication is enabled (see @code{http-auth}), access will be restricted to the credentials provided here.  To configure users, use a list of pairs, where the first element of the pair is the username, and the 2nd element of the pair is the password."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:33068
#, no-wrap
msgid ""
"(tailon-configuration-file\n"
"  (http-auth \"basic\")\n"
"  (users     '((\"user1\" . \"password1\")\n"
"               (\"user2\" . \"password2\"))))\n"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:33074
#, no-wrap
msgid "Darkstat Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:33075
#, no-wrap
msgid "darkstat"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33078
msgid "Darkstat is a packet sniffer that captures network traffic, calculates statistics about usage, and serves reports over HTTP."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:33079
#, no-wrap
msgid "darkstat-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:33084
msgid "This is the service type for the @uref{https://unix4lyfe.org/darkstat/, darkstat} service, its value must be a @code{darkstat-configuration} record as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:33089
#, no-wrap
msgid ""
"(service darkstat-service-type\n"
"         (darkstat-configuration\n"
"           (interface \"eno1\")))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:33092
#, no-wrap
msgid "{Data Type} darkstat-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:33094
msgid "Data type representing the configuration of @command{darkstat}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33096
#, no-wrap
msgid "@code{package} (default: @code{darkstat})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33098
msgid "The darkstat package to use."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:33099
#, no-wrap
msgid "interface"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33101
msgid "Capture traffic on the specified network interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33102
#, no-wrap
msgid "@code{port} (default: @code{\"667\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33104
msgid "Bind the web interface to the specified port."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33107 guix-git/doc/guix.texi:33143
msgid "Bind the web interface to the specified address."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33108
#, no-wrap
msgid "@code{base} (default: @code{\"/\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33111
msgid "Specify the path of the base URL@.  This can be useful if @command{darkstat} is accessed via a reverse proxy."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:33116 guix-git/doc/guix.texi:33117
#, no-wrap
msgid "prometheus-node-exporter"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:33116
#, no-wrap
msgid "Prometheus Node Exporter Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33123
msgid "The Prometheus ``node exporter'' makes hardware and operating system statistics provided by the Linux kernel available for the Prometheus monitoring system.  This service should be deployed on all physical nodes and virtual machines, where monitoring these statistics is desirable."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:33124
#, no-wrap
msgid "prometheus-node-exporter-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:33128
msgid "This is the service type for the @uref{https://github.com/prometheus/node_exporter/, prometheus-node-exporter} service, its value must be a @code{prometheus-node-exporter-configuration}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:33131
#, no-wrap
msgid "(service prometheus-node-exporter-service-type)\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:33134
#, no-wrap
msgid "{Data Type} prometheus-node-exporter-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:33136
msgid "Data type representing the configuration of @command{node_exporter}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33138
#, no-wrap
msgid "@code{package} (default: @code{go-github-com-prometheus-node-exporter})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33140
msgid "The prometheus-node-exporter package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33141
#, no-wrap
msgid "@code{web-listen-address} (default: @code{\":9100\"})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33144
#, no-wrap
msgid "@code{textfile-directory} (default: @code{\"/var/lib/prometheus/node-exporter\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33148
msgid "This directory can be used to export metrics specific to this machine.  Files containing metrics in the text format, with the filename ending in @code{.prom} should be placed in this directory."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33151
msgid "Extra options to pass to the Prometheus node exporter."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:33156 guix-git/doc/guix.texi:33157
#, no-wrap
msgid "vnstat"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:33156
#, no-wrap
msgid "vnStat Network Traffic Monitor"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33162
msgid "vnStat is a network traffic monitor that uses interface statistics provided by the kernel rather than traffic sniffing.  This makes it a light resource monitor, regardless of network traffic rate."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:33163
#, fuzzy, no-wrap
#| msgid "Services"
msgid "vnstat-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:33166
msgid "This is the service type for the @uref{https://humdi.net/vnstat/,vnStat} daemon and accepts a @code{vnstat-configuration} value."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:33168
msgid "The following example will configure the service with default values:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:33171
#, fuzzy, no-wrap
#| msgid "Services"
msgid "(service vnstat-service-type)\n"
msgstr "Servizi"

#. type: deftp
#: guix-git/doc/guix.texi:33175
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} vnstat-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:33177
msgid "Available @code{vnstat-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33179
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{package} (default: @code{vnstat}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33181
msgid "The vnstat package."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33182
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{database-directory} (default: @code{\"/var/lib/vnstat\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33185
msgid "Specifies the directory where the database is to be stored.  A full path must be given and a leading '/' isn't required."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33186
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{5-minute-hours} (default: @code{48}) (type: maybe-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33191
msgid "Data retention duration for the 5 minute resolution entries.  The configuration defines for how many past hours entries will be stored.  Set to @code{-1} for unlimited entries or to @code{0} to disable the data collection of this resolution."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33192
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{64bit-interface-counters} (default: @code{-2}) (type: maybe-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33201
msgid "Select interface counter handling.  Set to @code{1} for defining that all interfaces use 64-bit counters on the kernel side and @code{0} for defining 32-bit counter.  Set to @code{-1} for using the old style logic used in earlier versions where counter values within 32-bits are assumed to be 32-bit and anything larger is assumed to be a 64-bit counter.  This may produce false results if a 64-bit counter is reset within the 32-bits.  Set to @code{-2} for using automatic detection based on available kernel datastructures."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33202
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{always-add-new-interfaces?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33209
msgid "Enable or disable automatic creation of new database entries for interfaces not currently in the database even if the database file already exists when the daemon is started.  New database entries will also get created for new interfaces seen while the daemon is running.  Pseudo interfaces @samp{lo}, @samp{lo0} and @samp{sit0} are always excluded from getting added."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33210
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{bandwidth-detection?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33218
msgid "Try to automatically detect @var{max-bandwidth} value for each monitored interface.  Mostly only ethernet interfaces support this feature.  @var{max-bandwidth} will be used as fallback value if detection fails.  Any interface specific @var{max-BW} configuration will disable the detection for the specified interface.  In Linux, the detection is disabled for tun interfaces due to the Linux kernel always reporting 10 Mbit regardless of the used real interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33219
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{bandwidth-detection-interval} (default: @code{5}) (type: maybe-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33224
msgid "How often in minutes interface specific detection of @var{max-bandwidth} is done for detecting possible changes when @var{bandwidth-detection} is enabled.  Can be disabled by setting to @code{0}.  Value range: @samp{0}..@samp{30}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33225
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{boot-variation} (default: @code{15}) (type: maybe-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33228
msgid "Time in seconds how much the boot time reported by system kernel can variate between updates.  Value range: @samp{0}..@samp{300}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33229
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{check-disk-space?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33232
msgid "Enable or disable the availability check of at least some free disk space before a database write."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33233
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{create-directories?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33236
msgid "Enable or disable the creation of directories when a configured path doesn't exist.  This includes @var{database-directory}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33237
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{daemon-group} (type: maybe-user-group)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33240
msgid "Specify the group to which the daemon process should switch during startup.  Set to @code{%unset-value} to disable group switching."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33241
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{daemon-user} (type: maybe-user-account)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33244
msgid "Specify the user to which the daemon process should switch during startup.  Set to @code{%unset-value} to disable user switching."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33245
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{daily-days} (default: @code{62}) (type: maybe-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33250
msgid "Data retention duration for the one day resolution entries.  The configuration defines for how many past days entries will be stored.  Set to @code{-1} for unlimited entries or to @code{0} to disable the data collection of this resolution."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33251
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{database-synchronous} (default: @code{-1}) (type: maybe-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33262
msgid "Change the setting of the SQLite \"synchronous\" flag which controls how much care is taken to ensure disk writes have fully completed when writing data to the database before continuing other actions.  Higher values take extra steps to ensure data safety at the cost of slower performance.  A value of @code{0} will result in all handling being left to the filesystem itself.  Set to @code{-1} to select the default value according to database mode controlled by @var{database-write-ahead-logging} setting.  See SQLite documentation for more details regarding values from @code{1} to @code{3}.  Value range: @samp{-1}..@samp{3}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33263
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{database-write-ahead-logging?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33267
msgid "Enable or disable SQLite Write-Ahead Logging mode for the database.  See SQLite documentation for more details and note that support for read-only operations isn't available in older SQLite versions."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33268
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{hourly-days} (default: @code{4}) (type: maybe-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33273
msgid "Data retention duration for the one hour resolution entries.  The configuration defines for how many past days entries will be stored.  Set to @code{-1} for unlimited entries or to @code{0} to disable the data collection of this resolution."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33274 guix-git/doc/guix.texi:39307
#: guix-git/doc/guix.texi:44972 guix-git/doc/guix.texi:45927
#: guix-git/doc/guix.texi:51893
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{log-file} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33277
msgid "Specify log file path and name to be used if @var{use-logging} is set to @code{1}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33278
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-bandwidth} (type: maybe-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33283
msgid "Maximum bandwidth for all interfaces.  If the interface specific traffic exceeds the given value then the data is assumed to be invalid and rejected.  Set to 0 in order to disable the feature.  Value range: @samp{0}..@samp{50000}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33284
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-bw} (type: maybe-alist)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33288
msgid "Same as @var{max-bandwidth} but can be used for setting individual limits for selected interfaces.  This is an association list of interfaces as strings to integer values.  For example,"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:33291
#, no-wrap
msgid ""
"(max-bw `((\"eth0\" .  15000)\n"
"          (\"ppp0\" .  10000)))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33294
msgid "@var{bandwidth-detection} is disabled on an interface specific level for each @var{max-bw} configuration.  Value range: @samp{0}..@samp{50000}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33295
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{monthly-months} (default: @code{25}) (type: maybe-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33300
msgid "Data retention duration for the one month resolution entries.  The configuration defines for how many past months entries will be stored.  Set to @code{-1} for unlimited entries or to @code{0} to disable the data collection of this resolution."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33301
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{month-rotate} (default: @code{1}) (type: maybe-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33308
msgid "Day of month that months are expected to change.  Usually set to 1 but can be set to alternative values for example for tracking monthly billed traffic where the billing period doesn't start on the first day.  For example, if set to 7, days of February up to and including the 6th will count for January.  Changing this option will not cause existing data to be recalculated.  Value range: @samp{1}..@samp{28}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33309
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{month-rotate-affects-years?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33312
msgid "Enable or disable @var{month-rotate} also affecting yearly data.  Applicable only when @var{month-rotate} has a value greater than one."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33313
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{offline-save-interval} (default: @code{30}) (type: maybe-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33317
msgid "How often in minutes cached interface data is saved to file when all monitored interfaces are offline.  Value range: @var{save-interval}..@samp{60}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33318
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{pid-file} (default: @code{\"/var/run/vnstatd.pid\"}) (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33320
msgid "Specify pid file path and name to be used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33321
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{poll-interval} (default: @code{5}) (type: maybe-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33324
msgid "How often in seconds interfaces are checked for status changes.  Value range: @samp{2}..@samp{60}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33325
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{rescan-database-on-save?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33330
msgid "Automatically discover added interfaces from the database and start monitoring.  The rescan is done every @var{save-interval} or @var{offline-save-interval} minutes depending on the current activity state."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33331
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{save-interval} (default: @code{5}) (type: maybe-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33334
msgid "How often in minutes cached interface data is saved to file.  Value range: ( @var{update-interval} / 60 )..@samp{60}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33335
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{save-on-status-change?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33339
msgid "Enable or disable the additional saving to file of cached interface data when the availability of an interface changes, i.e., when an interface goes offline or comes online."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33340
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{time-sync-wait} (default: @code{5}) (type: maybe-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33346
msgid "How many minutes to wait during daemon startup for system clock to sync if most recent database update appears to be in the future.  This may be needed in systems without a real-time clock (RTC) which require some time after boot to query and set the correct time.  @code{0} = wait disabled.  Value range: @samp{0}..@samp{60}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33347
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{top-day-entries} (default: @code{20}) (type: maybe-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33352
msgid "Data retention duration for the top day entries.  The configuration defines how many of the past top day entries will be stored.  Set to @code{-1} for unlimited entries or to @code{0} to disable the data collection of this resolution."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33353
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{trafficless-entries?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33356
msgid "Create database entries even when there is no traffic during the entry's time period."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33357
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{update-file-owner?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33366
msgid "Enable or disable the update of file ownership during daemon process startup.  During daemon startup, only database, log and pid files will be modified if the user or group change feature ( @var{daemon-user} or @var{daemon-group} ) is enabled and the files don't match the requested user or group.  During manual database creation, this option will cause file ownership to be inherited from the database directory if the directory already exists.  This option only has effect when the process is started as root or via sudo."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33367
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{update-interval} (default: @code{20}) (type: maybe-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33370
msgid "How often in seconds the interface data is updated.  Value range: @var{poll-interval}..@samp{300}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33371
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{use-logging} (default: @code{2}) (type: maybe-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33374
msgid "Enable or disable logging.  Accepted values are: @code{0} = disabled, @code{1} = logfile and @code{2} = syslog."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33375
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{use-utc?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33381
msgid "Enable or disable using UTC as timezone in the database for all entries.  When enabled, all entries added to the database will use UTC regardless of the configured system timezone.  When disabled, the configured system timezone will be used.  Changing this setting will not result in already existing data to be modified."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33382
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{yearly-years} (default: @code{-1}) (type: maybe-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33387
msgid "Data retention duration for the one year resolution entries.  The configuration defines for how many past years entries will be stored.  Set to @code{-1} for unlimited entries or to @code{0} to disable the data collection of this resolution."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:33392
#, no-wrap
msgid "Zabbix server"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:33393
#, no-wrap
msgid "zabbix zabbix-server"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33398
msgid "Zabbix is a high performance monitoring system that can collect data from a variety of sources and provide the results in a web-based interface.  Alerting and reporting is built-in, as well as @dfn{templates} for common operating system metrics such as network utilization, CPU load, and disk space consumption."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33405
msgid "This service provides the central Zabbix monitoring service; you also need @ref{zabbix-front-end,@code{zabbix-front-end-service-type}} to configure Zabbix and display results, and optionally @ref{zabbix-agent, @code{zabbix-agent-service-type}} on machines that should be monitored (other data sources are supported, such as @ref{prometheus-node-exporter, Prometheus Node Exporter})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:33406
#, no-wrap
msgid "zabbix-server-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:33409
msgid "This is the service type for the Zabbix server service.  Its value must be a @code{zabbix-server-configuration} record, shown below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:33413
#, no-wrap
msgid "{Data Type} zabbix-server-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:33415
msgid "Available @code{zabbix-server-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33417 guix-git/doc/guix.texi:33580
#, no-wrap
msgid "@code{zabbix-server} (default: @code{zabbix-server}) (type: file-like)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33419
msgid "The zabbix-server package."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33420 guix-git/doc/guix.texi:33506
#, no-wrap
msgid "@code{user} (default: @code{\"zabbix\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33422
msgid "User who will run the Zabbix server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33423 guix-git/doc/guix.texi:33509
#, no-wrap
msgid "@code{group} (default: @code{\"zabbix\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33425
msgid "Group who will run the Zabbix server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33426
#, no-wrap
msgid "@code{db-host} (default: @code{\"127.0.0.1\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33428 guix-git/doc/guix.texi:33590
msgid "Database host name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33429 guix-git/doc/guix.texi:33594
#, no-wrap
msgid "@code{db-name} (default: @code{\"zabbix\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33431 guix-git/doc/guix.texi:33596
msgid "Database name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33432 guix-git/doc/guix.texi:33597
#, no-wrap
msgid "@code{db-user} (default: @code{\"zabbix\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33434 guix-git/doc/guix.texi:33599
msgid "Database user."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33435 guix-git/doc/guix.texi:33600
#, no-wrap
msgid "@code{db-password} (default: @code{\"\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33438
msgid "Database password.  Please, use @code{include-files} with @code{DBPassword=SECRET} inside a specified file instead."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33439 guix-git/doc/guix.texi:33591
#, no-wrap
msgid "@code{db-port} (default: @code{5432}) (type: number)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33441 guix-git/doc/guix.texi:33593
msgid "Database port."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33442 guix-git/doc/guix.texi:33516
#, no-wrap
msgid "@code{log-type} (default: @code{\"\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33444 guix-git/doc/guix.texi:33518
msgid "Specifies where log messages are written to:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:33447 guix-git/doc/guix.texi:33522
#, no-wrap
msgid "@code{system} - syslog."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33449
#, no-wrap
msgid "@code{file} - file specified with @code{log-file} parameter."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33451 guix-git/doc/guix.texi:33526
#, no-wrap
msgid "@code{console} - standard output."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33455
#, no-wrap
msgid "@code{log-file} (default: @code{\"/var/log/zabbix/server.log\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33457 guix-git/doc/guix.texi:33532
msgid "Log file name for @code{log-type} @code{file} parameter."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33458
#, no-wrap
msgid "@code{pid-file} (default: @code{\"/var/run/zabbix/zabbix_server.pid\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33460 guix-git/doc/guix.texi:33535
msgid "Name of PID file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33461
#, no-wrap
msgid "@code{ssl-ca-location} (default: @code{\"/etc/ssl/certs/ca-certificates.crt\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33464
msgid "The location of certificate authority (CA) files for SSL server certificate verification."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33465
#, no-wrap
msgid "@code{ssl-cert-location} (default: @code{\"/etc/ssl/certs\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33467
msgid "Location of SSL client certificates."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33468 guix-git/doc/guix.texi:33546
#, no-wrap
msgid "@code{extra-options} (default: @code{\"\"}) (type: extra-options)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33470 guix-git/doc/guix.texi:33548
msgid "Extra options will be appended to Zabbix server configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33471 guix-git/doc/guix.texi:33549
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{include-files} (default: @code{'()}) (type: include-files)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33474 guix-git/doc/guix.texi:33552
msgid "You may include individual files or all files in a directory in the configuration file."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:33483
msgid "zabbix-agent"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:33483
#, no-wrap
msgid "Zabbix agent"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:33484
#, no-wrap
msgid "zabbix zabbix-agent"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33491
msgid "The Zabbix agent gathers information about the running system for the Zabbix monitoring server.  It has a variety of built-in checks, and can be extended with custom @uref{https://www.zabbix.com/documentation/current/en/manual/config/items/userparameters, @dfn{user parameters}}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:33492
#, no-wrap
msgid "zabbix-agent-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:33495
msgid "This is the service type for the Zabbix agent service.  Its value must be a @code{zabbix-agent-configuration} record, shown below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:33499
#, no-wrap
msgid "{Data Type} zabbix-agent-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:33501
msgid "Available @code{zabbix-agent-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33503
#, no-wrap
msgid "@code{zabbix-agent} (default: @code{zabbix-agentd}) (type: file-like)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33505
msgid "The zabbix-agent package."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33508
msgid "User who will run the Zabbix agent."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33511
msgid "Group who will run the Zabbix agent."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33512
#, no-wrap
msgid "@code{hostname} (default: @code{\"\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33515
msgid "Unique, case sensitive hostname which is required for active checks and must match hostname as configured on the server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33523
#, no-wrap
msgid "@code{file} - file specified with"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:33525
msgid "@code{log-file} parameter."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33530
#, no-wrap
msgid "@code{log-file} (default: @code{\"/var/log/zabbix/agent.log\"}) (type: string)"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33533
#, no-wrap
msgid "@code{pid-file} (default: @code{\"/var/run/zabbix/zabbix_agent.pid\"}) (type: string)"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33536
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{server} (default: @code{'(\"127.0.0.1\")}) (type: list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33540
msgid "List of IP addresses, optionally in CIDR notation, or hostnames of Zabbix servers and Zabbix proxies.  Incoming connections will be accepted only from the hosts listed here."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33541
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{server-active} (default: @code{'(\"127.0.0.1\")}) (type: list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33545
msgid "List of IP:port (or hostname:port) pairs of Zabbix servers and Zabbix proxies for active checks.  If port is not specified, default port is used.  If this parameter is not specified, active checks are disabled."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:33561
msgid "zabbix-front-end"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:33561
#, no-wrap
msgid "Zabbix front-end"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:33562
#, no-wrap
msgid "zabbix zabbix-front-end"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33568
msgid "The Zabbix front-end provides a web interface to Zabbix.  It does not need to run on the same machine as the Zabbix server.  This service works by extending the @ref{PHP-FPM} and @ref{NGINX} services with the configuration necessary for loading the Zabbix user interface."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:33569
#, no-wrap
msgid "zabbix-front-end-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:33572
msgid "This is the service type for the Zabbix web frontend.  Its value must be a @code{zabbix-front-end-configuration} record, shown below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:33576
#, no-wrap
msgid "{Data Type} zabbix-front-end-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:33578
msgid "Available @code{zabbix-front-end-configuration} fields are:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33582
msgid "The Zabbix server package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33583
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{nginx} (default: @code{'()}) (type: list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:33587
msgid "List of @ref{nginx-server-configuration,@code{nginx-server-configuration}} blocks for the Zabbix front-end.  When empty, a default that listens on port 80 is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33588
#, no-wrap
msgid "@code{db-host} (default: @code{\"localhost\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33602
msgid "Database password.  Please, use @code{db-secret-file} instead."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33603
#, no-wrap
msgid "@code{db-secret-file} (default: @code{\"\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33607
msgid "Secret file which will be appended to @file{zabbix.conf.php} file.  This file contains credentials for use by Zabbix front-end.  You are expected to create it manually."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33608
#, no-wrap
msgid "@code{zabbix-host} (default: @code{\"localhost\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33610
msgid "Zabbix server hostname."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33611
#, no-wrap
msgid "@code{zabbix-port} (default: @code{10051}) (type: number)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33613
msgid "Zabbix server port."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:33623
#, no-wrap
msgid "Kerberos"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33627
msgid "The @code{(gnu services kerberos)} module provides services relating to the authentication protocol @dfn{Kerberos}."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:33628
#, no-wrap
msgid "Krb5 Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33635
msgid "Programs using a Kerberos client library normally expect a configuration file in @file{/etc/krb5.conf}.  This service generates such a file from a definition provided in the operating system declaration.  It does not cause any daemon to be started."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33639
msgid "No ``keytab'' files are provided by this service---you must explicitly create them.  This service is known to work with the MIT client library, @code{mit-krb5}.  Other implementations have not been tested."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:33640
#, no-wrap
msgid "krb5-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:33642
msgid "A service type for Kerberos 5 clients."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33646
msgid "Here is an example of its use:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:33660
#, no-wrap
msgid ""
"(service krb5-service-type\n"
"         (krb5-configuration\n"
"          (default-realm \"EXAMPLE.COM\")\n"
"          (allow-weak-crypto? #t)\n"
"          (realms (list\n"
"                   (krb5-realm\n"
"                    (name \"EXAMPLE.COM\")\n"
"                    (admin-server \"groucho.example.com\")\n"
"                    (kdc \"karl.example.com\"))\n"
"                   (krb5-realm\n"
"                    (name \"ARGRX.EDU\")\n"
"                    (admin-server \"kerb-admin.argrx.edu\")\n"
"                    (kdc \"keys.argrx.edu\"))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33664
msgid "This example provides a Kerberos@tie{}5 client configuration which:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33665
#, no-wrap
msgid "Recognizes two realms, @i{viz:} ``EXAMPLE.COM'' and ``ARGRX.EDU'', both"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:33667
msgid "of which have distinct administration servers and key distribution centers;"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33667
#, no-wrap
msgid "Will default to the realm ``EXAMPLE.COM'' if the realm is not explicitly"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:33669
msgid "specified by clients;"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33669
#, no-wrap
msgid "Accepts services which only support encryption types known to be weak."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33677
msgid "The @code{krb5-realm} and @code{krb5-configuration} types have many fields.  Only the most commonly used ones are described here.  For a full list, and more detailed explanation of each, see the MIT @uref{https://web.mit.edu/kerberos/krb5-devel/doc/admin/conf_files/krb5_conf.html,,krb5.conf} documentation."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:33679
#, no-wrap
msgid "{Data Type} krb5-realm"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:33680
#, no-wrap
msgid "realm, kerberos"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33686
msgid "This field is a string identifying the name of the realm.  A common convention is to use the fully qualified DNS name of your organization, converted to upper case."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:33687
#, no-wrap
msgid "admin-server"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33690
msgid "This field is a string identifying the host where the administration server is running."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:33691
#, no-wrap
msgid "kdc"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33694
msgid "This field is a string identifying the key distribution center for the realm."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:33697
#, no-wrap
msgid "{Data Type} krb5-configuration"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33700
#, no-wrap
msgid "@code{allow-weak-crypto?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33703
msgid "If this flag is @code{#t} then services which only offer encryption algorithms known to be weak will be accepted."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33704
#, no-wrap
msgid "@code{default-realm} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33711
msgid "This field should be a string identifying the default Kerberos realm for the client.  You should set this field to the name of your Kerberos realm.  If this value is @code{#f} then a realm must be specified with every Kerberos principal when invoking programs such as @command{kinit}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:33712
#, no-wrap
msgid "realms"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33717
msgid "This should be a non-empty list of @code{krb5-realm} objects, which clients may access.  Normally, one of them will have a @code{name} field matching the @code{default-realm} field."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:33721
#, no-wrap
msgid "PAM krb5 Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:33722
#, no-wrap
msgid "pam-krb5"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33728
msgid "The @code{pam-krb5} service allows for login authentication and password management via Kerberos.  You will need this service if you want PAM enabled applications to authenticate users using Kerberos."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:33729
#, no-wrap
msgid "pam-krb5-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:33731
msgid "A service type for the Kerberos 5 PAM module."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:33733
#, no-wrap
msgid "{Data Type} pam-krb5-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:33736
msgid "Data type representing the configuration of the Kerberos 5 PAM module.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33737
#, no-wrap
msgid "@code{pam-krb5} (default: @code{pam-krb5})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33739
msgid "The pam-krb5 package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33740
#, no-wrap
msgid "@code{minimum-uid} (default: @code{1000})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33743
msgid "The smallest user ID for which Kerberos authentications should be attempted.  Local accounts with lower values will silently fail to authenticate."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:33749
#, no-wrap
msgid "LDAP"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:33751
#, no-wrap
msgid "Authentication against LDAP with nslcd"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:33752
#, no-wrap
msgid "nslcd, LDAP service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33759
msgid "The @code{(gnu services authentication)} module provides the @code{nslcd-service-type}, which can be used to authenticate against an LDAP server.  In addition to configuring the service itself, you may want to add @code{ldap} as a name service to the Name Service Switch. @xref{Name Service Switch} for detailed information."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33763
msgid "Here is a simple operating system declaration with a default configuration of the @code{nslcd-service-type} and a Name Service Switch configuration that consults the @code{ldap} name service last:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:33786
#, no-wrap
msgid ""
"(use-service-modules authentication)\n"
"(use-modules (gnu system nss))\n"
"...\n"
"(operating-system\n"
"  ...\n"
"  (services\n"
"    (cons*\n"
"      (service nslcd-service-type)\n"
"      (service dhcp-client-service-type)\n"
"      %base-services))\n"
"  (name-service-switch\n"
"   (let ((services (list (name-service (name \"db\"))\n"
"                         (name-service (name \"files\"))\n"
"                         (name-service (name \"ldap\")))))\n"
"     (name-service-switch\n"
"      (inherit %mdns-host-lookup-nss)\n"
"      (password services)\n"
"      (shadow   services)\n"
"      (group    services)\n"
"      (netgroup services)\n"
"      (gshadow  services)))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33791
msgid "Available @code{nslcd-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33792
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} package nss-pam-ldapd"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33794
msgid "The @code{nss-pam-ldapd} package to use."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33797
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-number threads"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33801
msgid "The number of threads to start that can handle requests and perform LDAP queries.  Each thread opens a separate connection to the LDAP server.  The default is to start 5 threads."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33806
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} string uid"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33808
msgid "This specifies the user id with which the daemon should be run."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33810 guix-git/doc/guix.texi:33817
msgid "Defaults to @samp{\"nslcd\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33813
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} string gid"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33815
msgid "This specifies the group id with which the daemon should be run."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33820
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} log-option log"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33828
msgid "This option controls the way logging is done via a list containing SCHEME and LEVEL@.  The SCHEME argument may either be the symbols @samp{none} or @samp{syslog}, or an absolute file name.  The LEVEL argument is optional and specifies the log level.  The log level may be one of the following symbols: @samp{crit}, @samp{error}, @samp{warning}, @samp{notice}, @samp{info} or @samp{debug}.  All messages with the specified log level or higher are logged."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33830
msgid "Defaults to @samp{'(\"/var/log/nslcd\" info)}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33833
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} list uri"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33836
msgid "The list of LDAP server URIs.  Normally, only the first server will be used with the following servers as fall-back."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33838
msgid "Defaults to @samp{'(\"ldap://localhost:389/\")}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33841
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string ldap-version"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33844
msgid "The version of the LDAP protocol to use.  The default is to use the maximum version supported by the LDAP library."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33849
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string binddn"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33852
msgid "Specifies the distinguished name with which to bind to the directory server for lookups.  The default is to bind anonymously."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33857
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string bindpw"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33860
msgid "Specifies the credentials with which to bind.  This option is only applicable when used with binddn."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33865
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string rootpwmoddn"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33868
msgid "Specifies the distinguished name to use when the root user tries to modify a user's password using the PAM module."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33873
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string rootpwmodpw"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33877
msgid "Specifies the credentials with which to bind if the root user tries to change a user's password.  This option is only applicable when used with rootpwmoddn"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33882
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string sasl-mech"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33885
msgid "Specifies the SASL mechanism to be used when performing SASL authentication."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33890
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string sasl-realm"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33892
msgid "Specifies the SASL realm to be used when performing SASL authentication."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33897
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string sasl-authcid"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33900
msgid "Specifies the authentication identity to be used when performing SASL authentication."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33905
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string sasl-authzid"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33908
msgid "Specifies the authorization identity to be used when performing SASL authentication."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33913
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-boolean sasl-canonicalize?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33918
msgid "Determines whether the LDAP server host name should be canonicalised.  If this is enabled the LDAP library will do a reverse host name lookup.  By default, it is left up to the LDAP library whether this check is performed or not."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33923
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string krb5-ccname"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33925
msgid "Set the name for the GSS-API Kerberos credentials cache."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33930
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} string base"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33932
msgid "The directory search base."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33934
msgid "Defaults to @samp{\"dc=example,dc=com\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33937
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} scope-option scope"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33941
msgid "Specifies the search scope (subtree, onelevel, base or children).  The default scope is subtree; base scope is almost never useful for name service lookups; children scope is not supported on all servers."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33943
msgid "Defaults to @samp{'(subtree)}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33946
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-deref-option deref"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33949
msgid "Specifies the policy for dereferencing aliases.  The default policy is to never dereference aliases."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33954
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-boolean referrals"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33957
msgid "Specifies whether automatic referral chasing should be enabled.  The default behaviour is to chase referrals."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33962
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} list-of-map-entries maps"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33967
msgid "This option allows for custom attributes to be looked up instead of the default RFC 2307 attributes.  It is a list of maps, each consisting of the name of a map, the RFC 2307 attribute to match and the query expression for the attribute as it is available in the directory."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33972
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} list-of-filter-entries filters"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33975
msgid "A list of filters consisting of the name of a map to which the filter applies and an LDAP search filter expression."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33980
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-number bind-timelimit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33983
msgid "Specifies the time limit in seconds to use when connecting to the directory server.  The default value is 10 seconds."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33988
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-number timelimit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33992
msgid "Specifies the time limit (in seconds) to wait for a response from the LDAP server.  A value of zero, which is the default, is to wait indefinitely for searches to be completed."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33997
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-number idle-timelimit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34001
msgid "Specifies the period if inactivity (in seconds) after which the con‐ nection to the LDAP server will be closed.  The default is not to time out connections."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34006
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-number reconnect-sleeptime"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34010
msgid "Specifies the number of seconds to sleep when connecting to all LDAP servers fails.  By default one second is waited between the first failure and the first retry."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34015
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-number reconnect-retrytime"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34019
msgid "Specifies the time after which the LDAP server is considered to be permanently unavailable.  Once this time is reached retries will be done only once per this time period.  The default value is 10 seconds."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34024
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-ssl-option ssl"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34028
msgid "Specifies whether to use SSL/TLS or not (the default is not to).  If 'start-tls is specified then StartTLS is used rather than raw LDAP over SSL."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34033
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-tls-reqcert-option tls-reqcert"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34036
msgid "Specifies what checks to perform on a server-supplied certificate.  The meaning of the values is described in the ldap.conf(5) manual page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34041
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string tls-cacertdir"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34044
msgid "Specifies the directory containing X.509 certificates for peer authen‐ tication.  This parameter is ignored when using GnuTLS."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34049
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string tls-cacertfile"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34051
msgid "Specifies the path to the X.509 certificate for peer authentication."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34056
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string tls-randfile"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34059
msgid "Specifies the path to an entropy source.  This parameter is ignored when using GnuTLS."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34064
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string tls-ciphers"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34066
msgid "Specifies the ciphers to use for TLS as a string."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34071
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string tls-cert"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34074
msgid "Specifies the path to the file containing the local certificate for client TLS authentication."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34079
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string tls-key"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34082
msgid "Specifies the path to the file containing the private key for client TLS authentication."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34087
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-number pagesize"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34091
msgid "Set this to a number greater than 0 to request paged results from the LDAP server in accordance with RFC2696.  The default (0) is to not request paged results."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34096
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-ignore-users-option nss-initgroups-ignoreusers"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34100
msgid "This option prevents group membership lookups through LDAP for the specified users.  Alternatively, the value 'all-local may be used.  With that value nslcd builds a full list of non-LDAP users on startup."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34105
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-number nss-min-uid"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34108
msgid "This option ensures that LDAP users with a numeric user id lower than the specified value are ignored."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34113
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-number nss-uid-offset"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34116
msgid "This option specifies an offset that is added to all LDAP numeric user ids.  This can be used to avoid user id collisions with local users."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34121
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-number nss-gid-offset"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34124
msgid "This option specifies an offset that is added to all LDAP numeric group ids.  This can be used to avoid user id collisions with local groups."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34129
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-boolean nss-nested-groups"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34135
msgid "If this option is set, the member attribute of a group may point to another group.  Members of nested groups are also returned in the higher level group and parent groups are returned when finding groups for a specific user.  The default is not to perform extra searches for nested groups."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34140
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-boolean nss-getgrent-skipmembers"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34145
msgid "If this option is set, the group member list is not retrieved when looking up groups.  Lookups for finding which groups a user belongs to will remain functional so the user will likely still get the correct groups assigned on login."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34150
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-boolean nss-disable-enumeration"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34156
msgid "If this option is set, functions which cause all user/group entries to be loaded from the directory will not succeed in doing so.  This can dramatically reduce LDAP server load in situations where there are a great number of users and/or groups.  This option is not recommended for most configurations."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34161
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string validnames"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34165
msgid "This option can be used to specify how user and group names are verified within the system.  This pattern is used to check all user and group names that are requested and returned from LDAP."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34170
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-boolean ignorecase"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34175
msgid "This specifies whether or not to perform searches using case-insensitive matching.  Enabling this could open up the system to authorization bypass vulnerabilities and introduce nscd cache poisoning vulnerabilities which allow denial of service."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34180
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-boolean pam-authc-ppolicy"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34183
msgid "This option specifies whether password policy controls are requested and handled from the LDAP server when performing user authentication."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34188
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string pam-authc-search"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34194
msgid "By default nslcd performs an LDAP search with the user's credentials after BIND (authentication) to ensure that the BIND operation was successful.  The default search is a simple check to see if the user's DN exists.  A search filter can be specified that will be used instead.  It should return at least one entry."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34199
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string pam-authz-search"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34203
msgid "This option allows flexible fine tuning of the authorisation check that should be performed.  The search filter specified is executed and if any entries match, access is granted, otherwise access is denied."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34208
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string pam-password-prohibit-message"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34213
msgid "If this option is set password modification using pam_ldap will be denied and the specified message will be presented to the user instead.  The message can be used to direct the user to an alternative means of changing their password."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34218
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} list pam-services"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34220
msgid "List of pam service names for which LDAP authentication should suffice."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:34228
#, no-wrap
msgid "LDAP Directory Server"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:34229
#, no-wrap
msgid "LDAP, server"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:34234
msgid "The @code{(gnu services ldap)} module provides the @code{directory-server-service-type}, which can be used to create and launch an LDAP server instance."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:34237
msgid "Here is an example configuration of the @code{directory-server-service-type}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34240
#, no-wrap
msgid ""
"(use-service-modules ldap)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34252
#, no-wrap
msgid ""
"...\n"
"(operating-system\n"
"  ...\n"
"  (services\n"
"    (cons\n"
"      (service directory-server-service-type\n"
"               (directory-server-instance-configuration\n"
"                (slapd\n"
"                 (slapd-configuration\n"
"                  (root-password \"@{PBKDF2_SHA256@}AAAgAG@dots{}ABSOLUTELYSECRET\")))))\n"
"      %base-services)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:34256
msgid "The root password should be generated with the @command{pwdhash} utility that is provided by the @code{389-ds-base} package."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:34261
msgid "Note that changes to the directory server configuration will not be applied to existing instances.  You will need to back up and restore server data manually.  Only new directory server instances will be created upon system reconfiguration."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34263
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} directory-server-instance-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:34265
msgid "Available @code{directory-server-instance-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34267
#, no-wrap
msgid "@code{package} (default: @code{389-ds-base}) (type: file-like)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34269
msgid "The @code{389-ds-base} package."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34270
#, no-wrap
msgid "@code{config-version} (default: @code{2}) (type: number)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34273
msgid "Sets the format version of the configuration file.  To use the INF file with @command{dscreate}, this parameter must be 2."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34274
#, no-wrap
msgid "@code{full-machine-name} (default: @code{\"localhost\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34276
msgid "Sets the fully qualified hostname (FQDN) of this system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34277
#, no-wrap
msgid "@code{selinux} (default: @code{#false}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34281
msgid "Enables SELinux detection and integration during the installation of this instance.  If set to @code{#true}, @command{dscreate} auto-detects whether SELinux is enabled."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34282
#, no-wrap
msgid "@code{strict-host-checking} (default: @code{#true}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34287
msgid "Sets whether the server verifies the forward and reverse record set in the @code{full-machine-name} parameter.  When installing this instance with GSSAPI authentication behind a load balancer, set this parameter to @code{#false}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34288
#, no-wrap
msgid "@code{systemd} (default: @code{#false}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34291
msgid "Enables systemd platform features.  If set to @code{#true}, @command{dscreate} auto-detects whether systemd is installed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34292
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{slapd} (type: slapd-configuration)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:34294
#, fuzzy
#| msgid "Documentation"
msgid "Configuration of slapd."
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:34295
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} slapd-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:34297
msgid "Available @code{slapd-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34299
#, no-wrap
msgid "@code{instance-name} (default: @code{\"localhost\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34303
msgid "Sets the name of the instance.  You can refer to this value in other parameters of this INF file using the @code{@{instance_name@}} variable.  Note that this name cannot be changed after the installation!"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34304
#, no-wrap
msgid "@code{user} (default: @code{\"dirsrv\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34307
msgid "Sets the user name the ns-slapd process will use after the service started."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34308
#, no-wrap
msgid "@code{group} (default: @code{\"dirsrv\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34311
msgid "Sets the group name the ns-slapd process will use after the service started."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34312
#, no-wrap
msgid "@code{port} (default: @code{389}) (type: number)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34314
msgid "Sets the TCP port the instance uses for LDAP connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34315
#, no-wrap
msgid "@code{secure-port} (default: @code{636}) (type: number)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34318
msgid "Sets the TCP port the instance uses for TLS-secured LDAP connections (LDAPS)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34319
#, no-wrap
msgid "@code{root-dn} (default: @code{\"cn=Directory Manager\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34322
msgid "Sets the @dfn{Distinquished Name} (DN) of the administrator account for this instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34323
#, no-wrap
msgid "@code{root-password} (default: @code{\"@{invalid@}YOU-SHOULD-CHANGE-THIS\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34330
msgid "Sets the password of the account specified in the @code{root-dn} parameter.  You can either set this parameter to a plain text password @command{dscreate} hashes during the installation or to a \"@{algorithm@}hash\" string generated by the @command{pwdhash} utility.  Note that setting a plain text password can be a security risk if unprivileged users can read this INF file!"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34331
#, no-wrap
msgid "@code{self-sign-cert} (default: @code{#true}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34337
msgid "Sets whether the setup creates a self-signed certificate and enables TLS encryption during the installation.  This is not suitable for production, but it enables administrators to use TLS right after the installation.  You can replace the self-signed certificate with a certificate issued by a certificate authority."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34338
#, no-wrap
msgid "@code{self-sign-cert-valid-months} (default: @code{24}) (type: number)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34341
msgid "Set the number of months the issued self-signed certificate will be valid."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34342
#, no-wrap
msgid "@code{backup-dir} (default: @code{\"/var/lib/dirsrv/slapd-@{instance_name@}/bak\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34344
msgid "Set the backup directory of the instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34345
#, no-wrap
msgid "@code{cert-dir} (default: @code{\"/etc/dirsrv/slapd-@{instance_name@}\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34348
msgid "Sets the directory of the instance's Network Security Services (NSS)  database."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34349
#, no-wrap
msgid "@code{config-dir} (default: @code{\"/etc/dirsrv/slapd-@{instance_name@}\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34351
msgid "Sets the configuration directory of the instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34352
#, no-wrap
msgid "@code{db-dir} (default: @code{\"/var/lib/dirsrv/slapd-@{instance_name@}/db\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34354
msgid "Sets the database directory of the instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34355
#, no-wrap
msgid "@code{initconfig-dir} (default: @code{\"/etc/dirsrv/registry\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34357
msgid "Sets the directory of the operating system's rc configuration directory."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34358
#, no-wrap
msgid "@code{ldif-dir} (default: @code{\"/var/lib/dirsrv/slapd-@{instance_name@}/ldif\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34360
msgid "Sets the LDIF export and import directory of the instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34361
#, no-wrap
msgid "@code{lock-dir} (default: @code{\"/var/lock/dirsrv/slapd-@{instance_name@}\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34363
msgid "Sets the lock directory of the instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34364
#, no-wrap
msgid "@code{log-dir} (default: @code{\"/var/log/dirsrv/slapd-@{instance_name@}\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34366
msgid "Sets the log directory of the instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34367
#, no-wrap
msgid "@code{run-dir} (default: @code{\"/run/dirsrv\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34369
msgid "Sets PID directory of the instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34370
#, no-wrap
msgid "@code{schema-dir} (default: @code{\"/etc/dirsrv/slapd-@{instance_name@}/schema\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34372
msgid "Sets schema directory of the instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34373
#, no-wrap
msgid "@code{tmp-dir} (default: @code{\"/tmp\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34375
msgid "Sets the temporary directory of the instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34378
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{backend-userroot} (type: backend-userroot-configuration)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:34380
msgid "Configuration of the userroot backend."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34381
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} backend-userroot-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:34383
msgid "Available @code{backend-userroot-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34385
#, no-wrap
msgid "@code{create-suffix-entry?} (default: @code{#false}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34388
msgid "Set this parameter to @code{#true} to create a generic root node entry for the suffix in the database."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34389
#, no-wrap
msgid "@code{require-index?} (default: @code{#false}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34392
msgid "Set this parameter to @code{#true} to refuse unindexed searches in this database."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34393
#, no-wrap
msgid "@code{sample-entries} (default: @code{\"no\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34398
msgid "Set this parameter to @code{\"yes\"} to add latest version of sample entries to this database.  Or, use @code{\"001003006\"} to use the 1.3.6 version sample entries.  Use this option, for example, to create a database for testing purposes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34399
#, no-wrap
msgid "@code{suffix} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34404
msgid "Sets the root suffix stored in this database.  If you do not set the suffix attribute the install process will not create the backend/suffix.  You can also create multiple backends/suffixes by duplicating this section."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:34414
#, no-wrap
msgid "web"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:34415
#, no-wrap
msgid "www"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:34416
#, no-wrap
msgid "HTTP"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:34419
msgid "The @code{(gnu services web)} module provides the Apache HTTP Server, the nginx web server, and also a fastcgi wrapper daemon."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:34420
#, no-wrap
msgid "Apache HTTP Server"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:34422
#, no-wrap
msgid "httpd-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:34426
msgid "Service type for the @uref{https://httpd.apache.org/,Apache HTTP} server (@dfn{httpd}).  The value for this service type is a @code{httpd-configuration} record."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:34428 guix-git/doc/guix.texi:34610
#: guix-git/doc/guix.texi:35802
msgid "A simple example configuration is given below."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34436
#, no-wrap
msgid ""
"(service httpd-service-type\n"
"         (httpd-configuration\n"
"           (config\n"
"             (httpd-config-file\n"
"               (server-name \"www.example.com\")\n"
"               (document-root \"/srv/http/www.example.com\")))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:34440
msgid "Other services can also extend the @code{httpd-service-type} to add to the configuration."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34449
#, no-wrap
msgid ""
"(simple-service 'www.example.com-server httpd-service-type\n"
"                (list\n"
"                  (httpd-virtualhost\n"
"                    \"*:80\"\n"
"                    (list (string-join '(\"ServerName www.example.com\"\n"
"                                         \"DocumentRoot /srv/http/www.example.com\")\n"
"                                       \"\\n\")))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:34455
msgid "The details for the @code{httpd-configuration}, @code{httpd-module}, @code{httpd-config-file} and @code{httpd-virtualhost} record types are given below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34456
#, no-wrap
msgid "{Data Type} httpd-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34458
msgid "This data type represents the configuration for the httpd service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34460
#, no-wrap
msgid "@code{package} (default: @code{httpd})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34462
msgid "The httpd package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34463 guix-git/doc/guix.texi:34552
#, no-wrap
msgid "@code{pid-file} (default: @code{\"/var/run/httpd\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34465
msgid "The pid file used by the shepherd-service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34466
#, no-wrap
msgid "@code{config} (default: @code{(httpd-config-file)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34471
msgid "The configuration file to use with the httpd service.  The default value is a @code{httpd-config-file} record, but this can also be a different G-expression that generates a file, for example a @code{plain-file}.  A file outside of the store can also be specified through a string."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34475
#, no-wrap
msgid "{Data Type} httpd-module"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34477
msgid "This data type represents a module for the httpd service."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34481
msgid "The name of the module."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34487
msgid "The file for the module.  This can be relative to the httpd package being used, the absolute location of a file, or a G-expression for a file within the store, for example @code{(file-append mod-wsgi \"/modules/mod_wsgi.so\")}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:34491
#, no-wrap
msgid "%default-httpd-modules"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:34493
msgid "A default list of @code{httpd-module} objects."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34495
#, no-wrap
msgid "{Data Type} httpd-config-file"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34497
msgid "This data type represents a configuration file for the httpd service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34499
#, no-wrap
msgid "@code{modules} (default: @code{%default-httpd-modules})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34502
msgid "The modules to load.  Additional modules can be added here, or loaded by additional configuration."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34505
msgid "For example, in order to handle requests for PHP files, you can use Apache’s @code{mod_proxy_fcgi} module along with @code{php-fpm-service-type}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34527
#, no-wrap
msgid ""
"(service httpd-service-type\n"
"         (httpd-configuration\n"
"          (config\n"
"           (httpd-config-file\n"
"            (modules (cons*\n"
"                      (httpd-module\n"
"                       (name \"proxy_module\")\n"
"                       (file \"modules/mod_proxy.so\"))\n"
"                      (httpd-module\n"
"                       (name \"proxy_fcgi_module\")\n"
"                       (file \"modules/mod_proxy_fcgi.so\"))\n"
"                      %default-httpd-modules))\n"
"            (extra-config (list \"\\\n"
"<FilesMatch \\\\.php$>\n"
"    SetHandler \\\"proxy:unix:/var/run/php-fpm.sock|fcgi://localhost/\\\"\n"
"</FilesMatch>\"))))))\n"
"(service php-fpm-service-type\n"
"         (php-fpm-configuration\n"
"          (socket \"/var/run/php-fpm.sock\")\n"
"          (socket-group \"httpd\")))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34529
#, no-wrap
msgid "@code{server-root} (default: @code{httpd})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34533
msgid "The @code{ServerRoot} in the configuration file, defaults to the httpd package.  Directives including @code{Include} and @code{LoadModule} are taken as relative to the server root."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34534
#, no-wrap
msgid "@code{server-name} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34538
msgid "The @code{ServerName} in the configuration file, used to specify the request scheme, hostname and port that the server uses to identify itself."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34542
msgid "This doesn't need to be set in the server config, and can be specified in virtual hosts.  The default is @code{#f} to not specify a @code{ServerName}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34543
#, no-wrap
msgid "@code{document-root} (default: @code{\"/srv/http\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34545
msgid "The @code{DocumentRoot} from which files will be served."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34546
#, no-wrap
msgid "@code{listen} (default: @code{'(\"80\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34551
msgid "The list of values for the @code{Listen} directives in the config file.  The value should be a list of strings, when each string can specify the port number to listen on, and optionally the IP address and protocol to use."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34556
msgid "The @code{PidFile} to use.  This should match the @code{pid-file} set in the @code{httpd-configuration} so that the Shepherd service is configured correctly."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34557
#, no-wrap
msgid "@code{error-log} (default: @code{\"/var/log/httpd/error_log\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34559
msgid "The @code{ErrorLog} to which the server will log errors."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34560 guix-git/doc/guix.texi:35239
#, no-wrap
msgid "@code{user} (default: @code{\"httpd\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34562
msgid "The @code{User} which the server will answer requests as."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34563
#, no-wrap
msgid "@code{group} (default: @code{\"httpd\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34565
msgid "The @code{Group} which the server will answer requests as."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34566
#, no-wrap
msgid "@code{extra-config} (default: @code{(list \"TypesConfig etc/httpd/mime.types\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34569
msgid "A flat list of strings and G-expressions which will be added to the end of the configuration file."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34572
msgid "Any values which the service is extended with will be appended to this list."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34576
#, no-wrap
msgid "{Data Type} httpd-virtualhost"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34578
msgid "This data type represents a virtualhost configuration block for the httpd service."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34580
msgid "These should be added to the extra-config for the httpd-service."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34589
#, no-wrap
msgid ""
"(simple-service 'www.example.com-server httpd-service-type\n"
"                (list\n"
"                  (httpd-virtualhost\n"
"                    \"*:80\"\n"
"                    (list (string-join '(\"ServerName www.example.com\"\n"
"                                          \"DocumentRoot /srv/http/www.example.com\")\n"
"                                       \"\\n\")))))\n"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:34592
#, no-wrap
msgid "addresses-and-ports"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34594
msgid "The addresses and ports for the @code{VirtualHost} directive."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:34595
#, no-wrap
msgid "contents"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34598
msgid "The contents of the @code{VirtualHost} directive, this should be a list of strings and G-expressions."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:34603
#, no-wrap
msgid "NGINX"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:34605
#, no-wrap
msgid "nginx-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:34608
msgid "Service type for the @uref{https://nginx.org/,NGinx} web server.  The value for this service type is a @code{<nginx-configuration>} record."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34618 guix-git/doc/guix.texi:34694
#, no-wrap
msgid ""
"(service nginx-service-type\n"
"         (nginx-configuration\n"
"           (server-blocks\n"
"             (list (nginx-server-configuration\n"
"                     (server-name '(\"www.example.com\"))\n"
"                     (root \"/srv/http/www.example.com\"))))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:34623
msgid "In addition to adding server blocks to the service configuration directly, this service can be extended by other services to add server blocks, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34629
#, no-wrap
msgid ""
"(simple-service 'my-extra-server nginx-service-type\n"
"                (list (nginx-server-configuration\n"
"                        (root \"/srv/http/extra-website\")\n"
"                        (try-files (list \"$uri\" \"$uri/index.html\")))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:34640
msgid "At startup, @command{nginx} has not yet read its configuration file, so it uses a default file to log error messages.  If it fails to load its configuration file, that is where error messages are logged.  After the configuration file is loaded, the default error log file changes as per configuration.  In our case, startup error messages can be found in @file{/var/run/nginx/logs/error.log}, and after configuration in @file{/var/log/nginx/error.log}.  The second location can be changed with the @var{log-directory} configuration option."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34641
#, no-wrap
msgid "{Data Type} nginx-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34645
msgid "This data type represents the configuration for NGinx.  Some configuration can be done through this and the other provided record types, or alternatively, a config file can be provided."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34647
#, no-wrap
msgid "@code{nginx} (default: @code{nginx})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34649
msgid "The nginx package to use."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34653
msgid "This is a list of symbols naming Shepherd services the nginx service will depend on."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34657
msgid "This is useful if you would like @command{nginx} to be started after a back-end web server or a logging service such as Anonip has been started."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34658
#, no-wrap
msgid "@code{log-directory} (default: @code{\"/var/log/nginx\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34660
msgid "The directory to which NGinx will write log files."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34661
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{log-format} (default: @code{'combined}) (type: symbol)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:34665
msgid "Logging format for the access log. Nginx defaults to the httpd-like format named @code{'combined}.  Other formats can be defined using @code{log-formats}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34666
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{log-formats} (default: @code{'()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:34669
msgid "A list of additional @dfn{log formats} to define, the elements should be of type @code{<nginx-log-format-configuration>}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34670
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{log-level} (default: @code{'error}) (type: symbol)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:34674
msgid "Logging level for the error log, which can be any of the following values: @code{'debug}, @code{'info}, @code{'notice}, @code{'warn}, @code{'error}, @code{'crit}, @code{'alert}, or @code{'emerg}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34675
#, no-wrap
msgid "@code{run-directory} (default: @code{\"/var/run/nginx\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34678
msgid "The directory in which NGinx will create a pid file, and write temporary files."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34679
#, no-wrap
msgid "@code{server-blocks} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34683
msgid "A list of @dfn{server blocks} to create in the generated configuration file, the elements should be of type @code{<nginx-server-configuration>}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34687
msgid "The following example would setup NGinx to serve @code{www.example.com} from the @code{/srv/http/www.example.com} directory, without using HTTPS."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34696
#, no-wrap
msgid "@code{upstream-blocks} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34700
msgid "A list of @dfn{upstream blocks} to create in the generated configuration file, the elements should be of type @code{<nginx-upstream-configuration>}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34707
msgid "Configuring upstreams through the @code{upstream-blocks} can be useful when combined with @code{locations} in the @code{<nginx-server-configuration>} records.  The following example creates a server configuration with one location configuration, that will proxy requests to a upstream configuration, which will handle requests with two servers."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34726
#, no-wrap
msgid ""
"(service\n"
"  nginx-service-type\n"
"  (nginx-configuration\n"
"    (server-blocks\n"
"      (list (nginx-server-configuration\n"
"              (server-name '(\"www.example.com\"))\n"
"              (root \"/srv/http/www.example.com\")\n"
"              (locations\n"
"                (list\n"
"                  (nginx-location-configuration\n"
"                  (uri \"/path1\")\n"
"                  (body '(\"proxy_pass http://server-proxy;\"))))))))\n"
"    (upstream-blocks\n"
"      (list (nginx-upstream-configuration\n"
"              (name \"server-proxy\")\n"
"              (servers (list \"server1.example.com\"\n"
"                             \"server2.example.com\")))))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34734
msgid "If a configuration @var{file} is provided, this will be used, rather than generating a configuration file from the provided @code{log-directory}, @code{run-directory}, @code{server-blocks} and @code{upstream-blocks}.  For proper operation, these arguments should match what is in @var{file} to ensure that the directories are created when the service is activated."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34738
msgid "This can be useful if you have an existing configuration file, or it's not possible to do what is required through the other parts of the nginx-configuration record."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34739
#, no-wrap
msgid "@code{server-names-hash-bucket-size} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34742
msgid "Bucket size for the server names hash tables, defaults to @code{#f} to use the size of the processors cache line."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34743
#, no-wrap
msgid "@code{server-names-hash-bucket-max-size} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34745
msgid "Maximum bucket size for the server names hash tables."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34749
msgid "List of nginx dynamic modules to load.  This should be a list of file names of loadable modules, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34757
#, no-wrap
msgid ""
"(modules\n"
" (list\n"
"  (file-append nginx-accept-language-module \"\\\n"
"/etc/nginx/modules/ngx_http_accept_language_module.so\")\n"
"  (file-append nginx-lua-module \"\\\n"
"/etc/nginx/modules/ngx_http_lua_module.so\")))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34759
#, no-wrap
msgid "@code{lua-package-path} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34762
msgid "List of nginx lua packages to load.  This should be a list of package names of loadable lua modules, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34769
#, no-wrap
msgid ""
"(lua-package-path (list lua-resty-core\n"
"                        lua-resty-lrucache\n"
"                        lua-resty-signal\n"
"                        lua-tablepool\n"
"                        lua-resty-shell))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34771
#, no-wrap
msgid "@code{lua-package-cpath} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34774
msgid "List of nginx lua C packages to load.  This should be a list of package names of loadable lua C modules, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34777
#, no-wrap
msgid "(lua-package-cpath (list lua-resty-signal))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34779
#, no-wrap
msgid "@code{global-directives} (default: @code{'((events . ()))})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34782
msgid "Association list of global directives for the top level of the nginx configuration.  Values may themselves be association lists."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34788
#, no-wrap
msgid ""
"(global-directives\n"
" `((worker_processes . 16)\n"
"   (pcre_jit . on)\n"
"   (events . ((worker_connections . 1024)))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34796
msgid "Additional content to be appended to the @code{http} block.  Can either be a value that can be lowered into a string or a list of such values.  In the former case, it is inserted directly.  In the latter, it is prefixed with indentation and suffixed with a newline.  Nested lists are flattened into one line."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34801 guix-git/doc/guix.texi:34912
#, no-wrap
msgid ""
"(extra-content \"include /etc/nginx/custom-config.conf;\")\n"
"(extra-content `(\"include /etc/nginx/custom-config.conf;\"\n"
"                 (\"include \" ,%custom-config.conf \";\")))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34806
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} nginx-log-format-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:34809
#, fuzzy
#| msgid "Documentation"
msgid "Data type representing the configuration of a custom Nginx log format.  This type has the following parameters:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:34811
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{name} (type: symbol)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:34813
msgid "The name of the log format as a symbol."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34814
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{escape} (default: @code{'default}) (type: symbol)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:34817
msgid "The mode used to escape values of variables in the format.  The supported values are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34819
#, no-wrap
msgid "@code{'default}, to escape all characters outside of the ASCII"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:34821
msgid "printable range."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34821
#, no-wrap
msgid "@code{'json}, to escape all characters invalid in JSON strings."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34822
#, no-wrap
msgid "@code{'none}, to disable escaping."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34825
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{format} (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:34827
msgid "The format as accepted by the @code{log_format} directive."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:34832
msgid "nginx-server-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34832
#, no-wrap
msgid "{Data Type} nginx-server-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34835
msgid "Data type representing the configuration of an nginx server block.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34837
#, no-wrap
msgid "@code{listen} (default: @code{'(\"80\" \"443 ssl\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34842
msgid "Each @code{listen} directive sets the address and port for IP, or the path for a UNIX-domain socket on which the server will accept requests.  Both address and port, or only address or only port can be specified.  An address may also be a hostname, for example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34845
#, no-wrap
msgid "'(\"127.0.0.1:8000\" \"127.0.0.1\" \"8000\" \"*:8000\" \"localhost:8000\")\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34847
#, no-wrap
msgid "@code{server-name} (default: @code{(list 'default)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34850
msgid "A list of server names this server represents. @code{'default} represents the default server for connections matching no other server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34851
#, no-wrap
msgid "@code{root} (default: @code{\"/srv/http\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34853
msgid "Root of the website nginx will serve."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34854
#, no-wrap
msgid "@code{locations} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34858
msgid "A list of @dfn{nginx-location-configuration} or @dfn{nginx-named-location-configuration} records to use within this server block."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34859
#, no-wrap
msgid "@code{index} (default: @code{(list \"index.html\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34862
msgid "Index files to look for when clients ask for a directory.  If it cannot be found, Nginx will send the list of files in the directory."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34863
#, no-wrap
msgid "@code{try-files} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34866
msgid "A list of files whose existence is checked in the specified order.  @code{nginx} will use the first file it finds to process the request."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34867
#, no-wrap
msgid "@code{ssl-certificate} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34870
msgid "Where to find the certificate for secure connections.  Set it to @code{#f} if you don't have a certificate or you don't want to use HTTPS."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34871
#, no-wrap
msgid "@code{ssl-certificate-key} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34874
msgid "Where to find the private key for secure connections.  Set it to @code{#f} if you don't have a key or you don't want to use HTTPS."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34875
#, no-wrap
msgid "@code{server-tokens?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34877
msgid "Whether the server should add its configuration to response."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34878
#, no-wrap
msgid "@code{raw-content} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34882
msgid "A list of strings or file-like objects to be appended to the server block.  Each item is prefixed with indentation and suffixed with a new line.  Nested lists are flattened."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34886
#, no-wrap
msgid "{Data Type} nginx-upstream-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34889
msgid "Data type representing the configuration of an nginx @code{upstream} block.  This type has the following parameters:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34893
msgid "Name for this group of servers."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:34894
#, no-wrap
msgid "servers"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34901
msgid "Specify the addresses of the servers in the group.  The address can be specified as a IP address (e.g.@: @samp{127.0.0.1}), domain name (e.g.@: @samp{backend1.example.com}) or a path to a UNIX socket using the prefix @samp{unix:}.  For addresses using an IP address or domain name, the default port is 80, and a different port can be specified explicitly."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:34902
#, no-wrap
msgid "extra-content"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34907
msgid "Additional content to be appended to the upstream block.  Can be a string or file-like object or list of thereof.  In case of list, each item is prefixed with indentation and suffixed with a new line.  Nested lists are flattened."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34917
#, no-wrap
msgid "{Data Type} nginx-location-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34920
msgid "Data type representing the configuration of an nginx @code{location} block.  This type has the following parameters:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34924
msgid "URI which this location block matches."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:34926
msgid "nginx-location-configuration body"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:34926 guix-git/doc/guix.texi:34949
#, no-wrap
msgid "body"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34930
msgid "Body of the location block, specified as a list of strings or file-like objects.  Each item is prefixed with indentation and suffixed with a new line.  Nested lists are flattened."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34935
msgid "For example, to pass requests to a upstream server group defined using an @code{nginx-upstream-configuration} block, the following directive would be specified in the body @samp{(list \"proxy_pass http://upstream-name;\")}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34939
#, no-wrap
msgid "{Data Type} nginx-named-location-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34944
msgid "Data type representing the configuration of an nginx named location block.  Named location blocks are used for request redirection, and not used for regular request processing.  This type has the following parameters:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34948
msgid "Name to identify this location block."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34954
msgid "@xref{nginx-location-configuration body}, as the body for named location blocks can be used in a similar way to the @code{nginx-location-configuration body}.  One restriction is that the body of a named location block cannot contain location blocks."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:34958
#, no-wrap
msgid "Varnish Cache"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:34959
#, no-wrap
msgid "Varnish"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:34964
msgid "Varnish is a fast cache server that sits in between web applications and end users.  It proxies requests from clients and caches the accessed URLs such that multiple requests for the same resource only creates one request to the back-end."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:34965
#, no-wrap
msgid "varnish-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:34967
msgid "Service type for the Varnish daemon."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34969
#, no-wrap
msgid "{Data Type} varnish-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34972
msgid "Data type representing the @code{varnish} service configuration.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34974
#, no-wrap
msgid "@code{package} (default: @code{varnish})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34976
msgid "The Varnish package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34977
#, no-wrap
msgid "@code{name} (default: @code{\"default\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34982
msgid "A name for this Varnish instance.  Varnish will create a directory in @file{/var/varnish/} with this name and keep temporary files there.  If the name starts with a forward slash, it is interpreted as an absolute directory name."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34985
msgid "Pass the @code{-n} argument to other Varnish programs to connect to the named instance, e.g.@: @command{varnishncsa -n default}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34986
#, no-wrap
msgid "@code{backend} (default: @code{\"localhost:8080\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34988
msgid "The backend to use.  This option has no effect if @code{vcl} is set."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34989
#, no-wrap
msgid "@code{vcl} (default: #f)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34994
msgid "The @dfn{VCL} (Varnish Configuration Language) program to run.  If this is @code{#f}, Varnish will proxy @code{backend} using the default configuration.  Otherwise this must be a file-like object with valid VCL syntax."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34998
msgid "For example, to mirror @url{https://www.gnu.org,www.gnu.org} with VCL you can do something along these lines:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35004
#, no-wrap
msgid ""
"(define %gnu-mirror\n"
"  (plain-file \"gnu.vcl\"\n"
"              \"vcl 4.1;\n"
"backend gnu @{ .host = \\\"www.gnu.org\\\"; @}\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35012
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services (cons (service varnish-service-type\n"
"                           (varnish-configuration\n"
"                            (listen '(\":80\"))\n"
"                            (vcl %gnu-mirror)))\n"
"                  %base-services)))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35016
msgid "The configuration of an already running Varnish instance can be inspected and changed using the @command{varnishadm} program."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35020
msgid "Consult the @url{https://varnish-cache.org/docs/,Varnish User Guide} and @url{https://book.varnish-software.com/4.0/,Varnish Book} for comprehensive documentation on Varnish and its configuration language."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35021
#, no-wrap
msgid "@code{listen} (default: @code{'(\"localhost:80\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35023
msgid "List of addresses Varnish will listen on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35024
#, no-wrap
msgid "@code{storage} (default: @code{'(\"malloc,128m\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35026
msgid "List of storage backends that will be available in VCL."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35027
#, no-wrap
msgid "@code{parameters} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35029
msgid "List of run-time parameters in the form @code{'((\"parameter\" . \"value\"))}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35032
msgid "Additional arguments to pass to the @command{varnishd} process."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35036 guix-git/doc/guix.texi:35037
#, no-wrap
msgid "Whoogle Search"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35044
msgid "@uref{https://github.com/benbusby/whoogle-search, Whoogle Search} is a self-hosted, ad-free, privacy-respecting meta search engine that collects and displays Google search results.  By default, you can configure it by adding this line to the @code{services} field of your operating system declaration:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35047
#, fuzzy, no-wrap
#| msgid "Services"
msgid "(service whoogle-service-type)\n"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:35052
msgid "As a result, Whoogle Search runs as local Web server, which you can access by opening @indicateurl{http://localhost:5000} in your browser.  The configuration reference is given below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35053
#, fuzzy, no-wrap
#| msgid "Services"
msgid "whoogle-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:35056
msgid "Service type for Whoogle Search.  Its value must be a @code{whoogle-configuration} record---see below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35058
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} whoogle-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:35060
#, fuzzy
#| msgid "Documentation"
msgid "Data type representing Whoogle Search service configuration."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:35062
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{package} (default: @code{whoogle-search})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:35064
msgid "The Whoogle Search package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35065 guix-git/doc/guix.texi:43429
#: guix-git/doc/guix.texi:43526
#, no-wrap
msgid "@code{host} (default: @code{\"127.0.0.1\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35067
msgid "The host address to run Whoogle on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35068 guix-git/doc/guix.texi:35622
#, no-wrap
msgid "@code{port} (default: @code{5000})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35070
msgid "The port where Whoogle will be exposed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35071 guix-git/doc/guix.texi:44553
#: guix-git/doc/guix.texi:44606
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{environment-variables} (default: @code{'()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:35076
msgid "A list of strings with the environment variables to configure Whoogle.  You can consult @uref{https://github.com/benbusby/whoogle-search/blob/main/whoogle.template.env, its environment variables template} for the list of available options."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35080 guix-git/doc/guix.texi:35081
#, no-wrap
msgid "Patchwork"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35084
msgid "Patchwork is a patch tracking system.  It can collect patches sent to a mailing list, and display them in a web interface."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35085
#, no-wrap
msgid "patchwork-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35087
msgid "Service type for Patchwork."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35091
msgid "The following example is an example of a minimal service for Patchwork, for the @code{patchwork.example.com} domain."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35111
#, no-wrap
msgid ""
"(service patchwork-service-type\n"
"         (patchwork-configuration\n"
"          (domain \"patchwork.example.com\")\n"
"          (settings-module\n"
"           (patchwork-settings-module\n"
"            (allowed-hosts (list domain))\n"
"            (default-from-email \"patchwork@@patchwork.example.com\")))\n"
"          (getmail-retriever-config\n"
"           (getmail-retriever-configuration\n"
"            (type \"SimpleIMAPSSLRetriever\")\n"
"            (server \"imap.example.com\")\n"
"            (port 993)\n"
"            (username \"patchwork\")\n"
"            (password-command\n"
"             (list (file-append coreutils \"/bin/cat\")\n"
"                   \"/etc/getmail-patchwork-imap-password\"))\n"
"            (extra-parameters\n"
"            '((mailboxes . (\"Patches\"))))))))\n"
"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35117
msgid "There are three records for configuring the Patchwork service.  The @code{<patchwork-configuration>} relates to the configuration for Patchwork within the HTTPD service."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35121
msgid "The @code{settings-module} field within the @code{<patchwork-configuration>} record can be populated with the @code{<patchwork-settings-module>} record, which describes a settings module that is generated within the Guix store."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35125
msgid "For the @code{database-configuration} field within the @code{<patchwork-settings-module>}, the @code{<patchwork-database-configuration>} must be used."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35126
#, no-wrap
msgid "{Data Type} patchwork-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35129
msgid "Data type representing the Patchwork service configuration.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35131
#, no-wrap
msgid "@code{patchwork} (default: @code{patchwork})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35133
msgid "The Patchwork package to use."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35134
#, no-wrap
msgid "domain"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35137
msgid "The domain to use for Patchwork, this is used in the HTTPD service virtual host."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35138
#, no-wrap
msgid "settings-module"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35144
msgid "The settings module to use for Patchwork.  As a Django application, Patchwork is configured with a Python module containing the settings.  This can either be an instance of the @code{<patchwork-settings-module>} record, any other record that represents the settings in the store, or a directory outside of the store."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35145
#, no-wrap
msgid "@code{static-path}  (default: @code{\"/static/\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35147
msgid "The path under which the HTTPD service should serve the static files."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35148
#, no-wrap
msgid "getmail-retriever-config"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35152
msgid "The getmail-retriever-configuration record value to use with Patchwork.  Getmail will be configured with this value, the messages will be delivered to Patchwork."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35156
#, no-wrap
msgid "{Data Type} patchwork-settings-module"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35161
msgid "Data type representing a settings module for Patchwork.  Some of these settings relate directly to Patchwork, but others relate to Django, the web framework used by Patchwork, or the Django Rest Framework library.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35163
#, no-wrap
msgid "@code{database-configuration} (default: @code{(patchwork-database-configuration)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35166
msgid "The database connection settings used for Patchwork.  See the @code{<patchwork-database-configuration>} record type for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35167
#, no-wrap
msgid "@code{secret-key-file} (default: @code{\"/etc/patchwork/django-secret-key\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35170
msgid "Patchwork, as a Django web application uses a secret key for cryptographically signing values.  This file should contain a unique unpredictable value."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35173
msgid "If this file does not exist, it will be created and populated with a random value by the patchwork-setup shepherd service."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35175
msgid "This setting relates to Django."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35176
#, no-wrap
msgid "allowed-hosts"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35179
msgid "A list of valid hosts for this Patchwork service.  This should at least include the domain specified in the @code{<patchwork-configuration>} record."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35181 guix-git/doc/guix.texi:35195
#: guix-git/doc/guix.texi:35201 guix-git/doc/guix.texi:35207
msgid "This is a Django setting."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35182
#, no-wrap
msgid "default-from-email"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35184
msgid "The email address from which Patchwork should send email by default."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35186 guix-git/doc/guix.texi:35212
#: guix-git/doc/guix.texi:35217 guix-git/doc/guix.texi:35222
msgid "This is a Patchwork setting."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35187
#, no-wrap
msgid "@code{static-url} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35190
msgid "The URL to use when serving static assets.  It can be part of a URL, or a full URL, but must end in a @code{/}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35193
msgid "If the default value is used, the @code{static-path} value from the @code{<patchwork-configuration>} record will be used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35196
#, no-wrap
msgid "@code{admins} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35199
msgid "Email addresses to send the details of errors that occur.  Each value should be a list containing two elements, the name and then the email address."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35205
msgid "Whether to run Patchwork in debug mode.  If set to @code{#t}, detailed error messages will be shown."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35208
#, no-wrap
msgid "@code{enable-rest-api?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35210
msgid "Whether to enable the Patchwork REST API."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35213
#, no-wrap
msgid "@code{enable-xmlrpc?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35215
msgid "Whether to enable the XML RPC API."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35218
#, no-wrap
msgid "@code{force-https-links?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35220
msgid "Whether to use HTTPS links on Patchwork pages."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35225
msgid "Extra code to place at the end of the Patchwork settings module."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35229
#, no-wrap
msgid "{Data Type} patchwork-database-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35231
msgid "Data type representing the database configuration for Patchwork."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35233
#, no-wrap
msgid "@code{engine} (default: @code{\"django.db.backends.postgresql_psycopg2\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35235
msgid "The database engine to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35236
#, no-wrap
msgid "@code{name} (default: @code{\"patchwork\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35238
msgid "The name of the database to use."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35241
msgid "The user to connect to the database as."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35242
#, no-wrap
msgid "@code{password} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35244
msgid "The password to use when connecting to the database."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35245
#, no-wrap
msgid "@code{host} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35247
msgid "The host to make the database connection to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35248
#, no-wrap
msgid "@code{port} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35250
msgid "The port on which to connect to the database."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:35254
#, no-wrap
msgid "Mumi"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35256
#, no-wrap
msgid "Mumi, Debbugs Web interface"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35257
#, no-wrap
msgid "Debbugs, Mumi Web interface"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35262
msgid "@uref{https://codeberg.org/guix/mumi, Mumi} is a Web interface to the Debbugs bug tracker, by default for @uref{https://bugs.gnu.org, the GNU instance}.  Mumi is a Web server, but it also fetches and indexes mail retrieved from Debbugs."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35263
#, no-wrap
msgid "mumi-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35265
msgid "This is the service type for Mumi."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35267
#, no-wrap
msgid "{Data Type} mumi-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35270
msgid "Data type representing the Mumi service configuration.  This type has the following fields:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35272
#, no-wrap
msgid "@code{mumi} (default: @code{mumi})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35274
msgid "The Mumi package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35275
#, no-wrap
msgid "@code{mailer?} (default: @code{#true})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35277
msgid "Whether to enable or disable the mailer component."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35278
#, no-wrap
msgid "sender"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35280
msgid "The email address used as the sender for comments."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35281
#, no-wrap
msgid "smtp"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35286
msgid "A URI to configure the SMTP settings for Mailutils.  This could be something like @code{sendmail:///path/to/bin/msmtp} or any other URI supported by Mailutils.  @xref{SMTP Mailboxes, SMTP Mailboxes,, mailutils, GNU@tie{}Mailutils}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35290
msgid "List of @code{<mumi-package-configuration>} objects representing packages configured on Mumi."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35294
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} mumi-package-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:35297
#, fuzzy
#| msgid "Documentation"
msgid "Data type representing the configuration of a package on Mumi.  This type has the following fields:"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:35301
msgid "Name of the package."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35302
#, fuzzy, no-wrap
msgid "display-name"
msgstr "Canali"

#. type: table
#: guix-git/doc/guix.texi:35304
msgid "Display name used for this package in the web interface."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35305
#, fuzzy, no-wrap
#| msgid "package"
msgid "debbugs-packages"
msgstr "pacchetto"

#. type: table
#: guix-git/doc/guix.texi:35307
msgid "List of Debbugs packages this package refers to."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35308
#, no-wrap
msgid "bug-email-address"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35310
msgid "Email address to send bug reports to."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35311
#, no-wrap
msgid "patch-email-address"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35314
msgid "Email address to send patches to, if that is different from @code{bug-email-address}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35315
#, fuzzy, no-wrap
msgid "file-tags"
msgstr "Canali"

#. type: table
#: guix-git/doc/guix.texi:35320
msgid "Association list mapping tags to filename regular expressions. Keys are tag names, and values are lists of regular expressions.  For each entry of the association list, the tag is applied if a filename referred to in a patch matches any of the regular expressions."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:35325
#, no-wrap
msgid "FastCGI"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35326
#, no-wrap
msgid "fastcgi"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35327
#, no-wrap
msgid "fcgiwrap"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35334
msgid "FastCGI is an interface between the front-end and the back-end of a web service.  It is a somewhat legacy facility; new web services should generally just talk HTTP between the front-end and the back-end.  However there are a number of back-end services such as PHP or the optimized HTTP Git repository access that use FastCGI, so we have support for it in Guix."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35341
msgid "To use FastCGI, you configure the front-end web server (e.g., nginx) to dispatch some subset of its requests to the fastcgi backend, which listens on a local TCP or UNIX socket.  There is an intermediary @code{fcgiwrap} program that sits between the actual backend process and the web server.  The front-end indicates which backend program to run, passing that information to the @code{fcgiwrap} process."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35342
#, no-wrap
msgid "fcgiwrap-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35344
msgid "A service type for the @code{fcgiwrap} FastCGI proxy."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35346
#, no-wrap
msgid "{Data Type} fcgiwrap-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35349
msgid "Data type representing the configuration of the @code{fcgiwrap} service.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35350
#, no-wrap
msgid "@code{package} (default: @code{fcgiwrap})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35352
msgid "The fcgiwrap package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35353
#, no-wrap
msgid "@code{socket} (default: @code{tcp:127.0.0.1:9000})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35359
msgid "The socket on which the @code{fcgiwrap} process should listen, as a string.  Valid @var{socket} values include @code{unix:@var{/path/to/unix/socket}}, @code{tcp:@var{dot.ted.qu.ad}:@var{port}} and @code{tcp6:[@var{ipv6_addr}]:port}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35360
#, no-wrap
msgid "@code{user} (default: @code{fcgiwrap})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:35361
#, no-wrap
msgid "@code{group} (default: @code{fcgiwrap})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35366
msgid "The user and group names, as strings, under which to run the @code{fcgiwrap} process.  The @code{fastcgi} service will ensure that if the user asks for the specific user or group names @code{fcgiwrap} that the corresponding user and/or group is present on the system."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35373
msgid "It is possible to configure a FastCGI-backed web service to pass HTTP authentication information from the front-end to the back-end, and to allow @code{fcgiwrap} to run the back-end process as a corresponding local user.  To enable this capability on the back-end, run @code{fcgiwrap} as the @code{root} user and group.  Note that this capability also has to be configured on the front-end as well."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:35377
#, no-wrap
msgid "PHP-FPM"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35378
#, no-wrap
msgid "php-fpm"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35381
msgid "PHP-FPM (FastCGI Process Manager) is an alternative PHP FastCGI implementation with some additional features useful for sites of any size."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35383
msgid "These features include:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35384
#, no-wrap
msgid "Adaptive process spawning"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35385
#, no-wrap
msgid "Basic statistics (similar to Apache's mod_status)"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35386
#, no-wrap
msgid "Advanced process management with graceful stop/start"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35387
#, no-wrap
msgid "Ability to start workers with different uid/gid/chroot/environment"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:35389
msgid "and different php.ini (replaces safe_mode)"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35389
#, no-wrap
msgid "Stdout & stderr logging"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35390
#, no-wrap
msgid "Emergency restart in case of accidental opcode cache destruction"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35391
#, no-wrap
msgid "Accelerated upload support"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35392
#, no-wrap
msgid "Support for a \"slowlog\""
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35393
#, no-wrap
msgid "Enhancements to FastCGI, such as fastcgi_finish_request() -"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:35396
msgid "a special function to finish request & flush all data while continuing to do something time-consuming (video converting, stats processing, etc.)"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35398
msgid "...@: and much more."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35399
#, no-wrap
msgid "php-fpm-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35401
msgid "A Service type for @code{php-fpm}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35403
#, no-wrap
msgid "{Data Type} php-fpm-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35405
msgid "Data Type for php-fpm service configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35406
#, no-wrap
msgid "@code{php} (default: @code{php})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35408
msgid "The php package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35408
#, no-wrap
msgid "@code{socket} (default: @code{(string-append \"/var/run/php\" (version-major (package-version php)) \"-fpm.sock\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35410
msgid "The address on which to accept FastCGI requests.  Valid syntaxes are:"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35411
#, no-wrap
msgid "\"ip.add.re.ss:port\""
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35413
msgid "Listen on a TCP socket to a specific address on a specific port."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35413
#, no-wrap
msgid "\"port\""
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35415
msgid "Listen on a TCP socket to all addresses on a specific port."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35415
#, no-wrap
msgid "\"/path/to/unix/socket\""
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35417
msgid "Listen on a unix socket."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35419
#, no-wrap
msgid "@code{user} (default: @code{php-fpm})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35421
msgid "User who will own the php worker processes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35421
#, no-wrap
msgid "@code{group} (default: @code{php-fpm})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35423
msgid "Group of the worker processes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35423
#, no-wrap
msgid "@code{socket-user} (default: @code{php-fpm})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35425
msgid "User who can speak to the php-fpm socket."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35425
#, no-wrap
msgid "@code{socket-group} (default: @code{nginx})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35427
msgid "Group that can speak to the php-fpm socket."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35427
#, no-wrap
msgid "@code{pid-file} (default: @code{(string-append \"/var/run/php\" (version-major (package-version php)) \"-fpm.pid\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35430
msgid "The process id of the php-fpm process is written to this file once the service has started."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35430
#, no-wrap
msgid "@code{log-file} (default: @code{(string-append \"/var/log/php\" (version-major (package-version php)) \"-fpm.log\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35432
msgid "Log for the php-fpm master process."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35432
#, no-wrap
msgid "@code{process-manager} (default: @code{(php-fpm-dynamic-process-manager-configuration)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35435
msgid "Detailed settings for the php-fpm process manager.  Must be one of:"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35436
#, no-wrap
msgid "<php-fpm-dynamic-process-manager-configuration>"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35437
#, no-wrap
msgid "<php-fpm-static-process-manager-configuration>"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35438
#, no-wrap
msgid "<php-fpm-on-demand-process-manager-configuration>"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35440
#, no-wrap
msgid "@code{display-errors} (default @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35445
msgid "Determines whether php errors and warning should be sent to clients and displayed in their browsers.  This is useful for local php development, but a security risk for public sites, as error messages can reveal passwords and personal data."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35445
#, no-wrap
msgid "@code{timezone} (default @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35447
msgid "Specifies @code{php_admin_value[date.timezone]} parameter."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35447
#, no-wrap
msgid "@code{workers-logfile} (default @code{(string-append \"/var/log/php\" (version-major (package-version php)) \"-fpm.www.log\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35450
msgid "This file will log the @code{stderr} outputs of php worker processes.  Can be set to @code{#f} to disable logging."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35450
#, no-wrap
msgid "@code{file} (default @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35453
msgid "An optional override of the whole configuration.  You can use the @code{mixed-text-file} function or an absolute filepath for it."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35453
#, no-wrap
msgid "@code{php-ini-file} (default @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35457
msgid "An optional override of the default php settings.  It may be any ``file-like'' object (@pxref{G-Expressions, file-like objects}).  You can use the @code{mixed-text-file} function or an absolute filepath for it."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35461
msgid "For local development it is useful to set a higher timeout and memory limit for spawned php processes.  This be accomplished with the following operating system configuration snippet:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35466
#, no-wrap
msgid ""
"(define %local-php-ini\n"
"  (plain-file \"php.ini\"\n"
"              \"memory_limit = 2G\n"
"max_execution_time = 1800\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35473
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services (cons (service php-fpm-service-type\n"
"                           (php-fpm-configuration\n"
"                            (php-ini-file %local-php-ini)))\n"
"                  %base-services)))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35478
msgid "Consult the @url{https://www.php.net/manual/en/ini.core.php,core php.ini directives} for comprehensive documentation on the acceptable @file{php.ini} directives."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35481
#, no-wrap
msgid "{Data type} php-fpm-dynamic-process-manager-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35485
msgid "Data Type for the @code{dynamic} php-fpm process manager.  With the @code{dynamic} process manager, spare worker processes are kept around based on its configured limits."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35486 guix-git/doc/guix.texi:35502
#: guix-git/doc/guix.texi:35512
#, no-wrap
msgid "@code{max-children} (default: @code{5})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35488 guix-git/doc/guix.texi:35504
#: guix-git/doc/guix.texi:35514
msgid "Maximum of worker processes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35488
#, no-wrap
msgid "@code{start-servers} (default: @code{2})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35490
msgid "How many worker processes should be started on start-up."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35490
#, no-wrap
msgid "@code{min-spare-servers} (default: @code{1})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35492
msgid "How many spare worker processes should be kept around at minimum."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35492
#, no-wrap
msgid "@code{max-spare-servers} (default: @code{3})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35494
msgid "How many spare worker processes should be kept around at maximum."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35497
#, no-wrap
msgid "{Data type} php-fpm-static-process-manager-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35501
msgid "Data Type for the @code{static} php-fpm process manager.  With the @code{static} process manager, an unchanging number of worker processes are created."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35507
#, no-wrap
msgid "{Data type} php-fpm-on-demand-process-manager-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35511
msgid "Data Type for the @code{on-demand} php-fpm process manager.  With the @code{on-demand} process manager, worker processes are only created as requests arrive."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35514
#, no-wrap
msgid "@code{process-idle-timeout} (default: @code{10})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35516
msgid "The time in seconds after which a process with no requests is killed."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:35520
#, no-wrap
msgid "{Procedure} nginx-php-location [#:nginx-package nginx] @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:35524
msgid "[socket (string-append \"/var/run/php\" @ (version-major (package-version php)) \"-fpm.sock\")] A helper function to quickly add php to an @code{nginx-server-configuration}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35527
msgid "A simple services setup for nginx with php can look like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35540
#, no-wrap
msgid ""
"(services (cons* (service dhcp-client-service-type)\n"
"                 (service php-fpm-service-type)\n"
"                 (service nginx-service-type\n"
"                          (nginx-server-configuration\n"
"                           (server-name '(\"example.com\"))\n"
"                           (root \"/srv/http/\")\n"
"                           (locations\n"
"                            (list (nginx-php-location)))\n"
"                           (listen '(\"80\"))\n"
"                           (ssl-certificate #f)\n"
"                           (ssl-certificate-key #f)))\n"
"                 %base-services))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35542
#, no-wrap
msgid "cat-avatar-generator"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35546
msgid "The cat avatar generator is a simple service to demonstrate the use of php-fpm in @code{Nginx}.  It is used to generate cat avatar from a seed, for instance the hash of a user's email address."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:35547
#, no-wrap
msgid "{Procedure} cat-avatar-generator-service @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:35555
msgid "[#:cache-dir \"/var/cache/cat-avatar-generator\"] @ [#:package cat-avatar-generator] @ [#:configuration (nginx-server-configuration)] Returns an nginx-server-configuration that inherits @code{configuration}.  It extends the nginx configuration to add a server block that serves @code{package}, a version of cat-avatar-generator.  During execution, cat-avatar-generator will be able to use @code{cache-dir} as its cache directory."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35558
msgid "A simple setup for cat-avatar-generator can look like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35565
#, no-wrap
msgid ""
"(services (cons* (cat-avatar-generator-service\n"
"                  #:configuration\n"
"                  (nginx-server-configuration\n"
"                    (server-name '(\"example.com\"))))\n"
"                 ...\n"
"                 %base-services))\n"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:35567
#, no-wrap
msgid "Hpcguix-web"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35569
#, no-wrap
msgid "hpcguix-web"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35574
msgid "The @uref{https://github.com/UMCUGenetics/hpcguix-web/, hpcguix-web} program is a customizable web interface to browse Guix packages, initially designed for users of high-performance computing (HPC)  clusters."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35575
#, no-wrap
msgid "hpcguix-web-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35577
msgid "The service type for @code{hpcguix-web}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35579
#, no-wrap
msgid "{Data Type} hpcguix-web-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35581
msgid "Data type for the hpcguix-web service configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35583
#, no-wrap
msgid "@code{specs} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35587
msgid "Either @code{#f} or a gexp (@pxref{G-Expressions}) specifying the hpcguix-web service configuration as an @code{hpcguix-web-configuration} record.  The main fields of that record type are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35589
#, no-wrap
msgid "@code{title-prefix} (default: @code{\"hpcguix | \"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35591
msgid "The page title prefix."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35592
#, no-wrap
msgid "@code{guix-command} (default: @code{\"guix\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35594
msgid "The @command{guix} command to use in examples that appear on HTML pages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35595
#, no-wrap
msgid "@code{package-filter-proc} (default: @code{(const #t)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35597
msgid "A procedure specifying how to filter packages that are displayed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35598
#, no-wrap
msgid "@code{package-page-extension-proc} (default: @code{(const '())})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35600
msgid "Extension package for @code{hpcguix-web}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35601
#, no-wrap
msgid "@code{menu} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35603
msgid "Additional entry in page @code{menu}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35604
#, no-wrap
msgid "@code{channels} (default: @code{%default-channels})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35606
msgid "List of channels from which the package list is built (@pxref{Channels})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35607
#, no-wrap
msgid "@code{package-list-expiration} (default: @code{(* 12 3600)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35610
msgid "The expiration time, in seconds, after which the package list is rebuilt from the latest instances of the given channels."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35615
msgid "See the hpcguix-web repository for a @uref{https://github.com/UMCUGenetics/hpcguix-web/blob/master/hpcweb-configuration.scm, complete example}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35616
#, no-wrap
msgid "@code{package} (default: @code{hpcguix-web})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35618
msgid "The hpcguix-web package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35619
#, no-wrap
msgid "@code{address} (default: @code{\"127.0.0.1\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35621
msgid "The IP address to listen to."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35624
msgid "The port number to listen to."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35628
msgid "A typical hpcguix-web service declaration looks like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35636
#, no-wrap
msgid ""
"(service hpcguix-web-service-type\n"
"         (hpcguix-web-configuration\n"
"          (specs\n"
"           #~(hpcweb-configuration\n"
"              (title-prefix \"Guix-HPC - \")\n"
"              (menu '((\"/about\" \"ABOUT\")))))))\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:35643
msgid "The hpcguix-web service periodically updates the package list it publishes by pulling channels from Git.  To that end, it needs to access X.509 certificates so that it can authenticate Git servers when communicating over HTTPS, and it assumes that @file{/etc/ssl/certs} contains those certificates."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:35647
msgid "A certificate package, @code{nss-certs}, is provided by default as part of @code{%base-packages}.  @ref{X.509 Certificates}, for more information on X.509 certificates."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35649 guix-git/doc/guix.texi:35651
#, no-wrap
msgid "gmnisrv"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35654
msgid "The @uref{https://git.sr.ht/~sircmpwn/gmnisrv, gmnisrv} program is a simple @uref{https://gemini.circumlunar.space/, Gemini} protocol server."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35655
#, no-wrap
msgid "gmnisrv-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35658
msgid "This is the type of the gmnisrv service, whose value should be a @code{gmnisrv-configuration} object, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35663
#, no-wrap
msgid ""
"(service gmnisrv-service-type\n"
"         (gmnisrv-configuration\n"
"           (config-file (local-file \"./my-gmnisrv.ini\"))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35666
#, no-wrap
msgid "{Data Type} gmnisrv-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35668
msgid "Data type representing the configuration of gmnisrv."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35670
#, no-wrap
msgid "@code{package} (default: @var{gmnisrv})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35672
msgid "Package object of the gmnisrv server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35673
#, no-wrap
msgid "@code{config-file} (default: @code{%default-gmnisrv-config-file})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35679
msgid "File-like object of the gmnisrv configuration file to use.  The default configuration listens on port 1965 and serves files from @file{/srv/gemini}.  Certificates are stored in @file{/var/lib/gemini/certs}.  For more information, run @command{man gmnisrv} and @command{man gmnisrv.ini}."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:35683
#, no-wrap
msgid "Agate"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35685
#, no-wrap
msgid "agate"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35690
msgid "The @uref{gemini://qwertqwefsday.eu/agate.gmi, Agate} (@uref{https://github.com/mbrubeck/agate, GitHub page over HTTPS})  program is a simple @uref{https://gemini.circumlunar.space/, Gemini} protocol server written in Rust."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35691
#, no-wrap
msgid "agate-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35694
msgid "This is the type of the agate service, whose value should be an @code{agate-service-type} object, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35700
#, no-wrap
msgid ""
"(service agate-service-type\n"
"\t (agate-configuration\n"
"\t   (content \"/srv/gemini\")\n"
"\t   (certificates \"/srv/gemini-certs\")))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35705
msgid "The example above represents the minimal tweaking necessary to get Agate up and running.  Specifying the path to the certificate and key directory is always necessary, as the Gemini protocol requires TLS by default."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35712
msgid "If the specified @code{certificates} path is writable by Agate, and contains no valid pre-generated key and certificate, Agate will try to generate them on the first start.  In this case you should pass at least one hostname using the @code{hostnames} option.  If the specified directory is read-only, key and certificate should be pre-generated by the user."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35715
msgid "To obtain a certificate and a key in DER format, you could, for example, use OpenSSL, running commands similar to the following example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:35721
#, no-wrap
msgid ""
"openssl genpkey -out key.der -outform DER -algorithm RSA \\\n"
"    -pkeyopt rsa_keygen_bits:4096\n"
"openssl req -x509 -key key.der -outform DER -days 3650 -out cert.der \\\n"
"    -subj \"/CN=example.com\"\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35726
msgid "Of course, you'll have to replace @i{example.com} with your own domain name, and then point the Agate configuration towards the path of the directory with the generated key and certificate using the @code{certificates} option."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35729
#, no-wrap
msgid "{Data Type} agate-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35731
msgid "Data type representing the configuration of Agate."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35733
#, no-wrap
msgid "@code{package} (default: @code{agate})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35735
msgid "The package object of the Agate server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35736
#, no-wrap
msgid "@code{content} (default: @file{\"/srv/gemini\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35738
msgid "The directory from which Agate will serve files."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35739
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{certificates} (default: @file{\"/srv/gemini-certs\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:35741
msgid "Root of the certificate directory. Must be filled in with a value from the user."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35742
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{addresses} (default: @code{'(\"[::]:1965\" \"0.0.0.0:1965\")})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:35744
msgid "A list of the addresses to listen on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35745
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{hostnames} (default: @code{'()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:35749
msgid "Virtual hosts for the Gemini server. If multiple values are specified, corresponding directory names should be present in the @code{content} directory. Optional."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35750
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{languages} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:35752
msgid "RFC 4646 language code(s) for text/gemini documents.  Optional."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35753
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{only-tls13?} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:35755
msgid "Set to @code{#t} to disable support for TLSv1.2."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35756
#, no-wrap
msgid "@code{serve-secret?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35759
msgid "Set to @code{#t} to serve secret files (files/directories starting with a dot)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35760
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{central-configuration?} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:35763
msgid "Set to @code{#t} to look for the .meta configuration file in the @code{content} root directory and will ignore @code{.meta} files in other directories"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35764
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ed25519?} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:35767
msgid "Set to @code{#t} to generate keys using the Ed25519 signature algorithm instead of the default ECDSA."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35768
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{skip-port-check?} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:35770
msgid "Set to @code{#t} to skip URL port check even when a @code{hostname} is specified."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35771
#, no-wrap
msgid "@code{log-ip?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35773
msgid "Whether or not to output IP addresses when logging."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35774
#, no-wrap
msgid "@code{user} (default: @code{\"agate\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35776
msgid "Owner of the @code{agate} process."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35777
#, no-wrap
msgid "@code{group} (default: @code{\"agate\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35779
msgid "Owner's group of the @code{agate} process."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35780
#, no-wrap
msgid "@code{log-file} (default: @file{\"/var/log/agate.log\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35782
msgid "The file which should store the logging output of Agate."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35789
#, no-wrap
msgid "Message broker"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35790
#, no-wrap
msgid "Message streaming"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35793
msgid "The @code{(gnu services high-availability)} module provides RabbitMQ message broker service."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:35795
#, no-wrap
msgid "RabbitMQ"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35797
#, fuzzy, no-wrap
#| msgid "Services"
msgid "rabbitmq-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:35800
#, fuzzy
#| msgid "Documentation"
msgid "Service type for the @uref{https://www.rabbitmq.com/,RabbitMQ} web server.  The value for this service type is a @code{<rabbitmq-configuration>} record."
msgstr "Documentazione"

#. type: lisp
#: guix-git/doc/guix.texi:35810
#, no-wrap
msgid ""
"(service rabbitmq-service-type\n"
"         (rabbitmq-configuration\n"
"           (rabbitmq-configuration\n"
"             (plugins '(\"rabbitmq_stream\"\n"
"                        \"rabbitmq_management\"\n"
"                        \"rabbitmq_prometheus\")))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35817
msgid "At startup, RabbitMQ broker logs its initialization messages into @file{/var/log/messages} file.  Once running, the logging messages can be found in a logging file of a RabbitMQ node in @file{/var/log/rabbitmq} directory."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:35823
msgid "The default configuration of the RabbitMQ service enables the RabbitMQ broker to accept connections only on loopback interfaces.  However, enabling certain plugins may open ports on all network interfaces.  See also @url{https://www.rabbitmq.com/docs/networking#ports, RabbitMQ Port Access}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35825
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} rabbitmq-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:35827
#, fuzzy
#| msgid "Documentation"
msgid "This data type represents the configuration for RabbitMQ."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:35829
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{rabbitmq} (default: @code{rabbitmq})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:35831
#, fuzzy
#| msgid "Updating the Guix package definition."
msgid "The RabbitMQ package to use."
msgstr "Aggiornamento della definizione del pacchetto Guix."

#. type: item
#: guix-git/doc/guix.texi:35832
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{config-file} (default: @code{%default-rabbitmq-config-file})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:35835
msgid "Configuration file for the RabbitMQ broker. See also @url{https://www.rabbitmq.com/docs/configure, RabbitMQ Configuration}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35836
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{data-directory} (default: @code{\"/var/lib/rabbitmq/data\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:35839
msgid "Directory with RabbitMQ broker data - a schema database, message stores, cluster member information, and other persistent node state."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35843
msgid "A list of RabbitMQ plugins to enable.  View all available plugins using the @command{rabbitmq-plugins list} command."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35850
#, no-wrap
msgid "Web"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35851
#, no-wrap
msgid "HTTP, HTTPS"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35852
#, no-wrap
msgid "Let's Encrypt"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35853
#, no-wrap
msgid "TLS certificates"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35860
msgid "The @code{(gnu services certbot)} module provides a service to automatically obtain a valid TLS certificate from the Let's Encrypt certificate authority.  These certificates can then be used to serve content securely over HTTPS or other TLS-based protocols, with the knowledge that the client will be able to verify the server's authenticity."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35872
msgid "@url{https://letsencrypt.org/, Let's Encrypt} provides the @code{certbot} tool to automate the certification process.  This tool first securely generates a key on the server.  It then makes a request to the Let's Encrypt certificate authority (CA) to sign the key.  The CA checks that the request originates from the host in question by using a challenge-response protocol, requiring the server to provide its response over HTTP@.  If that protocol completes successfully, the CA signs the key, resulting in a certificate.  That certificate is valid for a limited period of time, and therefore to continue to provide TLS services, the server needs to periodically ask the CA to renew its signature."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35879
msgid "The certbot service automates this process: the initial key generation, the initial certification request to the Let's Encrypt service, the web server challenge/response integration, writing the certificate to disk, the automated periodic renewals, and the deployment tasks associated with the renewal (e.g.@: reloading services, copying keys with different permissions)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35885
msgid "Certbot is run twice a day, at a random minute within the hour.  It won't do anything until your certificates are due for renewal or revoked, but running it regularly would give your service a chance of staying online in case a Let's Encrypt-initiated revocation happened for some reason."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35889
msgid "By using this service, you agree to the ACME Subscriber Agreement, which can be found there: @url{https://acme-v02.api.letsencrypt.org/directory}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35890
#, no-wrap
msgid "certbot-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35893
msgid "A service type for the @code{certbot} Let's Encrypt client.  Its value must be a @code{certbot-configuration} record as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35904
#, no-wrap
msgid ""
"(service certbot-service-type\n"
"         (certbot-configuration\n"
"          (email \"foo@@example.net\")\n"
"          (certificates\n"
"           (list\n"
"            (certificate-configuration\n"
"             (domains '(\"example.net\" \"www.example.net\")))\n"
"            (certificate-configuration\n"
"             (domains '(\"bar.example.net\")))))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35907
msgid "See below for details about @code{certbot-configuration}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35909
#, no-wrap
msgid "{Data Type} certbot-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35912
msgid "Data type representing the configuration of the @code{certbot} service.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35914
#, no-wrap
msgid "@code{package} (default: @code{certbot})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35916
msgid "The certbot package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35917
#, no-wrap
msgid "@code{webroot} (default: @code{/var/www})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35920
msgid "The directory from which to serve the Let's Encrypt challenge/response files."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35921
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{certificates} (default: @code{'()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:35925
msgid "A list of @code{certificates-configuration}s for which to generate certificates and request signatures.  Each certificate has a @code{name} and several @code{domains}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35926
#, no-wrap
msgid "@code{email} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35930
msgid "Optional email address used for registration and recovery contact.  Setting this is encouraged as it allows you to receive important notifications about the account and issued certificates."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35931 guix-git/doc/guix.texi:38023
#, no-wrap
msgid "@code{server} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35934
msgid "Optional URL of ACME server.  Setting this overrides certbot's default, which is the Let's Encrypt server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35935
#, no-wrap
msgid "@code{rsa-key-size} (default: @code{2048})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35937
msgid "Size of the RSA key."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35938
#, no-wrap
msgid "@code{default-location} (default: @i{see below})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35947
msgid "The default @code{nginx-location-configuration}.  Because @code{certbot} needs to be able to serve challenges and responses, it needs to be able to run a web server.  It does so by extending the @code{nginx} web service with an @code{nginx-server-configuration} listening on the @var{domains} on port 80, and which has a @code{nginx-location-configuration} for the @code{/.well-known/} URI path subspace used by Let's Encrypt.  @xref{Web Services}, for more on these nginx configuration data types."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35951
msgid "Requests to other URL paths will be matched by the @code{default-location}, which if present is added to all @code{nginx-server-configuration}s."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35955
msgid "By default, the @code{default-location} will issue a redirect from @code{http://@var{domain}/...} to @code{https://@var{domain}/...}, leaving you to define what to serve on your site via @code{https}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35957
msgid "Pass @code{#f} to not issue a default location."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35960
#, no-wrap
msgid "{Data Type} certificate-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35963
msgid "Data type representing the configuration of a certificate.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35965
#, no-wrap
msgid "@code{name} (default: @i{see below})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35969
msgid "This name is used by Certbot for housekeeping and in file paths; it doesn't affect the content of the certificate itself.  To see certificate names, run @code{certbot certificates}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35971
msgid "Its default is the first provided domain."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35972
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{domains} (default: @code{'()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:35975
msgid "The first domain provided will be the subject CN of the certificate, and all domains will be Subject Alternative Names on the certificate."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35976
#, no-wrap
msgid "@code{challenge} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35983
msgid "The challenge type that has to be run by certbot.  If @code{#f} is specified, default to the HTTP challenge.  If a value is specified, defaults to the manual plugin (see @code{authentication-hook}, @code{cleanup-hook} and the documentation at @url{https://certbot.eff.org/docs/using.html#hooks}), and gives Let's Encrypt permission to log the public IP address of the requesting machine."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35984
#, no-wrap
msgid "@code{csr} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35991
msgid "File name of Certificate Signing Request (CSR) in DER or PEM format.  If @code{#f} is specified, this argument will not be passed to certbot.  If a value is specified, certbot will use it to obtain a certificate, instead of using a self-generated CSR.  The domain-name(s) mentioned in @code{domains}, must be consistent with the domain-name(s) mentioned in CSR file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35992
#, no-wrap
msgid "@code{authentication-hook} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35998
msgid "Command to be run in a shell once for each certificate challenge to be answered.  For this command, the shell variable @code{$CERTBOT_DOMAIN} will contain the domain being authenticated, @code{$CERTBOT_VALIDATION} contains the validation string and @code{$CERTBOT_TOKEN} contains the file name of the resource requested when performing an HTTP-01 challenge."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35999
#, no-wrap
msgid "@code{cleanup-hook} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36005
msgid "Command to be run in a shell once for each certificate challenge that have been answered by the @code{authentication-hook}.  For this command, the shell variables available in the @code{authentication-hook} script are still available, and additionally @code{$CERTBOT_AUTH_OUTPUT} will contain the standard output of the @code{authentication-hook} script."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36006
#, no-wrap
msgid "@code{deploy-hook} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36014
msgid "Command to be run in a shell once for each successfully issued certificate.  For this command, the shell variable @code{$RENEWED_LINEAGE} will point to the config live subdirectory (for example, @samp{\"/etc/letsencrypt/live/example.com\"}) containing the new certificates and keys; the shell variable @code{$RENEWED_DOMAINS} will contain a space-delimited list of renewed certificate domains (for example, @samp{\"example.com www.example.com\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36015
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{dry-run?} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:36025
msgid "Communicate with the ACME server but do not update certificates nor trigger @code{deploy-hook}.  This is useful as a temporary setting to test the challenge procedure, especially the @code{authentication-hook} and @code{cleanup-hook} while working on them.  It's also a good idea to use the Let's Encrypt staging server at @url{https://acme-staging-v02.api.letsencrypt.org/directory} while testing, which allows for higher rate limits, but with which @code{certbot} will helpfully refuse to update certificates and recommend the @code{dry-run?} option.  For example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:36033
#, no-wrap
msgid ""
"(define %authentication-hook\n"
"  (program-file \"authentication-hook\"\n"
"    #~(let ((domain (getenv \"CERTBOT_DOMAIN\"))\n"
"            (token (getenv \"CERTBOT_TOKEN\")))\n"
"        (format #t \"Hey, can you authenticate ~a with ~a for me?\"\n"
"                domain token))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:36037
#, no-wrap
msgid ""
"(define %cleanup-hook\n"
"  (program-file \"authentication-hook\"\n"
"    #~(display \"Bye\")))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:36048
#, no-wrap
msgid ""
"(service certbot-service-type\n"
"         (certbot-configuration\n"
"          (server \"https://acme-staging-v02.api.letsencrypt.org/directory\")\n"
"          (certificates\n"
"           (list\n"
"            (certificate-configuration\n"
"              (dry-run? #t)\n"
"              (authentication-hook %authentication-hook)\n"
"              (cleanup-hook %cleanup-hook)\n"
"              (domains '(\"example.net\" \"www.example.net\")))))))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36050
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{start-self-signed?} (default: @code{#t})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:36055
msgid "Whether to generate an initial self-signed certificate during system activation.  This option is particularly useful to allow @code{nginx} to start before @code{certbot} has run, because @code{certbot} relies on @code{nginx} running to perform HTTP challenges."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:36062
msgid "For each @code{certificate-configuration}, the certificate is saved to @code{/etc/certs/@var{name}/fullchain.pem} and the key is saved to @code{/etc/certs/@var{name}/privkey.pem}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:36064
#, no-wrap
msgid "DNS (domain name system)"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:36065
#, no-wrap
msgid "domain name system (DNS)"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:36073
msgid "The @code{(gnu services dns)} module provides services related to the @dfn{domain name system} (DNS).  It provides a server service for hosting an @emph{authoritative} DNS server for multiple zones, slave or master.  This service uses @uref{https://www.knot-dns.cz/, Knot DNS}.  And also a caching and forwarding DNS server for the LAN, which uses @uref{http://www.thekelleys.org.uk/dnsmasq/doc.html, dnsmasq}."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:36074
#, no-wrap
msgid "Knot Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:36078
msgid "An example configuration of an authoritative server for two zones, one master and one slave, is:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:36085
#, no-wrap
msgid ""
"(define-zone-entries example.org.zone\n"
";; Name TTL Class Type Data\n"
"  (\"@@\"  \"\"  \"IN\"  \"A\"  \"127.0.0.1\")\n"
"  (\"@@\"  \"\"  \"IN\"  \"NS\" \"ns\")\n"
"  (\"ns\" \"\"  \"IN\"  \"A\"  \"127.0.0.1\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:36092
#, no-wrap
msgid ""
"(define master-zone\n"
"  (knot-zone-configuration\n"
"    (domain \"example.org\")\n"
"    (zone (zone-file\n"
"            (origin \"example.org\")\n"
"            (entries example.org.zone)))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:36098
#, no-wrap
msgid ""
"(define slave-zone\n"
"  (knot-zone-configuration\n"
"    (domain \"plop.org\")\n"
"    (dnssec-policy \"default\")\n"
"    (master (list \"plop-master\"))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:36103
#, no-wrap
msgid ""
"(define plop-master\n"
"  (knot-remote-configuration\n"
"    (id \"plop-master\")\n"
"    (address (list \"208.76.58.171\"))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:36112
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; ...\n"
"  (services (cons* (service knot-service-type\n"
"                     (knot-configuration\n"
"                       (remotes (list plop-master))\n"
"                       (zones (list master-zone slave-zone))))\n"
"                   ;; ...\n"
"                   %base-services)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:36114
#, no-wrap
msgid "knot-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:36116
msgid "This is the type for the Knot DNS server."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:36124
msgid "Knot DNS is an authoritative DNS server, meaning that it can serve multiple zones, that is to say domain names you would buy from a registrar.  This server is not a resolver, meaning that it can only resolve names for which it is authoritative.  This server can be configured to serve zones as a master server or a slave server as a per-zone basis.  Slave zones will get their data from masters, and will serve it as an authoritative server.  From the point of view of a resolver, there is no difference between master and slave."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:36126
msgid "The following data types are used to configure the Knot DNS server:"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36128
#, no-wrap
msgid "{Data Type} knot-key-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36131
msgid "Data type representing a key.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36133 guix-git/doc/guix.texi:36153
#: guix-git/doc/guix.texi:36268 guix-git/doc/guix.texi:36294
#: guix-git/doc/guix.texi:36329
#, no-wrap
msgid "@code{id} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36136 guix-git/doc/guix.texi:36156
msgid "An identifier for other configuration fields to refer to this key.  IDs must be unique and must not be empty."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36137
#, no-wrap
msgid "@code{algorithm} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36141
msgid "The algorithm to use.  Choose between @code{#f}, @code{'hmac-md5}, @code{'hmac-sha1}, @code{'hmac-sha224}, @code{'hmac-sha256}, @code{'hmac-sha384} and @code{'hmac-sha512}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36142
#, no-wrap
msgid "@code{secret} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36144
msgid "The secret key itself."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36148
#, no-wrap
msgid "{Data Type} knot-acl-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36151
msgid "Data type representing an Access Control List (ACL) configuration.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36157 guix-git/doc/guix.texi:36272
#, no-wrap
msgid "@code{address} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36161
msgid "An ordered list of IP addresses, network subnets, or network ranges represented with strings.  The query must match one of them.  Empty value means that address match is not required."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36162
#, no-wrap
msgid "@code{key} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36166
msgid "An ordered list of references to keys represented with strings.  The string must match a key ID defined in a @code{knot-key-configuration}.  No key means that a key is not require to match that ACL."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36167
#, no-wrap
msgid "@code{action} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36171
msgid "An ordered list of actions that are permitted or forbidden by this ACL@.  Possible values are lists of zero or more elements from @code{'transfer}, @code{'notify} and @code{'update}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36172
#, no-wrap
msgid "@code{deny?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36175
msgid "When true, the ACL defines restrictions.  Listed actions are forbidden.  When false, listed actions are allowed."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36179
#, no-wrap
msgid "{Data Type} zone-entry"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36182
msgid "Data type representing a record entry in a zone file.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36184
#, no-wrap
msgid "@code{name} (default: @code{\"@@\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36190
msgid "The name of the record.  @code{\"@@\"} refers to the origin of the zone.  Names are relative to the origin of the zone.  For example, in the @code{example.org} zone, @code{\"ns.example.org\"} actually refers to @code{ns.example.org.example.org}.  Names ending with a dot are absolute, which means that @code{\"ns.example.org.\"} refers to @code{ns.example.org}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36191
#, no-wrap
msgid "@code{ttl} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36193
msgid "The Time-To-Live (TTL) of this record.  If not set, the default TTL is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36194
#, no-wrap
msgid "@code{class} (default: @code{\"IN\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36197
msgid "The class of the record.  Knot currently supports only @code{\"IN\"} and partially @code{\"CH\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36198
#, no-wrap
msgid "@code{type} (default: @code{\"A\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36202
msgid "The type of the record.  Common types include A (IPv4 address), AAAA (IPv6 address), NS (Name Server) and MX (Mail eXchange).  Many other types are defined."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36203
#, no-wrap
msgid "@code{data} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36207
msgid "The data contained in the record.  For instance an IP address associated with an A record, or a domain name associated with an NS record.  Remember that domain names are relative to the origin unless they end with a dot."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36211
#, no-wrap
msgid "{Data Type} zone-file"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36214
msgid "Data type representing the content of a zone file.  This type has the following parameters:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36223
msgid "The list of entries.  The SOA record is taken care of, so you don't need to put it in the list of entries.  This list should probably contain an entry for your primary authoritative DNS server.  Other than using a list of entries directly, you can use @code{define-zone-entries} to define a object containing the list of entries more easily, that you can later pass to the @code{entries} field of the @code{zone-file}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36224
#, no-wrap
msgid "@code{origin} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36226
msgid "The name of your zone.  This parameter cannot be empty."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36227
#, no-wrap
msgid "@code{ns} (default: @code{\"ns\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36232
msgid "The domain of your primary authoritative DNS server.  The name is relative to the origin, unless it ends with a dot.  It is mandatory that this primary DNS server corresponds to an NS record in the zone and that it is associated to an IP address in the list of entries."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36233
#, no-wrap
msgid "@code{mail} (default: @code{\"hostmaster\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36236
msgid "An email address people can contact you at, as the owner of the zone.  This is translated as @code{<mail>@@<origin>}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36237
#, no-wrap
msgid "@code{serial} (default: @code{1})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36241
msgid "The serial number of the zone.  As this is used to keep track of changes by both slaves and resolvers, it is mandatory that it @emph{never} decreases.  Always increment it when you make a change in your zone."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36242
#, no-wrap
msgid "@code{refresh} (default: @code{(* 2 24 3600)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36246
msgid "The frequency at which slaves will do a zone transfer.  This value is a number of seconds.  It can be computed by multiplications or with @code{(string->duration)}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36247
#, no-wrap
msgid "@code{retry} (default: @code{(* 15 60)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36250
msgid "The period after which a slave will retry to contact its master when it fails to do so a first time."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36251
#, no-wrap
msgid "@code{expiry} (default: @code{(* 14 24 3600)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36255
msgid "Default TTL of records.  Existing records are considered correct for at most this amount of time.  After this period, resolvers will invalidate their cache and check again that it still exists."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36256
#, no-wrap
msgid "@code{nx} (default: @code{3600})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36259
msgid "Default TTL of inexistent records.  This delay is usually short because you want your new domains to reach everyone quickly."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36263
#, no-wrap
msgid "{Data Type} knot-remote-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36266
msgid "Data type representing a remote configuration.  This type has the following parameters:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36271
msgid "An identifier for other configuration fields to refer to this remote.  IDs must be unique and must not be empty."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36276
msgid "An ordered list of destination IP addresses.  Addresses are tried in sequence.  An optional port can be given with the @@ separator.  For instance: @code{(list \"1.2.3.4\" \"2.3.4.5@@53\")}.  Default port is 53."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36277
#, no-wrap
msgid "@code{via} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36281
msgid "An ordered list of source IP addresses.  An empty list will have Knot choose an appropriate source IP@.  An optional port can be given with the @@ separator.  The default is to choose at random."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36282
#, no-wrap
msgid "@code{key} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36285
msgid "A reference to a key, that is a string containing the identifier of a key defined in a @code{knot-key-configuration} field."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36289
#, no-wrap
msgid "{Data Type} knot-keystore-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36292
msgid "Data type representing a keystore to hold dnssec keys.  This type has the following parameters:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36296
msgid "The id of the keystore.  It must not be empty."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36297
#, no-wrap
msgid "@code{backend} (default: @code{'pem})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36299
msgid "The backend to store the keys in.  Can be @code{'pem} or @code{'pkcs11}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36300
#, no-wrap
msgid "@code{config} (default: @code{\"/var/lib/knot/keys/keys\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36304
msgid "The configuration string of the backend.  An example for the PKCS#11 is: @code{\"pkcs11:token=knot;pin-value=1234 /gnu/store/.../lib/pkcs11/libsofthsm2.so\"}.  For the pem backend, the string represents a path in the file system."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36308
#, no-wrap
msgid "{Data Type} knot-policy-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36312
msgid "Data type representing a dnssec policy.  Knot DNS is able to automatically sign your zones.  It can either generate and manage your keys automatically or use keys that you generate."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36319
msgid "Dnssec is usually implemented using two keys: a Key Signing Key (KSK) that is used to sign the second, and a Zone Signing Key (ZSK) that is used to sign the zone.  In order to be trusted, the KSK needs to be present in the parent zone (usually a top-level domain).  If your registrar supports dnssec, you will have to send them your KSK's hash so they can add a DS record in their zone.  This is not automated and need to be done each time you change your KSK."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36325
msgid "The policy also defines the lifetime of keys.  Usually, ZSK can be changed easily and use weaker cryptographic functions (they use lower parameters) in order to sign records quickly, so they are changed often.  The KSK however requires manual interaction with the registrar, so they are changed less often and use stronger parameters because they sign only one record."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36327
msgid "This type has the following parameters:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36331
msgid "The id of the policy.  It must not be empty."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36332
#, no-wrap
msgid "@code{keystore} (default: @code{\"default\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36337
msgid "A reference to a keystore, that is a string containing the identifier of a keystore defined in a @code{knot-keystore-configuration} field.  The @code{\"default\"} identifier means the default keystore (a kasp database that was setup by this service)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36338
#, no-wrap
msgid "@code{manual?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36340
msgid "Whether the key management is manual or automatic."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36341
#, no-wrap
msgid "@code{single-type-signing?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36343
msgid "When @code{#t}, use the Single-Type Signing Scheme."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36344
#, no-wrap
msgid "@code{algorithm} (default: @code{\"ecdsap256sha256\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36346
msgid "An algorithm of signing keys and issued signatures."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36347
#, no-wrap
msgid "@code{ksk-size} (default: @code{256})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36350
msgid "The length of the KSK@.  Note that this value is correct for the default algorithm, but would be unsecure for other algorithms."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36351
#, no-wrap
msgid "@code{zsk-size} (default: @code{256})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36354
msgid "The length of the ZSK@.  Note that this value is correct for the default algorithm, but would be unsecure for other algorithms."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36355
#, no-wrap
msgid "@code{dnskey-ttl} (default: @code{'default})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36358
msgid "The TTL value for DNSKEY records added into zone apex.  The special @code{'default} value means same as the zone SOA TTL."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36359
#, no-wrap
msgid "@code{zsk-lifetime} (default: @code{(* 30 24 3600)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36361
msgid "The period between ZSK publication and the next rollover initiation."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36362
#, no-wrap
msgid "@code{propagation-delay} (default: @code{(* 24 3600)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36365
msgid "An extra delay added for each key rollover step.  This value should be high enough to cover propagation of data from the master server to all slaves."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36366
#, no-wrap
msgid "@code{rrsig-lifetime} (default: @code{(* 14 24 3600)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36368
msgid "A validity period of newly issued signatures."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36369
#, no-wrap
msgid "@code{rrsig-refresh} (default: @code{(* 7 24 3600)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36371
msgid "A period how long before a signature expiration the signature will be refreshed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36372
#, no-wrap
msgid "@code{nsec3?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36374
msgid "When @code{#t}, NSEC3 will be used instead of NSEC."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36375
#, no-wrap
msgid "@code{nsec3-iterations} (default: @code{5})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36377
msgid "The number of additional times the hashing is performed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36378
#, no-wrap
msgid "@code{nsec3-salt-length} (default: @code{8})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36381
msgid "The length of a salt field in octets, which is appended to the original owner name before hashing."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36382
#, no-wrap
msgid "@code{nsec3-salt-lifetime} (default: @code{(* 30 24 3600)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36384
msgid "The validity period of newly issued salt field."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36388
#, no-wrap
msgid "{Data Type} knot-zone-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36391
msgid "Data type representing a zone served by Knot.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36393
#, no-wrap
msgid "@code{domain} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36395
msgid "The domain served by this configuration.  It must not be empty."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36396
#, no-wrap
msgid "@code{file} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36399
msgid "The file where this zone is saved.  This parameter is ignored by master zones.  Empty means default location that depends on the domain name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36400
#, no-wrap
msgid "@code{zone} (default: @code{(zone-file)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36403
msgid "The content of the zone file.  This parameter is ignored by slave zones.  It must contain a zone-file record."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36404
#, no-wrap
msgid "@code{master} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36407
msgid "A list of master remotes.  When empty, this zone is a master.  When set, this zone is a slave.  This is a list of remotes identifiers."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36408
#, no-wrap
msgid "@code{ddns-master} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36411
msgid "The main master.  When empty, it defaults to the first master in the list of masters."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36412
#, no-wrap
msgid "@code{notify} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36414
msgid "A list of slave remote identifiers."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36415
#, no-wrap
msgid "@code{acl} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36417
msgid "A list of acl identifiers."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36418
#, no-wrap
msgid "@code{semantic-checks?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36420
msgid "When set, this adds more semantic checks to the zone."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36421
#, no-wrap
msgid "@code{zonefile-sync} (default: @code{0})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36424
msgid "The delay between a modification in memory and on disk.  0 means immediate synchronization."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36425
#, no-wrap
msgid "@code{zonefile-load} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36428
msgid "The way the zone file contents are applied during zone load.  Possible values are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36430
#, no-wrap
msgid "@code{#f} for using the default value from Knot,"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36431
#, no-wrap
msgid "@code{'none} for not using the zone file at all,"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36432
#, no-wrap
msgid "@code{'difference} for computing the difference between already available"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:36434
msgid "contents and zone contents and applying it to the current zone contents,"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36434
#, no-wrap
msgid "@code{'difference-no-serial} for the same as @code{'difference}, but"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:36437
msgid "ignoring the SOA serial in the zone file, while the server takes care of it automatically."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36437
#, no-wrap
msgid "@code{'whole} for loading zone contents from the zone file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36440
#, no-wrap
msgid "@code{journal-content} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36445
msgid "The way the journal is used to store zone and its changes.  Possible values are @code{'none} to not use it at all, @code{'changes} to store changes and @code{'all} to store contents.  @code{#f} does not set this option, so the default value from Knot is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36446
#, no-wrap
msgid "@code{max-journal-usage} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36449
msgid "The maximum size for the journal on disk.  @code{#f} does not set this option, so the default value from Knot is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36450
#, no-wrap
msgid "@code{max-journal-depth} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36453
msgid "The maximum size of the history.  @code{#f} does not set this option, so the default value from Knot is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36454
#, no-wrap
msgid "@code{max-zone-size} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36458
msgid "The maximum size of the zone file.  This limit is enforced for incoming transfer and updates.  @code{#f} does not set this option, so the default value from Knot is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36459
#, no-wrap
msgid "@code{dnssec-policy} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36463
msgid "A reference to a @code{knot-policy-configuration} record, or the special name @code{\"default\"}.  If the value is @code{#f}, there is no dnssec signing on this zone."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36464
#, no-wrap
msgid "@code{serial-policy} (default: @code{'increment})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36466
msgid "A policy between @code{'increment} and @code{'unixtime}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36470
#, no-wrap
msgid "{Data Type} knot-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36473
msgid "Data type representing the Knot configuration.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36475
#, no-wrap
msgid "@code{knot} (default: @code{knot})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36477
msgid "The Knot package."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36478
#, no-wrap
msgid "@code{run-directory} (default: @code{\"/var/run/knot\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36480
msgid "The run directory.  This directory will be used for pid file and sockets."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36481
#, no-wrap
msgid "@code{includes} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36484
msgid "A list of strings or file-like objects denoting other files that must be included at the top of the configuration file."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:36485
#, no-wrap
msgid "secrets, Knot service"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36491
msgid "This can be used to manage secrets out-of-band.  For example, secret keys may be stored in an out-of-band file not managed by Guix, and thus not visible in @file{/gnu/store}---e.g., you could store secret key configuration in @file{/etc/knot/secrets.conf} and add this file to the @code{includes} list."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36496
msgid "One can generate a secret tsig key (for nsupdate and zone transfers with the keymgr command from the knot package.  Note that the package is not automatically installed by the service.  The following example shows how to generate a new tsig key:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:36500
#, no-wrap
msgid ""
"keymgr -t mysecret > /etc/knot/secrets.conf\n"
"chmod 600 /etc/knot/secrets.conf\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36506
msgid "Also note that the generated key will be named @var{mysecret}, so it is the name that needs to be used in the @var{key} field of the @code{knot-acl-configuration} record and in other places that need to refer to that key."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36508
msgid "It can also be used to add configuration not supported by this interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36509
#, no-wrap
msgid "@code{listen-v4} (default: @code{\"0.0.0.0\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36511 guix-git/doc/guix.texi:36514
msgid "An ip address on which to listen."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36512
#, no-wrap
msgid "@code{listen-v6} (default: @code{\"::\"})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36515
#, no-wrap
msgid "@code{listen-port} (default: @code{53})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36517
msgid "A port on which to listen."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36518
#, no-wrap
msgid "@code{keys} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36520
msgid "The list of knot-key-configuration used by this configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36521
#, no-wrap
msgid "@code{acls} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36523
msgid "The list of knot-acl-configuration used by this configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36524
#, no-wrap
msgid "@code{remotes} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36526
msgid "The list of knot-remote-configuration used by this configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36527
#, no-wrap
msgid "@code{zones} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36529
msgid "The list of knot-zone-configuration used by this configuration."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:36533
#, no-wrap
msgid "Knot Resolver Service"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:36535
#, no-wrap
msgid "knot-resolver-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:36538
msgid "This is the type of the knot resolver service, whose value should be a @code{knot-resolver-configuration} object as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:36548
#, no-wrap
msgid ""
"(service knot-resolver-service-type\n"
"         (knot-resolver-configuration\n"
"           (kresd-config-file (plain-file \"kresd.conf\" \"\n"
"net.listen('192.168.0.1', 5353)\n"
"user('knot-resolver', 'knot-resolver')\n"
"modules = @{ 'hints > iterate', 'stats', 'predict' @}\n"
"cache.size = 100 * MB\n"
"\"))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:36551
msgid "For more information, refer its @url{https://knot-resolver.readthedocs.io/en/stable/config-overview.html, manual}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36553
#, no-wrap
msgid "{Data Type} knot-resolver-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36555
msgid "Data type representing the configuration of knot-resolver."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36557
#, no-wrap
msgid "@code{package} (default: @var{knot-resolver})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36559
msgid "Package object of the knot DNS resolver."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36560
#, no-wrap
msgid "@code{kresd-config-file} (default: %kresd.conf)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36563
msgid "File-like object of the kresd configuration file to use, by default it will listen on @code{127.0.0.1} and @code{::1}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36564
#, no-wrap
msgid "@code{garbage-collection-interval} (default: 1000)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36566
msgid "Number of milliseconds for @code{kres-cache-gc} to periodically trim the cache."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:36571
#, no-wrap
msgid "Dnsmasq Service"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:36573
#, no-wrap
msgid "dnsmasq-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:36576
msgid "This is the type of the dnsmasq service, whose value should be a @code{dnsmasq-configuration} object as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:36582
#, no-wrap
msgid ""
"(service dnsmasq-service-type\n"
"         (dnsmasq-configuration\n"
"           (no-resolv? #t)\n"
"           (servers '(\"192.168.1.1\"))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:36585
#, fuzzy
#| msgid "Services"
msgid "@code{dnsmasq-service-type} provides two actions:"
msgstr "Servizi"

#. type: item
#: guix-git/doc/guix.texi:36587
#, no-wrap
msgid "reload"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36590
msgid "Send a @code{SIGHUP} signal to @command{dnsmasq} to clear cache and reload hosts files which triggers the following actions:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:36594
msgid "Clear the DNS cache"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:36596
msgid "Reload @file{/etc/hosts} and @file{/etc/ethers}"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:36600
msgid "Reload files specified by @option{--dhcp-hostsfile}, @option{--dhcp-hostsdir}, @option{--dhcp-optsfile}, @option{--dhcp-optsdir}, @option{--addn-hosts}, or @option{--hostsdir}"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:36602
msgid "Execute DHCP lease change scripts for all existing leases"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:36605
msgid "Reread @file{/etc/resolv.conf} (only if @option{--no-poll} is configured)."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:36610
msgid "The @code{SIGHUP} signal does not trigger a reload of the main configuration file."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36613 guix-git/doc/guix.texi:36633
msgid "Example usage:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:36615
#, no-wrap
msgid "herd reload dnsmasq\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36617
#, no-wrap
msgid "stats"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36620
msgid "When @command{dnsmasq} receives a @code{SIGUSR1} signal, it writes statistics to the system log including:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:36624
msgid "Cache size and number of evicted entries"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:36626
msgid "Cache hits, misses, and authoritative queries answered"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:36628
msgid "For each upstream server: queries sent and errors received"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:36630
msgid "TCP connection fork statistics."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:36635
#, no-wrap
msgid "herd stats dnsmasq\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36640
#, no-wrap
msgid "{Data Type} dnsmasq-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36642
msgid "Data type representing the configuration of dnsmasq."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36644
#, no-wrap
msgid "@code{package} (default: @var{dnsmasq})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36646
msgid "Package object of the dnsmasq server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36647
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{shepherd-provision} (default: @code{'(dnsmasq)})"
msgstr "Documentazione"

#. type: itemx
#: guix-git/doc/guix.texi:36648
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{shepherd-requirement} (default: @code{'(user-processes networking)})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:36652
msgid "This option can be used to provide a list of Shepherd service names (symbols) provided by this service.  You might want to change the default value if you intend to run several @command{dnsmasq} instances."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36655
msgid "Likewise, @code{shepherd-requirement} is a list of Shepherd service names (symbols) that this service will depend on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36656
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{pid-file} (default: @code{\"/run/dnsmasq.pid\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:36658
msgid "Specify an alternate path for dnsmasq to record its process-id in."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36659
#, no-wrap
msgid "@code{no-hosts?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36661
msgid "When true, don't read the hostnames in /etc/hosts."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36662
#, no-wrap
msgid "@code{port} (default: @code{53})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36665
msgid "The port to listen on.  Setting this to zero completely disables DNS responses, leaving only DHCP and/or TFTP functions."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36666
#, no-wrap
msgid "@code{local-service?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36669
msgid "Accept DNS queries only from hosts whose address is on a local subnet, ie a subnet for which an interface exists on the server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36670
#, no-wrap
msgid "@code{listen-addresses} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36672
msgid "Listen on the given IP addresses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36673
#, no-wrap
msgid "@code{resolv-file} (default: @code{\"/etc/resolv.conf\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36675
msgid "The file to read the IP address of the upstream nameservers from."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36676
#, no-wrap
msgid "@code{no-resolv?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36678
msgid "When true, don't read @var{resolv-file}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36679
#, no-wrap
msgid "@code{forward-private-reverse-lookup?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36682
msgid "When false, all reverse lookups for private IP ranges are answered with \"no such domain\" rather than being forwarded upstream."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36683
#, no-wrap
msgid "@code{query-servers-in-order?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36686
msgid "When true, dnsmasq queries the servers in the same order as they appear in @var{servers}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36687
#, no-wrap
msgid "@code{servers} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36689
msgid "Specify IP address of upstream servers directly."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36690
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{servers-file} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:36693
msgid "Specify file containing upstream servers. This file is re-read when dnsmasq receives SIGHUP.  Could be either a string or a file-like object."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36694
#, no-wrap
msgid "@code{addresses} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36698
msgid "For each entry, specify an IP address to return for any host in the given domains.  Queries in the domains are never forwarded and always replied to with the specified IP address."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36700
msgid "This is useful for redirecting hosts locally, for example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:36709
#, no-wrap
msgid ""
"(service dnsmasq-service-type\n"
"         (dnsmasq-configuration\n"
"           (addresses\n"
"             '(; Redirect to a local web-server.\n"
"               \"/example.org/127.0.0.1\"\n"
"               ; Redirect subdomain to a specific IP.\n"
"               \"/subdomain.example.org/192.168.1.42\"))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36712
msgid "Note that rules in @file{/etc/hosts} take precedence over this."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36713
#, no-wrap
msgid "@code{cache-size} (default: @code{150})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36716
msgid "Set the size of dnsmasq's cache.  Setting the cache size to zero disables caching."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36717
#, no-wrap
msgid "@code{negative-cache?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36719
msgid "When false, disable negative caching."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36720
#, no-wrap
msgid "@code{cpe-id} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36723
msgid "If set, add a CPE (Customer-Premises Equipment) identifier to DNS queries which are forwarded upstream."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36724
#, no-wrap
msgid "@code{tftp-enable?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36726
msgid "Whether to enable the built-in TFTP server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36727
#, no-wrap
msgid "@code{tftp-no-fail?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36729
msgid "If true, does not fail dnsmasq if the TFTP server could not start up."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36730
#, no-wrap
msgid "@code{tftp-single-port?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36732
msgid "Whether to use only one single port for TFTP."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36733
#, no-wrap
msgid "@code{tftp-secure?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36735
msgid "If true, only files owned by the user running the dnsmasq process are accessible."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36739
msgid "If dnsmasq is being run as root, different rules apply: @code{tftp-secure?} has no effect, but only files which have the world-readable bit set are accessible."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36740
#, no-wrap
msgid "@code{tftp-max} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36742
msgid "If set, sets the maximal number of concurrent connections allowed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36743
#, no-wrap
msgid "@code{tftp-mtu} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36745
msgid "If set, sets the MTU for TFTP packets to that value."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36746
#, no-wrap
msgid "@code{tftp-no-blocksize?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36748
msgid "If true, stops the TFTP server from negotiating the blocksize with a client."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36749
#, no-wrap
msgid "@code{tftp-lowercase?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36751
msgid "Whether to convert all filenames in TFTP requests to lowercase."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36752
#, no-wrap
msgid "@code{tftp-port-range} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36755
msgid "If set, fixes the dynamical ports (one per client) to the given range (@code{\"<start>,<end>\"})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36756
#, no-wrap
msgid "@code{tftp-root} (default: @code{/var/empty,lo})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36763
msgid "Look for files to transfer using TFTP relative to the given directory.  When this is set, TFTP paths which include @samp{..} are rejected, to stop clients getting outside the specified root.  Absolute paths (starting with @samp{/}) are allowed, but they must be within the TFTP-root.  If the optional interface argument is given, the directory is only used for TFTP requests via that interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36764
#, no-wrap
msgid "@code{tftp-unique-root} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36769
msgid "If set, add the IP or hardware address of the TFTP client as a path component on the end of the TFTP-root.  Only valid if a TFTP root is set and the directory exists.  Defaults to adding IP address (in standard dotted-quad format)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36778
msgid "For instance, if @option{--tftp-root} is @samp{/tftp} and client @samp{1.2.3.4} requests file @file{myfile} then the effective path will be @file{/tftp/1.2.3.4/myfile} if @file{/tftp/1.2.3.4} exists or @file{/tftp/myfile} otherwise.  When @samp{=mac} is specified it will append the MAC address instead, using lowercase zero padded digits separated by dashes, e.g.: @samp{01-02-03-04-aa-bb}.  Note that resolving MAC addresses is only possible if the client is in the local network or obtained a DHCP lease from dnsmasq."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36779
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{conf-file} (default: @code{'()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:36782
msgid "File names of configuration files to use.  Strings and file-like objects are accepted."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36783
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{conf-dir} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:36788
msgid "Read all the files in the given directory as configuration files.  Support for @command{dnsmasq} field extensions is not implemented; users can use @code{computed-file} to build a directory of files instead.  The configuration files are loaded in alphabetical order of file name."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36792
msgid "This option provides an ``escape hatch'' for the user to provide arbitrary command-line arguments to @command{dnsmasq} as a list of strings."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:36796
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Unbound Service"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:36798
#, fuzzy, no-wrap
#| msgid "Services"
msgid "unbound-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:36802
msgid "This is the type of the service to run @uref{https://www.unbound.net, Unbound}, a validating, recursive, and caching DNS resolver.  Its value must be a @code{unbound-configuration} object as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:36813
#, no-wrap
msgid ""
"(service unbound-service-type\n"
"         (unbound-configuration\n"
"          (forward-zone\n"
"           (list\n"
"            (unbound-zone\n"
"             (name \".\")\n"
"             (forward-addr '(\"149.112.112.112#dns.quad9.net\"\n"
"                             \"2620:fe::9#dns.quad9.net\"))\n"
"             (forward-tls-upstream #t))))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36816
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} unbound-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:36818
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{unbound-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:36820
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{server} (type: unbound-server)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:36822
msgid "General options for the Unbound server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36823
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{remote-control} (type: unbound-remote)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:36825
msgid "Remote control options for the daemon."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36826
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{forward-zone} (default: @code{()}) (type: list-of-unbound-zone)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:36828
msgid "A zone for which queries should be forwarded to another resolver."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36831
#, fuzzy
#| msgid "Documentation"
msgid "Raw content to add to the configuration file."
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:36835
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} unbound-server"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:36837
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{unbound-server} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:36839
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{interface} (type: maybe-list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:36841
msgid "Interfaces listened on for queries from clients."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36842
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{hide-version} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:36844
msgid "Refuse the version.server and version.bind queries."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36845
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{hide-identity} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:36847
msgid "Refuse the id.server and hostname.bind queries."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36848
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{tls-cert-bundle} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:36850
msgid "Certificate bundle file, used for DNS over TLS."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36853 guix-git/doc/guix.texi:36869
#: guix-git/doc/guix.texi:36888
msgid "An association list of options to append."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36857
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} unbound-remote"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:36859
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{unbound-remote} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:36861
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{control-enable} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:36863
msgid "Enable remote control."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36864
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{control-interface} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:36866
msgid "IP address or local socket path to listen on for remote control."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36873
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} unbound-zone"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:36875
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{unbound-zone} fields are:"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:36879
msgid "Zone name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36880
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{forward-addr} (type: maybe-list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:36882
msgid "IP address of server to forward to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36883
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{forward-tls-upstream} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:36885
msgid "Whether the queries to this forwarder use TLS for transport."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:36894
#, no-wrap
msgid "VNC (virtual network computing)"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:36895
#, no-wrap
msgid "XDMCP (x display manager control protocol)"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:36904
msgid "The @code{(gnu services vnc)} module provides services related to @dfn{Virtual Network Computing} (VNC), which makes it possible to locally use graphical Xorg applications running on a remote machine.  Combined with a graphical manager that supports the @dfn{X Display Manager Control Protocol}, such as GDM (@pxref{gdm}) or LightDM (@pxref{lightdm}), it is possible to remote an entire desktop for a multi-user environment."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:36905
#, no-wrap
msgid "Xvnc"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:36910
msgid "Xvnc is a VNC server that spawns its own X window server; which means it can run on headless servers.  The Xvnc implementations provided by the @code{tigervnc-server} and @code{turbovnc} aim to be fast and efficient."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:36911
#, no-wrap
msgid "xvnc-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:36917
msgid "The @code{xvnc-service-type} service can be configured via the @code{xvnc-configuration} record, documented below.  A second virtual display could be made available on a remote machine via the following configuration:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:36922
#, no-wrap
msgid ""
"(service xvnc-service-type\n"
"         (xvnc-configuration (display-number 10)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:36927
msgid "As a demonstration, the @command{xclock} command could then be started on the remote machine on display number 10, and it could be displayed locally via the @command{vncviewer} command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:36933
#, no-wrap
msgid ""
"# Start xclock on the remote machine.\n"
"ssh -L5910:localhost:5910 @var{your-host} -- guix shell xclock \\\n"
"    -- env DISPLAY=:10 xclock\n"
"# Access it via VNC.\n"
"guix shell tigervnc-client -- vncviewer localhost:5910\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:36938
msgid "The following configuration combines XDMCP and Inetd to allow multiple users to concurrently use the remote system and login graphically via the GDM display manager:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:36954
#, no-wrap
msgid ""
"(operating-system\n"
"  [...]\n"
"  (services (cons*\n"
"             [...]\n"
"             (service xvnc-service-type (xvnc-configuration\n"
"                                         (display-number 5)\n"
"                                         (localhost? #f)\n"
"                                         (xdmcp? #t)\n"
"                                         (inetd? #t)))\n"
"             (modify-services %desktop-services\n"
"               (gdm-service-type config => (gdm-configuration\n"
"                                            (inherit config)\n"
"                                            (auto-suspend? #f)\n"
"                                            (xdmcp? #t)))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:36959
msgid "A remote user could then connect to it by using the @command{vncviewer} command or a compatible VNC client and start a desktop session of their choosing:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:36961
#, no-wrap
msgid "vncviewer remote-host:5905\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:36971
msgid "Unless your machine is in a controlled environment, for security reasons, the @code{localhost?} configuration of the @code{xvnc-configuration} record should be left to its default @code{#t} value and exposed via a secure means such as an SSH port forward.  The XDMCP port, UDP 177 should also be blocked from the outside by a firewall, as it is not a secure protocol and can expose login credentials in clear."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36976
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} xvnc-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:36978
msgid "Available @code{xvnc-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36980
#, no-wrap
msgid "@code{xvnc} (default: @code{tigervnc-server}) (type: file-like)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36982
msgid "The package that provides the Xvnc binary."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36983
#, no-wrap
msgid "@code{display-number} (default: @code{0}) (type: number)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36986
msgid "The display number used by Xvnc.  You should set this to a number not already used a Xorg server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36987
#, no-wrap
msgid "@code{geometry} (default: @code{\"1024x768\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36989
msgid "The size of the desktop to be created."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36990
#, no-wrap
msgid "@code{depth} (default: @code{24}) (type: color-depth)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36993
msgid "The pixel depth in bits of the desktop to be created.  Accepted values are 16, 24 or 32."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36997
msgid "The port on which to listen for connections from viewers.  When left unspecified, it defaults to 5900 plus the display number."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36998
#, no-wrap
msgid "@code{ipv4?} (default: @code{#t}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37000
msgid "Use IPv4 for incoming and outgoing connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37001
#, no-wrap
msgid "@code{ipv6?} (default: @code{#t}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37003
msgid "Use IPv6 for incoming and outgoing connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37004
#, no-wrap
msgid "@code{password-file} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37007
msgid "The password file to use, if any.  Refer to vncpasswd(1) to learn how to generate such a file."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37014
msgid "Query the XDMCP server for a session.  This enables users to log in a desktop session from the login manager screen.  For a multiple users scenario, you'll want to enable the @code{inetd?} option as well, so that each connection to the VNC server is handled separately rather than shared."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37015
#, no-wrap
msgid "@code{inetd?} (default: @code{#f}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37017
msgid "Use an Inetd-style service, which runs the Xvnc server on demand."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37018
#, no-wrap
msgid "@code{frame-rate} (default: @code{60}) (type: number)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37020
msgid "The maximum number of updates per second sent to each client."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37021
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{security-types} (default: @code{'(\"None\")}) (type: security-types)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:37027
msgid "The allowed security schemes to use for incoming connections.  The default is \"None\", which is safe given that Xvnc is configured to authenticate the user via the display manager, and only for local connections.  Accepted values are any of the following: (\"None\" \"VncAuth\" \"Plain\" \"TLSNone\" \"TLSVnc\" \"TLSPlain\" \"X509None\" \"X509Vnc\")"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37028
#, no-wrap
msgid "@code{localhost?} (default: @code{#t}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37032
msgid "Only allow connections from the same machine.  It is set to #true by default for security, which means SSH or another secure means should be used to expose the remote port."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37033
#, no-wrap
msgid "@code{log-level} (default: @code{30}) (type: log-level)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37036
msgid "The log level, a number between 0 and 100, 100 meaning most verbose output.  The log messages are output to syslog."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37037
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{extra-options} (default: @code{'()}) (type: strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:37040
msgid "This can be used to provide extra Xvnc options not exposed via this <xvnc-configuration> record."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37048
#, no-wrap
msgid "VPN (virtual private network)"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37049
#, no-wrap
msgid "virtual private network (VPN)"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37053
msgid "The @code{(gnu services vpn)} module provides services related to @dfn{virtual private networks} (VPNs)."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:37054
#, no-wrap
msgid "Bitmask"
msgstr "Bitmask"

#. type: defvar
#: guix-git/doc/guix.texi:37056
#, no-wrap
msgid "bitmask-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37061
msgid "A service type for the @uref{https://bitmask.net, Bitmask} VPN client.  It makes the client available in the system and loads its polkit policy.  Please note that the client expects an active polkit-agent, which is either run by your desktop-environment or should be run manually."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:37063
#, no-wrap
msgid "OpenVPN"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37069
msgid "It provides a @emph{client} service for your machine to connect to a VPN, and a @emph{server} service for your machine to host a VPN@.  Both @code{openvpn-client-service-type} and @code{openvpn-server-service-type} can be run simultaneously."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37070
#, fuzzy, no-wrap
#| msgid "Services"
msgid "openvpn-client-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:37072
msgid "Type of the service that runs @command{openvpn}, a VPN daemon, as a client."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37075
msgid "The value for this service is a @code{<openvpn-client-configuration>} object."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37077
#, fuzzy, no-wrap
#| msgid "Services"
msgid "openvpn-server-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:37079
msgid "Type of the service that runs @command{openvpn}, a VPN daemon, as a server."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37082
msgid "The value for this service is a @code{<openvpn-server-configuration>} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37086
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} openvpn-client-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:37088
msgid "Available @code{openvpn-client-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37090 guix-git/doc/guix.texi:37178
#, no-wrap
msgid "@code{openvpn} (default: @code{openvpn}) (type: file-like)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37092 guix-git/doc/guix.texi:37180
msgid "The OpenVPN package."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37093 guix-git/doc/guix.texi:37181
#, no-wrap
msgid "@code{pid-file} (default: @code{\"/var/run/openvpn/openvpn.pid\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37095 guix-git/doc/guix.texi:37183
msgid "The OpenVPN pid file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37096 guix-git/doc/guix.texi:37184
#, no-wrap
msgid "@code{proto} (default: @code{udp}) (type: proto)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37099 guix-git/doc/guix.texi:37187
msgid "The protocol (UDP or TCP) used to open a channel between clients and servers."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37100 guix-git/doc/guix.texi:37188
#, no-wrap
msgid "@code{dev} (default: @code{tun}) (type: dev)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37102 guix-git/doc/guix.texi:37190
msgid "The device type used to represent the VPN connection."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37103 guix-git/doc/guix.texi:37191
#, no-wrap
msgid "@code{ca} (default: @code{\"/etc/openvpn/ca.crt\"}) (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37105 guix-git/doc/guix.texi:37193
msgid "The certificate authority to check connections against."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37106 guix-git/doc/guix.texi:37194
#, no-wrap
msgid "@code{cert} (default: @code{\"/etc/openvpn/client.crt\"}) (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37109 guix-git/doc/guix.texi:37197
msgid "The certificate of the machine the daemon is running on.  It should be signed by the authority given in @code{ca}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37110 guix-git/doc/guix.texi:37198
#, no-wrap
msgid "@code{key} (default: @code{\"/etc/openvpn/client.key\"}) (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37113 guix-git/doc/guix.texi:37201
msgid "The key of the machine the daemon is running on.  It must be the key whose certificate is @code{cert}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37114 guix-git/doc/guix.texi:37202
#, no-wrap
msgid "@code{comp-lzo?} (default: @code{#t}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37116 guix-git/doc/guix.texi:37204
msgid "Whether to use the lzo compression algorithm."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37117 guix-git/doc/guix.texi:37205
#, no-wrap
msgid "@code{persist-key?} (default: @code{#t}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37119 guix-git/doc/guix.texi:37207
msgid "Don't re-read key files across SIGUSR1 or --ping-restart."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37120 guix-git/doc/guix.texi:37208
#, no-wrap
msgid "@code{persist-tun?} (default: @code{#t}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37123 guix-git/doc/guix.texi:37211
msgid "Don't close and reopen TUN/TAP device or run up/down scripts across SIGUSR1 or --ping-restart restarts."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37124 guix-git/doc/guix.texi:37212
#, no-wrap
msgid "@code{fast-io?} (default: @code{#f}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37127 guix-git/doc/guix.texi:37215
msgid "(Experimental) Optimize TUN/TAP/UDP I/O writes by avoiding a call to poll/epoll/select prior to the write operation."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37128 guix-git/doc/guix.texi:37216
#, no-wrap
msgid "@code{verbosity} (default: @code{3}) (type: number)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37130 guix-git/doc/guix.texi:37218
msgid "Verbosity level."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37131
#, no-wrap
msgid "@code{tls-auth} (default: @code{#f}) (type: tls-auth-client)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37134 guix-git/doc/guix.texi:37222
msgid "Add an additional layer of HMAC authentication on top of the TLS control channel to protect against DoS attacks."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37135
#, no-wrap
msgid "@code{auth-user-pass} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37139
msgid "Authenticate with server using username/password.  The option is a file containing username/password on 2 lines.  Do not use a file-like object as it would be added to the store and readable by any user."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37140
#, no-wrap
msgid "@code{verify-key-usage?} (default: @code{#t}) (type: key-usage)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37142
msgid "Whether to check the server certificate has server usage extension."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37143
#, no-wrap
msgid "@code{bind?} (default: @code{#f}) (type: bind)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37145
msgid "Bind to a specific local port number."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37146
#, no-wrap
msgid "@code{resolv-retry?} (default: @code{#t}) (type: resolv-retry)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37148
msgid "Retry resolving server address."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37149
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{remote} (default: @code{'()}) (type: openvpn-remote-list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:37151
msgid "A list of remote servers to connect to."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37152
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} openvpn-remote-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:37154
msgid "Available @code{openvpn-remote-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37156
#, no-wrap
msgid "@code{name} (default: @code{\"my-server\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37158
msgid "Server name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37159 guix-git/doc/guix.texi:37223
#, no-wrap
msgid "@code{port} (default: @code{1194}) (type: number)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37161
msgid "Port number the server listens to."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37174
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} openvpn-server-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:37176
msgid "Available @code{openvpn-server-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37219
#, no-wrap
msgid "@code{tls-auth} (default: @code{#f}) (type: tls-auth-server)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37225
msgid "Specifies the port number on which the server listens."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37226
#, no-wrap
msgid "@code{server} (default: @code{\"10.8.0.0 255.255.255.0\"}) (type: ip-mask)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37228
msgid "An ip and mask specifying the subnet inside the virtual network."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37229
#, no-wrap
msgid "@code{server-ipv6} (default: @code{#f}) (type: cidr6)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37231
msgid "A CIDR notation specifying the IPv6 subnet inside the virtual network."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37232
#, no-wrap
msgid "@code{dh} (default: @code{\"/etc/openvpn/dh2048.pem\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37234
msgid "The Diffie-Hellman parameters file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37235
#, no-wrap
msgid "@code{ifconfig-pool-persist} (default: @code{\"/etc/openvpn/ipp.txt\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37237
msgid "The file that records client IPs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37238
#, no-wrap
msgid "@code{redirect-gateway?} (default: @code{#f}) (type: gateway)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37240
msgid "When true, the server will act as a gateway for its clients."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37241
#, no-wrap
msgid "@code{client-to-client?} (default: @code{#f}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37243
msgid "When true, clients are allowed to talk to each other inside the VPN."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37244
#, no-wrap
msgid "@code{keepalive} (default: @code{(10 120)}) (type: keepalive)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37250
msgid "Causes ping-like messages to be sent back and forth over the link so that each side knows when the other side has gone down.  @code{keepalive} requires a pair.  The first element is the period of the ping sending, and the second element is the timeout before considering the other side down."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37251
#, no-wrap
msgid "@code{max-clients} (default: @code{100}) (type: number)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37253
msgid "The maximum number of clients."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37254
#, no-wrap
msgid "@code{status} (default: @code{\"/var/run/openvpn/status\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37257
msgid "The status file.  This file shows a small report on current connection.  It is truncated and rewritten every minute."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37258
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{client-config-dir} (default: @code{'()}) (type: openvpn-ccd-list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:37260
msgid "The list of configuration for some clients."
msgstr ""

#. type: subheading
#: guix-git/doc/guix.texi:37267
#, no-wrap
msgid "strongSwan"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37271
msgid "Currently, the strongSwan service only provides legacy-style configuration with @file{ipsec.conf} and @file{ipsec.secrets} files."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37272
#, no-wrap
msgid "strongswan-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37276
msgid "A service type for configuring strongSwan for IPsec @acronym{VPN, Virtual Private Networking}.  Its value must be a @code{strongswan-configuration} record as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:37282
#, no-wrap
msgid ""
"(service strongswan-service-type\n"
"         (strongswan-configuration\n"
"          (ipsec-conf \"/etc/ipsec.conf\")\n"
"          (ipsec-secrets \"/etc/ipsec.secrets\")))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37286
#, no-wrap
msgid "{Data Type} strongswan-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37288
msgid "Data type representing the configuration of the StrongSwan service."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:37290
#, no-wrap
msgid "strongswan"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37292
msgid "The strongSwan package to use for this service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37293
#, no-wrap
msgid "@code{ipsec-conf} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37296
msgid "The file name of your @file{ipsec.conf}.  If not @code{#f}, then this and @code{ipsec-secrets} must both be strings."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37297
#, no-wrap
msgid "@code{ipsec-secrets} (default @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37300
msgid "The file name of your @file{ipsec.secrets}.  If not @code{#f}, then this and @code{ipsec-conf} must both be strings."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:37304
#, no-wrap
msgid "Wireguard"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37306
#, no-wrap
msgid "wireguard-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37309
msgid "A service type for a Wireguard tunnel interface.  Its value must be a @code{wireguard-configuration} record as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:37320
#, no-wrap
msgid ""
"(service wireguard-service-type\n"
"         (wireguard-configuration\n"
"          (peers\n"
"           (list\n"
"            (wireguard-peer\n"
"             (name \"my-peer\")\n"
"             (endpoint \"my.wireguard.com:51820\")\n"
"             (public-key \"hzpKg9X1yqu1axN6iJp0mWf6BZGo8m1wteKwtTmDGF4=\")\n"
"             (allowed-ips '(\"10.0.0.2/32\")))))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37324
#, no-wrap
msgid "{Data Type} wireguard-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37326
msgid "Data type representing the configuration of the Wireguard service."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:37328
#, no-wrap
msgid "wireguard"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37330
msgid "The wireguard package to use for this service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37331
#, no-wrap
msgid "@code{interface} (default: @code{\"wg0\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37333
msgid "The interface name for the VPN."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37334
#, no-wrap
msgid "@code{addresses} (default: @code{'(\"10.0.0.1/32\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37337
msgid "List of strings or G-expressions which represent the IP addresses to be assigned to the above interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37338
#, no-wrap
msgid "@code{port} (default: @code{51820})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37340
msgid "The port on which to listen for incoming connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37341
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{dns} (default: @code{'())})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:37344
msgid "List of strings or G-expressions which represent the DNS server(s) to announce to VPN clients via DHCP."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37345
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{monitor-ips?} (default: @code{#f})"
msgstr "Documentazione"

#. type: cindex
#: guix-git/doc/guix.texi:37346
#, no-wrap
msgid "Dynamic IP, with Wireguard"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37347
#, no-wrap
msgid "dyndns, usage with Wireguard"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37353
msgid "Whether to monitor the resolved Internet addresses (IPs) of the endpoints of the configured peers, resetting the peer endpoints using an IP address that no longer correspond to their freshly resolved host name.  Set this to @code{#t} if one or more endpoints use host names provided by a dynamic DNS service to keep the sessions alive."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37354
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{monitor-ips-interval} (default: @code{\"*/5 * * * *\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:37358
msgid "This is the monitoring schedule, expressed as a string in traditional cron syntax or as a gexp evaluating to a Shepherd calendar event (@pxref{Timers,,, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37359
#, no-wrap
msgid "@code{private-key} (default: @code{\"/etc/wireguard/private.key\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37364
msgid "The private key file for the interface.  It is automatically generated if the file does not exist.  If this field is @code{#f}, a private key is not automatically created and the path is not serialized to the configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37365
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{bootstrap-private-key?} (default: @code{#t})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:37368
msgid "Whether or not the private key should be generated automatically if it does not exist."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37373
msgid "Setting this to @code{#f} allows one to set the private key using command substitution.  One example shown in the @code{wg-quick(8)} manual is retrieving a private key using @code{password-store}.  This can be achieved with the following code:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:37381
#, no-wrap
msgid ""
"(wireguard-configuration\n"
" (private-key\n"
"  #~(string-append \"<(\"\n"
"                   #$(file-append password-store \"/bin/pass\")\n"
"                   ;; Wireguard replaces %i with the interface name.\n"
"                   \" WireGuard/private-keys/%i)\")))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37384
#, no-wrap
msgid "@code{peers} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37387
msgid "The authorized peers on this interface.  This is a list of @var{wireguard-peer} records."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37388
#, no-wrap
msgid "@code{pre-up} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37391
msgid "List of strings or G-expressions.  These are script snippets which will be executed before setting up the interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37392
#, no-wrap
msgid "@code{post-up} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37395
msgid "List of strings or G-expressions.  These are script snippets which will be executed after setting up the interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37396
#, no-wrap
msgid "@code{pre-down} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37399
msgid "List of strings or G-expressions.  These are script snippets which will be executed before tearing down the interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37400
#, no-wrap
msgid "@code{post-down} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37403
msgid "List of strings or G-expressions.  These are script snippets which will be executed after tearing down the interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37404 guix-git/doc/guix.texi:39300
#: guix-git/doc/guix.texi:39550
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{shepherd-requirement} (default: @code{'()}) (type: list-of-symbols)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:37407 guix-git/doc/guix.texi:39303
msgid "A list of symbols naming Shepherd services that this service will depend on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37408
#, no-wrap
msgid "@code{table} (default: @code{\"auto\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37413
msgid "The routing table to which routes are added, as a string.  There are two special values: @code{\"off\"} that disables the creation of routes altogether, and @code{\"auto\"} (the default) that adds routes to the default table and enables special handling of default routes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37414
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{auto-start?} (default: @code{#t\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:37419
msgid "Whether the Wireguard network should be started automatically by the Shepherd.  If it is @code{#f} the service has to be started manually with @code{herd start wireguard-$interface} (for example: @code{herd start wireguard-wg0})."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37423
#, no-wrap
msgid "{Data Type} wireguard-peer"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37425
msgid "Data type representing a Wireguard peer attached to a given interface."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37429
msgid "The peer name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37430
#, no-wrap
msgid "@code{endpoint} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37433
msgid "The optional endpoint for the peer, such as @code{\"demo.wireguard.com:51820\"}."
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:37434 guix-git/doc/guix.texi:38002
#: guix-git/doc/guix.texi:38039 guix-git/doc/guix.texi:46352
#, no-wrap
msgid "public-key"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37436
msgid "The peer public-key represented as a base64 string."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37437
#, no-wrap
msgid "@code{preshared-key} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37440
msgid "An optional pre-shared key file for this peer that can be either a string or a G-expression.  The given file will not be autogenerated."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:37441
#, no-wrap
msgid "allowed-ips"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37444
msgid "A list of IP addresses from which incoming traffic for this peer is allowed and to which incoming traffic for this peer is directed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37445
#, no-wrap
msgid "@code{keep-alive} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37450
msgid "An optional time interval in seconds.  A packet will be sent to the server endpoint once per time interval.  This helps receiving incoming connections from this peer when you are behind a NAT or a firewall."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37456
#, no-wrap
msgid "NFS"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37461
msgid "The @code{(gnu services nfs)} module provides the following services, which are most commonly used in relation to mounting or exporting directory trees as @dfn{network file systems} (NFS)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37465
msgid "While it is possible to use the individual components that together make up a Network File System service, we recommended to configure an NFS server with the @code{nfs-service-type}."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:37466
#, no-wrap
msgid "NFS Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37467
#, no-wrap
msgid "NFS, server"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37472
msgid "The NFS service takes care of setting up all NFS component services, kernel configuration file systems, and installs configuration files in the locations that NFS expects."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37473
#, no-wrap
msgid "nfs-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37475
msgid "A service type for a complete NFS server."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37477
#, no-wrap
msgid "{Data Type} nfs-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37480
msgid "This data type represents the configuration of the NFS service and all of its subsystems."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37482
msgid "It has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37483 guix-git/doc/guix.texi:37608
#: guix-git/doc/guix.texi:37633
#, no-wrap
msgid "@code{nfs-utils} (default: @code{nfs-utils})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37485
msgid "The nfs-utils package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37486
#, no-wrap
msgid "@code{nfs-versions} (default: @code{'(\"4.2\" \"4.1\" \"4.0\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37489
msgid "If a list of string values is provided, the @command{rpc.nfsd} daemon will be limited to supporting the given versions of the NFS protocol."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37490
#, no-wrap
msgid "@code{exports} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37495
msgid "This is a list of directories the NFS server should export.  Each entry is a list consisting of two elements: a directory name and a string containing all options.  This is an example in which the directory @file{/export} is served to all NFS clients as a read-only share:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:37501
#, no-wrap
msgid ""
"(nfs-configuration\n"
" (exports\n"
"  '((\"/export\"\n"
"     \"*(ro,insecure,no_subtree_check,crossmnt,fsid=0)\"))))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37503
#, no-wrap
msgid "@code{rpcmountd-port} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37505
msgid "The network port that the @command{rpc.mountd} daemon should use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37506
#, no-wrap
msgid "@code{rpcstatd-port} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37508
msgid "The network port that the @command{rpc.statd} daemon should use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37509 guix-git/doc/guix.texi:37557
#, no-wrap
msgid "@code{rpcbind} (default: @code{rpcbind})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37511 guix-git/doc/guix.texi:37559
msgid "The rpcbind package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37512
#, no-wrap
msgid "@code{idmap-domain} (default: @code{\"localdomain\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37514
msgid "The local NFSv4 domain name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37515
#, no-wrap
msgid "@code{nfsd-port} (default: @code{2049})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37517
msgid "The network port that the @command{nfsd} daemon should use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37518
#, no-wrap
msgid "@code{nfsd-threads} (default: @code{8})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37520
msgid "The number of threads used by the @command{nfsd} daemon."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37521
#, no-wrap
msgid "@code{nfsd-tcp?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37523
msgid "Whether the @command{nfsd} daemon should listen on a TCP socket."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37524
#, no-wrap
msgid "@code{nfsd-udp?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37526
msgid "Whether the @command{nfsd} daemon should listen on a UDP socket."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37527 guix-git/doc/guix.texi:37611
#: guix-git/doc/guix.texi:37636
#, no-wrap
msgid "@code{pipefs-directory} (default: @code{\"/var/lib/nfs/rpc_pipefs\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37529 guix-git/doc/guix.texi:37613
#: guix-git/doc/guix.texi:37638
msgid "The directory where the pipefs file system is mounted."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37530
#, no-wrap
msgid "@code{debug} (default: @code{'()\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37534
msgid "A list of subsystems for which debugging output should be enabled.  This is a list of symbols.  Any of these symbols are valid: @code{nfsd}, @code{nfs}, @code{rpc}, @code{idmap}, @code{statd}, or @code{mountd}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37539
msgid "If you don't need a complete NFS service or prefer to build it yourself you can use the individual component services that are documented below."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:37540
#, no-wrap
msgid "RPC Bind Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37541
#, no-wrap
msgid "rpcbind"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37547
msgid "The RPC Bind service provides a facility to map program numbers into universal addresses.  Many NFS related services use this facility.  Hence it is automatically started when a dependent service starts."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37548
#, no-wrap
msgid "rpcbind-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37550
msgid "A service type for the RPC portmapper daemon."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37553
#, no-wrap
msgid "{Data Type} rpcbind-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37556
msgid "Data type representing the configuration of the RPC Bind Service.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37560
#, no-wrap
msgid "@code{warm-start?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37564
msgid "If this parameter is @code{#t}, then the daemon will read a state file on startup thus reloading state information saved by a previous instance."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:37568
#, no-wrap
msgid "Pipefs Pseudo File System"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37569
#, no-wrap
msgid "pipefs"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37570
#, no-wrap
msgid "rpc_pipefs"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37574
msgid "The pipefs file system is used to transfer NFS related data between the kernel and user space programs."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37575
#, no-wrap
msgid "pipefs-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37577
msgid "A service type for the pipefs pseudo file system."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37579
#, no-wrap
msgid "{Data Type} pipefs-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37582
msgid "Data type representing the configuration of the pipefs pseudo file system service.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37583
#, no-wrap
msgid "@code{mount-point} (default: @code{\"/var/lib/nfs/rpc_pipefs\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37585
msgid "The directory to which the file system is to be attached."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:37589
#, no-wrap
msgid "GSS Daemon Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37590
#, no-wrap
msgid "GSSD"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37591
#, no-wrap
msgid "GSS"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37592
#, no-wrap
msgid "global security system"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37599
msgid "The @dfn{global security system} (GSS) daemon provides strong security for RPC based protocols.  Before exchanging RPC requests an RPC client must establish a security context.  Typically this is done using the Kerberos command @command{kinit} or automatically at login time using PAM services (@pxref{Kerberos Services})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37600
#, no-wrap
msgid "gss-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37602
msgid "A service type for the Global Security System (GSS) daemon."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37604
#, no-wrap
msgid "{Data Type} gss-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37607
msgid "Data type representing the configuration of the GSS daemon service.  This type has the following parameters:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37610
msgid "The package in which the @command{rpc.gssd} command is to be found."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:37618
#, no-wrap
msgid "IDMAP Daemon Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37619
#, no-wrap
msgid "idmapd"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37620
#, no-wrap
msgid "name mapper"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37624
msgid "The idmap daemon service provides mapping between user IDs and user names.  Typically it is required in order to access file systems mounted via NFSv4."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37625
#, no-wrap
msgid "idmap-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37627
msgid "A service type for the Identity Mapper (IDMAP) daemon."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37629
#, no-wrap
msgid "{Data Type} idmap-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37632
msgid "Data type representing the configuration of the IDMAP daemon service.  This type has the following parameters:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37635
msgid "The package in which the @command{rpc.idmapd} command is to be found."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37639 guix-git/doc/guix.texi:37782
#, no-wrap
msgid "@code{domain} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37643
msgid "The local NFSv4 domain name.  This must be a string or @code{#f}.  If it is @code{#f} then the daemon will use the host's fully qualified domain name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37644
#, no-wrap
msgid "@code{verbosity} (default: @code{0})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37646
msgid "The verbosity level of the daemon."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:37653 guix-git/doc/guix.texi:37659
#, no-wrap
msgid "Samba"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37654
#, no-wrap
msgid "SMB"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37658
msgid "The @code{(gnu services samba)} module provides service definitions for Samba as well as additional helper services.  Currently it provides the following services."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37666
msgid "@uref{https://www.samba.org, Samba} provides network shares for folders and printers using the SMB/CIFS protocol commonly used on Windows.  It can also act as an Active Directory Domain Controller (AD DC) for other hosts in an heterougenious network with different types of Computer systems."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37667
#, fuzzy, no-wrap
#| msgid "Services"
msgid "samba-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:37672
msgid "The service type to enable the samba services @code{samba}, @code{nmbd}, @code{smbd} and @code{winbindd}.  By default this service type does not run any of the Samba daemons; they must be enabled individually."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37676
msgid "Below is a basic example that configures a simple, anonymous (unauthenticated) Samba file share exposing the @file{/public} directory."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:37681
msgid "The @file{/public} directory and its contents must be world readable/writable, so you'll want to run @samp{chmod -R 777 /public} on it."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:37683
#, no-wrap
msgid "Caution"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:37687
msgid "Such a Samba configuration should only be used in controlled environments, and you should not share any private files using it, as anyone connecting to your network would be able to access them."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:37696
#, no-wrap
msgid ""
"(service samba-service-type (samba-configuration\n"
"                             (enable-smbd? #t)\n"
"                             (config-file (plain-file \"smb.conf\" \"\\\n"
"[global]\n"
"map to guest = Bad User\n"
"logging = syslog@@1\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:37703
#, no-wrap
msgid ""
"[public]\n"
"browsable = yes\n"
"path = /public\n"
"read only = no\n"
"guest ok = yes\n"
"guest only = yes\\n\"))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37707
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} samba-service-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:37709
msgid "Configuration record for the Samba suite."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37711
#, no-wrap
msgid "@code{package} (default: @code{samba})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37713
msgid "The samba package to use."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37717
msgid "The config file to use.  To learn about its syntax, run @samp{man smb.conf}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37718
#, no-wrap
msgid "@code{enable-samba?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37720
msgid "Enable the @code{samba} daemon."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37721
#, no-wrap
msgid "@code{enable-smbd?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37723
msgid "Enable the @code{smbd} daemon."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37724
#, no-wrap
msgid "@code{enable-nmbd?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37726
msgid "Enable the @code{nmbd} daemon."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37727
#, no-wrap
msgid "@code{enable-winbindd?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37729
msgid "Enable the @code{winbindd} daemon."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37733
#, no-wrap
msgid "wsdd, Web service discovery daemon"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:37734
#, no-wrap
msgid "Web Service Discovery Daemon"
msgstr "Demone per la scoperta dei servizi web"

#. type: Plain text
#: guix-git/doc/guix.texi:37742
msgid "The @acronym{WSDD, Web Service Discovery daemon} implements the @uref{http://docs.oasis-open.org/ws-dd/discovery/1.1/os/wsdd-discovery-1.1-spec-os.html, Web Services Dynamic Discovery} protocol that enables host discovery over Multicast DNS, similar to what Avahi does.  It is a drop-in replacement for SMB hosts that have had SMBv1 disabled for security reasons."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37743
#, no-wrap
msgid "wsdd-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37747
msgid "Service type for the WSD host daemon.  The value for this service type is a @code{wsdd-configuration} record.  The details for the @code{wsdd-configuration} record type are given below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37749
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} wsdd-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:37751
msgid "This data type represents the configuration for the wsdd service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37754
#, no-wrap
msgid "@code{package} (default: @code{wsdd})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37756
msgid "The wsdd package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37757
#, no-wrap
msgid "@code{ipv4only?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37759
msgid "Only listen to IPv4 addresses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37760
#, no-wrap
msgid "@code{ipv6only} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37763
msgid "Only listen to IPv6 addresses.  Please note: Activating both options is not possible, since there would be no IP versions to listen to."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37768
msgid "Chroot into a separate directory to prevent access to other directories.  This is to increase security in case there is a vulnerability in @command{wsdd}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37769
#, no-wrap
msgid "@code{hop-limit} (default: @code{1})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37772
msgid "Limit to the level of hops for multicast packets.  The default is @var{1} which should prevent packets from leaving the local network."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37773
#, no-wrap
msgid "@code{interface} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37777
msgid "Limit to the given list of interfaces to listen to.  By default wsdd will listen to all interfaces.  Except the loopback interface is never used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37778
#, no-wrap
msgid "@code{uuid-device} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37781
msgid "The WSD protocol requires a device to have a UUID.  Set this to manually assign the service a UUID."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37784
msgid "Notify this host is a member of an Active Directory."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37789
msgid "Manually set the hostname rather than letting @command{wsdd} inherit this host's hostname.  Only the host name part of a possible FQDN will be used in the default case."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37790
#, no-wrap
msgid "@code{preserve-case?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37794
msgid "By default @command{wsdd} will convert the hostname in workgroup to all uppercase.  The opposite is true for hostnames in domains.  Setting this parameter will preserve case."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37795
#, no-wrap
msgid "@code{workgroup} (default: @var{\"WORKGROUP\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37798
msgid "Change the name of the workgroup.  By default @command{wsdd} reports this host being member of a workgroup."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37809
msgid "@uref{https://guix.gnu.org/cuirass/, Cuirass} is a continuous integration tool for Guix.  It can be used both for development and for providing substitutes to others (@pxref{Substitutes})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37811
msgid "The @code{(gnu services cuirass)} module provides the following service."
msgstr ""

#. type: defvr
#: guix-git/doc/guix.texi:37812
#, fuzzy, no-wrap
#| msgid "Services"
msgid "{Procedure} cuirass-service-type"
msgstr "Servizi"

#. type: defvr
#: guix-git/doc/guix.texi:37815
msgid "The type of the Cuirass service.  Its value must be a @code{cuirass-configuration} object, as described below."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37820
msgid "To add build jobs, you have to set the @code{specifications} field of the configuration.  For instance, the following example will build all the packages provided by the @code{my-channel} channel."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:37831
#, no-wrap
msgid ""
"(define %cuirass-specs\n"
"  #~(list (specification\n"
"           (name 'my-channel)\n"
"           (build '(channels my-channel))\n"
"           (channels\n"
"            (cons (channel\n"
"                   (name 'my-channel)\n"
"                   (url \"https://my-channel.git\"))\n"
"                  %default-channels)))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:37835 guix-git/doc/guix.texi:37849
#, no-wrap
msgid ""
"(service cuirass-service-type\n"
"         (cuirass-configuration\n"
"          (specifications %cuirass-specs)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37839
msgid "To build the @code{linux-libre} package defined by the default Guix channel, one can use the following configuration."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:37845
#, no-wrap
msgid ""
"(define %cuirass-specs\n"
"  #~(list (specification\n"
"           (name 'my-linux)\n"
"           (build '(packages \"linux-libre\")))))\n"
"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37854
msgid "The other configuration possibilities, as well as the specification record itself are described in the Cuirass manual (@pxref{Specifications,,, cuirass, Cuirass})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37858
msgid "While information related to build jobs is located directly in the specifications, global settings for the @command{cuirass} process are accessible in other @code{cuirass-configuration} fields."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37859
#, no-wrap
msgid "{Data Type} cuirass-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37861
msgid "Data type representing the configuration of Cuirass."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37863 guix-git/doc/guix.texi:38017
#, no-wrap
msgid "@code{cuirass} (default: @code{cuirass})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37865 guix-git/doc/guix.texi:38019
msgid "The Cuirass package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37866
#, no-wrap
msgid "@code{log-file} (default: @code{\"/var/log/cuirass.log\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37868 guix-git/doc/guix.texi:37985
#: guix-git/doc/guix.texi:38032
msgid "Location of the log file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37869
#, no-wrap
msgid "@code{web-log-file} (default: @code{\"/var/log/cuirass-web.log\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37871
msgid "Location of the log file used by the web interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37872
#, no-wrap
msgid "@code{cache-directory} (default: @code{\"/var/cache/cuirass\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37874
msgid "Location of the repository cache."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37875
#, no-wrap
msgid "@code{user} (default: @code{\"cuirass\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37877
msgid "Owner of the @code{cuirass} process."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37878
#, no-wrap
msgid "@code{group} (default: @code{\"cuirass\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37880
msgid "Owner's group of the @code{cuirass} process."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37881
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{interval} (default: @code{300})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:37884
msgid "Number of seconds between the poll of the repositories followed by the Cuirass jobs, by default."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37888
msgid "Note that individual jobset specifications may override this in their @code{period} field; the value specified here is only used for specifications that use the default @code{period} value, which is zero."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37889
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ttl} (default: @code{2592000})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:37891
msgid "Duration to keep build results' GC roots alive, in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37892
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{build-expiry} (default: 4 months)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:37895
msgid "Duration in seconds after which pending builds are canceled.  This helps ensure that the backlog does not grow indefinitely."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37896
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{threads} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:37898
msgid "Number of kernel threads to use for Cuirass. The default value should be appropriate for most cases."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37899
#, no-wrap
msgid "@code{parameters} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37902
msgid "Read parameters from the given @var{parameters} file.  The supported parameters are described here (@pxref{Parameters,,, cuirass, Cuirass})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37903
#, no-wrap
msgid "@code{remote-server} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37906
msgid "A @code{cuirass-remote-server-configuration} record to use the build remote mechanism or @code{#f} to use the default build mechanism."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37907
#, no-wrap
msgid "@code{database} (default: @code{\"dbname=cuirass host=/var/run/postgresql\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37912
msgid "Use @var{database} as the database containing the jobs and the past build results. Since Cuirass uses PostgreSQL as a database engine, @var{database} must be a string such as @code{\"dbname=cuirass host=localhost\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37913
#, no-wrap
msgid "@code{port} (default: @code{8081})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37915
msgid "Port number used by the HTTP server."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37919
msgid "Listen on the network interface for @var{host}.  The default is to accept connections from localhost."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37920
#, no-wrap
msgid "@code{specifications} (default: @code{#~'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37924
msgid "A gexp (@pxref{G-Expressions}) that evaluates to a list of specifications records.  The specification record is described in the Cuirass manual (@pxref{Specifications,,, cuirass, Cuirass})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37925 guix-git/doc/guix.texi:48857
#, no-wrap
msgid "@code{one-shot?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37927
msgid "Only evaluate specifications and build derivations once."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37928
#, no-wrap
msgid "@code{fallback?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37931
msgid "When substituting a pre-built binary fails, fall back to building packages locally."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37934
msgid "Extra options to pass when running the @code{cuirass register} process."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37935
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{web-extra-options} (default: @code{'()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:37937
msgid "Extra options to pass when running the @code{cuirass web} process."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37941
#, no-wrap
msgid "remote build"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:37942
#, no-wrap
msgid "Cuirass remote building"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37945
msgid "Cuirass supports two mechanisms to build derivations."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37947
#, no-wrap
msgid "Using the local Guix daemon."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:37951
msgid "This is the default build mechanism.  Once the build jobs are evaluated, they are sent to the local Guix daemon.  Cuirass then listens to the Guix daemon output to detect the various build events."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37952
#, no-wrap
msgid "Using the remote build mechanism."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:37956
msgid "The build jobs are not submitted to the local Guix daemon.  Instead, a remote server dispatches build requests to the connect remote workers, according to the build priorities."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37963
msgid "To enable this build mode a @code{cuirass-remote-server-configuration} record must be passed as @code{remote-server} argument of the @code{cuirass-configuration} record.  The @code{cuirass-remote-server-configuration} record is described below."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37968
msgid "This build mode scales way better than the default build mode.  This is the build mode that is used on the GNU Guix build farm at @url{https://ci.guix.gnu.org}.  It should be preferred when using Cuirass to build large amount of packages."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37969
#, no-wrap
msgid "{Data Type} cuirass-remote-server-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37971
msgid "Data type representing the configuration of the Cuirass remote-server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37973
#, no-wrap
msgid "@code{backend-port} (default: @code{5555})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37976
msgid "The TCP port for communicating with @code{remote-worker} processes using ZMQ.  It defaults to @code{5555}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37977
#, no-wrap
msgid "@code{log-port} (default: @code{5556})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37979
msgid "The TCP port of the log server.  It defaults to @code{5556}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37980
#, no-wrap
msgid "@code{publish-port} (default: @code{5557})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37982
msgid "The TCP port of the publish server.  It defaults to @code{5557}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37983
#, no-wrap
msgid "@code{log-file} (default: @code{\"/var/log/cuirass-remote-server.log\"})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37986
#, no-wrap
msgid "@code{cache} (default: @code{\"/var/cache/cuirass/remote\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37988
msgid "Use @var{cache} directory to cache build log files."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37989
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{log-expiry} (default: 6 months)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:37992
msgid "The duration in seconds after which build logs collected by @command{cuirass remote-worker} may be deleted."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37993
#, no-wrap
msgid "@code{trigger-url} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37996
msgid "Once a substitute is successfully fetched, trigger substitute baking at @var{trigger-url}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38001
msgid "If set to false, do not start a publish server and ignore the @code{publish-port} argument.  This can be useful if there is already a standalone publish server standing next to the remote server."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:38003 guix-git/doc/guix.texi:38040
#, no-wrap
msgid "private-key"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:38012
msgid "At least one remote worker must also be started on any machine of the local network to actually perform the builds and report their status."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:38013
#, no-wrap
msgid "{Data Type} cuirass-remote-worker-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:38015
msgid "Data type representing the configuration of the Cuirass remote-worker."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38020
#, no-wrap
msgid "@code{workers} (default: @code{1})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38022
msgid "Start @var{workers} parallel workers."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38026
msgid "Do not use Avahi discovery and connect to the given @code{server} IP address instead."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38027 guix-git/doc/guix.texi:40436
#, no-wrap
msgid "@code{systems} (default: @code{(list (%current-system))})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38029
msgid "Only request builds for the given @var{systems}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38030
#, no-wrap
msgid "@code{log-file} (default: @code{\"/var/log/cuirass-remote-worker.log\"})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38033
#, no-wrap
msgid "@code{publish-port} (default: @code{5558})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38035
msgid "The TCP port of the publish server.  It defaults to @code{5558}."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:38047
#, no-wrap
msgid "Laminar"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:38052
msgid "@uref{https://laminar.ohwg.net/, Laminar} is a lightweight and modular Continuous Integration service.  It doesn't have a configuration web UI instead uses version-controllable configuration files and scripts."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:38055
msgid "Laminar encourages the use of existing tools such as bash and cron instead of reinventing them."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:38056
#, fuzzy, no-wrap
#| msgid "Services"
msgid "laminar-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:38059
msgid "The type of the Laminar service.  Its value must be a @code{laminar-configuration} object, as described below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:38063
msgid "All configuration values have defaults, a minimal configuration to get Laminar running is shown below. By default, the web interface is available on port 8080."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:38066
#, no-wrap
msgid "(service laminar-service-type)\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:38069
#, no-wrap
msgid "{Data Type} laminar-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:38071
msgid "Data type representing the configuration of Laminar."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38073
#, no-wrap
msgid "@code{laminar} (default: @code{laminar})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38075
msgid "The Laminar package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38076
#, no-wrap
msgid "@code{home-directory} (default: @code{\"/var/lib/laminar\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38078
msgid "The directory for job configurations and run directories."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38079
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{supplementary-groups} (default: @code{()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:38081
msgid "Supplementary groups for the Laminar user account."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38082
#, no-wrap
msgid "@code{bind-http} (default: @code{\"*:8080\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38085
msgid "The interface/port or unix socket on which laminard should listen for incoming connections to the web frontend."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38086
#, no-wrap
msgid "@code{bind-rpc} (default: @code{\"unix-abstract:laminar\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38089
msgid "The interface/port or unix socket on which laminard should listen for incoming commands such as build triggers."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38090
#, no-wrap
msgid "@code{title} (default: @code{\"Laminar\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38092
msgid "The page title to show in the web frontend."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38093
#, no-wrap
msgid "@code{keep-rundirs} (default: @code{0})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38097
msgid "Set to an integer defining how many rundirs to keep per job.  The lowest-numbered ones will be deleted.  The default is 0, meaning all run dirs will be immediately deleted."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38098
#, no-wrap
msgid "@code{archive-url} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38101
msgid "The web frontend served by laminard will use this URL to form links to artefacts archived jobs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38102
#, no-wrap
msgid "@code{base-url} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38104
msgid "Base URL to use for links to laminar itself."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:38108
#, no-wrap
msgid "Forgejo Runner"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:38110
#, fuzzy, no-wrap
#| msgid "Continuous Integration"
msgid "continuous integration, Forgejo"
msgstr "Integrazione continua"

#. type: cindex
#: guix-git/doc/guix.texi:38111
#, fuzzy, no-wrap
#| msgid "Continuous Integration"
msgid "Forgejo, continuous integration"
msgstr "Integrazione continua"

#. type: Plain text
#: guix-git/doc/guix.texi:38116
msgid "The @code{(gnu services ci)} also provides a service for @uref{https://code.forgejo.org/forgejo/runner, Forgejo Runner}, a daemon that connects to an instance of the @uref{https://forgejo.org, Forgejo code collaboration tool} and runs jobs for continuous integration."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:38119
msgid "A minimal configuration mostly with default values that can be added to the @code{services} field of your operating system looks like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:38125
#, no-wrap
msgid ""
"(service forgejo-runner-service-type\n"
"         (forgejo-runner-configuration\n"
"          (name \"my-runner\")\n"
"          (labels '(\"guix\" \"linux\"))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:38130
msgid "This provides a @code{forgejo-runner} Shepherd service.  That service will initially fail to start; you will have to manually @dfn{register} the runner against the Forgejo server by running a command like:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:38133
#, no-wrap
msgid "herd register forgejo-runner @var{url} @var{token}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:38137
msgid "... where the arguments are as follows:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38142
msgid "the URL of the Forgejo server---e.g., @indicateurl{https://codeberg.org};"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:38142 guix-git/doc/guix.texi:43374
#, no-wrap
msgid "token"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38146
msgid "an access token @uref{https://forgejo.org/docs/latest/admin/runner-installation/#standard-registration, provided by the Forgejo server}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:38149
msgid "Once registration has succeeded, you can start the runner:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:38153
#, no-wrap
msgid ""
"herd enable forgejo-runner\n"
"herd start forgejo-runner\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:38160
msgid "The runner then receives orders from the Forgejo server to execute @dfn{actions}.  Actions are commands and workflows specified by YAML files in the @file{.forgejo/workflows} directory of source code repositories---see @uref{https://forgejo.org/docs/v7.0/user/actions/, the Forgejo Action documentation} for more info."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:38164
msgid "Note that at the moment @code{forgejo-runner-service-type} lets you run only one runner.  Details about the configuration of this service follow."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:38165
#, fuzzy, no-wrap
#| msgid "Services"
msgid "forgejo-runner-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:38168
#, fuzzy
#| msgid "Documentation"
msgid "This is the service type for Forgejo Runner.  Its value must be a @code{forgejo-runner-configuration} record, documented below."
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:38170
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} forgejo-runner-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:38173
#, fuzzy
#| msgid "Documentation"
msgid "This data type represents the configuration of an instance of @code{forgejo-runner-service-type}.  It contains the following fields:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:38175
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{package} (default: @code{forgejo-runner})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:38177
#, fuzzy
#| msgid "Updating the Guix package definition."
msgid "The Forgejo Runner package to use."
msgstr "Aggiornamento della definizione del pacchetto Guix."

#. type: item
#: guix-git/doc/guix.texi:38178
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{name} (default: @code{#~(gethostname)})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:38181
msgid "Name of the runner as will be shown in the runner management interface of Forgejo."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38182
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{labels} (default: @code{'(\"guix\")})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:38187
msgid "List of @uref{https://forgejo.org/docs/latest/admin/actions/#choosing-labels, labels} representing the type of environment the runner provides and that actions may refer to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38188
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{capacity} (default: @code{1})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:38190
msgid "Number of tasks to be executed concurrently."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38191
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{timeout} (default: @code{(* 3 3600)})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:38193
msgid "Maximum duration of a job, in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38194
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{fetch-timeout} (default: @code{5})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:38197
msgid "Maximum duration for fetching the job from the Forgejo server, in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38198
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{fetch-interval} (default: @code{2})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:38200
msgid "Interval (in seconds) for fetching the job from the Forgejo server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38201
#, fuzzy, no-wrap
#| msgid "@code{port} (default: @code{22})"
msgid "@code{report-interval} (default: @code{1})"
msgstr "@code{port} (predefinito: @code{22})"

#. type: table
#: guix-git/doc/guix.texi:38204
msgid "Interval (in seconds) for reporting the job status and log to the Forgejo server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38205
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{data-directory} (default: @code{\"/var/lib/forgejo-runner\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:38208
msgid "Directory where @command{forgejo-runner} will store persistent data such as its configuration and access token."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38209
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{run-directory} (default: @code{\"/var/run/forgejo-runner\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:38211
msgid "Directory where @command{forgejo-runner} stores cached data."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:38218
#, no-wrap
msgid "power-profiles-daemon"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:38219
#, no-wrap
msgid "Power Profiles Daemon"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:38224
msgid "The @code{(gnu services pm)} module provides a Guix service definition for the Linux Power Profiles Daemon, which makes power profiles handling available over D-Bus."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:38227
msgid "The available profiles consist of the default @samp{balanced} mode, a @samp{power-saver} mode and on supported systems a @samp{performance} mode."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:38231
msgid "The @code{power-profiles-daemon} conflicts with other power management tools like @code{tlp}. Using both together is not recommended."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:38233
#, fuzzy, no-wrap
#| msgid "Services"
msgid "power-profiles-daemon-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:38237
msgid "This is the service type for the @uref{https://gitlab.freedesktop.org/upower/power-profiles-daemon/, Power Profiles Daemon}.  The value for this service is a @code{power-profiles-daemon-configuration}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:38240
msgid "To enable the Power Profiles Daemon with default configuration add this line to your services:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:38243
#, fuzzy, no-wrap
#| msgid "Services"
msgid "(service power-profiles-daemon-service-type)\n"
msgstr "Servizi"

#. type: deftp
#: guix-git/doc/guix.texi:38246
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} power-profiles-daemon-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:38248
#, fuzzy
#| msgid "Documentation"
msgid "Data type representing the configuration of @code{power-profiles-daemon-service-type}."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:38250
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{power-profiles-daemon} (default: @code{power-profiles-daemon}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:38252
msgid "Package object of power-profiles-daemon."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:38257
#, no-wrap
msgid "tlp"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:38258
#, no-wrap
msgid "power management with TLP"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:38259
#, no-wrap
msgid "TLP daemon"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:38263
msgid "The @code{(gnu services pm)} module provides a Guix service definition for the Linux power management tool TLP."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:38269
msgid "TLP enables various powersaving modes in userspace and kernel.  Contrary to @code{upower-service}, it is not a passive, monitoring tool, as it will apply custom settings each time a new power source is detected.  More information can be found at @uref{https://linrunner.de/en/tlp/tlp.html, TLP home page}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:38270
#, no-wrap
msgid "tlp-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:38274
msgid "The service type for the TLP tool.  The default settings are optimised for battery life on most systems, but you can tweak them to your heart's content by adding a valid @code{tlp-configuration}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:38279
#, no-wrap
msgid ""
"(service tlp-service-type\n"
"         (tlp-configuration\n"
"          (cpu-scaling-governor-on-ac (list \"performance\"))\n"
"          (sched-powersave-on-bat? #t)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:38287
msgid "Each parameter definition is preceded by its type; for example, @samp{boolean foo} indicates that the @code{foo} parameter should be specified as a boolean.  Types starting with @code{maybe-} denote parameters that won't show up in TLP config file when their value is left unset, or is explicitly set to the @code{%unset-value} value."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:38297
msgid "Available @code{tlp-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38298
#, no-wrap
msgid "{@code{tlp-configuration} parameter} package tlp"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38300
msgid "The TLP package."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38303
#, no-wrap
msgid "{@code{tlp-configuration} parameter} boolean tlp-enable?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38305
msgid "Set to true if you wish to enable TLP."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38310
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string tlp-default-mode"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38313
msgid "Default mode when no power supply can be detected.  Alternatives are AC and BAT."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38315
msgid "Defaults to @samp{\"AC\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38318
#, no-wrap
msgid "{@code{tlp-configuration} parameter} non-negative-integer disk-idle-secs-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38321
msgid "Number of seconds Linux kernel has to wait after the disk goes idle, before syncing on AC."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38326
#, no-wrap
msgid "{@code{tlp-configuration} parameter} non-negative-integer disk-idle-secs-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38328
msgid "Same as @code{disk-idle-ac} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38330
msgid "Defaults to @samp{2}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38333
#, no-wrap
msgid "{@code{tlp-configuration} parameter} non-negative-integer max-lost-work-secs-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38335
msgid "Dirty pages flushing periodicity, expressed in seconds."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38337 guix-git/doc/guix.texi:38560
#: guix-git/doc/guix.texi:41619 guix-git/doc/guix.texi:41627
msgid "Defaults to @samp{15}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38340
#, no-wrap
msgid "{@code{tlp-configuration} parameter} non-negative-integer max-lost-work-secs-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38342
msgid "Same as @code{max-lost-work-secs-on-ac} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38344
msgid "Defaults to @samp{60}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38347
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-space-separated-string-list cpu-scaling-governor-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38351
msgid "CPU frequency scaling governor on AC mode.  With intel_pstate driver, alternatives are powersave and performance.  With acpi-cpufreq driver, alternatives are ondemand, powersave, performance and conservative."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38356
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-space-separated-string-list cpu-scaling-governor-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38358
msgid "Same as @code{cpu-scaling-governor-on-ac} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38363
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-non-negative-integer cpu-scaling-min-freq-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38365
msgid "Set the min available frequency for the scaling governor on AC."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38370
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-non-negative-integer cpu-scaling-max-freq-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38372
msgid "Set the max available frequency for the scaling governor on AC."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38377
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-non-negative-integer cpu-scaling-min-freq-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38379
msgid "Set the min available frequency for the scaling governor on BAT."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38384
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-non-negative-integer cpu-scaling-max-freq-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38386
msgid "Set the max available frequency for the scaling governor on BAT."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38391
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-non-negative-integer cpu-min-perf-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38394
msgid "Limit the min P-state to control the power dissipation of the CPU, in AC mode.  Values are stated as a percentage of the available performance."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38399
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-non-negative-integer cpu-max-perf-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38402
msgid "Limit the max P-state to control the power dissipation of the CPU, in AC mode.  Values are stated as a percentage of the available performance."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38407
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-non-negative-integer cpu-min-perf-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38409
msgid "Same as @code{cpu-min-perf-on-ac} on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38414
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-non-negative-integer cpu-max-perf-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38416
msgid "Same as @code{cpu-max-perf-on-ac} on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38421
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-boolean cpu-boost-on-ac?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38423
msgid "Enable CPU turbo boost feature on AC mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38428
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-boolean cpu-boost-on-bat?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38430
msgid "Same as @code{cpu-boost-on-ac?} on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38435
#, no-wrap
msgid "{@code{tlp-configuration} parameter} boolean sched-powersave-on-ac?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38438
msgid "Allow Linux kernel to minimize the number of CPU cores/hyper-threads used under light load conditions."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38443
#, no-wrap
msgid "{@code{tlp-configuration} parameter} boolean sched-powersave-on-bat?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38445
msgid "Same as @code{sched-powersave-on-ac?} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38450
#, no-wrap
msgid "{@code{tlp-configuration} parameter} boolean nmi-watchdog?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38452
msgid "Enable Linux kernel NMI watchdog."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38457
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-string phc-controls"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38460
msgid "For Linux kernels with PHC patch applied, change CPU voltages.  An example value would be @samp{\"F:V F:V F:V F:V\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38465
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string energy-perf-policy-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38468
msgid "Set CPU performance versus energy saving policy on AC@.  Alternatives are performance, normal, powersave."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38470 guix-git/doc/guix.texi:38568
#: guix-git/doc/guix.texi:38626
msgid "Defaults to @samp{\"performance\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38473
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string energy-perf-policy-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38475
msgid "Same as @code{energy-perf-policy-ac} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38477 guix-git/doc/guix.texi:38575
msgid "Defaults to @samp{\"powersave\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38480
#, no-wrap
msgid "{@code{tlp-configuration} parameter} space-separated-string-list disks-devices"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38482
msgid "Hard disk devices."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38485
#, no-wrap
msgid "{@code{tlp-configuration} parameter} space-separated-string-list disk-apm-level-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38487
msgid "Hard disk advanced power management level."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38490
#, no-wrap
msgid "{@code{tlp-configuration} parameter} space-separated-string-list disk-apm-level-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38492
msgid "Same as @code{disk-apm-bat} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38495
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-space-separated-string-list disk-spindown-timeout-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38498
msgid "Hard disk spin down timeout.  One value has to be specified for each declared hard disk."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38503
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-space-separated-string-list disk-spindown-timeout-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38505
msgid "Same as @code{disk-spindown-timeout-on-ac} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38510
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-space-separated-string-list disk-iosched"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38514
msgid "Select IO scheduler for disk devices.  One value has to be specified for each declared hard disk.  Example alternatives are cfq, deadline and noop."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38519
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string sata-linkpwr-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38522
msgid "SATA aggressive link power management (ALPM) level.  Alternatives are min_power, medium_power, max_performance."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38524
msgid "Defaults to @samp{\"max_performance\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38527
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string sata-linkpwr-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38529
msgid "Same as @code{sata-linkpwr-ac} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38531
msgid "Defaults to @samp{\"min_power\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38534
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-string sata-linkpwr-blacklist"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38536
msgid "Exclude specified SATA host devices for link power management."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38541
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-on-off-boolean ahci-runtime-pm-on-ac?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38544
msgid "Enable Runtime Power Management for AHCI controller and disks on AC mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38549
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-on-off-boolean ahci-runtime-pm-on-bat?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38551
msgid "Same as @code{ahci-runtime-pm-on-ac} on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38556
#, no-wrap
msgid "{@code{tlp-configuration} parameter} non-negative-integer ahci-runtime-pm-timeout"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38558
msgid "Seconds of inactivity before disk is suspended."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38563
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string pcie-aspm-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38566
msgid "PCI Express Active State Power Management level.  Alternatives are default, performance, powersave."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38571
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string pcie-aspm-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38573
msgid "Same as @code{pcie-aspm-ac} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38578
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-non-negative-integer start-charge-thresh-bat0"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38580
msgid "Percentage when battery 0 should begin charging.  Only supported on some laptops."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38585
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-non-negative-integer stop-charge-thresh-bat0"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38587
msgid "Percentage when battery 0 should stop charging.  Only supported on some laptops."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38592
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-non-negative-integer start-charge-thresh-bat1"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38594
msgid "Percentage when battery 1 should begin charging.  Only supported on some laptops."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38599
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-non-negative-integer stop-charge-thresh-bat1"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38601
msgid "Percentage when battery 1 should stop charging.  Only supported on some laptops."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38606
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string radeon-power-profile-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38609
msgid "Radeon graphics clock speed level.  Alternatives are low, mid, high, auto, default."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38611
msgid "Defaults to @samp{\"high\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38614
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string radeon-power-profile-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38616
msgid "Same as @code{radeon-power-ac} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38618
msgid "Defaults to @samp{\"low\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38621
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string radeon-dpm-state-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38624
msgid "Radeon dynamic power management method (DPM).  Alternatives are battery, performance."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38629
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string radeon-dpm-state-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38631
msgid "Same as @code{radeon-dpm-state-ac} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38633
msgid "Defaults to @samp{\"battery\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38636
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string radeon-dpm-perf-level-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38638
msgid "Radeon DPM performance level.  Alternatives are auto, low, high."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38640 guix-git/doc/guix.texi:38647
#: guix-git/doc/guix.texi:38721
msgid "Defaults to @samp{\"auto\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38643
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string radeon-dpm-perf-level-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38645
msgid "Same as @code{radeon-dpm-perf-ac} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38650
#, no-wrap
msgid "{@code{tlp-configuration} parameter} on-off-boolean wifi-pwr-on-ac?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38652
msgid "Wifi power saving mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38657
#, no-wrap
msgid "{@code{tlp-configuration} parameter} on-off-boolean wifi-pwr-on-bat?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38659
msgid "Same as @code{wifi-power-ac?} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38664
#, no-wrap
msgid "{@code{tlp-configuration} parameter} y-n-boolean wol-disable?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38666
msgid "Disable wake on LAN."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38671
#, no-wrap
msgid "{@code{tlp-configuration} parameter} non-negative-integer sound-power-save-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38674
msgid "Timeout duration in seconds before activating audio power saving on Intel HDA and AC97 devices.  A value of 0 disables power saving."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38679
#, no-wrap
msgid "{@code{tlp-configuration} parameter} non-negative-integer sound-power-save-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38681
msgid "Same as @code{sound-powersave-ac} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38686
#, no-wrap
msgid "{@code{tlp-configuration} parameter} y-n-boolean sound-power-save-controller?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38688
msgid "Disable controller in powersaving mode on Intel HDA devices."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38693
#, no-wrap
msgid "{@code{tlp-configuration} parameter} boolean bay-poweroff-on-bat?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38697
msgid "Enable optical drive in UltraBay/MediaBay on BAT mode.  Drive can be powered on again by releasing (and reinserting) the eject lever or by pressing the disc eject button on newer models."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38702
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string bay-device"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38704
msgid "Name of the optical drive device to power off."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38706
msgid "Defaults to @samp{\"sr0\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38709
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string runtime-pm-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38712
msgid "Runtime Power Management for PCI(e) bus devices.  Alternatives are on and auto."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38714
msgid "Defaults to @samp{\"on\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38717
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string runtime-pm-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38719
msgid "Same as @code{runtime-pm-ac} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38724
#, no-wrap
msgid "{@code{tlp-configuration} parameter} boolean runtime-pm-all?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38727
msgid "Runtime Power Management for all PCI(e) bus devices, except blacklisted ones."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38732
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-space-separated-string-list runtime-pm-blacklist"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38734
msgid "Exclude specified PCI(e) device addresses from Runtime Power Management."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38739
#, no-wrap
msgid "{@code{tlp-configuration} parameter} space-separated-string-list runtime-pm-driver-blacklist"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38742
msgid "Exclude PCI(e) devices assigned to the specified drivers from Runtime Power Management."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38745
#, no-wrap
msgid "{@code{tlp-configuration} parameter} boolean usb-autosuspend?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38747
msgid "Enable USB autosuspend feature."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38752
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-string usb-blacklist"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38754
msgid "Exclude specified devices from USB autosuspend."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38759
#, no-wrap
msgid "{@code{tlp-configuration} parameter} boolean usb-blacklist-wwan?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38761
msgid "Exclude WWAN devices from USB autosuspend."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38766
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-string usb-whitelist"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38769
msgid "Include specified devices into USB autosuspend, even if they are already excluded by the driver or via @code{usb-blacklist-wwan?}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38774
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-boolean usb-autosuspend-disable-on-shutdown?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38776
msgid "Enable USB autosuspend before shutdown."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38781
#, no-wrap
msgid "{@code{tlp-configuration} parameter} boolean restore-device-state-on-startup?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38784
msgid "Restore radio device state (bluetooth, wifi, wwan) from previous shutdown on system startup."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38789
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string cpu-energy-perf-policy-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38793
msgid "Set CPU energy/performance policy when on AC mode.  Possible values, in order of increasing power saving, are performance, balance_performance, default, balance_power and power."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38796
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string cpu-energy-perf-policy-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38800
msgid "Set CPU energy/performance policy when on BAT mode.  Possible values, in order of increasing power saving, are performance, balance_performance, default, balance_power and power."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:38803
#, no-wrap
msgid "thermald"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:38804
#, no-wrap
msgid "CPU frequency scaling with thermald"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:38805
#, no-wrap
msgid "Thermald daemon"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:38809
msgid "The @code{(gnu services pm)} module provides an interface to thermald, a CPU frequency scaling service which helps prevent overheating."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:38810
#, no-wrap
msgid "thermald-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:38815
msgid "This is the service type for @uref{https://01.org/linux-thermal-daemon/, thermald}, the Linux Thermal Daemon, which is responsible for controlling the thermal state of processors and preventing overheating."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:38817
#, no-wrap
msgid "{Data Type} thermald-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:38819
msgid "Data type representing the configuration of @code{thermald-service-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38821
#, no-wrap
msgid "@code{adaptive?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38824
msgid "Use @acronym{DPTF, Dynamic Power and Thermal Framework} adaptive tables when present."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38825
#, no-wrap
msgid "@code{ignore-cpuid-check?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38827
msgid "Ignore cpuid check for supported CPU models."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38828
#, no-wrap
msgid "@code{thermald} (default: @var{thermald})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38830
msgid "Package object of thermald."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:38831 guix-git/doc/guix.texi:38833
#, no-wrap
msgid "PowerTOP"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:38832
#, no-wrap
msgid "power consumption tuning with PowerTOP"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38839
msgid "The @code{(gnu services pm)} module also provides a service definition for @uref{https://01.org/powertop/, PowerTOP}, a power consumption analysis and tuning tool.  When started, it tunes Linux kernel settings to reduce power consumption."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:38840
#, fuzzy, no-wrap
#| msgid "Services"
msgid "powertop-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:38843
msgid "The service type for PowerTOP.  No configuration is necessary.  When the service starts, it executes @code{powertop --auto-tune}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:38846
#, fuzzy, no-wrap
#| msgid "Services"
msgid "(service powertop-service-type)\n"
msgstr "Servizi"

#. type: table
#: guix-git/doc/guix.texi:38850
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{powertop-configuration} fields are:"
msgstr "Documentazione"

#. type: deftypevr
#: guix-git/doc/guix.texi:38851
#, no-wrap
msgid "{@code{powertop-configuration} parameter} package powertop"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38854
msgid "The PowerTOP package.  Defaults to @code{powertop} in the @code{(gnu packages linux)} module"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:38866
msgid "The @code{(gnu services power)} module provides a service definition for @uref{http://www.apcupsd.org/, apcupsd}, a utility to interact with @acronym{APC, APC by Schneider Electric or formerly American Power Conversion Corporation} @acronym{UPS, Uninterruptible Power Supply} devices.  Apcupsd also works with some @acronym{OEM, Original Equipment Manufacturer}-branded products manufactured by APC."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:38867
#, fuzzy, no-wrap
#| msgid "Services"
msgid "apcupsd-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:38873
msgid "The service type for apcupsd.  For USB UPSes no configuration is necessary, however tweaking some fields to better suit your needs might be desirable.  The defaults are taken from the upstream configuration and they are not very conservative (for example, the default @code{battery-level} of 5% may be considered too low by some)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:38876
msgid "The default event handlers do send emails, read more in @ref{apcupsd-event-handlers}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:38879
#, fuzzy, no-wrap
#| msgid "Services"
msgid "(service apcupsd-service-type)\n"
msgstr "Servizi"

#. type: deftp
#: guix-git/doc/guix.texi:38882
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} apcupsd-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:38885
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{apcupsd-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:38887
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{apcupsd} (default: @code{apcupsd}) (type: package)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:38889
msgid "The @code{apcupsd} package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38890
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{shepherd-service-name} (default: @code{apcupsd}) (type: symbol)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:38893
msgid "The name of the shepherd service.  You can add the service multiple times with different names to manage multiple UPSes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38894 guix-git/doc/guix.texi:44977
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{auto-start?} (default: @code{#t}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:38896
msgid "Should the shepherd service auto-start?"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38897
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{pid-file} (default: @code{\"/var/run/apcupsd.pid\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:38899
msgid "The file name of the pid file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38900
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{debug-level} (default: @code{0}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:38904
msgid "The logging verbosity.  Bigger number means more logs.  The source code uses up to @code{300} as debug level value, so a value of @code{999} seems reasonable to enable all the logs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38905
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{run-dir} (default: @code{\"/var/run/apcupsd\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:38908
msgid "The directory containing runtime information.  You need to change this if you desire to run multiple instances of the daemon."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38913
msgid "Use this to give your UPS a name in log files and such.  This is particularly useful if you have multiple UPSes.  This does not set the EEPROM.  It should be 8 characters or less."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38914
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{cable} (default: @code{usb}) (type: enum-cable)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:38918
msgid "The type of a cable connecting the UPS to your computer.  Possible generic choices are @code{'simple}, @code{'smart}, @code{'ether} and @code{'usb}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38925
msgid "Alternatively, a specific cable model number may be used: @code{'940-0119A}, @code{'940-0127A}, @code{'940-0128A}, @code{'940-0020B}, @code{'940-0020C}, @code{'940-0023A}, @code{'940-0024B}, @code{'940-0024C}, @code{'940-1524C}, @code{'940-0024G}, @code{'940-0095A}, @code{'940-0095B}, @code{'940-0095C}, @code{'940-0625A}, @code{'M-04-02-2000}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38926
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{type} (default: @code{usb}) (type: enum-type)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:38928
msgid "The type of the UPS you have."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38930 guix-git/doc/guix.texi:38969
#, no-wrap
msgid "apcsmart"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38933
msgid "Newer serial character device, appropriate for SmartUPS models using a serial cable (not an USB)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38934 guix-git/doc/guix.texi:38972
#, no-wrap
msgid "usb"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38936
msgid "Most new UPSes are an USB."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38937 guix-git/doc/guix.texi:38976
#, no-wrap
msgid "net"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38941
msgid "Network link to a master apcupsd through apcupsd's Network Information Server.  This is used if the UPS powering your computer is connected to a different computer for monitoring."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38942 guix-git/doc/guix.texi:38979
#, no-wrap
msgid "snmp"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38944
msgid "SNMP network link to an SNMP-enabled UPS device."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38945 guix-git/doc/guix.texi:38987
#, no-wrap
msgid "netsnmp"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38949
msgid "Same as the SNMP above but requires use of the net-snmp library.  Unless you have a specific need for this old driver, you should use the @code{'snmp} instead."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38950 guix-git/doc/guix.texi:38990
#, no-wrap
msgid "dumb"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38952
msgid "An old serial character device for use with simple-signaling UPSes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38953 guix-git/doc/guix.texi:38993
#, no-wrap
msgid "pcnet"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38956
msgid "A PowerChute Network Shutdown protocol which can be used as an alternative to an SNMP with the AP9617 family of smart slot cards."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38957 guix-git/doc/guix.texi:39001
#, no-wrap
msgid "modbus"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38960
msgid "A serial device for use with newest SmartUPS models supporting the MODBUS protocol."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38963
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{device} (default: @code{\"\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:38967
msgid "For USB UPSes, usually you want to set this to an empty string (the default).  For other UPS types, you must specify an appropriate port or address."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38971 guix-git/doc/guix.texi:38992
msgid "Set to the appropriate @file{/dev/tty**} device."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38975
msgid "A null string setting enables auto-detection, which is the best choice for most installations."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38978
msgid "Set to @code{@var{hostname}:@var{port}}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38986
msgid "Set to @code{@var{hostname}:@var{port}:@var{vendor}:@var{community}}.  The @var{hostname} is the ip address or hostname of the UPS on the network.  The @var{vendor} can be can be \"APC\" or \"APC_NOTRAP\".  \"APC_NOTRAP\" will disable SNMP trap catching; you usually want \"APC\".  The @var{port} is usually 161.  The @var{community} is usually \"private\"."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38989
msgid "Same as the @code{'snmp}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39000
msgid "Set to @code{@var{ipaddr}:@var{username}:@var{passphrase}:@var{port}}.  The @var{ipaddr} is the IP address of the UPS management card.  The @var{username} and the @var{passphrase} are the credentials for which the card has been configured.  The @var{port} is the port number on which to listen for messages from the UPS, normally 3052.  If this parameter is empty or missing, the default of 3052 will be used."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39004
msgid "Set to the appropriate @file{/dev/tty**} device.  You can also leave it empty for MODBUS over USB or set to the serial number of the UPS."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39007
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{poll-time} (default: @code{60}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39013
msgid "The interval (in seconds) at which apcupsd polls the UPS for status.  This setting applies both to directly-attached UPSes (apcsmart, usb, dumb) and networked UPSes (net, snmp).  Lowering this setting will improve the apcupsd's responsiveness to certain events at the cost of higher CPU utilization."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39014
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{on-batery-delay} (default: @code{6}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39019
msgid "The time in seconds from when a power failure is detected until we react to it with an onbattery event.  The @code{'powerout} event will be triggered immediately when a power failure is detected.  However, the @code{'onbattery} event will be trigger only after this delay."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39020
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{battery-level} (default: @code{5}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39024
msgid "If during a power failure, the remaining battery percentage (as reported by the UPS) is below or equal to this value, the apcupsd will initiate a system shutdown."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:39029 guix-git/doc/guix.texi:39040
#: guix-git/doc/guix.texi:39051
msgid "@code{battery-level}, @code{remaining-minutes}, and @code{timeout} work in a conjunction, so the first that occurs will cause the initiation of a shutdown."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39031
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{remaining-minutes} (default: @code{3}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39035
msgid "If during a power failure, the remaining runtime in minutes (as calculated internally by the UPS) is below or equal to this value, apcupsd will initiate a system shutdown."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39042
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{timeout} (default: @code{0}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39046
msgid "If during a power failure, the UPS has run on batteries for this many seconds or longer, apcupsd will initiate a system shutdown.  The value of 0 disables this timer."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39053
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{annoy-interval} (default: @code{300}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39056
msgid "The time in seconds between annoying users (via the @code{'annoyme} event) to sign off prior to system shutdown.  0 disables."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39057
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{annoy-delay} (default: @code{60}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39060
msgid "The initial delay in seconds after a power failure before warning users to get off the system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39061
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{no-logon} (default: @code{disable}) (type: enum-no-logon)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39064
msgid "The condition which determines when users are prevented from logging in during a power failure."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39065
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{kill-delay} (default: @code{0}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39070
msgid "If this is non-zero, the apcupsd will continue running after a shutdown has been requested, and after the specified time in seconds attempt to kill the power.  This is for use on systems where apcupsd cannot regain control after a shutdown."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39071
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{net-server} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39073
msgid "If enabled, a network information server process will be started."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39074
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{net-server-ip} (default: @code{\"127.0.0.1\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39077
msgid "An IP address on which the NIS server will listen for incoming connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39078
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{net-server-port} (default: @code{3551}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39080
msgid "An IP port on which the NIS server will listen for incoming connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39081
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{net-server-events-file} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39084
msgid "If you want the last few EVENTS to be available over the network by the network information server, you must set this to a file name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39085
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{net-server-events-file-max-size} (default: @code{10}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39087
msgid "The maximum size of the events file in kilobytes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39088
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{class} (default: @code{standalone}) (type: enum-class)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39090
msgid "Normally standalone unless you share an UPS using an APC ShareUPS card."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39091
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{mode} (default: @code{disable}) (type: enum-mode)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39093
msgid "Normally disable unless you share an UPS using an APC ShareUPS card."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39094
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{stat-time} (default: @code{0}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39097
msgid "The time interval in seconds between writing the status file, 0 disables."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39098
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{log-stats} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39100
msgid "Also write the stats as a logs.  This generates a lot of output."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39101
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{data-time} (default: @code{0}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39104
msgid "The time interval in seconds between writing the data records to the log file, 0 disables."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39105
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{facility} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39107
msgid "The logging facility for the syslog."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39108
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{event-handlers} (type: apcupsd-event-handlers)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39110
msgid "Handlers for events produced by apcupsd."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:39115
msgid "apcupsd-event-handlers"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:39115
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} apcupsd-event-handlers"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:39118
msgid "For a description of the events please refer to @samp{man 8 apccontrol}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:39122
msgid "Each handler shall be a gexp.  It is spliced into the control script for the daemon.  In addition to the standard Guile programming environment, the following procedures and variables are also available:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39124
#, no-wrap
msgid "conf"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39126
#, fuzzy
#| msgid "Documentation"
msgid "Variable containing the file name of the configuration file."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:39127
#, no-wrap
msgid "powerfail-file"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39129
msgid "Variable containing the file name of the powerfail file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39130
#, no-wrap
msgid "cmd"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39132
msgid "The event currently being handled."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39135
#, fuzzy
#| msgid "Documentation"
msgid "The name of the UPS as specified in the configuration file."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:39136
#, no-wrap
msgid "connected?"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39141
msgid "Is @code{#t} if @command{apcupsd} is connected to the UPS via a serial port (or a USB port).  In most configurations, this will be the case.  In the case of a Slave machine where apcupsd is not directly connected to the UPS, this value will be @code{#f}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39142
#, no-wrap
msgid "powered?"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39146
msgid "Is @code{#t} if the computer on which @command{apcupsd} is running is powered by the UPS and @code{#f} if not.  At the moment, this value is unimplemented and always @code{#f}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39147
#, no-wrap
msgid "(err @var{fmt} @var{args...})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39149
msgid "Wrapper around @code{format} outputting to @code{(current-error-port)}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39150
#, no-wrap
msgid "(wall @var{fmt} @var{args...})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39152
msgid "Wrapper around @code{format} outputting via @command{wall}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39153
#, no-wrap
msgid "(apcupsd @var{args...})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39156
msgid "Call @command{apcupsd} while passing the correct configuration file and all the arguments."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39157
#, no-wrap
msgid "(mail-to-root @var{subject} @var{body})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39161
msgid "Send an email to the local administrator.  This procedure assumes the @command{sendmail} is located at @command{/run/privileged/bin/sendmail} (as would be the case with @code{opensmtpd-service-type})."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:39165
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{apcupsd-event-handlers} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:39167
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{modules} (type: gexp)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39169
msgid "Additional modules to import into the generated handler script."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39170
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{killpower} (type: gexp)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39172
msgid "The handler for the killpower event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39173
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{commfailure} (type: gexp)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39175 guix-git/doc/guix.texi:39178
msgid "The handler for the commfailure event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39176
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{commok} (type: gexp)"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:39179
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{powerout} (type: gexp)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39181
msgid "The handler for the powerout event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39182
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{onbattery} (type: gexp)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39184
msgid "The handler for the onbattery event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39185
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{offbattery} (type: gexp)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39187
msgid "The handler for the offbattery event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39188
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{mainsback} (type: gexp)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39190
msgid "The handler for the mainsback event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39191
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{failing} (type: gexp)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39193
msgid "The handler for the failing event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39194
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{timeout} (type: gexp)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39196
msgid "The handler for the timeout event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39197
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{loadlimit} (type: gexp)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39199
msgid "The handler for the loadlimit event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39200
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{runlimit} (type: gexp)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39202
msgid "The handler for the runlimit event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39203
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{doreboot} (type: gexp)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39205
msgid "The handler for the doreboot event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39206
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{doshutdown} (type: gexp)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39208
msgid "The handler for the doshutdown event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39209
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{annoyme} (type: gexp)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39211
msgid "The handler for the annoyme event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39212
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{emergency} (type: gexp)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39214
msgid "The handler for the emergency event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39215
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{changeme} (type: gexp)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39217
msgid "The handler for the changeme event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39218
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{remotedown} (type: gexp)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39220
msgid "The handler for the remotedown event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39221
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{startselftest} (type: gexp)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39223
msgid "The handler for the startselftest event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39224
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{endselftest} (type: gexp)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39226
msgid "The handler for the endselftest event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39227
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{battdetach} (type: gexp)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39229
msgid "The handler for the battdetach event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39230
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{battattach} (type: gexp)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39232
msgid "The handler for the battattach event."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:39241
msgid "The @code{(gnu services audio)} module provides a service to start MPD (the Music Player Daemon)."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:39242
#, no-wrap
msgid "mpd"
msgstr "mpd"

#. type: subsubheading
#: guix-git/doc/guix.texi:39243
#, no-wrap
msgid "Music Player Daemon"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:39248
msgid "The Music Player Daemon (MPD) is a service that can play music while being controlled from the local machine or over the network by a variety of clients."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:39256
msgid "The following example shows the simplest configuration to locally expose, via PulseAudio, a music collection kept at @file{/srv/music}, with @command{mpd} running as the default @samp{mpd} user.  This user will spawn its own PulseAudio daemon, which may compete for the sound card access with that of your own user.  In this configuration, you may have to stop the playback of your user audio applications to hear MPD's output and vice-versa."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:39261
#, no-wrap
msgid ""
"(service mpd-service-type\n"
"         (mpd-configuration\n"
"          (music-directory \"/srv/music\")))\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:39268
msgid "The music directory must be readable to the MPD user, by default, @samp{mpd}.  Permission problems will be reported via @samp{Permission denied} errors in the MPD logs, which appear in @file{/var/log/messages} by default."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:39272
msgid "Most MPD clients will trigger a database update upon connecting, but you can also use the @code{update} action do to so:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:39275
#, no-wrap
msgid "herd update mpd\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:39279
msgid "All the MPD configuration fields are documented below, and a more complex example follows."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:39280
#, no-wrap
msgid "mpd-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:39282
msgid "The service type for @command{mpd}"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:39285
#, no-wrap
msgid "{Data Type} mpd-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:39287
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{mpd-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:39289
#, no-wrap
msgid "@code{package} (default: @code{mpd}) (type: file-like)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39291
msgid "The MPD package."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39292
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{user} (type: user-account)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39294
msgid "The user to run mpd as."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39295
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{group} (type: user-group)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39297
msgid "The group to run mpd as."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39299
msgid "The default @code{%mpd-group} is a system group with name ``mpd''."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39304
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{environment-variables} (default: @code{'(\"PULSE_CLIENTCONFIG=/etc/pulse/client.conf\" \"PULSE_CONFIG=/etc/pulse/daemon.conf\")}) (type: list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39306
msgid "A list of strings specifying environment variables."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39311
msgid "The location of the log file.  Unless specified, logs are sent to the local syslog daemon.  Alternatively, a log file name can be specified, for example @file{/var/log/mpd.log}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39312
#, no-wrap
msgid "@code{log-level} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39316
msgid "Suppress any messages below this threshold.  The available values, in decreasing order of verbosity, are: @code{verbose}, @code{info}, @code{notice}, @code{warning} and @code{error}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39317
#, no-wrap
msgid "@code{music-directory} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39319 guix-git/doc/guix.texi:39322
msgid "The directory to scan for music files."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39320
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{music-dir} (type: maybe-string)"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:39323
#, no-wrap
msgid "@code{playlist-directory} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39325 guix-git/doc/guix.texi:39328
msgid "The directory to store playlists."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39326
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{playlist-dir} (type: maybe-string)"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:39329
#, no-wrap
msgid "@code{db-file} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39332
msgid "The location of the music database.  When left unspecified, @file{~/.cache/db} is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39333
#, no-wrap
msgid "@code{state-file} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39335
msgid "The location of the file that stores current MPD's state."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39336
#, no-wrap
msgid "@code{sticker-file} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39338
msgid "The location of the sticker database."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39339
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{default-port} (default: @code{6600}) (type: maybe-port)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39341
msgid "The default port to run mpd on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39342
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{endpoints} (type: maybe-list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39348
msgid "The addresses that mpd will bind to.  A port different from @var{default-port} may be specified, e.g.  @code{localhost:6602} and IPv6 addresses must be enclosed in square brackets when a different port is used.  To use a Unix domain socket, an absolute path or a path starting with @code{~} can be specified here."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39349
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{address} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39352
msgid "The address that mpd will bind to.  To use a Unix domain socket, an absolute path can be specified here."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39353
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{database} (type: maybe-mpd-plugin)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39355
#, fuzzy
#| msgid "Documentation"
msgid "MPD database plugin configuration."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:39356
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{partitions} (default: @code{'()}) (type: list-of-mpd-partition)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39358
msgid "List of MPD \"partitions\"."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39359
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{neighbors} (default: @code{'()}) (type: list-of-mpd-plugin)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39361
msgid "List of MPD neighbor plugin configurations."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39362
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{inputs} (default: @code{'()}) (type: list-of-mpd-plugin)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39364
msgid "List of MPD input plugin configurations."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39365
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{archive-plugins} (default: @code{'()}) (type: list-of-mpd-plugin)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39367
msgid "List of MPD archive plugin configurations."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39368
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{auto-update?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39371
msgid "Whether to automatically update the music database when files are changed in the @var{music-directory}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39372
#, no-wrap
msgid "@code{input-cache-size} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39374
msgid "MPD input cache size."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39375
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{decoders} (default: @code{'()}) (type: list-of-mpd-plugin)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39377
msgid "List of MPD decoder plugin configurations."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39378
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{resampler} (type: maybe-mpd-plugin)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39380
#, fuzzy
#| msgid "Documentation"
msgid "MPD resampler plugin configuration."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:39381
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{filters} (default: @code{'()}) (type: list-of-mpd-plugin)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39383
msgid "List of MPD filter plugin configurations."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39384
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{outputs} (type: list-of-mpd-plugin-or-output)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39387
msgid "The audio outputs that MPD can use.  By default this is a single output using pulseaudio."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39388
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{playlist-plugins} (default: @code{'()}) (type: list-of-mpd-plugin)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39390
msgid "List of MPD playlist plugin configurations."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39391 guix-git/doc/guix.texi:39412
#: guix-git/doc/guix.texi:39428 guix-git/doc/guix.texi:39484
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{extra-options} (default: @code{'()}) (type: alist)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39394
msgid "An association list of option symbols/strings to string values to be appended to the configuration."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:39399
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} mpd-plugin"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:39401
msgid "Data type representing a @command{mpd} plugin."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39403
#, no-wrap
msgid "@code{plugin} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39405
msgid "Plugin name."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39408
msgid "Name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39409
#, no-wrap
msgid "@code{enabled?} (type: maybe-boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39411
msgid "Whether the plugin is enabled/disabled."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39417
msgid "An association list of option symbols/strings to string values to be appended to the plugin configuration.  See @uref{https://mpd.readthedocs.io/en/latest/plugins.html,MPD plugin reference} for available options."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:39421
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} mpd-partition"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:39423
msgid "Data type representing a @command{mpd} partition."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39427
msgid "Partition name."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39433
msgid "An association list of option symbols/strings to string values to be appended to the partition configuration.  See @uref{https://mpd.readthedocs.io/en/latest/user.html#configuring-partitions,Configuring Partitions} for available options."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:39438
#, no-wrap
msgid "{Data Type} mpd-output"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:39440
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{mpd-output} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:39442
#, no-wrap
msgid "@code{name} (default: @code{\"MPD\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39444
msgid "The name of the audio output."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39445
#, no-wrap
msgid "@code{type} (default: @code{\"pulse\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39447
msgid "The type of audio output."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39448 guix-git/doc/guix.texi:45685
#, no-wrap
msgid "@code{enabled?} (default: @code{#t}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39453
msgid "Specifies whether this audio output is enabled when MPD is started.  By default, all audio outputs are enabled.  This is just the default setting when there is no state file; with a state file, the previous state is restored."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39454
#, no-wrap
msgid "@code{format} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39458
msgid "Force a specific audio format on output.  See @uref{https://mpd.readthedocs.io/en/latest/user.html#audio-output-format,Global Audio Format} for a more detailed description."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39459
#, no-wrap
msgid "@code{tags?} (default: @code{#t}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39463
msgid "If set to @code{#f}, then MPD will not send tags to this output.  This is only useful for output plugins that can receive tags, for example the @code{httpd} output plugin."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39464
#, no-wrap
msgid "@code{always-on?} (default: @code{#f}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39468
msgid "If set to @code{#t}, then MPD attempts to keep this audio output always open.  This may be useful for streaming servers, when you don’t want to disconnect all listeners even when playback is accidentally stopped."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39469
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{mixer-type} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39476
msgid "This field accepts a string that specifies which mixer should be used for this audio output: the @code{hardware} mixer, the @code{software} mixer, the @code{null} mixer (allows setting the volume, but with no effect; this can be used as a trick to implement an external mixer External Mixer) or no mixer (@code{none}).  When left unspecified, a @code{hardware} mixer is used for devices that support it."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39477
#, no-wrap
msgid "@code{replay-gain-handler} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39483
msgid "This field accepts a string that specifies how @uref{https://mpd.readthedocs.io/en/latest/user.html#replay-gain,Replay Gain} is to be applied.  @code{software} uses an internal software volume control, @code{mixer} uses the configured (hardware) mixer control and @code{none} disables replay gain on this audio output."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39487
msgid "An association list of option symbols/strings to string values to be appended to the audio output configuration."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:39494
msgid "The following example shows a configuration of @command{mpd} that configures some of its plugins and provides a HTTP audio streaming output."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:39518
#, no-wrap
msgid ""
"(service mpd-service-type\n"
"         (mpd-configuration\n"
"           (outputs\n"
"             (list (mpd-output\n"
"                     (name \"streaming\")\n"
"                     (type \"httpd\")\n"
"                     (mixer-type 'null)\n"
"                     (extra-options\n"
"                      `((encoder . \"vorbis\")\n"
"                        (port    . \"8080\"))))))\n"
"           (decoders\n"
"             (list (mpd-plugin\n"
"                     (plugin \"mikmod\")\n"
"                     (enabled? #f))\n"
"                   (mpd-plugin\n"
"                     (plugin \"openmpt\")\n"
"                     (enabled? #t)\n"
"                     (extra-options `((repeat-count . -1)\n"
"                                      (interpolation-filter . 1))))))\n"
"           (resampler (mpd-plugin\n"
"                        (plugin \"libsamplerate\")\n"
"                        (extra-options `((type . 0)))))))\n"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:39520
#, no-wrap
msgid "myMPD"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:39522
#, no-wrap
msgid "MPD, web interface"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:39523
#, fuzzy, no-wrap
#| msgid "Services"
msgid "myMPD service"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:39527
msgid "@uref{https://jcorporation.github.io/myMPD/, myMPD} is a web server frontend for MPD that provides a mobile friendly web client for MPD."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:39530
msgid "The following example shows a myMPD instance listening on port 80, with album cover caching disabled."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:39536
#, no-wrap
msgid ""
"(service mympd-service-type\n"
"         (mympd-configuration\n"
"          (port 80)\n"
"          (covercache-ttl 0)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:39538
#, fuzzy, no-wrap
#| msgid "Services"
msgid "mympd-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:39540
msgid "The service type for @command{mympd}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:39543
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} mympd-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:39545
msgid "Available @code{mympd-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39547
#, no-wrap
msgid "@code{package} (default: @code{mympd}) (type: file-like)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39549
msgid "The package object of the myMPD server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39554
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{user} (default: @code{%mympd-user}) (type: user-account)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39556
msgid "Owner of the @command{mympd} process."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39559
msgid "The default @code{%mympd-user} is a system user with the name ``mympd'', who is a part of the group @var{group} (see below)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39560
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{group} (default: @code{%mympd-group}) (type: user-group)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39562
msgid "Owner group of the @command{mympd} process."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39564
msgid "The default @code{%mympd-group} is a system group with name ``mympd''."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39564
#, no-wrap
msgid "@code{work-directory} (default: @code{\"/var/lib/mympd\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39566
msgid "Where myMPD will store its data."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39567
#, no-wrap
msgid "@code{cache-directory} (default: @code{\"/var/cache/mympd\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39569
msgid "Where myMPD will store its cache."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39570
#, no-wrap
msgid "@code{acl} (type: maybe-mympd-ip-acl)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39572
msgid "ACL to access the myMPD webserver."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39573
#, no-wrap
msgid "@code{covercache-ttl} (default: @code{31}) (type: maybe-integer)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39575
msgid "How long to keep cached covers, @code{0} disables cover caching."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39576
#, no-wrap
msgid "@code{http?} (default: @code{#t}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39578
msgid "HTTP support."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39579
#, no-wrap
msgid "@code{host} (default: @code{\"[::]\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39581
msgid "Host name to listen on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39582
#, no-wrap
msgid "@code{port} (default: @code{80}) (type: maybe-port)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39584
msgid "HTTP port to listen on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39585
#, no-wrap
msgid "@code{log-level} (default: @code{5}) (type: integer)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39588
msgid "How much detail to include in logs, possible values: @code{0} to @code{7}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39589
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{log-to} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39593
msgid "Where to send logs.  Unless specified, the service logs to the local syslog service under the @samp{daemon} facility.  Alternatively, a log file name can be specified, for example @file{/var/log/mympd.log}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39594
#, no-wrap
msgid "@code{lualibs} (default: @code{\"all\"}) (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39597
msgid "See @uref{https://jcorporation.github.io/myMPD/scripting/#lua-standard-libraries}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39598
#, no-wrap
msgid "@code{uri} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39601
msgid "Override URI to myMPD.  See @uref{https://github.com/jcorporation/myMPD/issues/950}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39602
#, no-wrap
msgid "@code{script-acl} (default: @code{(mympd-ip-acl (allow '(\"127.0.0.1\")))}) (type: maybe-mympd-ip-acl)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39604
msgid "ACL to access the myMPD script backend."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39607
msgid "SSL/TLS support."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39608
#, no-wrap
msgid "@code{ssl-port} (default: @code{443}) (type: maybe-port)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39610
msgid "Port to listen for HTTPS."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39611
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ssl-cert} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39613
msgid "Path to PEM encoded X.509 SSL/TLS certificate (public key)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39614
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ssl-key} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39616
msgid "Path to PEM encoded SSL/TLS private key."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39617
#, no-wrap
msgid "@code{pin-hash} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39620
msgid "SHA-256 hashed pin used by myMPD to control settings access by prompting a pin from the user."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39621
#, no-wrap
msgid "@code{save-caches?} (type: maybe-boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39623
msgid "Whether to preserve caches between service restarts."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:39629
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} mympd-ip-acl"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:39631
msgid "Available @code{mympd-ip-acl} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39633
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{allow} (default: @code{'()}) (type: list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39635
msgid "Allowed IP addresses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39636
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{deny} (default: @code{'()}) (type: list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39638
msgid "Disallowed IP addresses."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:39649
msgid "The @code{(gnu services virtualization)} module provides services for the libvirt and virtlog daemons, as well as other virtualization-related services."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:39650
#, no-wrap
msgid "Libvirt daemon"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:39657
msgid "@code{libvirtd} is the server side daemon component of the libvirt virtualization management system.  This daemon runs on host servers and performs required management tasks for virtualized guests.  To connect to the libvirt daemon as an unprivileged user, it must be added to the @samp{libvirt} group, as shown in the example below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:39658
#, no-wrap
msgid "libvirt-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:39661
msgid "This is the type of the @uref{https://libvirt.org, libvirt daemon}.  Its value must be a @code{libvirt-configuration}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:39672
#, no-wrap
msgid ""
"(users (cons (user-account\n"
"              (name \"user\")\n"
"              (group \"users\")\n"
"              (supplementary-groups '(\"libvirt\"\n"
"                                      \"audio\" \"video\" \"wheel\")))\n"
"             %base-user-accounts))\n"
"(service libvirt-service-type\n"
"         (libvirt-configuration\n"
"          (tls-port \"16555\")))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:39678
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} libvirt-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:39680
msgid "Available @code{libvirt-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39682
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{libvirt} (default: @code{libvirt}) (type: file-like)"
msgstr "Documentazione"

#. type: deftypevr
#: guix-git/doc/guix.texi:39684 guix-git/doc/guix.texi:39968
msgid "Libvirt package."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39685
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{qemu} (default: @code{qemu}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39687 guix-git/doc/guix.texi:40151
#: guix-git/doc/guix.texi:40209 guix-git/doc/guix.texi:40578
msgid "The QEMU package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39688
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{firmwares} (default: @code{(ovmf-x86-64)}) (type: list-of-file-likes)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39692
msgid "List of UEFI/BIOS firmware packages to make available.  Each firmware package should contain a @file{share/qemu/firmware/@var{NAME}.json} QEMU firmware metadata file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39693
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{listen-tls?} (default: @code{#t}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39697
msgid "Flag listening for secure TLS connections on the public TCP/IP port.  must set @code{listen} for this to have any effect.  It is necessary to setup a CA and issue server certificates before using this capability."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39698
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{listen-tcp?} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39704
msgid "Listen for unencrypted TCP connections on the public TCP/IP port.  must set @code{listen} for this to have any effect.  Using the TCP socket requires SASL authentication by default.  Only SASL mechanisms which support data encryption are allowed.  This is DIGEST_MD5 and GSSAPI (Kerberos5)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39705
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{tls-port} (default: @code{\"16514\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39708
msgid "Port for accepting secure TLS connections This can be a port number, or service name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39709
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{tcp-port} (default: @code{\"16509\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39712
msgid "Port for accepting insecure TCP connections This can be a port number, or service name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39713
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{listen-addr} (default: @code{\"0.0.0.0\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39715
msgid "IP address or hostname used for client connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39716
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{mdns-adv?} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39718
msgid "Flag toggling mDNS advertisement of the libvirt service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39719
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{mdns-name} (default: @code{\"Virtualization Host terra\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39722
msgid "Default mDNS advertisement name.  This must be unique on the immediate broadcast network."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39723
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{unix-sock-group} (default: @code{\"libvirt\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39726
msgid "UNIX domain socket group ownership.  This can be used to allow a trusted set of users access to management capabilities without becoming root."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39727
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{unix-sock-ro-perms} (default: @code{\"0777\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39730
msgid "UNIX socket permissions for the R/O socket.  This is used for monitoring VM status only."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39731
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{unix-sock-rw-perms} (default: @code{\"0770\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39735
msgid "UNIX socket permissions for the R/W socket.  Default allows only root.  If PolicyKit is enabled on the socket, the default will change to allow everyone (e.g., @code{\"0777\"})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39736
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{unix-sock-admin-perms} (default: @code{\"0777\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39740
msgid "UNIX socket permissions for the admin socket.  Default allows only owner (root), do not change it unless you are sure to whom you are exposing the access to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39741
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{unix-sock-dir} (default: @code{\"/var/run/libvirt\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39743
msgid "The directory in which sockets will be found/created."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39744
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{auth-unix-ro} (default: @code{\"polkit\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39747
msgid "Authentication scheme for UNIX read-only sockets.  By default socket permissions allow anyone to connect."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39748
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{auth-unix-rw} (default: @code{\"polkit\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39752
msgid "Authentication scheme for UNIX read-write sockets.  By default socket permissions only allow root.  If PolicyKit support was compiled into libvirt, the default will be to use 'polkit' auth."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39753
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{auth-tcp} (default: @code{\"sasl\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39757
msgid "Authentication scheme for TCP sockets.  If you don't enable SASL, then all TCP traffic is cleartext.  Don't do this outside of a development/test scenario."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39758
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{auth-tls} (default: @code{\"none\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39763
msgid "Authentication scheme for TLS sockets.  TLS sockets already have encryption provided by the TLS layer, and limited authentication is done by certificates.  It is possible to make use of any SASL authentication mechanism as well, by using @code{\"sasl\"} for this option"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39764
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{access-drivers} (default: @code{()}) (type: optional-list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39767
msgid "API access control scheme.  By default an authenticated user is allowed access to all APIs.  Access drivers can place restrictions on this."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39768
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{key-file} (default: @code{\"\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39771
msgid "Server key file path.  If set to an empty string, then no private key is loaded."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39772
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{cert-file} (default: @code{\"\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39775
msgid "Server key file path.  If set to an empty string, then no certificate is loaded."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39776
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ca-file} (default: @code{\"\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39779
msgid "Server key file path.  If set to an empty string, then no CA certificate is loaded."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39780
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{crl-file} (default: @code{\"\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39783
msgid "Certificate revocation list path.  If set to an empty string, then no CRL is loaded."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39784
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{tls-no-sanity-cert} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39788
msgid "Disable verification of our own server certificates.  When @command{libvirtd} starts it performs some sanity checks against its own certificates."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39789
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{tls-no-verify-cert} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39793
msgid "Disable verification of client certificates.  Client certificate verification is the primary authentication mechanism.  Any client which does not present a certificate signed by the CA will be rejected."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39794
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{tls-allowed-dn-list} (default: @code{()}) (type: optional-list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39796
msgid "Whitelist of allowed x509 Distinguished Name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39797
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{sasl-allowed-usernames} (default: @code{()}) (type: optional-list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39800
msgid "Whitelist of allowed SASL usernames.  The format for username depends on the SASL authentication mechanism."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39801
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{tls-priority} (default: @code{\"NORMAL\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39805
msgid "Override the compile time default TLS priority string.  The default is usually \"NORMAL\" unless overridden at build time.  Only set this if it is desired for libvirt to deviate from the global default settings."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39806
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-clients} (default: @code{5000}) (type: integer)"
msgstr "Documentazione"

#. type: deftypevr
#: guix-git/doc/guix.texi:39809 guix-git/doc/guix.texi:40070
msgid "Maximum number of concurrent client connections to allow over all sockets combined."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39810
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-queued-clients} (default: @code{1000}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39814
msgid "Maximum length of queue of connections waiting to be accepted by the daemon.  Note, that some protocols supporting re-transmission may obey this so that a later reattempt at connection succeeds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39815
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-anonymous-clients} (default: @code{20}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39818
msgid "Maximum length of queue of accepted but not yet authenticated clients.  Set this to zero to turn this feature off."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39819
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{min-workers} (default: @code{5}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39821
msgid "Number of workers to start up initially."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39822
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-workers} (default: @code{20}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39827
msgid "Maximum number of worker threads.  If the number of active clients exceeds @code{min-workers}, then more threads are spawned, up to @code{max_workers} limit.  Typically you'd want @code{max_workers} to equal maximum number of clients allowed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39828
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{prio-workers} (default: @code{5}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39832
msgid "Number of priority workers.  If all workers from above pool are stuck, some calls marked as high priority (notably domainDestroy) can be executed in this pool."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39833
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-requests} (default: @code{20}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39835
msgid "Total global limit on concurrent RPC calls."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39836
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-client-requests} (default: @code{5}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39840
msgid "Limit on concurrent requests from a single client connection.  To avoid one client monopolizing the server this should be a small fraction of the global max_requests and max_workers parameter."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39841
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{admin-min-workers} (default: @code{1}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39843
msgid "Same as @code{min-workers} but for the admin interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39844
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{admin-max-workers} (default: @code{5}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39846
msgid "Same as @code{max-workers} but for the admin interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39847
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{admin-max-clients} (default: @code{5}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39849
msgid "Same as @code{max-clients} but for the admin interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39850
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{admin-max-queued-clients} (default: @code{5}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39852
msgid "Same as @code{max-queued-clients} but for the admin interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39853
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{admin-max-client-requests} (default: @code{5}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39855
msgid "Same as @code{max-client-requests} but for the admin interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39856
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{log-level} (default: @code{3}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39864
msgid "Semi-deprecated option for the logging level: using the @code{log-filters} option instead is recommend, as it provides finer control.  The log level can be set to @code{4} for errors, @code{3} for warnings, @code{2} for information or @code{1} for debug.  Note that since @code{log-filters} and @code{log-outputs} take precedence over this option, you will need to also adjust their logging levels to avoid filtering out messages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39865
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{log-filters} (default: @code{\"3:remote 4:event\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39881
msgid "Logging filters.  A filter allows selecting a different logging level for a given category of logs.  The format for a filter is either @samp{@var{x}:@var{name}} or @samp{@var{x}:+@var{name}}, where name is a string which is matched against the category given in the @code{VIR_LOG_INIT()} at the top of each libvirt source file, e.g., @samp{\"remote\"}, @samp{\"qemu\"}, or @samp{\"util.json\"}.  @var{name} can be a substring of the full category name, in order to match multiple similar categories.  The optional @samp{+} prefix tells libvirt to log stack traces for each message matching @var{name}.  @var{x} is the log level value used to filter the associated message category.  @var{x} can be set to @samp{4} for errors, @samp{3} for warnings, @samp{2} for information, or @samp{1} for debug.  Multiple filters can be defined in a single filters statement, as space-separated values.  Since @code{log-outputs} also include a level filter, you may need to also adjust its value to see all the filtered messages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39882
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{log-outputs} (default: @code{\"3:syslog:libvirtd\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39893
msgid "Logging outputs.  An output is one of the places to save logging information.  The format for an output has the form @code{\"@var{x}:var@{output@}\"}, where @var{output} can be @samp{stderr}, @samp{syslog:@var{name}}, where @var{name} is the syslog @code{ident} value to use, or @samp{file:@var{file_name}}, where @var{file_name} is the file name of the file to output to.  @var{x} is the minimal level, which acts as a filter.  @var{x} can be set to @var{x} can be set to @samp{4} for errors, @samp{3} for warnings, @samp{2} for information, or @samp{1} for debug.  Multiple filters can be defined in a single filters statement, as space-separated values."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39894
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{audit-level} (default: @code{1}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39898
msgid "Modify the behavior of the auditing subsystem.  @samp{0} disables all auditing, samp@{1@} enables auditing only if enabled on thehost and @samp{2} enables auditing but exits if it is disabled on the host."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39899
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{audit-logging} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39901
msgid "Send audit messages via libvirt logging infrastructure."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39902
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{host-uuid} (default: @code{\"\"}) (type: optional-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39904
msgid "Host UUID.  UUID must not have all digits be the same."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39905
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{host-uuid-source} (default: @code{\"smbios\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39910
msgid "Source to read host UUID.  Use @code{\"smbios\"} to fetch the UUID via @code{dmidecode -s system-uuid}, or @code{\"machine-id\"} to fetch the UUID from @code{/etc/machine-id}.  If @code{dmidecode} does not provide a valid UUID a temporary UUID will be generated."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39911
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{keepalive-interval} (default: @code{5}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39916
msgid "A keepalive message is sent to a client after @code{keepalive_interval} seconds of inactivity to check if the client is still responding.  If set to @code{-1}, libvirtd won't send keepalive requests; however clients can still send them and the daemon will send responses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39917
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{keepalive-count} (default: @code{5}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39926
msgid "Maximum number of keepalive messages that are allowed to be sent to the client without getting any response before the connection is considered broken.  In other words, the connection is automatically closed approximately after @samp{keepalive_interval * (keepalive_count + 1)} seconds since the last message received from the client.  When @code{keepalive-count} is set to @code{0}, connections will be automatically closed after @code{keepalive-interval} seconds of inactivity without sending any keepalive messages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39927
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{admin-keepalive-interval} (default: @code{5}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39929 guix-git/doc/guix.texi:39932
msgid "Same as above but for admin interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39930
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{admin-keepalive-count} (default: @code{5}) (type: integer)"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:39933
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ovs-timeout} (default: @code{5}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:39937
msgid "Timeout for Open vSwitch calls.  The @code{ovs-vsctl} utility is used for the configuration and its timeout option is set by default to 5 seconds to avoid potential infinite waits blocking libvirt."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:39945
#, no-wrap
msgid "Virtlog daemon"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:39948
msgid "The virtlogd service is a server side daemon component of libvirt that is used to manage logs from virtual machine consoles."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:39954
msgid "This daemon is not used directly by libvirt client applications, rather it is called on their behalf by @code{libvirtd}.  By maintaining the logs in a standalone daemon, the main @code{libvirtd} daemon can be restarted without risk of losing logs.  The @code{virtlogd} daemon has the ability to re-exec()  itself upon receiving @code{SIGUSR1}, to allow live upgrades without downtime."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:39955
#, no-wrap
msgid "virtlog-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:39958
msgid "This is the type of the virtlog daemon.  Its value must be a @code{virtlog-configuration}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:39963
#, no-wrap
msgid ""
"(service virtlog-service-type\n"
"         (virtlog-configuration\n"
"          (max-clients 1000)))\n"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39966
#, no-wrap
msgid "{@code{libvirt} parameter} package libvirt"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39970
#, no-wrap
msgid "{@code{virtlog-configuration} parameter} integer log-level"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39972
msgid "Logging level.  4 errors, 3 warnings, 2 information, 1 debug."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39974
msgid "Defaults to @samp{3}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39977
#, no-wrap
msgid "{@code{virtlog-configuration} parameter} string log-filters"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39979
msgid "Logging filters."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39982
msgid "A filter allows to select a different logging level for a given category of logs The format for a filter is one of:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:39986
msgid "x:name"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:39989
msgid "x:+name"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39999
msgid "where @code{name} is a string which is matched against the category given in the @code{VIR_LOG_INIT()} at the top of each libvirt source file, e.g., \"remote\", \"qemu\", or \"util.json\" (the name in the filter can be a substring of the full category name, in order to match multiple similar categories), the optional \"+\" prefix tells libvirt to log stack trace for each message matching name, and @code{x} is the minimal level where matching messages should be logged:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:40003 guix-git/doc/guix.texi:40048
msgid "1: DEBUG"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:40006 guix-git/doc/guix.texi:40051
msgid "2: INFO"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:40009 guix-git/doc/guix.texi:40054
msgid "3: WARNING"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:40012 guix-git/doc/guix.texi:40057
msgid "4: ERROR"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:40017
msgid "Multiple filters can be defined in a single filters statement, they just need to be separated by spaces."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:40019
msgid "Defaults to @samp{\"3:remote 4:event\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:40022
#, no-wrap
msgid "{@code{virtlog-configuration} parameter} string log-outputs"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:40024
msgid "Logging outputs."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:40027
msgid "An output is one of the places to save logging information The format for an output can be:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40029
#, no-wrap
msgid "x:stderr"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40031
msgid "output goes to stderr"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40032
#, no-wrap
msgid "x:syslog:name"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40034
msgid "use syslog for the output and use the given name as the ident"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40035
#, no-wrap
msgid "x:file:file_path"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40037
msgid "output to a file, with the given filepath"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40038
#, no-wrap
msgid "x:journald"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40040
msgid "output to journald logging system"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:40044
msgid "In all case the x prefix is the minimal level, acting as a filter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:40062
msgid "Multiple outputs can be defined, they just need to be separated by spaces."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:40064
msgid "Defaults to @samp{\"3:stderr\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:40067
#, no-wrap
msgid "{@code{virtlog-configuration} parameter} integer max-clients"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:40072
msgid "Defaults to @samp{1024}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:40075
#, no-wrap
msgid "{@code{virtlog-configuration} parameter} integer max-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:40077
msgid "Maximum file size before rolling over."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:40079
msgid "Defaults to @samp{2MB}"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:40082
#, no-wrap
msgid "{@code{virtlog-configuration} parameter} integer max-backups"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:40084
msgid "Maximum number of backup files to keep."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:40086
msgid "Defaults to @samp{3}"
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:40090
msgid "transparent-emulation-qemu"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:40090
#, no-wrap
msgid "Transparent Emulation with QEMU"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:40092 guix-git/doc/guix.texi:40172
#, no-wrap
msgid "emulation"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:40093
#, no-wrap
msgid "binfmt_misc"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40101
msgid "@code{qemu-binfmt-service-type} provides support for transparent emulation of program binaries built for different architectures---e.g., it allows you to transparently execute an ARMv7 program on an x86_64 machine.  It achieves this by combining the @uref{https://www.qemu.org, QEMU} emulator and the @code{binfmt_misc} feature of the kernel Linux.  This feature only allows you to emulate GNU/Linux on a different architecture, but see below for GNU/Hurd support."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40102
#, no-wrap
msgid "qemu-binfmt-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40107
msgid "This is the type of the QEMU/binfmt service for transparent emulation.  Its value must be a @code{qemu-binfmt-configuration} object, which specifies the QEMU package to use as well as the architecture we want to emulated:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40112
#, no-wrap
msgid ""
"(service qemu-binfmt-service-type\n"
"         (qemu-binfmt-configuration\n"
"           (platforms (lookup-qemu-platforms \"arm\" \"aarch64\"))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40118
msgid "In this example, we enable transparent emulation for the ARM and aarch64 platforms.  Running @code{herd stop qemu-binfmt} turns it off, and running @code{herd start qemu-binfmt} turns it back on (@pxref{Invoking herd, the @command{herd} command,, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40120
#, no-wrap
msgid "{Data Type} qemu-binfmt-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40122
msgid "This is the configuration for the @code{qemu-binfmt} service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40124
#, no-wrap
msgid "@code{platforms} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40127
msgid "The list of emulated QEMU platforms.  Each item must be a @dfn{platform object} as returned by @code{lookup-qemu-platforms} (see below)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40130
msgid "For example, let's suppose you're on an x86_64 machine and you have this service:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40135
#, no-wrap
msgid ""
"(service qemu-binfmt-service-type\n"
"         (qemu-binfmt-configuration\n"
"           (platforms (lookup-qemu-platforms \"arm\"))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40138
msgid "You can run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:40141
#, no-wrap
msgid "guix build -s armhf-linux inkscape\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40148
msgid "and it will build Inkscape for ARMv7 @emph{as if it were a native build}, transparently using QEMU to emulate the ARMv7 CPU@.  Pretty handy if you'd like to test a package build for an architecture you don't have access to!"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40149
#, no-wrap
msgid "@code{qemu} (default: @code{qemu})"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:40154
#, no-wrap
msgid "{Procedure} lookup-qemu-platforms platforms@dots{}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:40159
msgid "Return the list of QEMU platform objects corresponding to @var{platforms}@dots{}.  @var{platforms} must be a list of strings corresponding to platform names, such as @code{\"arm\"}, @code{\"sparc\"}, @code{\"mips64el\"}, and so on."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:40161
#, no-wrap
msgid "{Procedure} qemu-platform? obj"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:40163
msgid "Return true if @var{obj} is a platform object."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:40165
#, no-wrap
msgid "{Procedure} qemu-platform-name platform"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:40167
msgid "Return the name of @var{platform}---a string such as @code{\"arm\"}."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:40170
#, no-wrap
msgid "QEMU Guest Agent"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40178
msgid "The QEMU guest agent provides control over the emulated system to the host.  The @code{qemu-guest-agent} service runs the agent on Guix guests.  To control the agent from the host, open a socket by invoking QEMU with the following arguments:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:40185
#, no-wrap
msgid ""
"qemu-system-x86_64 \\\n"
"\t-chardev socket,path=/tmp/qga.sock,server=on,wait=off,id=qga0 \\\n"
"\t-device virtio-serial \\\n"
"\t-device virtserialport,chardev=qga0,name=org.qemu.guest_agent.0 \\\n"
"\t...\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40189
msgid "This creates a socket at @file{/tmp/qga.sock} on the host.  Once the guest agent is running, you can issue commands with @code{socat}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:40194
#, no-wrap
msgid ""
"$ guix shell socat -- socat unix-connect:/tmp/qga.sock stdio\n"
"@{\"execute\": \"guest-get-host-name\"@}\n"
"@{\"return\": @{\"host-name\": \"guix\"@}@}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40198
msgid "See @url{https://wiki.qemu.org/Features/GuestAgent,QEMU guest agent documentation} for more options and commands."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40199
#, no-wrap
msgid "qemu-guest-agent-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40201
msgid "Service type for the QEMU guest agent service."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40203
#, no-wrap
msgid "{Data Type} qemu-guest-agent-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40205
msgid "Configuration for the @code{qemu-guest-agent} service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40207 guix-git/doc/guix.texi:40409
#: guix-git/doc/guix.texi:40576
#, no-wrap
msgid "@code{qemu} (default: @code{qemu-minimal})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40210
#, no-wrap
msgid "@code{device} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40213
msgid "File name of the device or socket the agent uses to communicate with the host.  If empty, QEMU uses a default file name."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:40216
#, no-wrap
msgid "Xen Guest Agent"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:40218
#, no-wrap
msgid "Xen"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:40219
#, no-wrap
msgid "Xen guest agent"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40223
msgid "The Xen guest agent allows a Xen host to control the emulated system.  The @code{xe-guest-utilities} service runs the agent on Guix guests."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40225
msgid "@url{https://github.com/xenserver/xe-guest-utilities, xe-guest-utilities} collects information about the running virtualized guest. This includes:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:40228
#, fuzzy
#| msgid "Documentation"
msgid "static information"
msgstr "Documentazione"

#. type: itemize
#: guix-git/doc/guix.texi:40231
msgid "The operating system running"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:40233
msgid "The Linux kernel version"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:40237
#, fuzzy
#| msgid "Documentation"
msgid "dynamic information"
msgstr "Documentazione"

#. type: itemize
#: guix-git/doc/guix.texi:40240
msgid "Network interfaces (devices) being added/removed"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:40242
msgid "Network connections being unplugged/plugged-in"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:40244
msgid "CPUs being added or removed"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:40246
msgid "The guest migrating, being paused/resumed, etc."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:40250
msgid "ephemeral information"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:40253
msgid "The amount of memory currently in-use and free"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:40255
msgid "The amount of disk-space used"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:40262
msgid "The default Linux-libre kernel that Guix ships already enables the necessary paravirtualization features for a guest.  There is nothing you need to do for the guest to support Xen's paravirtualization features."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:40266
msgid "The guest utilities are used to have the guest report information @emph{back} to the virtualizing host and support tasks that require cooperation between host and guest, like CPU hotplugging."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40268
#, fuzzy, no-wrap
#| msgid "Services"
msgid "xe-guest-utilities-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:40270
msgid "Service type for the Xen guest utilities service."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40272
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} xe-guest-utilities-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:40274
#, fuzzy
#| msgid "Documentation"
msgid "Configuration for the @code{xe-guest-utilities} service."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:40276
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{package} (default: @code{xe-guest-utilities})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:40278
msgid "The Xen guest utilities package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40279
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{pid-file} (default: @code{\"/var/run/xe-daemon.pid\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:40281
msgid "Name of the file holding the PID of @code{xe-deamon}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40282
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{log-file} (default: @code{\"/var/log/xe-guest-utilities.log\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:40284
msgid "Name of the @code{xe-guest-utilities} log file."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40293
msgid "@code{xe-guest-utilities} is the standard guest utilities used for Xen guests.  More recently the Xen Project has been working to develop @code{xen-guest-agent}, a modern drop-in replacement for @code{xe-guest-utilities}.  While they nearly have feature-parity, @code{xen-guest-agent} currently lacks some of the features of its predecessor, namely disk metrics and ``PV drivers version''."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40294
#, fuzzy, no-wrap
#| msgid "Services"
msgid "xen-guest-agent-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:40296
msgid "Service type for the Xen guest agent service."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40298
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} xen-guest-agent-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:40300
#, fuzzy
#| msgid "Documentation"
msgid "Configuration for the @code{xen-guest-agent} service."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:40302
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{package} (default: @code{xen-guest-agent})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:40304
msgid "The Xen guest agent package to use."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:40309
msgid "@code{xe-guest-utilities} and @code{xen-guest-agent} are mutually exclusive."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:40313
#, fuzzy
#| msgid "File Systems"
msgid "build-vm"
msgstr "Filesystem"

#. type: subsubheading
#: guix-git/doc/guix.texi:40313
#, no-wrap
msgid "Virtual Build Machines"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:40315
#, no-wrap
msgid "virtual build machines"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:40316
#, no-wrap
msgid "build VMs"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:40317
#, no-wrap
msgid "VMs, for offloading"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40322
msgid "@dfn{Virtual build machines} or ``build VMs'' let you offload builds to a fully controlled environment.  ``How can it be more controlled than regular builds? And why would it be useful?'', you ask.  Good questions."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40332
msgid "Builds spawned by @code{guix-daemon} indeed run in a controlled environment; specifically the daemon spawns build processes in separate namespaces and in a chroot, such as that build processes only see their declared dependencies and a well-defined subset of the file system tree (@pxref{Build Environment Setup}, for details).  A few aspects of the environments are not controlled though: the operating system kernel, the CPU model, and the date.  Most of the time, these aspects have no impact on the build process: the level of isolation @code{guix-daemon} provides is ``good enough''."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:40333
#, no-wrap
msgid "time traps"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40343
msgid "However, there are occasionally cases where those aspects @emph{do} influence the build process.  A typical example is @dfn{time traps}: build processes that stop working after a certain date@footnote{The most widespread example of time traps is test suites that involve checking the expiration date of a certificate.  Such tests exists in TLS implementations such as OpenSSL and GnuTLS, but also in high-level software such as Python.}.  Another one is software that optimizes for the CPU microarchitecture it is built on or, worse, bugs that manifest only on specific CPUs."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40346
msgid "To address that, @code{virtual-build-machine-service-type} lets you add a virtual build machine on your system, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40349
#, no-wrap
msgid ""
"(use-modules (gnu services virtualization))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40354
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services (append (list (service virtual-build-machine-service-type))\n"
"                    %base-services)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40359
msgid "By default, you have to explicitly start the build machine when you need it, at which point builds may be offloaded to it (@pxref{Daemon Offload Setup}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:40362
#, no-wrap
msgid "herd start build-vm\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40370
msgid "With the default setting shown above, the build VM runs with its clock set to a date several years in the past, and on a CPU model that corresponds to that date---a model possibly older than that of your machine.  This lets you rebuild today software from the past that would otherwise fail to build due to a time trap or other issues in its build process.  You can view the VM's config like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:40373
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "herd configuration build-vm\n"
msgstr "Documentazione"

#. type: Plain text
#: guix-git/doc/guix.texi:40376
msgid "You can configure the build VM, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40384
#, no-wrap
msgid ""
"(service virtual-build-machine-service-type\n"
"         (virtual-build-machine\n"
"          (cpu \"Westmere\")\n"
"          (cpu-count 8)\n"
"          (memory-size (* 1 1024))\n"
"          (auto-start? #t)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40387
msgid "The available options are shown below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40388
#, fuzzy, no-wrap
#| msgid "Services"
msgid "virtual-build-machine-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:40392
msgid "This is the service type to run @dfn{virtual build machines}.  Virtual build machines are configured so that builds are offloaded to them when they are running."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40394
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} virtual-build-machine"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:40397
msgid "This is the data type specifying the configuration of a build machine.  It contains the fields below:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40399
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{name} (default: @code{'build-vm})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:40402
msgid "The name of this build VM.  It is used to construct the name of its Shepherd service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40403 guix-git/doc/guix.texi:47375
#, no-wrap
msgid "image"
msgstr "image"

#. type: table
#: guix-git/doc/guix.texi:40408
msgid "The image of the virtual machine (@pxref{System Images}).  This notably specifies the virtual disk size and the operating system running into it (@pxref{operating-system Reference}).  The default value is a minimal operating system image."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40411
msgid "The QEMU package to run the image."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:40412
#, no-wrap
msgid "cpu"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40414
msgid "The CPU model being emulated as a string denoting a model known to QEMU."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40417
msgid "The default value is a model that matches @code{date} (see below).  To see what CPU models are available, run, for example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:40420
#, no-wrap
msgid "qemu-system-x86_64 -cpu help\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40422
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{cpu-count} (default: @code{4})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:40424
msgid "The number of CPUs emulated by the virtual machine."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40425
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{memory-size} (default: @code{2048})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:40427
msgid "Size in mebibytes (MiB) of the virtual machine's main memory (RAM)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40428
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{date} (default: a few years ago)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:40431
msgid "Date inside the virtual machine when it starts; this must be a SRFI-19 date object (@pxref{SRFI-19 Date,,, guile, GNU Guile Reference Manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40432
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{port-forwardings} (default: 11022 and 11004)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:40435
msgid "TCP ports of the virtual machine forwarded to the host.  By default, the SSH and secrets ports are forwarded into the host."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40439
msgid "List of system types supported by the build VM---e.g., @code{\"x86_64-linux\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40440
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{auto-start?} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:40442
msgid "Whether to start the virtual machine when the system boots."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40447
msgid "In the next section, you'll find a variant on this theme: GNU/Hurd virtual machines!"
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:40449
msgid "hurd-vm"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:40449
#, no-wrap
msgid "The Hurd in a Virtual Machine"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:40452
#, no-wrap
msgid "the Hurd"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:40453
#, no-wrap
msgid "childhurd"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40461
msgid "Service @code{hurd-vm} provides support for running GNU/Hurd in a virtual machine (VM), a so-called @dfn{childhurd}.  This service is meant to be used on GNU/Linux and the given GNU/Hurd operating system configuration is cross-compiled.  The virtual machine is a Shepherd service that can be referred to by the names @code{hurd-vm} and @code{childhurd} and be controlled with commands such as:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:40465
#, no-wrap
msgid ""
"herd start hurd-vm\n"
"herd stop childhurd\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40469
msgid "When the service is running, you can view its console by connecting to it with a VNC client, for example with:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:40472
#, no-wrap
msgid "guix shell tigervnc-client -- vncviewer localhost:5900\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40482
msgid "The default configuration (see @code{hurd-vm-configuration} below)  spawns a secure shell (SSH) server in your GNU/Hurd system, which QEMU (the virtual machine emulator) redirects to port 10022 on the host.  By default, the service enables @dfn{offloading} such that the host @code{guix-daemon} automatically offloads GNU/Hurd builds to the childhurd (@pxref{Daemon Offload Setup}).  This is what happens when running a command like the following one, where @code{i586-gnu} is the system type of 32-bit GNU/Hurd:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:40485
#, no-wrap
msgid "guix build emacs-minimal -s i586-gnu\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40494
msgid "The childhurd is volatile and stateless: it starts with a fresh root file system every time you restart it.  By default though, all the files under @file{/etc/childhurd} on the host are copied as is to the root file system of the childhurd when it boots.  This allows you to initialize ``secrets'' inside the VM: SSH host keys, authorized substitute keys, and so on---see the explanation of @code{secret-root} below."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40501
msgid "You will probably find it useful to create an account for you in the GNU/Hurd virtual machine and to authorize logins with your SSH key.  To do that, you can define the GNU/Hurd system in the usual way (@pxref{Using the Configuration System}), and then pass that operating system as the @code{os} field of @code{hurd-vm-configuration}, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40507
#, no-wrap
msgid ""
"(define childhurd-os\n"
"  ;; Definition of my GNU/Hurd system, derived from the default one.\n"
"  (operating-system\n"
"    (inherit %hurd-vm-operating-system)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40515
#, no-wrap
msgid ""
"    ;; Add a user account.\n"
"    (users (cons (user-account\n"
"                  (name \"charlie\")\n"
"                  (comment \"This is me!\")\n"
"                  (group \"users\")\n"
"                  (supplementary-groups '(\"wheel\"))) ;for 'sudo'\n"
"                 %base-user-accounts))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40531
#, no-wrap
msgid ""
"    (services\n"
"     ;; Modify the SSH configuration to allow login as \"root\"\n"
"     ;; and as \"charlie\" using public key authentication.\n"
"     (modify-services (operating-system-user-services\n"
"                       %hurd-vm-operating-system)\n"
"       (openssh-service-type\n"
"        config => (openssh-configuration\n"
"                   (inherit config)\n"
"                   (authorized-keys\n"
"                    `((\"root\"\n"
"                       ,(local-file\n"
"                         \"/home/charlie/.ssh/id_rsa.pub\"))\n"
"                      (\"charlie\"\n"
"                       ,(local-file\n"
"                         \"/home/charlie/.ssh/id_rsa.pub\"))))))))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40541
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services\n"
"    ;; Add the 'hurd-vm' service, configured to use the\n"
"    ;; operating system configuration above.\n"
"    (append (list (service hurd-vm-service-type\n"
"                           (hurd-vm-configuration\n"
"                             (os %childhurd-os))))\n"
"            %base-services)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40545
msgid "That's it! The remainder of this section provides the reference of the service configuration."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40546
#, no-wrap
msgid "hurd-vm-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40552
msgid "This is the type of the Hurd in a Virtual Machine service.  Its value must be a @code{hurd-vm-configuration} object, which specifies the operating system (@pxref{operating-system Reference}) and the disk size for the Hurd Virtual Machine, the QEMU package to use as well as the options for running it."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40560
#, no-wrap
msgid ""
"(service hurd-vm-service-type\n"
"         (hurd-vm-configuration\n"
"          (disk-size (* 5000 (expt 2 20))) ;5G\n"
"          (memory-size 1024)))             ;1024MiB\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40564
msgid "would create a disk image big enough to build GNU@tie{}Hello, with some extra memory."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40566
#, no-wrap
msgid "{Data Type} hurd-vm-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40569
msgid "The data type representing the configuration for @code{hurd-vm-service-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40571
#, no-wrap
msgid "@code{os} (default: @var{%hurd-vm-operating-system})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40575
msgid "The operating system to instantiate.  This default is bare-bones with a permissive OpenSSH secure shell daemon listening on port 2222 (@pxref{Networking Services, @code{openssh-service-type}})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40579
#, no-wrap
msgid "@code{image} (default: @var{hurd-vm-disk-image})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40582
msgid "The image object representing the disk image of this virtual machine (@pxref{System Images})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40583
#, no-wrap
msgid "@code{disk-size} (default: @code{'guess})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40585
msgid "The size of the disk image."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40586
#, no-wrap
msgid "@code{memory-size} (default: @code{512})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40588
msgid "The memory size of the Virtual Machine in mebibytes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40589
#, no-wrap
msgid "@code{options} (default: @code{'(\"--snapshot\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40591
msgid "The extra options for running QEMU."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40596
msgid "If set, a non-zero positive integer used to parameterize Childhurd instances.  It is appended to the service's name, e.g. @code{childhurd1}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40597
#, no-wrap
msgid "@code{net-options} (default: @var{hurd-vm-net-options})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40599
msgid "The procedure used to produce the list of QEMU networking options."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40601
msgid "By default, it produces"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40609
#, no-wrap
msgid ""
"'(\"--device\" \"rtl8139,netdev=net0\"\n"
"  \"--netdev\" (string-append\n"
"              \"user,id=net0,\"\n"
"              \"hostfwd=tcp:127.0.0.1:@var{secrets-port}-:1004,\"\n"
"              \"hostfwd=tcp:127.0.0.1:@var{ssh-port}-:2222,\"\n"
"              \"hostfwd=tcp:127.0.0.1:@var{vnc-port}-:5900\"))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40612
msgid "with forwarded ports:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:40617
#, no-wrap
msgid ""
"@var{secrets-port}: @code{(+ 11004 (* 1000 @var{ID}))}\n"
"@var{ssh-port}: @code{(+ 10022 (* 1000 @var{ID}))}\n"
"@var{vnc-port}: @code{(+ 15900 (* 1000 @var{ID}))}\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:40619
#, no-wrap
msgid "childhurd, offloading"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:40620
#, no-wrap
msgid "Hurd, offloading"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40621
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{offloading?} (default: @code{#t})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:40623
msgid "Whether to automatically set up offloading of builds to the childhurd."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40627
msgid "When enabled, this lets you run GNU/Hurd builds on the host and have them transparently offloaded to the VM, for instance when running a command like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:40630
#, no-wrap
msgid "guix build coreutils -s i586-gnu\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40633
msgid "This option automatically sets up offloading like so:"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:40640
msgid "Authorizing the childhurd's key on the host so that the host accepts build results coming from the childhurd, which can be done like so (@pxref{Invoking guix archive, @command{guix archive --authorize}}, for more on that)."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:40644
msgid "Creating a user account called @code{offloading} dedicated to offloading in the childhurd."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:40648
msgid "Creating an SSH key pair on the host and making it an authorized key of the @code{offloading} account in the childhurd."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:40652
msgid "Adding the childhurd to @file{/etc/guix/machines.scm} (@pxref{Daemon Offload Setup})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40654
#, no-wrap
msgid "@code{secret-root} (default: @file{/etc/childhurd})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40659
msgid "The root directory with out-of-band secrets to be installed into the childhurd once it runs.  Childhurds are volatile which means that on every startup, secrets such as the SSH host keys and Guix signing key are recreated."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40663
msgid "If the @file{/etc/childhurd} directory does not exist, the @code{secret-service} running in the Childhurd will be sent an empty list of secrets."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40666
msgid "By default, the service automatically populates @file{/etc/childhurd} with the following non-volatile secrets, unless they already exist:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:40676
#, no-wrap
msgid ""
"/etc/childhurd/etc/guix/acl\n"
"/etc/childhurd/etc/guix/signing-key.pub\n"
"/etc/childhurd/etc/guix/signing-key.sec\n"
"/etc/childhurd/etc/ssh/authorized_keys.d/offloading\n"
"/etc/childhurd/etc/ssh/ssh_host_ed25519_key\n"
"/etc/childhurd/etc/ssh/ssh_host_ecdsa_key\n"
"/etc/childhurd/etc/ssh/ssh_host_ed25519_key.pub\n"
"/etc/childhurd/etc/ssh/ssh_host_ecdsa_key.pub\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40685
msgid "Note that by default the VM image is volatile, i.e., once stopped the contents are lost.  If you want a stateful image instead, override the configuration's @code{image} and @code{options} without the @code{--snapshot} flag using something along these lines:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40691
#, no-wrap
msgid ""
"(service hurd-vm-service-type\n"
"         (hurd-vm-configuration\n"
"          (image   (const \"/out/of/store/writable/hurd.img\"))\n"
"          (options '())))\n"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:40693
#, no-wrap
msgid "Ganeti"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:40695
#, no-wrap
msgid "ganeti"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:40702
msgid "This service is considered experimental.  Configuration options may be changed in a backwards-incompatible manner, and not all features have been thorougly tested.  Users of this service are encouraged to share their experience at @email{guix-devel@@gnu.org}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40712
msgid "Ganeti is a virtual machine management system.  It is designed to keep virtual machines running on a cluster of servers even in the event of hardware failures, and to make maintenance and recovery tasks easy.  It consists of multiple services which are described later in this section.  In addition to the Ganeti service, you will need the OpenSSH service (@pxref{Networking Services, @code{openssh-service-type}}), and update the @file{/etc/hosts} file (@pxref{Service Reference, @code{hosts-service-type}}) with the cluster name and address (or use a DNS server)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40717
msgid "All nodes participating in a Ganeti cluster should have the same Ganeti and @file{/etc/hosts} configuration.  Here is an example configuration for a Ganeti cluster node that supports multiple storage backends, and installs the @code{debootstrap} and @code{guix} @dfn{OS providers}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40724
#, no-wrap
msgid ""
"(use-package-modules virtualization)\n"
"(use-service-modules base ganeti networking ssh)\n"
"(operating-system\n"
"  ;; @dots{}\n"
"  (host-name \"node1\")\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40745
#, no-wrap
msgid ""
"  ;; Install QEMU so we can use KVM-based instances, and LVM, DRBD and Ceph\n"
"  ;; in order to use the \"plain\", \"drbd\" and \"rbd\" storage backends.\n"
"  (packages (append (map specification->package\n"
"                         '(\"qemu\" \"lvm2\" \"drbd-utils\" \"ceph\"\n"
"                           ;; Add the debootstrap and guix OS providers.\n"
"                           \"ganeti-instance-guix\" \"ganeti-instance-debootstrap\"))\n"
"                    %base-packages))\n"
"  (services\n"
"   (append (list (service static-networking-service-type\n"
"                          (list (static-networking\n"
"                                 (addresses\n"
"                                  (list (network-address\n"
"                                         (device \"eth0\")\n"
"                                         (value \"192.168.1.201/24\"))))\n"
"                                 (routes\n"
"                                  (list (network-route\n"
"                                         (destination \"default\")\n"
"                                         (gateway \"192.168.1.254\"))))\n"
"                                 (name-servers '(\"192.168.1.252\"\n"
"                                                 \"192.168.1.253\")))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40750
#, no-wrap
msgid ""
"                 ;; Ganeti uses SSH to communicate between nodes.\n"
"                 (service openssh-service-type\n"
"                          (openssh-configuration\n"
"                           (permit-root-login 'prohibit-password)))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40758
#, no-wrap
msgid ""
"                 (simple-service 'ganeti-hosts-entries hosts-service-type\n"
"                                 (list\n"
"                                   (host \"192.168.1.200\" \"ganeti.example.com\")\n"
"                                   (host \"192.168.1.201\" \"node1.example.com\"\n"
"                                         '(\"node1\"))\n"
"                                   (host \"192.168.1.202\" \"node2.example.com\"\n"
"                                         '(\"node2\"))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40768
#, no-wrap
msgid ""
"                 (service ganeti-service-type\n"
"                          (ganeti-configuration\n"
"                           ;; This list specifies allowed file system paths\n"
"                           ;; for storing virtual machine images.\n"
"                           (file-storage-paths '(\"/srv/ganeti/file-storage\"))\n"
"                           ;; This variable configures a single \"variant\" for\n"
"                           ;; both Debootstrap and Guix that works with KVM.\n"
"                           (os %default-ganeti-os))))\n"
"           %base-services)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40776
msgid "Users are advised to read the @url{https://docs.ganeti.org/docs/ganeti/3.0/html/admin.html,Ganeti administrators guide} to learn about the various cluster options and day-to-day operations.  There is also a @url{https://guix.gnu.org/blog/2020/running-a-ganeti-cluster-on-guix/,blog post} describing how to configure and initialize a small cluster."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40777
#, no-wrap
msgid "ganeti-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40780
msgid "This is a service type that includes all the various services that Ganeti nodes should run."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40785
msgid "Its value is a @code{ganeti-configuration} object that defines the package to use for CLI operations, as well as configuration for the various daemons.  Allowed file storage paths and available guest operating systems are also configured through this data type."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40787
#, no-wrap
msgid "{Data Type} ganeti-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40789
msgid "The @code{ganeti} service takes the following configuration options:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40791 guix-git/doc/guix.texi:41041
#: guix-git/doc/guix.texi:41091 guix-git/doc/guix.texi:41121
#: guix-git/doc/guix.texi:41148 guix-git/doc/guix.texi:41180
#: guix-git/doc/guix.texi:41233 guix-git/doc/guix.texi:41253
#: guix-git/doc/guix.texi:41279 guix-git/doc/guix.texi:41312
#: guix-git/doc/guix.texi:41355
#, no-wrap
msgid "@code{ganeti} (default: @code{ganeti})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40796
msgid "The @code{ganeti} package to use.  It will be installed to the system profile and make @command{gnt-cluster}, @command{gnt-instance}, etc available.  Note that the value specified here does not affect the other services as each refer to a specific @code{ganeti} package (see below)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40797
#, no-wrap
msgid "@code{noded-configuration} (default: @code{(ganeti-noded-configuration)})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:40798
#, no-wrap
msgid "@code{confd-configuration} (default: @code{(ganeti-confd-configuration)})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:40799
#, no-wrap
msgid "@code{wconfd-configuration} (default: @code{(ganeti-wconfd-configuration)})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:40800
#, no-wrap
msgid "@code{luxid-configuration} (default: @code{(ganeti-luxid-configuration)})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:40801
#, no-wrap
msgid "@code{rapi-configuration} (default: @code{(ganeti-rapi-configuration)})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:40802
#, no-wrap
msgid "@code{kvmd-configuration} (default: @code{(ganeti-kvmd-configuration)})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:40803
#, no-wrap
msgid "@code{mond-configuration} (default: @code{(ganeti-mond-configuration)})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:40804
#, no-wrap
msgid "@code{metad-configuration} (default: @code{(ganeti-metad-configuration)})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:40805
#, no-wrap
msgid "@code{watcher-configuration} (default: @code{(ganeti-watcher-configuration)})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:40806
#, no-wrap
msgid "@code{cleaner-configuration} (default: @code{(ganeti-cleaner-configuration)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40811
msgid "These options control the various daemons and cron jobs that are distributed with Ganeti.  The possible values for these are described in detail below.  To override a setting, you must use the configuration type for that service:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40821
#, no-wrap
msgid ""
"(service ganeti-service-type\n"
"         (ganeti-configuration\n"
"          (rapi-configuration\n"
"           (ganeti-rapi-configuration\n"
"            (interface \"eth1\"))))\n"
"          (watcher-configuration\n"
"           (ganeti-watcher-configuration\n"
"            (rapi-ip \"10.0.0.1\"))))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40823
#, no-wrap
msgid "@code{file-storage-paths} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40825
msgid "List of allowed directories for file storage backend."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40826
#, no-wrap
msgid "@code{hooks} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40829
msgid "When set, this should be a file-like object containing a directory with @url{https://docs.ganeti.org/docs/ganeti/3.0/html/hooks.html,cluster execution hooks}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40830
#, no-wrap
msgid "@code{os} (default: @code{%default-ganeti-os})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40832
msgid "List of @code{<ganeti-os>} records."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40836
msgid "In essence @code{ganeti-service-type} is shorthand for declaring each service individually:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40847
#, no-wrap
msgid ""
"(service ganeti-noded-service-type)\n"
"(service ganeti-confd-service-type)\n"
"(service ganeti-wconfd-service-type)\n"
"(service ganeti-luxid-service-type)\n"
"(service ganeti-kvmd-service-type)\n"
"(service ganeti-mond-service-type)\n"
"(service ganeti-metad-service-type)\n"
"(service ganeti-watcher-service-type)\n"
"(service ganeti-cleaner-service-type)\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40851
msgid "Plus a service extension for @code{etc-service-type} that configures the file storage backend and OS variants."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40854
#, no-wrap
msgid "{Data Type} ganeti-os"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40857
msgid "This data type is suitable for passing to the @code{os} parameter of @code{ganeti-configuration}.  It takes the following parameters:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40863
msgid "The name for this OS provider.  It is only used to specify where the configuration ends up.  Setting it to ``debootstrap'' will create @file{/etc/ganeti/instance-debootstrap}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40864
#, no-wrap
msgid "@code{extension} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40867
msgid "The file extension for variants of this OS type.  For example @file{.conf} or @file{.scm}.  It will be appended to the variant file name if set."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40868
#, no-wrap
msgid "@code{variants} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40872
msgid "This must be either a list of @code{ganeti-os-variant} objects for this OS, or a ``file-like'' object (@pxref{G-Expressions, file-like objects})  representing the variants directory."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40876
msgid "To use the Guix OS provider with variant definitions residing in a local directory instead of declaring individual variants (see @var{guix-variants} below), you can do:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40882
#, no-wrap
msgid ""
"(ganeti-os\n"
" (name \"guix\")\n"
" (variants (local-file \"ganeti-guix-variants\"\n"
"                       #:recursive? #true)))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40888
msgid "Note that you will need to maintain the @file{variants.list} file (see @code{@url{https://docs.ganeti.org/docs/ganeti/3.0/man/ganeti-os-interface.html, ganeti-os-interface(7)}})  manually in this case."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40892
#, no-wrap
msgid "{Data Type} ganeti-os-variant"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40895
msgid "This is the data type for a Ganeti OS variant.  It takes the following parameters:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40899
msgid "The name of this variant."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:40900
#, no-wrap
msgid "configuration"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40902
msgid "A configuration file for this variant."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40905
#, no-wrap
msgid "%default-debootstrap-hooks"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40907
msgid "This variable contains hooks to configure networking and the GRUB bootloader."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40909
#, no-wrap
msgid "%default-debootstrap-extra-pkgs"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40911
msgid "This variable contains a list of packages suitable for a fully-virtualized guest."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40913
#, no-wrap
msgid "{Data Type} debootstrap-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40916
msgid "This data type creates configuration files suitable for the debootstrap OS provider."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40918
#, no-wrap
msgid "@code{hooks} (default: @code{%default-debootstrap-hooks})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40922
msgid "When not @code{#f}, this must be a G-expression that specifies a directory with scripts that will run when the OS is installed.  It can also be a list of @code{(name . file-like)} pairs.  For example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40925
#, no-wrap
msgid "`((99-hello-world . ,(plain-file \"#!/bin/sh\\necho Hello, World\")))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40930
msgid "That will create a directory with one executable named @code{99-hello-world} and run it every time this variant is installed.  If set to @code{#f}, hooks in @file{/etc/ganeti/instance-debootstrap/hooks} will be used, if any."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40930
#, no-wrap
msgid "@code{proxy} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40932
msgid "Optional HTTP proxy to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40932 guix-git/doc/guix.texi:43529
#, no-wrap
msgid "@code{mirror} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40935
msgid "The Debian mirror.  Typically something like @code{http://ftp.no.debian.org/debian}.  The default varies depending on the distribution."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40935
#, no-wrap
msgid "@code{arch} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40938
msgid "The dpkg architecture.  Set to @code{armhf} to debootstrap an ARMv7 instance on an AArch64 host.  Default is to use the current system architecture."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40938
#, no-wrap
msgid "@code{suite} (default: @code{\"stable\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40941
msgid "When set, this must be a Debian distribution ``suite'' such as @code{buster} or @code{focal}.  If set to @code{#f}, the default for the OS provider is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40941
#, no-wrap
msgid "@code{extra-pkgs} (default: @code{%default-debootstrap-extra-pkgs})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40944
msgid "List of extra packages that will get installed by dpkg in addition to the minimal system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40944
#, no-wrap
msgid "@code{components} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40947
msgid "When set, must be a list of Debian repository ``components''.  For example @code{'(\"main\" \"contrib\")}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40947
#, no-wrap
msgid "@code{generate-cache?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40949
msgid "Whether to automatically cache the generated debootstrap archive."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40949
#, no-wrap
msgid "@code{clean-cache} (default: @code{14})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40952
msgid "Discard the cache after this amount of days.  Use @code{#f} to never clear the cache."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40952
#, no-wrap
msgid "@code{partition-style} (default: @code{'msdos})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40955
msgid "The type of partition to create.  When set, it must be one of @code{'msdos}, @code{'none} or a string."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40955
#, no-wrap
msgid "@code{partition-alignment} (default: @code{2048})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40957
msgid "Alignment of the partition in sectors."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:40960
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Procedure} debootstrap-variant name configuration"
msgstr "Documentazione"

#. type: deffn
#: guix-git/doc/guix.texi:40963
msgid "This is a helper procedure that creates a @code{ganeti-os-variant} record.  It takes two parameters: a name and a @code{debootstrap-configuration} object."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:40965
#, no-wrap
msgid "{Procedure} debootstrap-os variants@dots{}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:40968
msgid "This is a helper procedure that creates a @code{ganeti-os} record.  It takes a list of variants created with @code{debootstrap-variant}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:40970
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Procedure} guix-variant name configuration"
msgstr "Documentazione"

#. type: deffn
#: guix-git/doc/guix.texi:40975
msgid "This is a helper procedure that creates a @code{ganeti-os-variant} record for use with the Guix OS provider.  It takes a name and a G-expression that returns a ``file-like'' (@pxref{G-Expressions, file-like objects}) object containing a Guix System configuration."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:40977
#, no-wrap
msgid "{Procedure} guix-os variants@dots{}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:40980
msgid "This is a helper procedure that creates a @code{ganeti-os} record.  It takes a list of variants produced by @code{guix-variant}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40982
#, no-wrap
msgid "%default-debootstrap-variants"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40986
msgid "This is a convenience variable to make the debootstrap provider work ``out of the box'' without users having to declare variants manually.  It contains a single debootstrap variant with the default configuration:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40991
#, no-wrap
msgid ""
"(list (debootstrap-variant\n"
"       \"default\"\n"
"       (debootstrap-configuration)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40994
#, no-wrap
msgid "%default-guix-variants"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40998
msgid "This is a convenience variable to make the Guix OS provider work without additional configuration.  It creates a virtual machine that has an SSH server, a serial console, and authorizes the Ganeti hosts SSH keys."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:41004
#, no-wrap
msgid ""
"(list (guix-variant\n"
"       \"default\"\n"
"       (file-append ganeti-instance-guix\n"
"                    \"/share/doc/ganeti-instance-guix/examples/dynamic.scm\")))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:41010
msgid "Users can implement support for OS providers unbeknownst to Guix by extending the @code{ganeti-os} and @code{ganeti-os-variant} records appropriately.  For example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:41019
#, no-wrap
msgid ""
"(ganeti-os\n"
" (name \"custom\")\n"
" (extension \".conf\")\n"
" (variants\n"
"  (list (ganeti-os-variant\n"
"         (name \"foo\")\n"
"         (configuration (plain-file \"bar\" \"this is fine\"))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:41024
msgid "That creates @file{/etc/ganeti/instance-custom/variants/foo.conf} which points to a file in the store with contents @code{this is fine}.  It also creates @file{/etc/ganeti/instance-custom/variants/variants.list} with contents @code{foo}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:41027
msgid "Obviously this may not work for all OS providers out there.  If you find the interface limiting, please reach out to @email{guix-devel@@gnu.org}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:41030
msgid "The rest of this section documents the various services that are included by @code{ganeti-service-type}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41031
#, no-wrap
msgid "ganeti-noded-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41035
msgid "@command{ganeti-noded} is the daemon responsible for node-specific functions within the Ganeti system.  The value of this service must be a @code{ganeti-noded-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41037
#, no-wrap
msgid "{Data Type} ganeti-noded-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41039
msgid "This is the configuration for the @code{ganeti-noded} service."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41043 guix-git/doc/guix.texi:41093
#: guix-git/doc/guix.texi:41123 guix-git/doc/guix.texi:41150
#: guix-git/doc/guix.texi:41182 guix-git/doc/guix.texi:41235
#: guix-git/doc/guix.texi:41255 guix-git/doc/guix.texi:41281
#: guix-git/doc/guix.texi:41314
msgid "The @code{ganeti} package to use for this service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41044
#, no-wrap
msgid "@code{port} (default: @code{1811})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41046
msgid "The TCP port on which the node daemon listens for network requests."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41047 guix-git/doc/guix.texi:41097
#: guix-git/doc/guix.texi:41189 guix-git/doc/guix.texi:41259
#, no-wrap
msgid "@code{address} (default: @code{\"0.0.0.0\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41050
msgid "The network address that the daemon will bind to.  The default address means bind to all available addresses."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41054
msgid "When this is set, it must be a specific network interface (e.g.@: @code{eth0})  that the daemon will bind to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41055 guix-git/doc/guix.texi:41197
#, no-wrap
msgid "@code{max-clients} (default: @code{20})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41059
msgid "This sets a limit on the maximum number of simultaneous client connections that the daemon will handle.  Connections above this count are accepted, but no responses will be sent until enough connections have closed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41060 guix-git/doc/guix.texi:41202
#, no-wrap
msgid "@code{ssl?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41064
msgid "Whether to use SSL/TLS to encrypt network communications.  The certificate is automatically provisioned by the cluster and can be rotated with @command{gnt-cluster renew-crypto}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41065 guix-git/doc/guix.texi:41205
#, no-wrap
msgid "@code{ssl-key} (default: @file{\"/var/lib/ganeti/server.pem\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41067 guix-git/doc/guix.texi:41207
msgid "This can be used to provide a specific encryption key for TLS communications."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41068 guix-git/doc/guix.texi:41208
#, no-wrap
msgid "@code{ssl-cert} (default: @file{\"/var/lib/ganeti/server.pem\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41070 guix-git/doc/guix.texi:41210
msgid "This can be used to provide a specific certificate for TLS communications."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41074 guix-git/doc/guix.texi:41214
msgid "When true, the daemon performs additional logging for debugging purposes.  Note that this will leak encryption details to the log files, use with caution."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41078
#, no-wrap
msgid "ganeti-confd-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41084
msgid "@command{ganeti-confd} answers queries related to the configuration of a Ganeti cluster.  The purpose of this daemon is to have a highly available and fast way to query cluster configuration values.  It is automatically active on all @dfn{master candidates}.  The value of this service must be a @code{ganeti-confd-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41087
#, no-wrap
msgid "{Data Type} ganeti-confd-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41089
msgid "This is the configuration for the @code{ganeti-confd} service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41094
#, no-wrap
msgid "@code{port} (default: @code{1814})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41096
msgid "The UDP port on which to listen for network requests."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41099
msgid "Network address that the daemon will bind to."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41102 guix-git/doc/guix.texi:41131
#: guix-git/doc/guix.texi:41158 guix-git/doc/guix.texi:41238
#: guix-git/doc/guix.texi:41265 guix-git/doc/guix.texi:41291
msgid "When true, the daemon performs additional logging for debugging purposes."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41106
#, no-wrap
msgid "ganeti-wconfd-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41112
msgid "@command{ganeti-wconfd} is the daemon that has authoritative knowledge about the cluster configuration and is the only entity that can accept changes to it.  All jobs that need to modify the configuration will do so by sending appropriate requests to this daemon.  It only runs on the @dfn{master node} and will automatically disable itself on other nodes."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41115
msgid "The value of this service must be a @code{ganeti-wconfd-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41117
#, no-wrap
msgid "{Data Type} ganeti-wconfd-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41119
msgid "This is the configuration for the @code{ganeti-wconfd} service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41124 guix-git/doc/guix.texi:41151
#, no-wrap
msgid "@code{no-voting?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41128
msgid "The daemon will refuse to start if the majority of cluster nodes does not agree that it is running on the master node.  Set to @code{#t} to start even if a quorum can not be reached (dangerous, use with caution)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41135
#, no-wrap
msgid "ganeti-luxid-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41140
msgid "@command{ganeti-luxid} is a daemon used to answer queries related to the configuration and the current live state of a Ganeti cluster.  Additionally, it is the authoritative daemon for the Ganeti job queue.  Jobs can be submitted via this daemon and it schedules and starts them."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41142
msgid "It takes a @code{ganeti-luxid-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41144
#, no-wrap
msgid "{Data Type} ganeti-luxid-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41146
msgid "This is the configuration for the @code{ganeti-luxid} service."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41155
msgid "The daemon will refuse to start if it cannot verify that the majority of cluster nodes believes that it is running on the master node.  Set to @code{#t} to ignore such checks and start anyway (this can be dangerous)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41162
#, no-wrap
msgid "ganeti-rapi-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41166
msgid "@command{ganeti-rapi} provides a remote API for Ganeti clusters.  It runs on the master node and can be used to perform cluster actions programmatically via a JSON-based RPC protocol."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41172
msgid "Most query operations are allowed without authentication (unless @var{require-authentication?} is set), whereas write operations require explicit authorization via the @file{/var/lib/ganeti/rapi/users} file.  See the @url{https://docs.ganeti.org/docs/ganeti/3.0/html/rapi.html, Ganeti Remote API documentation} for more information."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41174
msgid "The value of this service must be a @code{ganeti-rapi-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41176
#, no-wrap
msgid "{Data Type} ganeti-rapi-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41178
msgid "This is the configuration for the @code{ganeti-rapi} service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41183
#, no-wrap
msgid "@code{require-authentication?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41185
msgid "Whether to require authentication even for read-only operations."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41186
#, no-wrap
msgid "@code{port} (default: @code{5080})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41188
msgid "The TCP port on which to listen to API requests."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41192
msgid "The network address that the service will bind to.  By default it listens on all configured addresses."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41196
msgid "When set, it must specify a specific network interface such as @code{eth0} that the daemon will bind to."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41201
msgid "The maximum number of simultaneous client requests to handle.  Further connections are allowed, but no responses are sent until enough connections have closed."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41204
msgid "Whether to use SSL/TLS encryption on the RAPI port."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41218
#, no-wrap
msgid "ganeti-kvmd-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41226
msgid "@command{ganeti-kvmd} is responsible for determining whether a given KVM instance was shut down by an administrator or a user.  Normally Ganeti will restart an instance that was not stopped through Ganeti itself.  If the cluster option @code{user_shutdown} is true, this daemon monitors the @code{QMP} socket provided by QEMU and listens for shutdown events, and marks the instance as @dfn{USER_down} instead of @dfn{ERROR_down} when it shuts down gracefully by itself."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41228
msgid "It takes a @code{ganeti-kvmd-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41230
#, no-wrap
msgid "{Data Type} ganeti-kvmd-configuration"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41242
#, no-wrap
msgid "ganeti-mond-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41246
msgid "@command{ganeti-mond} is an optional daemon that provides Ganeti monitoring functionality.  It is responsible for running data collectors and publish the collected information through a HTTP interface."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41248
msgid "It takes a @code{ganeti-mond-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41250
#, no-wrap
msgid "{Data Type} ganeti-mond-configuration"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41256
#, no-wrap
msgid "@code{port} (default: @code{1815})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41258 guix-git/doc/guix.texi:41284
msgid "The port on which the daemon will listen."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41262
msgid "The network address that the daemon will bind to.  By default it binds to all available interfaces."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41269
#, no-wrap
msgid "ganeti-metad-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41272
msgid "@command{ganeti-metad} is an optional daemon that can be used to provide information about the cluster to instances or OS install scripts."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41274
msgid "It takes a @code{ganeti-metad-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41276
#, no-wrap
msgid "{Data Type} ganeti-metad-configuration"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41288
msgid "If set, the daemon will bind to this address only.  If left unset, the behavior depends on the cluster configuration."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41295
#, no-wrap
msgid "ganeti-watcher-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41303
msgid "@command{ganeti-watcher} is a script designed to run periodically and ensure the health of a cluster.  It will automatically restart instances that have stopped without Ganeti's consent, and repairs DRBD links in case a node has rebooted.  It also archives old cluster jobs and restarts Ganeti daemons that are not running.  If the cluster parameter @code{ensure_node_health} is set, the watcher will also shutdown instances and DRBD devices if the node it is running on is declared offline by known master candidates."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41305
msgid "It can be paused on all nodes with @command{gnt-cluster watcher pause}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41307
msgid "The service takes a @code{ganeti-watcher-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41309
#, no-wrap
msgid "{Data Type} ganeti-watcher-configuration"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41315
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{schedule} (default: @code{\"*/5 * * * *\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:41320
msgid "When to run the script, expressed either as a string in traditional cron syntax or as a gexp representing a Shepherd calendar event (@pxref{Timers,,, shepherd, The GNU Shepherd Manual}).  The default is every five minutes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41321
#, no-wrap
msgid "@code{rapi-ip} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41324
msgid "This option needs to be specified only if the RAPI daemon is configured to use a particular interface or address.  By default the cluster address is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41325
#, no-wrap
msgid "@code{job-age} (default: @code{(* 6 3600)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41328
msgid "Archive cluster jobs older than this age, specified in seconds.  The default is 6 hours.  This keeps @command{gnt-job list} manageable."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41329
#, no-wrap
msgid "@code{verify-disks?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41333
msgid "If this is @code{#f}, the watcher will not try to repair broken DRBD links automatically.  Administrators will need to use @command{gnt-cluster verify-disks} manually instead."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41336
msgid "When @code{#t}, the script performs additional logging for debugging purposes."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41340
#, no-wrap
msgid "ganeti-cleaner-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41348
msgid "@command{ganeti-cleaner} is a script designed to run periodically and remove old files from the cluster.  This service type controls two @dfn{cron jobs}: one intended for the master node that permanently purges old cluster jobs, and one intended for every node that removes expired X509 certificates, keys, and outdated @command{ganeti-watcher} information.  Like all Ganeti services, it is safe to include even on non-master nodes as it will disable itself as necessary."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41350
msgid "It takes a @code{ganeti-cleaner-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41352
#, no-wrap
msgid "{Data Type} ganeti-cleaner-configuration"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41357
msgid "The @code{ganeti} package to use for the @command{gnt-cleaner} command."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41358
#, no-wrap
msgid "@code{master-schedule} (default: @code{\"45 1 * * *\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41361
msgid "How often to run the master cleaning job.  The default is once per day, at 01:45:00."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41362
#, no-wrap
msgid "@code{node-schedule} (default: @code{\"45 2 * * *\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41365
msgid "How often to run the node cleaning job.  The default is once per day, at 02:45:00."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:41379
msgid "The @code{(gnu services version-control)} module provides a service to allow remote access to local Git repositories.  There are three options: the @code{git-daemon-service-type}, which provides access to repositories via the @code{git://} unsecured TCP-based protocol, extending the @code{nginx} web server to proxy some requests to @code{git-http-backend}, or providing a web interface with @code{cgit-service-type}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41380
#, no-wrap
msgid "git-daemon-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41383
msgid "Type for a service that runs @command{git daemon}, a simple TCP server to expose repositories over the Git protocol for anonymous access."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41388
msgid "The value for this service type is a @code{<git-daemon-configuration>} record, by default it allows read-only access to exported@footnote{By creating the magic file @file{git-daemon-export-ok} in the repository directory.} repositories under @file{/srv/git}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41390
#, no-wrap
msgid "{Data Type} git-daemon-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41392
msgid "Data type representing the configuration for @code{git-daemon-service-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41394
#, no-wrap
msgid "@code{package} (default: @code{git})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41396 guix-git/doc/guix.texi:41456
msgid "Package object of the Git distributed version control system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41397 guix-git/doc/guix.texi:41460
#, no-wrap
msgid "@code{export-all?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41400
msgid "Whether to allow access for all Git repositories, even if they do not have the @file{git-daemon-export-ok} file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41401
#, no-wrap
msgid "@code{base-path} (default: @file{/srv/git})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41407
msgid "Whether to remap all the path requests as relative to the given path.  If you run @command{git daemon} with @code{(base-path \"/srv/git\")} on @samp{example.com}, then if you later try to pull @indicateurl{git://example.com/hello.git}, git daemon will interpret the path as @file{/srv/git/hello.git}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41408
#, no-wrap
msgid "@code{user-path} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41416
msgid "Whether to allow @code{~user} notation to be used in requests.  When specified with empty string, requests to @indicateurl{git://host/~alice/foo} is taken as a request to access @code{foo} repository in the home directory of user @code{alice}.  If @code{(user-path \"@var{path}\")} is specified, the same request is taken as a request to access @file{@var{path}/foo} repository in the home directory of user @code{alice}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41417
#, no-wrap
msgid "@code{listen} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41420
msgid "Whether to listen on specific IP addresses or hostnames, defaults to all."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41421
#, no-wrap
msgid "@code{port} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41423
msgid "Whether to listen on an alternative port, which defaults to 9418."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41424
#, no-wrap
msgid "@code{whitelist} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41426
msgid "If not empty, only allow access to this list of directories."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41430
msgid "Extra options that will be passed to @command{git daemon}.@footnote{Run @command{man git-daemon} for more information.}"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:41444
msgid "The @code{git://} protocol lacks authentication.  When you pull from a repository fetched via @code{git://}, you don't know whether the data you receive was modified or is even coming from the specified host, and your connection is subject to eavesdropping.  It's better to use an authenticated and encrypted transport, such as @code{https}.  Although Git allows you to serve repositories using unsophisticated file-based web servers, there is a faster protocol implemented by the @code{git-http-backend} program.  This program is the back-end of a proper Git web service.  It is designed to sit behind a FastCGI proxy.  @xref{Web Services}, for more on running the necessary @code{fcgiwrap} daemon."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:41447
msgid "Guix has a separate configuration data type for serving Git repositories over HTTP."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41448
#, no-wrap
msgid "{Data Type} git-http-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41452
msgid "Data type representing the configuration for a future @code{git-http-service-type}; can currently be used to configure Nginx through @code{git-http-nginx-location-configuration}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41454
#, no-wrap
msgid "@code{package} (default: @var{git})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41457
#, no-wrap
msgid "@code{git-root} (default: @file{/srv/git})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41459
msgid "Directory containing the Git repositories to expose to the world."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41463
msgid "Whether to expose access for all Git repositories in @var{git-root}, even if they do not have the @file{git-daemon-export-ok} file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41464
#, no-wrap
msgid "@code{uri-path} (default: @samp{/git/})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41469
msgid "Path prefix for Git access.  With the default @samp{/git/} prefix, this will map @indicateurl{http://@var{server}/git/@var{repo}.git} to @file{/srv/git/@var{repo}.git}.  Requests whose URI paths do not begin with this prefix are not passed on to this Git instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41470
#, no-wrap
msgid "@code{fcgiwrap-socket} (default: @code{127.0.0.1:9000})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41473
msgid "The socket on which the @code{fcgiwrap} daemon is listening.  @xref{Web Services}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:41480
msgid "There is no @code{git-http-service-type}, currently; instead you can create an @code{nginx-location-configuration} from a @code{git-http-configuration} and then add that location to a web server."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:41481
#, no-wrap
msgid "{Procedure} git-http-nginx-location-configuration @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:41486
msgid "[config=(git-http-configuration)] Compute an @code{nginx-location-configuration} that corresponds to the given Git http configuration.  An example nginx service definition to serve the default @file{/srv/git} over HTTPS might be:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:41503
#, no-wrap
msgid ""
"(service nginx-service-type\n"
"         (nginx-configuration\n"
"          (server-blocks\n"
"           (list\n"
"            (nginx-server-configuration\n"
"             (listen '(\"443 ssl\"))\n"
"             (server-name \"git.my-host.org\")\n"
"             (ssl-certificate\n"
"              \"/etc/certs/git.my-host.org/fullchain.pem\")\n"
"             (ssl-certificate-key\n"
"              \"/etc/certs/git.my-host.org/privkey.pem\")\n"
"             (locations\n"
"              (list\n"
"               (git-http-nginx-location-configuration\n"
"                (git-http-configuration (uri-path \"/\"))))))))))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:41510
msgid "This example assumes that you are using Let's Encrypt to get your TLS certificate.  @xref{Certificate Services}.  The default @code{certbot} service will redirect all HTTP traffic on @code{git.my-host.org} to HTTPS@.  You will also need to add an @code{fcgiwrap} proxy to your system services.  @xref{Web Services}."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:41512
#, no-wrap
msgid "Cgit Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:41514
#, no-wrap
msgid "Cgit service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:41515
#, no-wrap
msgid "Git, web interface"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:41518
msgid "@uref{https://git.zx2c4.com/cgit/, Cgit} is a web frontend for Git repositories written in C."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:41521
msgid "The following example will configure the service with default values.  By default, Cgit can be accessed on port 80 (@code{http://localhost:80})."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:41524
#, no-wrap
msgid "(service cgit-service-type)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:41528
msgid "The @code{file-object} type designates either a file-like object (@pxref{G-Expressions, file-like objects}) or a string."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:41532
msgid "Available @code{cgit-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41533
#, no-wrap
msgid "{@code{cgit-configuration} parameter} package package"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41535
msgid "The CGIT package."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41538
#, no-wrap
msgid "{@code{cgit-configuration} parameter} nginx-server-configuration-list nginx"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41540
msgid "NGINX configuration."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41543
#, no-wrap
msgid "{@code{cgit-configuration} parameter} file-object about-filter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41546
msgid "Specifies a command which will be invoked to format the content of about pages (both top-level and for each repository)."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41551
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string agefile"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41554
msgid "Specifies a path, relative to each repository path, which can be used to specify the date and time of the youngest commit in the repository."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41559
#, no-wrap
msgid "{@code{cgit-configuration} parameter} file-object auth-filter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41562
msgid "Specifies a command that will be invoked for authenticating repository access."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41567
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string branch-sort"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41570
msgid "Flag which, when set to @samp{age}, enables date ordering in the branch ref list, and when set @samp{name} enables ordering by branch name."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41572
msgid "Defaults to @samp{\"name\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41575
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string cache-root"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41577
msgid "Path used to store the cgit cache entries."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41579
msgid "Defaults to @samp{\"/var/cache/cgit\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41582
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer cache-static-ttl"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41585
msgid "Number which specifies the time-to-live, in minutes, for the cached version of repository pages accessed with a fixed SHA1."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41587 guix-git/doc/guix.texi:42031
msgid "Defaults to @samp{-1}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41590
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer cache-dynamic-ttl"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41593
msgid "Number which specifies the time-to-live, in minutes, for the cached version of repository pages accessed without a fixed SHA1."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41598
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer cache-repo-ttl"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41601
msgid "Number which specifies the time-to-live, in minutes, for the cached version of the repository summary page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41606
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer cache-root-ttl"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41609
msgid "Number which specifies the time-to-live, in minutes, for the cached version of the repository index page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41614
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer cache-scanrc-ttl"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41617
msgid "Number which specifies the time-to-live, in minutes, for the result of scanning a path for Git repositories."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41622
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer cache-about-ttl"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41625
msgid "Number which specifies the time-to-live, in minutes, for the cached version of the repository about page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41630
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer cache-snapshot-ttl"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41633
msgid "Number which specifies the time-to-live, in minutes, for the cached version of snapshots."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41638
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer cache-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41641
msgid "The maximum number of entries in the cgit cache.  When set to @samp{0}, caching is disabled."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41646
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean case-sensitive-sort?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41648
msgid "Sort items in the repo list case sensitively."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41653
#, no-wrap
msgid "{@code{cgit-configuration} parameter} list clone-prefix"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41656
msgid "List of common prefixes which, when combined with a repository URL, generates valid clone URLs for the repository."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41661
#, no-wrap
msgid "{@code{cgit-configuration} parameter} list clone-url"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41663
msgid "List of @code{clone-url} templates."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41668
#, no-wrap
msgid "{@code{cgit-configuration} parameter} file-object commit-filter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41670
msgid "Command which will be invoked to format commit messages."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41675
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string commit-sort"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41679 guix-git/doc/guix.texi:42238
msgid "Flag which, when set to @samp{date}, enables strict date ordering in the commit log, and when set to @samp{topo} enables strict topological ordering."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41681
msgid "Defaults to @samp{\"git log\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41684
#, no-wrap
msgid "{@code{cgit-configuration} parameter} file-object css"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41686
msgid "URL which specifies the css document to include in all cgit pages."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41688
msgid "Defaults to @samp{\"/share/cgit/cgit.css\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41691
#, no-wrap
msgid "{@code{cgit-configuration} parameter} file-object email-filter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41695
msgid "Specifies a command which will be invoked to format names and email address of committers, authors, and taggers, as represented in various places throughout the cgit interface."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41700
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean embedded?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41703
msgid "Flag which, when set to @samp{#t}, will make cgit generate a HTML fragment suitable for embedding in other HTML pages."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41708
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-commit-graph?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41712
msgid "Flag which, when set to @samp{#t}, will make cgit print an ASCII-art commit history graph to the left of the commit messages in the repository log page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41717
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-filter-overrides?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41720
msgid "Flag which, when set to @samp{#t}, allows all filter settings to be overridden in repository-specific cgitrc files."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41725
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-follow-links?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41728
msgid "Flag which, when set to @samp{#t}, allows users to follow a file in the log view."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41733
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-http-clone?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41736
msgid "If set to @samp{#t}, cgit will act as an dumb HTTP endpoint for Git clones."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41741
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-index-links?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41744
msgid "Flag which, when set to @samp{#t}, will make cgit generate extra links \"summary\", \"commit\", \"tree\" for each repo in the repository index."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41749
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-index-owner?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41752
msgid "Flag which, when set to @samp{#t}, will make cgit display the owner of each repo in the repository index."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41757
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-log-filecount?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41760
msgid "Flag which, when set to @samp{#t}, will make cgit print the number of modified files for each commit on the repository log page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41765
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-log-linecount?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41768
msgid "Flag which, when set to @samp{#t}, will make cgit print the number of added and removed lines for each commit on the repository log page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41773
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-remote-branches?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41776 guix-git/doc/guix.texi:42301
msgid "Flag which, when set to @code{#t}, will make cgit display remote branches in the summary and refs views."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41781
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-subject-links?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41785
msgid "Flag which, when set to @code{1}, will make cgit use the subject of the parent commit as link text when generating links to parent commits in commit view."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41790
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-html-serving?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41794
msgid "Flag which, when set to @samp{#t}, will make cgit use the subject of the parent commit as link text when generating links to parent commits in commit view."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41799
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-tree-linenumbers?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41802
msgid "Flag which, when set to @samp{#t}, will make cgit generate linenumber links for plaintext blobs printed in the tree view."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41807
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-git-config?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41810
msgid "Flag which, when set to @samp{#f}, will allow cgit to use Git config to set any repo specific settings."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41815
#, no-wrap
msgid "{@code{cgit-configuration} parameter} file-object favicon"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41817
msgid "URL used as link to a shortcut icon for cgit."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41819
msgid "Defaults to @samp{\"/favicon.ico\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41822
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string footer"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41826
msgid "The content of the file specified with this option will be included verbatim at the bottom of all pages (i.e.@: it replaces the standard \"generated by...\"@: message)."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41831
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string head-include"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41834
msgid "The content of the file specified with this option will be included verbatim in the HTML HEAD section on all pages."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41839
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string header"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41842
msgid "The content of the file specified with this option will be included verbatim at the top of all pages."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41847
#, no-wrap
msgid "{@code{cgit-configuration} parameter} file-object include"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41850
msgid "Name of a configfile to include before the rest of the current config- file is parsed."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41855
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string index-header"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41858
msgid "The content of the file specified with this option will be included verbatim above the repository index."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41863
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string index-info"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41866
msgid "The content of the file specified with this option will be included verbatim below the heading on the repository index page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41871
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean local-time?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41874
msgid "Flag which, if set to @samp{#t}, makes cgit print commit and tag times in the servers timezone."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41879
#, no-wrap
msgid "{@code{cgit-configuration} parameter} file-object logo"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41882
msgid "URL which specifies the source of an image which will be used as a logo on all cgit pages."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41884
msgid "Defaults to @samp{\"/share/cgit/cgit.png\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41887
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string logo-link"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41889 guix-git/doc/guix.texi:42347
msgid "URL loaded when clicking on the cgit logo image."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41894
#, no-wrap
msgid "{@code{cgit-configuration} parameter} file-object owner-filter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41897
msgid "Command which will be invoked to format the Owner column of the main page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41902
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer max-atom-items"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41904
msgid "Number of items to display in atom feeds view."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41909
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer max-commit-count"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41911
msgid "Number of entries to list per page in \"log\" view."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41916
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer max-message-length"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41918
msgid "Number of commit message characters to display in \"log\" view."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41920 guix-git/doc/guix.texi:41936
msgid "Defaults to @samp{80}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41923
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer max-repo-count"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41926
msgid "Specifies the number of entries to list per page on the repository index page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41931
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer max-repodesc-length"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41934
msgid "Specifies the maximum number of repo description characters to display on the repository index page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41939
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer max-blob-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41941
msgid "Specifies the maximum size of a blob to display HTML for in KBytes."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41946
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string max-stats"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41949
msgid "Maximum statistics period.  Valid values are @samp{week},@samp{month}, @samp{quarter} and @samp{year}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41954
#, no-wrap
msgid "{@code{cgit-configuration} parameter} mimetype-alist mimetype"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41956
msgid "Mimetype for the specified filename extension."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41960
msgid "Defaults to @samp{'((gif \"image/gif\") (html \"text/html\") (jpg \"image/jpeg\") (jpeg \"image/jpeg\") (pdf \"application/pdf\") (png \"image/png\") (svg \"image/svg+xml\"))}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41963
#, no-wrap
msgid "{@code{cgit-configuration} parameter} file-object mimetype-file"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41965
msgid "Specifies the file to use for automatic mimetype lookup."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41970
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string module-link"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41973
msgid "Text which will be used as the formatstring for a hyperlink when a submodule is printed in a directory listing."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41978
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean nocache?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41980
msgid "If set to the value @samp{#t} caching will be disabled."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41985
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean noplainemail?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41988
msgid "If set to @samp{#t} showing full author email addresses will be disabled."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41993
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean noheader?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41996
msgid "Flag which, when set to @samp{#t}, will make cgit omit the standard header on all pages."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42001
#, no-wrap
msgid "{@code{cgit-configuration} parameter} project-list project-list"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42005
msgid "A list of subdirectories inside of @code{repository-directory}, relative to it, that should loaded as Git repositories.  An empty list means that all subdirectories will be loaded."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42010
#, no-wrap
msgid "{@code{cgit-configuration} parameter} file-object readme"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42013
msgid "Text which will be used as default @code{repository-cgit-configuration} @code{readme}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42018
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean remove-suffix?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42022
msgid "If set to @code{#t} and @code{repository-directory} is enabled, if any repositories are found with a suffix of @code{.git}, this suffix will be removed for the URL and name."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42027
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer renamelimit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42029
msgid "Maximum number of files to consider when detecting renames."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42034
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string repository-sort"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42036
msgid "The way in which repositories in each section are sorted."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42041
#, no-wrap
msgid "{@code{cgit-configuration} parameter} robots-list robots"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42043
msgid "Text used as content for the @code{robots} meta-tag."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42045
msgid "Defaults to @samp{'(\"noindex\" \"nofollow\")}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42048
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string root-desc"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42050
msgid "Text printed below the heading on the repository index page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42052
msgid "Defaults to @samp{\"a fast webinterface for the git dscm\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42055
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string root-readme"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42058
msgid "The content of the file specified with this option will be included verbatim below the ``about'' link on the repository index page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42063
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string root-title"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42065
msgid "Text printed as heading on the repository index page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42070
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean scan-hidden-path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42076
msgid "If set to @samp{#t} and repository-directory is enabled, repository-directory will recurse into directories whose name starts with a period.  Otherwise, repository-directory will stay away from such directories, considered as ``hidden''.  Note that this does not apply to the @file{.git} directory in non-bare repos."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42081
#, no-wrap
msgid "{@code{cgit-configuration} parameter} list snapshots"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42084
msgid "Text which specifies the default set of snapshot formats that cgit generates links for."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42089
#, no-wrap
msgid "{@code{cgit-configuration} parameter} repository-directory repository-directory"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42092
msgid "Name of the directory to scan for repositories (represents @code{scan-path})."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42094
msgid "Defaults to @samp{\"/srv/git\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42097
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string section"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42100 guix-git/doc/guix.texi:42416
msgid "The name of the current repository section - all repositories defined after this option will inherit the current section name."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42105
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string section-sort"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42108
msgid "Flag which, when set to @samp{1}, will sort the sections on the repository listing by name."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42113
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer section-from-path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42116
msgid "A number which, if defined prior to repository-directory, specifies how many path elements from each repo path to use as a default section name."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42121
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean side-by-side-diffs?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42124
msgid "If set to @samp{#t} shows side-by-side diffs instead of unidiffs per default."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42129
#, no-wrap
msgid "{@code{cgit-configuration} parameter} file-object source-filter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42132
msgid "Specifies a command which will be invoked to format plaintext blobs in the tree view."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42137
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer summary-branches"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42140
msgid "Specifies the number of branches to display in the repository ``summary'' view."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42145
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer summary-log"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42148
msgid "Specifies the number of log entries to display in the repository ``summary'' view."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42153
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer summary-tags"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42156
msgid "Specifies the number of tags to display in the repository ``summary'' view."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42161
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string strict-export"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42164
msgid "Filename which, if specified, needs to be present within the repository for cgit to allow access to that repository."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42169
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string virtual-root"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42171
msgid "URL which, if specified, will be used as root for all cgit links."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42173
msgid "Defaults to @samp{\"/\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42176
#, no-wrap
msgid "{@code{cgit-configuration} parameter} repository-cgit-configuration-list repositories"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42178
msgid "A list of @code{repository-cgit-configuration} records."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42182
msgid "Available @code{repository-cgit-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42183
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-list snapshots"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42186
msgid "A mask of snapshot formats for this repo that cgit generates links for, restricted by the global @code{snapshots} setting."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42191
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-file-object source-filter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42193
msgid "Override the default @code{source-filter}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42198
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string url"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42200
msgid "The relative URL used to access the repository."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42205
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-file-object about-filter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42207
msgid "Override the default @code{about-filter}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42212
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string branch-sort"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42215
msgid "Flag which, when set to @samp{age}, enables date ordering in the branch ref list, and when set to @samp{name} enables ordering by branch name."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42220
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-list clone-url"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42222
msgid "A list of URLs which can be used to clone repo."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42227
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-file-object commit-filter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42229
msgid "Override the default @code{commit-filter}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42234
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string commit-sort"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42243
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string defbranch"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42248
msgid "The name of the default branch for this repository.  If no such branch exists in the repository, the first branch name (when sorted) is used as default instead.  By default branch pointed to by HEAD, or ``master'' if there is no suitable HEAD."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42253
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string desc"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42255
msgid "The value to show as repository description."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42260
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string homepage"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42262
msgid "The value to show as repository homepage."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42267
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-file-object email-filter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42269
msgid "Override the default @code{email-filter}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42274
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} maybe-repo-boolean enable-commit-graph?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42277
msgid "A flag which can be used to disable the global setting @code{enable-commit-graph?}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42282
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} maybe-repo-boolean enable-log-filecount?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42285
msgid "A flag which can be used to disable the global setting @code{enable-log-filecount?}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42290
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} maybe-repo-boolean enable-log-linecount?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42293
msgid "A flag which can be used to disable the global setting @code{enable-log-linecount?}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42298
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} maybe-repo-boolean enable-remote-branches?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42306
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} maybe-repo-boolean enable-subject-links?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42309
msgid "A flag which can be used to override the global setting @code{enable-subject-links?}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42314
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} maybe-repo-boolean enable-html-serving?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42317
msgid "A flag which can be used to override the global setting @code{enable-html-serving?}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42322
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-boolean hide?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42325
msgid "Flag which, when set to @code{#t}, hides the repository from the repository index."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42330
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-boolean ignore?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42332
msgid "Flag which, when set to @samp{#t}, ignores the repository."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42337
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-file-object logo"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42340
msgid "URL which specifies the source of an image which will be used as a logo on this repo’s pages."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42345
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string logo-link"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42352
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-file-object owner-filter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42354
msgid "Override the default @code{owner-filter}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42359
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string module-link"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42363
msgid "Text which will be used as the formatstring for a hyperlink when a submodule is printed in a directory listing.  The arguments for the formatstring are the path and SHA1 of the submodule commit."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42368
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} module-link-path module-link-path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42372
msgid "Text which will be used as the formatstring for a hyperlink when a submodule with the specified subdirectory path is printed in a directory listing."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42377
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string max-stats"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42379
msgid "Override the default maximum statistics period."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42384
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string name"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42386
msgid "The value to show as repository name."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42391
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string owner"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42393
msgid "A value used to identify the owner of the repository."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42398
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42400
msgid "An absolute path to the repository directory."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42405
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string readme"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42408
msgid "A path (relative to repo) which specifies a file to include verbatim as the ``About'' page for this repo."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42413
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string section"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42421
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-list extra-options"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42423 guix-git/doc/guix.texi:42432
msgid "Extra options will be appended to cgitrc file."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42430
#, no-wrap
msgid "{@code{cgit-configuration} parameter} list extra-options"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42444
msgid "However, it could be that you just want to get a @code{cgitrc} up and running.  In that case, you can pass an @code{opaque-cgit-configuration} as a record to @code{cgit-service-type}.  As its name indicates, an opaque configuration does not have easy reflective capabilities."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42446
msgid "Available @code{opaque-cgit-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42447
#, no-wrap
msgid "{@code{opaque-cgit-configuration} parameter} package cgit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42449
msgid "The cgit package."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42451
#, no-wrap
msgid "{@code{opaque-cgit-configuration} parameter} string string"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42453
msgid "The contents of the @code{cgitrc}, as a string."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42457
msgid "For example, if your @code{cgitrc} is just the empty string, you could instantiate a cgit service like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:42462
#, no-wrap
msgid ""
"(service cgit-service-type\n"
"         (opaque-cgit-configuration\n"
"          (cgitrc \"\")))\n"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:42464
#, no-wrap
msgid "Gitolite Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:42466
#, no-wrap
msgid "Gitolite service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:42467
#, no-wrap
msgid "Git, hosting"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42470
msgid "@uref{https://gitolite.com/gitolite/, Gitolite} is a tool for hosting Git repositories on a central server."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42473
msgid "Gitolite can handle multiple repositories and users, and supports flexible configuration of the permissions for the users on the repositories."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42476
msgid "The following example will configure Gitolite using the default @code{git} user, and the provided SSH public key."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:42483
#, no-wrap
msgid ""
"(service gitolite-service-type\n"
"         (gitolite-configuration\n"
"           (admin-pubkey (plain-file\n"
"                           \"yourname.pub\"\n"
"                           \"ssh-rsa AAAA... guix@@example.com\"))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42488
msgid "Gitolite is configured through a special admin repository which you can clone, for example, if you setup Gitolite on @code{example.com}, you would run the following command to clone the admin repository."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:42491
#, no-wrap
msgid "git clone git@@example.com:gitolite-admin\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42497
msgid "When the Gitolite service is activated, the provided @code{admin-pubkey} will be inserted in to the @file{keydir} directory in the gitolite-admin repository.  If this results in a change in the repository, it will be committed using the message ``gitolite setup by GNU Guix''."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:42498
#, no-wrap
msgid "{Data Type} gitolite-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:42500
msgid "Data type representing the configuration for @code{gitolite-service-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42502
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{package} (default: @code{gitolite})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42508
msgid "Gitolite package to use.  There are optional Gitolite dependencies that are not included in the default package, such as Redis and git-annex.  These features can be made available by using the @code{make-gitolite} procedure in the @code{(gnu packages version-control}) module to produce a variant of Gitolite with the desired additional dependencies."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42511
msgid "The following code returns a package in which the Redis and git-annex programs can be invoked by Gitolite's scripts:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:42517
#, no-wrap
msgid ""
"(use-modules (gnu packages databases)\n"
"             (gnu packages haskell-apps)\n"
"             (gnu packages version-control))\n"
"(make-gitolite (list redis git-annex))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42519
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{user} (default: @code{\"git\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42522
msgid "User to use for Gitolite.  This will be user that you use when accessing Gitolite over SSH."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42523
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{group} (default: @code{\"git\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42525
msgid "Group to use for Gitolite."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42526
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{home-directory} (default: @code{\"/var/lib/gitolite\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42528
msgid "Directory in which to store the Gitolite configuration and repositories."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42529
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{rc-file} (default: @code{(gitolite-rc-file)})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42532
msgid "A ``file-like'' object (@pxref{G-Expressions, file-like objects}), representing the configuration for Gitolite."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42533
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{git-config} (default: @code{(gitolite-git-configuration)})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42536
msgid "A ``file-like'' object (@pxref{G-Expressions, file-like objects}), representing the git configuration for Gitolite."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:42537
#, no-wrap
msgid "admin-pubkey"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42541
msgid "A ``file-like'' object (@pxref{G-Expressions, file-like objects}) used to setup Gitolite.  This will be inserted in to the @file{keydir} directory within the gitolite-admin repository."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42543
msgid "To specify the SSH key as a string, use the @code{plain-file} function."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:42546
#, no-wrap
msgid "(plain-file \"yourname.pub\" \"ssh-rsa AAAA... guix@@example.com\")\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42549
msgid "The file has to have @file{.pub} extension."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42550
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{admin-name} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42554
msgid "Usually the key name is derived by taking a base name of the @code{admin-pubkey}.  The resulting file name is the name of the gitolite user.  You can use this field to override the automatic name."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:42558
#, no-wrap
msgid "{Data Type} gitolite-rc-file"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:42560
msgid "Data type representing the Gitolite RC file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42562
#, no-wrap
msgid "@code{umask} (default: @code{#o0077})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42565
msgid "This controls the permissions Gitolite sets on the repositories and their contents."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42569
msgid "A value like @code{#o0027} will give read access to the group used by Gitolite (by default: @code{git}).  This is necessary when using Gitolite with software like cgit or gitweb."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42570
#, no-wrap
msgid "@code{local-code} (default: @code{\"$rc@{GL_ADMIN_BASE@}/local\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42573
msgid "Allows you to add your own non-core programs, or even override the shipped ones with your own."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42578
msgid "Please supply the FULL path to this variable. By default, directory called \"local\" in your gitolite clone is used, providing the benefits of versioning them as well as making changes to them without having to log on to the server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42579
#, no-wrap
msgid "@code{unsafe-pattern} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42584
msgid "An optional Perl regular expression for catching unsafe configurations in the configuration file.  See @uref{https://gitolite.com/gitolite/git-config.html#compensating-for-unsafe_patt, Gitolite's documentation} for more information."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42591
msgid "When the value is not @code{#f}, it should be a string containing a Perl regular expression, such as @samp{\"[`~#\\$\\&()|;<>]\"}, which is the default value used by gitolite.  It rejects any special character in configuration that might be interpreted by a shell, which is useful when sharing the administration burden with other people that do not otherwise have shell access on the server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42592
#, no-wrap
msgid "@code{git-config-keys} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42595
msgid "Gitolite allows you to set git config values using the @samp{config} keyword.  This setting allows control over the config keys to accept."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42596
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{log-extra} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42598
msgid "Whether gitolite should log extra details."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42602
msgid "For historical reasons, this field defaults to @code{#f}.  The default value from gitolite however is @code{1} (written as @code{#t} in this configuration)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42606
msgid "The host name of this gitolite instance.  It is used by the mirroring feature."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42607
#, no-wrap
msgid "@code{roles} (default: @code{'((\"READERS\" . 1) (\"WRITERS\" . ))})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42609
msgid "Set the role names allowed to be used by users running the perms command."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42610
#, no-wrap
msgid "@code{enable} (default: @code{'(\"help\" \"desc\" \"info\" \"perms\" \"writable\" \"ssh-authkeys\" \"git-config\" \"daemon\" \"gitweb\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42612
msgid "This setting controls the commands and features to enable within Gitolite."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42615
#, fuzzy
#| msgid "Documentation"
msgid "Extra content to add verbatim into the @code{%RC} hash."
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:42619
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} gitolite-git-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:42621
#, fuzzy
#| msgid "Documentation"
msgid "Data type representing the git configuration file for gitolite."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:42623
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{name} (default: @code{\"GNU GNU\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42626
msgid "User name used for commits (e.g. during setting up the admin repository)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42627
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{email} (default: @code{\"guix@@localhost\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42629
msgid "Email used for commits (e.g. during setting up the admin repository)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42630
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{default-branch} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42633
msgid "If true, set the @code{init.defaultBranch} option to that value.  Common values are @code{\"master\"} and @code{\"main\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42634
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{receive-fsck-objects} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42636
msgid "If it is set to true, git-receive-pack will check all received objects."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42639
#, fuzzy
#| msgid "Documentation"
msgid "Extra content to add verbatim into the git configuration file."
msgstr "Documentazione"

#. type: subsubheading
#: guix-git/doc/guix.texi:42643
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Gitile Service"
msgstr "Servizi"

#. type: cindex
#: guix-git/doc/guix.texi:42645
#, no-wrap
msgid "Gitile service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:42646
#, no-wrap
msgid "Git, forge"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42649
msgid "@uref{https://git.lepiller.eu/gitile, Gitile} is a Git forge for viewing public git repository contents from a web browser."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42655
msgid "Gitile works best in collaboration with Gitolite, and will serve the public repositories from Gitolite by default.  The service should listen only on a local port, and a webserver should be configured to serve static resources.  The gitile service provides an easy way to extend the Nginx service for that purpose (@pxref{NGINX})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42659
msgid "The following example will configure Gitile to serve repositories from a custom location, with some default messages for the home page and the footers."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:42682
#, no-wrap
msgid ""
"(service gitile-service-type\n"
"         (gitile-configuration\n"
"           (repositories \"/srv/git\")\n"
"           (base-git-url \"https://myweb.site/git\")\n"
"           (index-title \"My git repositories\")\n"
"           (intro '((p \"This is all my public work!\")))\n"
"           (footer '((p \"This is the end\")))\n"
"           (nginx\n"
"             (nginx-server-configuration\n"
"               (ssl-certificate\n"
"                 \"/etc/certs/myweb.site/fullchain.pem\")\n"
"               (ssl-certificate-key\n"
"                 \"/etc/certs/myweb.site/privkey.pem\")\n"
"               (listen '(\"443 ssl http2\" \"[::]:443 ssl http2\"))\n"
"               (locations\n"
"                 (list\n"
"                   ;; Allow for https anonymous fetch on /git/ urls.\n"
"                   (git-http-nginx-location-configuration\n"
"                     (git-http-configuration\n"
"                       (uri-path \"/git/\")\n"
"                       (git-root \"/var/lib/gitolite/repositories\")))))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42691
msgid "In addition to the configuration record, you should configure your git repositories to contain some optional information.  First, your public repositories need to contain the @file{git-daemon-export-ok} magic file that allows Git to export the repository.  Gitile uses the presence of this file to detect public repositories it should make accessible.  To do so with Gitolite for instance, modify your @file{conf/gitolite.conf} to include this in the repositories you want to make public:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:42695
#, no-wrap
msgid ""
"repo foo\n"
"    R = daemon\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42701
msgid "In addition, Gitile can read the repository configuration to display more information on the repository.  Gitile uses the gitweb namespace for its configuration.  As an example, you can use the following in your @file{conf/gitolite.conf}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:42708
#, no-wrap
msgid ""
"repo foo\n"
"    R = daemon\n"
"    desc = A long description, optionally with <i>HTML</i>, shown on the index page\n"
"    config gitweb.name = The Foo Project\n"
"    config gitweb.synopsis = A short description, shown on the main page of the project\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42714
msgid "Do not forget to commit and push these changes once you are satisfied.  You may need to change your gitolite configuration to allow the previous configuration options to be set.  One way to do that is to add the following service definition:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:42726
#, no-wrap
msgid ""
"(service gitolite-service-type\n"
"          (gitolite-configuration\n"
"            (admin-pubkey (local-file \"key.pub\"))\n"
"            (rc-file\n"
"              (gitolite-rc-file\n"
"                (umask #o0027)\n"
"                ;; Allow to set any configuration key\n"
"                (git-config-keys \".*\")\n"
"                ;; Allow any text as a valid configuration value\n"
"                (unsafe-patt \"^$\")))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:42728
#, no-wrap
msgid "{Data Type} gitile-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:42730
msgid "Data type representing the configuration for @code{gitile-service-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42732
#, no-wrap
msgid "@code{package} (default: @var{gitile})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42734
msgid "Gitile package to use."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42737
msgid "The host on which gitile is listening."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42738
#, no-wrap
msgid "@code{port} (default: @code{8080})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42740
msgid "The port on which gitile is listening."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42741
#, no-wrap
msgid "@code{database} (default: @code{\"/var/lib/gitile/gitile-db.sql\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42743
msgid "The location of the database."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42744
#, no-wrap
msgid "@code{repositories} (default: @code{\"/var/lib/gitolite/repositories\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42748
msgid "The location of the repositories.  Note that only public repositories will be shown by Gitile.  To make a repository public, add an empty @file{git-daemon-export-ok} file at the root of that repository."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:42749
#, no-wrap
msgid "base-git-url"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42751
msgid "The base git url that will be used to show clone commands."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42752
#, no-wrap
msgid "@code{index-title} (default: @code{\"Index\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42754
msgid "The page title for the index page that lists all the available repositories."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42755
#, no-wrap
msgid "@code{intro} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42758
msgid "The intro content, as a list of sxml expressions.  This is shown above the list of repositories, on the index page."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42759
#, no-wrap
msgid "@code{footer} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42762
msgid "The footer content, as a list of sxml expressions.  This is shown on every page served by Gitile."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:42763
#, no-wrap
msgid "nginx"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42766
msgid "An nginx server block that will be extended and used as a reverse proxy by Gitile to serve its pages, and as a normal web server to serve its assets."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42770
msgid "You can use this block to add more custom URLs to your domain, such as a @code{/git/} URL for anonymous clones, or serving any other files you would like to serve."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:42777
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Joycond service"
msgstr "Servizi"

#. type: cindex
#: guix-git/doc/guix.texi:42778
#, no-wrap
msgid "joycond"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:42779
#, no-wrap
msgid "nintendo controllers"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42783
msgid "The joycond service allows the pairing of Nintendo joycon game controllers over Bluetooth. (@pxref{Desktop Services} for setting up Bluetooth.)"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:42784
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} joycond-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:42786
msgid "Data type representing the configuration of @command{joycond}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42788
#, no-wrap
msgid "@code{package} (default: @code{joycond})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42790
msgid "The joycond package to use."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:42793
#, no-wrap
msgid "joycond-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:42798
msgid "Service type for the joycond service.  It also extends the @code{udev-service-type} with the @code{joycond} package (provided via the @code{joycond-configuration} configuration), so that joycond controllers can be detected and used by an unprivileged user."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:42800
#, no-wrap
msgid "The Battle for Wesnoth Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:42801
#, no-wrap
msgid "wesnothd"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42805
msgid "@uref{https://wesnoth.org, The Battle for Wesnoth} is a fantasy, turn based tactical strategy game, with several single player campaigns, and multiplayer games (both networked and local)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:42806
#, no-wrap
msgid "wesnothd-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:42810
msgid "Service type for the wesnothd service.  Its value must be a @code{wesnothd-configuration} object.  To run wesnothd in the default configuration, instantiate it as:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:42813
#, no-wrap
msgid "(service wesnothd-service-type)\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:42816
#, no-wrap
msgid "{Data Type} wesnothd-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:42818
msgid "Data type representing the configuration of @command{wesnothd}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42820
#, no-wrap
msgid "@code{package} (default: @code{wesnoth-server})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42822
msgid "The wesnoth server package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42823
#, no-wrap
msgid "@code{port} (default: @code{15000})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42825 guix-git/doc/guix.texi:43525
msgid "The port to bind the server to."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:42831
#, no-wrap
msgid "pam-mount"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42836
msgid "The @code{(gnu services pam-mount)} module provides a service allowing users to mount volumes when they log in.  It should be able to mount any volume format supported by the system."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:42837
#, no-wrap
msgid "pam-mount-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:42839
msgid "Service type for PAM Mount support."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:42841
#, no-wrap
msgid "{Data Type} pam-mount-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:42843
msgid "Data type representing the configuration of PAM Mount."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:42847
#, no-wrap
msgid "rules"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42850
msgid "The configuration rules that will be used to generate @file{/etc/security/pam_mount.conf.xml}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42854
msgid "The configuration rules are SXML elements (@pxref{SXML,,, guile, GNU Guile Reference Manual}), and the default ones don't mount anything for anyone at login:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:42869
#, no-wrap
msgid ""
"`((debug (@@ (enable \"0\")))\n"
"  (mntoptions (@@ (allow ,(string-join\n"
"                          '(\"nosuid\" \"nodev\" \"loop\"\n"
"                            \"encryption\" \"fsck\" \"nonempty\"\n"
"                            \"allow_root\" \"allow_other\")\n"
"                          \",\"))))\n"
"  (mntoptions (@@ (require \"nosuid,nodev\")))\n"
"  (logout (@@ (wait \"0\")\n"
"             (hup \"0\")\n"
"             (term \"no\")\n"
"             (kill \"no\")))\n"
"  (mkmountpoint (@@ (enable \"1\")\n"
"                   (remove \"true\"))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42875
msgid "Some @code{volume} elements must be added to automatically mount volumes at login.  Here's an example allowing the user @code{alice} to mount her encrypted @env{HOME} directory and allowing the user @code{bob} to mount the partition where he stores his data:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:42900
#, no-wrap
msgid ""
"(define pam-mount-rules\n"
"`((debug (@@ (enable \"0\")))\n"
"            (volume (@@ (user \"alice\")\n"
"                       (fstype \"crypt\")\n"
"                       (path \"/dev/sda2\")\n"
"                       (mountpoint \"/home/alice\")))\n"
"            (volume (@@ (user \"bob\")\n"
"                       (fstype \"auto\")\n"
"                       (path \"/dev/sdb3\")\n"
"                       (mountpoint \"/home/bob/data\")\n"
"                       (options \"defaults,autodefrag,compress\")))\n"
"            (mntoptions (@@ (allow ,(string-join\n"
"                                    '(\"nosuid\" \"nodev\" \"loop\"\n"
"                                      \"encryption\" \"fsck\" \"nonempty\"\n"
"                                      \"allow_root\" \"allow_other\")\n"
"                                    \",\"))))\n"
"            (mntoptions (@@ (require \"nosuid,nodev\")))\n"
"            (logout (@@ (wait \"0\")\n"
"                       (hup \"0\")\n"
"                       (term \"no\")\n"
"                       (kill \"no\")))\n"
"            (mkmountpoint (@@ (enable \"1\")\n"
"                             (remove \"true\")))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:42904
#, no-wrap
msgid ""
"(service pam-mount-service-type\n"
"         (pam-mount-configuration\n"
"           (rules pam-mount-rules)))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42908
msgid "The complete list of possible options can be found in the man page for @uref{http://pam-mount.sourceforge.net/pam_mount.conf.5.html, pam_mount.conf}."
msgstr ""

#. type: subheading
#: guix-git/doc/guix.texi:42911
#, fuzzy, no-wrap
#| msgid "Services"
msgid "PAM Mount Volume Service"
msgstr "Servizi"

#. type: cindex
#: guix-git/doc/guix.texi:42912
#, no-wrap
msgid "pam volume mounting"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42919
msgid "PAM mount volumes are automatically mounted at login by the PAM login service according to a set of per-volume rules.  Because they are mounted by PAM the password entered during login may be used directly to mount authenticated volumes, such as @code{cifs}, using the same credentials."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42922
msgid "These volumes will be added in addition to any volumes directly specified in @code{pam-mount-rules}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42926
msgid "Here is an example of a rule which will mount a remote CIFS share from @file{//remote-server/share} into a sub-directory of @file{/shares} named after the user logging in:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:42936
#, no-wrap
msgid ""
"(simple-service 'pam-mount-remote-share pam-mount-volume-service-type\n"
"                (list (pam-mount-volume\n"
"                       (secondary-group \"users\")\n"
"                       (file-system-type \"cifs\")\n"
"                       (server \"remote-server\")\n"
"                       (file-name \"share\")\n"
"                       (mount-point \"/shares/%(USER)\")\n"
"                       (options \"nosuid,nodev,seal,cifsacl\"))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:42938
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} pam-mount-volume-service-type"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:42943
msgid "Configuration for a single volume to be mounted.  Any fields not specified will be omitted from the run-time PAM configuration.  See @uref{http://pam-mount.sourceforge.net/pam_mount.conf.5.html, the man page} for the default values when unspecified."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42945
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{user-name} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42947
msgid "Mount the volume for the given user."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42948
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{user-id} (type: maybe-integer-or-range)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42952
msgid "Mount the volume for the user with this ID.  This field may also be specified as a pair of @code{(start . end)} indicating a range of user IDs for whom to mount the volume."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42953
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{primary-group} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42955
msgid "Mount the volume for users with this primary group name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42956
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{group-id} (type: maybe-integer-or-range)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42960
msgid "Mount the volume for the users with this primary group ID.  This field may also be specified as a cons cell of @code{(start . end)} indicating a range of group ids for whom to mount the volume."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42961
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{secondary-group} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42964
msgid "Mount the volume for users who are members of this group as either a primary or secondary group."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42965
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{file-system-type} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42967
msgid "The file system type for the volume being mounted (e.g., @code{cifs})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42968
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{no-mount-as-root?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42972
msgid "Whether or not to mount the volume with root privileges.  This is normally disabled, but may be enabled for mounts of type @code{fuse}, or other user-level mounts."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42973
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{server} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42975
msgid "The name of the remote server to mount the volume from, when necessary."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42976
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{file-name} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42979
msgid "The location of the volume, either local or remote, depending on the @code{file-system-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42980
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{mount-point} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42985
msgid "Where to mount the volume in the local file-system.  This may be set to @file{~} to indicate the home directory of the user logging in.  If this field is omitted then @file{/etc/fstab} is consulted for the mount destination."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42986
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{options} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42988
msgid "The options to be passed as-is to the underlying mount program."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42989
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ssh?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42992
msgid "Enable this option to pass the login password to SSH for use with mounts involving SSH (e.g., @code{sshfs})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42993
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{cipher} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42996
msgid "Cryptsetup cipher name for the volume.  To be used with the @code{crypt} @code{file-system-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42997
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{file-system-key-cipher} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:42999
msgid "Cipher name used by the target volume."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43000
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{file-system-key-hash} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43002
msgid "SSL hash name used by the target volume."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43003
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{file-system-key-file-name} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43005
msgid "File name of the file system key for the target volume."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:43013
#, fuzzy, no-wrap
#| msgid "Shepherd Services"
msgid "Shared Cache Service"
msgstr "Servizi Shepherd"

#. type: cindex
#: guix-git/doc/guix.texi:43014
#, no-wrap
msgid "shared cache"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43015
#, no-wrap
msgid "cache, sharing"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43024
msgid "Running @command{guix pull}, @command{guix time-machine}, @command{guix system reconfigure}, and @command{guix home reconfigure} pulls the complete Git version control history of your channels in @file{$HOME/.cache/guix/checkouts}.  If you have multiple user accounts (typically @code{root} and a main user account for your personal computer), or if multiple users are using the system (typically on a shared server), then this can quickly waste a lot of space."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43027
msgid "The @code{shared-cache} service lets you prevent this waste by either sharing or exposing a specific user's cache to the other users."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43033
msgid "In the context of this service, @emph{sharing} and @emph{exposing} have the same meaning as with @command{guix shell}: making the shared cache directory read-only if you use mode @option{'expose} (the default), and writable if you use mode @option{'share}, (@pxref{Invoking guix shell, @option{--expose} and @option{--share}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43039
msgid "Whatever mode you choose, from the point of view of the user, the cache appears writable.  With @option{'expose}, any write will be stored in a user-owned overlay directory next to mountpoint, whereas with @option{'share}, writes will be propagated back to the sharing user's cache."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:43045
msgid "Use the @option{'share} option @emph{if and only if} users on the machine trust each other.  This is a hard requirement since, with this option, any user could ``poison'' the shared cache to indirectly gain access to other user's data and privileges."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:43052
msgid "Using @option{'share} is meant for a single-seat computer where the single user has unprivileged user accounts---e.g. one for work and one for gaming.  Even then, channels from one will leak into the other's cache.  Use with caution."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:43058
msgid "@option{'share} will not work for multiple concurrent invocation of @command{guix}, e.g. if two user accounts run @command{guix time machine} at the same time, the results will be fun but not useful."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43062
msgid "Here is an example configuration that exposes @code{root}'s guix checkout cache to @code{alice} and @code{bob}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43073
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"     (services\n"
"      (cons*\n"
"       (service shared-cache-service-type\n"
"             (shared-cache-configuration\n"
"               (users (list (user-cache (user \"alice\"))\n"
"                            (user-cache (user \"bob\"))))))\n"
"                    %desktop-services)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43077
msgid "The service can also be extended by providing a list of @code{user-cache}, allowing for easier splitting of configuration."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43086
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services\n"
"   (cons*\n"
"    (simple-service 'bob-shared-guix-cache shared-cache-service-type\n"
"                    (list (user-cache (user \"bob\"))))\n"
"    %desktop-services)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43088
#, fuzzy, no-wrap
#| msgid "Services"
msgid "shared-cache-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:43091
msgid "Service type for sharing a subdirectory of @file{~/.cache/} between multiple users."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43098
msgid "This service allows different system users to share the contents of the user cache, avoiding duplication and saving disk space.  It can be configured in either ``share'' mode, where all users write to the same cache, or ``expose'' mode, where users get a read-only view with a writable overlay.  Its value must be a @code{shared-cache-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43100
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} shared-cache-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:43102
#, fuzzy
#| msgid "Documentation"
msgid "Data type representing the configuration of the shared cache."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:43104
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{mode} (default: @code{'expose})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43109
msgid "Either @code{'share} (read-write, dangerous) or @code{'expose} (read-only with per-user overlay, the default).  In share mode, all writes go to the shared directory.  In expose mode, only reads use the shared directory; writes go to a user-owned overlay."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43110
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{shared-directory} (default: @code{\"/root/.cache\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43114
msgid "The source cache directory that is shared between users.  Each user will see some or all of its subdirectories mounted into their own @file{~/.cache}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43115
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{users} (default: @code{'()})"
msgstr "@code{features} (predefinito: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:43118
msgid "The list of users that will benefit from the shared directory.  This must be a list of @code{user-info} records."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43122
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} user-info"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:43125
#, fuzzy
#| msgid "Documentation"
msgid "Data type representing the configuration for a single user benefitting from a shared cache."
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43129
#, fuzzy
#| msgid "Updating the Guix package definition."
msgid "The username of the user."
msgstr "Aggiornamento della definizione del pacchetto Guix."

#. type: item
#: guix-git/doc/guix.texi:43130
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{location} (default: @code{\"/home/@var{user}/.cache\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43132
msgid "The cache directory of the user."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43133 guix-git/doc/guix.texi:43782
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{group} (default: @code{\"users\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43135
msgid "The primary group of the user."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43136
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{directories} (default: @code{'(\"guix/checkouts\")})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43140
msgid "List of subdirectories of the @code{shared-cache-configuration}'s @code{shared-directory} (whose default is @file{/root/.cache}) to mount under @var{location} (whose default is @file{~/.cache/}) for the user."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:43143
#, no-wrap
msgid "Build Farm Front-End (BFFE)"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43147
msgid "The @uref{https://git.cbaines.net/guix/bffe/,Build Farm Front-End} assists with building Guix packages in bulk.  It's responsible for submitting builds and displaying the status of the build farm."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43148
#, fuzzy, no-wrap
#| msgid "Services"
msgid "bffe-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:43151
msgid "Service type for the Build Farm Front-End.  Its value must be a @code{bffe-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43153
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} bffe-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:43155
#, fuzzy
#| msgid "Documentation"
msgid "Data type representing the configuration of the Build Farm Front-End."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:43157
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{package} (default: @code{bffe})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43159
msgid "The Build Farm Front-End package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43160
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{user} (default: @code{\"bffe\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43162 guix-git/doc/guix.texi:43232
#: guix-git/doc/guix.texi:43288 guix-git/doc/guix.texi:43422
#: guix-git/doc/guix.texi:43519
msgid "The system user to run the service as."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43163
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{group} (default: @code{\"bffe\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43165 guix-git/doc/guix.texi:43235
#: guix-git/doc/guix.texi:43425 guix-git/doc/guix.texi:43522
msgid "The system group to run the service as."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43169
msgid "A list of arguments to the Build Farm Front-End.  These are passed to the @code{run-bffe-service} procedure when starting the service."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43174
msgid "For example, the following value directs the Build Farm Front-End to submit builds for derivations available from @code{data.guix.gnu.org} to the Build Coordinator instance assumed to be running on the same machine."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:43193
#, no-wrap
msgid ""
"(list\n"
" #:build\n"
" (list\n"
"  (build-from-guix-data-service\n"
"   (data-service-url \"https://data.guix.gnu.org\")\n"
"   (build-coordinator-url \"http://127.0.0.1:8746\")\n"
"   (branches '(\"master\"))\n"
"   (systems '(\"x86_64-linux\" \"i686-linux\"))\n"
"   (systems-and-targets\n"
"    (map (lambda (target)\n"
"           (cons \"x86_64-linux\" target))\n"
"         '(\"aarch64-linux-gnu\"\n"
"           \"i586-pc-gnu\")))))\n"
" #:web-server-args\n"
" '(#:event-source \"https://example.com\"\n"
"   #:controller-args\n"
"   (#:title \"example.com build farm\")))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43195 guix-git/doc/guix.texi:43268
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{extra-environment-variables} (default: @var{'()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43197 guix-git/doc/guix.texi:43270
#: guix-git/doc/guix.texi:43612
msgid "Extra environment variables to set via the shepherd service."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:43201
#, no-wrap
msgid "Guix Build Coordinator"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43207
msgid "The @uref{https://git.cbaines.net/guix/build-coordinator/,Guix Build Coordinator} aids in distributing derivation builds among machines running an @dfn{agent}.  The build daemon is still used to build the derivations, but the Guix Build Coordinator manages allocating builds and working with the results."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43213
msgid "The Guix Build Coordinator consists of one @dfn{coordinator}, and one or more connected @dfn{agent} processes.  The coordinator process handles clients submitting builds, and allocating builds to agents.  The agent processes talk to a build daemon to actually perform the builds, then send the results back to the coordinator."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43217
msgid "There is a script to run the coordinator component of the Guix Build Coordinator, but the Guix service uses a custom Guile script instead, to provide better integration with G-expressions used in the configuration."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43218
#, no-wrap
msgid "guix-build-coordinator-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43221
msgid "Service type for the Guix Build Coordinator.  Its value must be a @code{guix-build-coordinator-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43223
#, no-wrap
msgid "{Data Type} guix-build-coordinator-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43225
msgid "Data type representing the configuration of the Guix Build Coordinator."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43227
#, no-wrap
msgid "@code{package} (default: @code{guix-build-coordinator})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43229 guix-git/doc/guix.texi:43285
msgid "The Guix Build Coordinator package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43230
#, no-wrap
msgid "@code{user} (default: @code{\"guix-build-coordinator\"})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43233
#, no-wrap
msgid "@code{group} (default: @code{\"guix-build-coordinator\"})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43236
#, no-wrap
msgid "@code{database-uri-string} (default: @code{\"sqlite:///var/lib/guix-build-coordinator/guix_build_coordinator.db\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43238
msgid "The URI to use for the database."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43239
#, no-wrap
msgid "@code{agent-communication-uri} (default: @code{\"http://0.0.0.0:8745\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43241
msgid "The URI describing how to listen to requests from agent processes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43242
#, no-wrap
msgid "@code{client-communication-uri} (default: @code{\"http://127.0.0.1:8746\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43246
msgid "The URI describing how to listen to requests from clients.  The client API allows submitting builds and currently isn't authenticated, so take care when configuring this value."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43247
#, no-wrap
msgid "@code{allocation-strategy} (default: @code{#~basic-build-allocation-strategy})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43251
msgid "A G-expression for the allocation strategy to be used.  This is a procedure that takes the datastore as an argument and populates the allocation plan in the database."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43252
#, no-wrap
msgid "@code{hooks} (default: @var{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43255
msgid "An association list of hooks.  These provide a way to execute arbitrary code upon certain events, like a build result being processed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43256
#, no-wrap
msgid "@code{parallel-hooks} (default: @var{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43260
msgid "Hooks can be configured to run in parallel.  This parameter is an association list of hooks to do in parallel, where the key is the symbol for the hook and the value is the number of threads to run."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43261
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{listen-repl} (default: @var{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43264
msgid "Port or filename to spawn a REPL listening on, pass @code{#t} to listen on the default port or @code{#f} to disable."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43265
#, no-wrap
msgid "@code{guile} (default: @code{guile-3.0-latest})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43267
msgid "The Guile package with which to run the Guix Build Coordinator."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43274
#, no-wrap
msgid "guix-build-coordinator-agent-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43277
msgid "Service type for a Guix Build Coordinator agent.  Its value must be a @code{guix-build-coordinator-agent-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43279
#, no-wrap
msgid "{Data Type} guix-build-coordinator-agent-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43281
msgid "Data type representing the configuration a Guix Build Coordinator agent."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43283
#, no-wrap
msgid "@code{package} (default: @code{guix-build-coordinator/agent-only})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43286
#, no-wrap
msgid "@code{user} (default: @code{\"guix-build-coordinator-agent\"})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43289
#, no-wrap
msgid "@code{coordinator} (default: @code{\"http://localhost:8745\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43291
msgid "The URI to use when connecting to the coordinator."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:43292
#, no-wrap
msgid "authentication"
msgstr "authentication"

#. type: table
#: guix-git/doc/guix.texi:43295
msgid "Record describing how this agent should authenticate with the coordinator.  Possible record types are described below."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43296
#, no-wrap
msgid "@code{systems} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43299
msgid "The systems for which this agent should fetch builds.  The agent process will use the current system it's running on as the default."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43300
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-parallel-builds} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43302
msgid "The number of builds to perform in parallel."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43303
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-parallel-uploads} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43305
msgid "The number of uploads to perform in parallel."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43306
#, no-wrap
msgid "@code{max-allocated-builds} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43308
msgid "The maximum number of builds this agent can be allocated."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43309
#, no-wrap
msgid "@code{max-1min-load-average} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43313
msgid "Load average value to look at when considering starting new builds, if the 1 minute load average exceeds this value, the agent will wait before starting new builds."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43317
msgid "This will be unspecified if the value is @code{#f}, and the agent will use the number of cores reported by the system as the max 1 minute load average."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43318
#, no-wrap
msgid "@code{derivation-substitute-urls} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43321
msgid "URLs from which to attempt to fetch substitutes for derivations, if the derivations aren't already available."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43322
#, no-wrap
msgid "@code{non-derivation-substitute-urls} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43325
msgid "URLs from which to attempt to fetch substitutes for build inputs, if the input store items aren't already available."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43326 guix-git/doc/guix.texi:43441
#, no-wrap
msgid "@code{extra-options} (default: @var{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43328
msgid "Extra command line options for @code{guix-build-coordinator-agent}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43331
#, no-wrap
msgid "{Data Type} guix-build-coordinator-agent-password-auth"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43334
msgid "Data type representing an agent authenticating with a coordinator via a UUID and password."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43340 guix-git/doc/guix.texi:43356
msgid "The UUID of the agent.  This should be generated by the coordinator process, stored in the coordinator database, and used by the intended agent."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43343
msgid "The password to use when connecting to the coordinator."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43347
#, no-wrap
msgid "{Data Type} guix-build-coordinator-agent-password-file-auth"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43350
msgid "Data type representing an agent authenticating with a coordinator via a UUID and password read from a file."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:43357
#, no-wrap
msgid "password-file"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43360
msgid "A file containing the password to use when connecting to the coordinator."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43364
#, no-wrap
msgid "{Data Type} guix-build-coordinator-agent-dynamic-auth"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43367
msgid "Data type representing an agent authenticating with a coordinator via a dynamic auth token and agent name."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:43369 guix-git/doc/guix.texi:43386
#, fuzzy, no-wrap
msgid "agent-name"
msgstr "Canali"

#. type: table
#: guix-git/doc/guix.texi:43373 guix-git/doc/guix.texi:43390
msgid "Name of an agent, this is used to match up to an existing entry in the database if there is one.  When no existing entry is found, a new entry is automatically added."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43377
msgid "Dynamic auth token, this is created and stored in the coordinator database, and is used by the agent to authenticate."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43381
#, no-wrap
msgid "{Data Type} guix-build-coordinator-agent-dynamic-auth-with-file"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43384
msgid "Data type representing an agent authenticating with a coordinator via a dynamic auth token read from a file and agent name."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:43391
#, no-wrap
msgid "token-file"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43394
msgid "File containing the dynamic auth token, this is created and stored in the coordinator database, and is used by the agent to authenticate."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:43398
#, no-wrap
msgid "Guix Data Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43402
msgid "The @uref{http://data.guix.gnu.org,Guix Data Service} processes, stores and provides data about GNU Guix.  This includes information about packages, derivations and lint warnings."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43405
msgid "The data is stored in a PostgreSQL database, and available through a web interface."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43406
#, no-wrap
msgid "guix-data-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43411
msgid "Service type for the Guix Data Service.  Its value must be a @code{guix-data-service-configuration} object.  The service optionally extends the getmail service, as the guix-commits mailing list is used to find out about changes in the Guix git repository."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43413
#, no-wrap
msgid "{Data Type} guix-data-service-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43415 guix-git/doc/guix.texi:43512
msgid "Data type representing the configuration of the Guix Data Service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43417
#, no-wrap
msgid "@code{package} (default: @code{guix-data-service})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43419
msgid "The Guix Data Service package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43420
#, no-wrap
msgid "@code{user} (default: @code{\"guix-data-service\"})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43423
#, no-wrap
msgid "@code{group} (default: @code{\"guix-data-service\"})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43426
#, no-wrap
msgid "@code{port} (default: @code{8765})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43428
msgid "The port to bind the web service to."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43431
msgid "The host to bind the web service to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43432
#, no-wrap
msgid "@code{getmail-idle-mailboxes} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43435
msgid "If set, this is the list of mailboxes that the getmail service will be configured to listen to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43436
#, no-wrap
msgid "@code{commits-getmail-retriever-configuration} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43440
msgid "If set, this is the @code{getmail-retriever-configuration} object with which to configure getmail to fetch mail from the guix-commits mailing list."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43443
msgid "Extra command line options for @code{guix-data-service}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43444
#, no-wrap
msgid "@code{extra-process-jobs-options} (default: @var{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43446
msgid "Extra command line options for @code{guix-data-service-process-jobs}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43447
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{git-repositories} (default: @var{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43449
msgid "List of git-repository information to insert into the database."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43450
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{build-servers} (default: @var{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43452
msgid "List of build-server information to insert into the database."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43457 guix-git/doc/guix.texi:43471
#, fuzzy, no-wrap
#| msgid "Services"
msgid "guix-home-service-type"
msgstr "Servizi"

#. type: subsubheading
#: guix-git/doc/guix.texi:43457
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Guix Home Service"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:43465
msgid "The Guix Home service is a way to let Guix System deploy the home environment of one or more users (@pxref{Home Configuration}, for more on Guix Home).  That way, the system configuration embeds declarations of the home environment of those users and can be used to deploy everything consistently at once, saving users the need to run @command{guix home reconfigure} independently."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43470
msgid "@command{guix home} can operate on the home environment configured for current user via this service, but its effect won't last beyond the next system activation.  This can be used for quick testing and may avoid the need of keeping a separate home configuration."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43476
msgid "Service type for the Guix Home service.  Its value must be a list of lists containing user and home environment pairs.  The key of each pair is a string representing the user to deploy the configuration under and the value is a home-environment configuration."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43479
#, no-wrap
msgid ""
"(use-modules (gnu home))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43483
#, no-wrap
msgid ""
"(define my-home\n"
"  (home-environment\n"
"    @dots{}))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43488
#, no-wrap
msgid ""
"(operating-system\n"
"  (services (append (list (service guix-home-service-type\n"
"                                   `((\"alice\" ,my-home))))\n"
"                    %base-services)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43492
msgid "This service can be extended by other services to add additional home environments, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43496
#, no-wrap
msgid ""
"(simple-service 'my-extra-home guix-home-service-type\n"
"                `((\"bob\" ,my-extra-home)))\n"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:43499
#, no-wrap
msgid "Nar Herder"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43502
msgid "The @uref{https://git.cbaines.net/guix/nar-herder/about/,Nar Herder} is a utility for managing a collection of nars."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43503
#, no-wrap
msgid "nar-herder-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43508
msgid "Service type for the Guix Data Service.  Its value must be a @code{nar-herder-configuration} object.  The service optionally extends the getmail service, as the guix-commits mailing list is used to find out about changes in the Guix git repository."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43510
#, no-wrap
msgid "{Data Type} nar-herder-configuration"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43514
#, no-wrap
msgid "@code{package} (default: @code{nar-herder})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43516
msgid "The Nar Herder package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43517
#, no-wrap
msgid "@code{user} (default: @code{\"nar-herder\"})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43520
#, no-wrap
msgid "@code{group} (default: @code{\"nar-herder\"})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43523
#, no-wrap
msgid "@code{port} (default: @code{8734})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43528
msgid "The host to bind the server to."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43533
msgid "Optional URL of the other Nar Herder instance which should be mirrored.  This means that this Nar Herder instance will download it's database, and keep it up to date."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43534
#, no-wrap
msgid "@code{database} (default: @code{\"/var/lib/nar-herder/nar_herder.db\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43539
msgid "Location for the database.  If this Nar Herder instance is mirroring another, the database will be downloaded if it doesn't exist.  If this Nar Herder instance isn't mirroring another, an empty database will be created."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43540
#, no-wrap
msgid "@code{database-dump} (default: @code{\"/var/lib/nar-herder/nar_herder_dump.db\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43544
msgid "Location of the database dump.  This is created and regularly updated by taking a copy of the database.  This is the version of the database that is available to download."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43545
#, no-wrap
msgid "@code{storage} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43547
msgid "Optional location in which to store nars."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43548
#, no-wrap
msgid "@code{storage-limit} (default: @code{\"none\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43551
msgid "Limit in bytes for the nars stored in the storage location.  This can also be set to ``none'' so that there is no limit."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43554
msgid "When the storage location exceeds this size, nars are removed according to the nar removal criteria."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43555
#, no-wrap
msgid "@code{storage-nar-removal-criteria} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43558
msgid "Criteria used to remove nars from the storage location.  These are used in conjunction with the storage limit."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43563
msgid "When the storage location exceeds the storage limit size, nars will be checked against the nar removal criteria and if any of the criteria match, they will be removed.  This will continue until the storage location is below the storage limit size."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43567
msgid "Each criteria is specified by a string, then an equals sign, then another string. Currently, only one criteria is supported, checking if a nar is stored on another Nar Herder instance."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43575
msgid "This allows the user's Guix to keep substitute information in cache for @var{ttl}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43576 guix-git/doc/guix.texi:43644
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{new-ttl} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43580
msgid "If specified, this will override the @code{ttl} setting when used for the @code{Cache-Control} headers, but this value will be used when scheduling the removal of nars."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43583
msgid "Use this setting when the TTL is being reduced to avoid removing nars while clients still have cached narinfos."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43590
#, no-wrap
msgid "@code{log-level} (default: @code{'DEBUG})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43593
msgid "Log level to use, specify a log level like @code{'INFO} to stop logging individual requests."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43594
#, no-wrap
msgid "@code{cached-compressions} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43598
msgid "Activate generating cached nars with different compression details from the stored nars.  This is a list of nar-herder-cached-compression-configuration records."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43599
#, no-wrap
msgid "@code{min-uses} (default: @code{3})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43602
msgid "When cached-compressions are enabled, generate cached nars when at least this number of requests are made for a nar."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43603
#, no-wrap
msgid "@code{workers} (default: @code{2})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43605
msgid "Number of cached nars to generate at a time."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43606
#, no-wrap
msgid "@code{nar-source} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43609
msgid "Location to fetch nars from when computing cached compressions.  By default, the storage location will be used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43610
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{extra-environment-variables} (default: @code{'()})"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:43616
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} nar-herder-cached-compression-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:43618
msgid "Data type representing the cached compression configuration."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43622
msgid "Type of compression to use, e.g. @code{'zstd}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43625
msgid "Level of the compression to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43626
#, no-wrap
msgid "@code{directory} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43629
msgid "Location to store the cached nars.  If unspecified, they will be stored in /var/cache/nar-herder/nar/TYPE."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43630
#, no-wrap
msgid "@code{directory-max-size} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43632
msgid "Maximum size in bytes of the directory."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43633
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{unused-removal-duration} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43636
msgid "If a cached nar isn't used for @code{unused-removal-duration}, it will be scheduled for removal."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43639
msgid "@var{unused-removal-duration} must denote a duration: @code{5d} means 5 days, @code{1m} means 1 month, and so on."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43643
msgid "If specified this overrides the @code{ttl} used for narinfos when this cached compression is available."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43647
msgid "As with the @code{new-ttl} option for @code{nar-herder-configuration}, this value will override the @code{ttl} when used for narinfo requests."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:43654
#, fuzzy, no-wrap
#| msgid "Messaging Services"
msgid "VFS Mapping Service"
msgstr "Servizi di messaggistica"

#. type: cindex
#: guix-git/doc/guix.texi:43655
#, no-wrap
msgid "VFS mapping"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43656
#, no-wrap
msgid "Virtual File System mapping"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43657
#, fuzzy, no-wrap
#| msgid "PAM Mount Service"
msgid "bind mounts, service"
msgstr "Servizio PAM Mount"

#. type: cindex
#: guix-git/doc/guix.texi:43658
#, fuzzy, no-wrap
#| msgid "The mcron service."
msgid "overlay mounts, service"
msgstr "Il servizio mcron."

#. type: Plain text
#: guix-git/doc/guix.texi:43666
msgid "The VFS (Virtual File System) Mapping service allows you to bind a file name under a different name in the global namespace.  For example, this is used by the Shared Cache Service (@pxref{Guix Services}) to bind the @samp{root} user's cache over another user's cache.  Another use case may be to expose game data from the store over your home directory, and apply modifications there."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43669
msgid "The service has three @emph{policies} to choose from with respect to access rights on the bound over path:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43671
#, no-wrap
msgid "'bind"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43674
msgid "Use a bind mount; the ownership and file permissions of the destination are the same as the source."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43675
#, fuzzy, no-wrap
#| msgid "translated."
msgid "'translate"
msgstr "tradotti."

#. type: table
#: guix-git/doc/guix.texi:43679
msgid "Use bindfs to make the destination appear as owned by the target user and group.  Writes will be propagated back to the source as if made by the original owner."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43680
#, no-wrap
msgid "'overlay"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43685
msgid "Use an overlay to make the destination appear as owned by the target user and group. Writes will not appear in the source, but will be stored in a target-user-owned @samp{-overlay} suffixed directory near the destination."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43691
msgid "Here is an example configuration that exposes the default data directory of @command{tuxpaint} under the home directory of @code{alice}.  Any modification made by Alice to the brushes or stamps will not propagate back to the store (which is read-only anyway)."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43707
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services\n"
"   (cons*\n"
"    (service vfs-mapping-service-type\n"
"             (vfs-mapping-configuration\n"
"              (bindings (list (vfs-mapping\n"
"                               (source      #~(string-append #$tuxpaint\n"
"                                                             \"/share/tuxpaint\"))\n"
"                               (destination \"/home/alice/.tuxpaint\")\n"
"                               (user        \"alice\")\n"
"                               (policy      'overlay)\n"
"                               (name        \"alice-tuxpaint-overlay\"))))))\n"
"    %desktop-services)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43711
msgid "The service can also be extended by providing a list of @code{vfs-mapping}, allowing for easier splitting of configuration."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43726
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services\n"
"   (cons*\n"
"    (simple-service 'bob-too-wants-to-hack-on-tuxpaint\n"
"                    vfs-mapping-service-type\n"
"                    (list (vfs-mapping\n"
"                           (source      #~(string-append #$tuxpaint \"/share/tuxpaint\"))\n"
"                           (destination \"/home/bob/.tuxpaint\")\n"
"                           (user        \"bob\")\n"
"                           (policy      'overlay)\n"
"                           (name        \"bob-tuxpaint-overlay\"))))\n"
"    %desktop-services)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43730
msgid "The @code{source} file name must exist for the service to start.  The @code{destination} directory will be created if it does not exist."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43731
#, fuzzy, no-wrap
#| msgid "Services"
msgid "vfs-mapping-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:43734
msgid "Service type for binding a directory in multiple places on the file system."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43740
msgid "The access rights are either the same in source and destination (@code{'bind}), or writes are translated back to the sources as if made by the destination's owner (@code{'translate}), or kept in an overlay directory near the destination (@code{'overlay}).  The service's value must be a @code{vfs-mapping-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43742
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} vfs-mapping-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:43744
#, fuzzy
#| msgid "Documentation"
msgid "Data type representing the configuration of the vfs-mapping service."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:43746
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{bindfs} (default: @code{#~(string-append #$bindfs \"/bin/bindfs\")})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43748
msgid "The @command{bindfs} command to use for mounting."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43749
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{fusermount} (default: @code{#~(string-append #$fuse-2 \"/bin/fusermount\")})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43751
#, fuzzy
#| msgid "Updating the Guix package definition."
msgid "The @command{fusermount} command to use."
msgstr "Aggiornamento della definizione del pacchetto Guix."

#. type: item
#: guix-git/doc/guix.texi:43752
#, no-wrap
msgid "@code{umount} (default: @code{#~(string-append #$util-linux+udev \"/bin/umount\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43754
#, fuzzy
#| msgid "Updating the Guix package definition."
msgid "The @command{umount} command to use."
msgstr "Aggiornamento della definizione del pacchetto Guix."

#. type: item
#: guix-git/doc/guix.texi:43755
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{bindings} (default: @code{'()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43757
msgid "A list of @code{vfs-mapping} records."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43761
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} vfs-mapping"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:43763
#, fuzzy
#| msgid "Documentation"
msgid "Data type representing the configuration for a single shared directory."
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43767
#, fuzzy
#| msgid "Updating the Guix package definition."
msgid "The source file name to be shared."
msgstr "Aggiornamento della definizione del pacchetto Guix."

#. type: table
#: guix-git/doc/guix.texi:43770
msgid "The destination at which the contents of @code{source} will be exposed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43771
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{policy} (default: @code{'translate})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43776
msgid "Either @code{'bind} (same ownership and access rights for @code{source} and @code{destination}), @code{'translate} (read-write, with writes translated as if made by @code{source}'s owner), or @code{'overlay} (read-only with @code{user}-owned writable overlay)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43777
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{user} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43781
msgid "The user that will own the @code{destination} directory, and appear to own its content.  It must be kept at its default @code{#f} value when using the @code{'bind} policy."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43785
msgid "The group that will own the @code{destination} directory, and appear to own its content."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43786
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{name} (default: @code{\"<src>-[<policy>]-><dst>\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43788
msgid "The name of the shepherd service to mount and unmount the binding."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43789
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{requirement} (default: @code{'(file-systems user-homes)})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43792
msgid "The list of services that Shepherd ought to provision before trying to mount."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43796
#, no-wrap
msgid "oom"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43797
#, no-wrap
msgid "out of memory killer"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43798
#, no-wrap
msgid "earlyoom"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43799
#, no-wrap
msgid "early out of memory daemon"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:43800
#, no-wrap
msgid "Early OOM Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43807
msgid "@uref{https://github.com/rfjakob/earlyoom,Early OOM}, also known as Earlyoom, is a minimalist out of memory (OOM) daemon that runs in user space and provides a more responsive and configurable alternative to the in-kernel OOM killer.  It is useful to prevent the system from becoming unresponsive when it runs out of memory."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43808
#, no-wrap
msgid "earlyoom-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43813
msgid "The service type for running @command{earlyoom}, the Early OOM daemon.  Its value must be a @code{earlyoom-configuration} object, described below.  The service can be instantiated in its default configuration with:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43816
#, no-wrap
msgid "(service earlyoom-service-type)\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43819
#, no-wrap
msgid "{Data Type} earlyoom-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43821
msgid "This is the configuration record for the @code{earlyoom-service-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43823
#, no-wrap
msgid "@code{earlyoom} (default: @var{earlyoom})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43825
msgid "The Earlyoom package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43826
#, no-wrap
msgid "@code{minimum-available-memory} (default: @code{10})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43828
msgid "The threshold for the minimum @emph{available} memory, in percentages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43829
#, no-wrap
msgid "@code{minimum-free-swap} (default: @code{10})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43831
msgid "The threshold for the minimum free swap memory, in percentages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43832
#, no-wrap
msgid "@code{prefer-regexp} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43835
msgid "A regular expression (as a string) to match the names of the processes that should be preferably killed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43836
#, no-wrap
msgid "@code{avoid-regexp} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43839
msgid "A regular expression (as a string) to match the names of the processes that should @emph{not} be killed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43840
#, no-wrap
msgid "@code{memory-report-interval} (default: @code{0})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43843
msgid "The interval in seconds at which a memory report is printed.  It is disabled by default."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43844
#, no-wrap
msgid "@code{ignore-positive-oom-score-adj?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43847
msgid "A boolean indicating whether the positive adjustments set in @file{/proc/*/oom_score_adj} should be ignored."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43848
#, no-wrap
msgid "@code{show-debug-messages?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43851
msgid "A boolean indicating whether debug messages should be printed.  The logs are saved at @file{/var/log/earlyoom.log}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43852
#, no-wrap
msgid "@code{send-notification-command} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43855
msgid "This can be used to provide a custom command used for sending notifications."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:43858
#, fuzzy, no-wrap
#| msgid "Services"
msgid "fstrim Service"
msgstr "Servizi"

#. type: cindex
#: guix-git/doc/guix.texi:43859
#, fuzzy, no-wrap
#| msgid "Services"
msgid "fstrim service"
msgstr "Servizi"

#. type: cindex
#: guix-git/doc/guix.texi:43860
#, no-wrap
msgid "solid state drives, periodic trim"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43861
#, no-wrap
msgid "solid state drives, trim"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43865
msgid "The command @command{fstrim} can be used to discard (or @dfn{trim})  unused blocks on a mounted file system."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:43874
msgid "Running @command{fstrim} frequently, or even using @command{mount -o discard}, might negatively affect the lifetime of poor-quality SSD devices.  For most desktop and server systems a sufficient trimming frequency is once a week.  Note that not all devices support a queued trim, so each trim command incurs a performance penalty on whatever else might be trying to use the disk at the time."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43876
#, fuzzy, no-wrap
#| msgid "Services"
msgid "fstrim-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:43880
msgid "Type for a service that periodically runs @command{fstrim}, whose value must be an @code{<fstrim-configuration>} object.  The service can be instantiated in its default configuration with:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43883
#, fuzzy, no-wrap
#| msgid "Services"
msgid "(service fstrim-service-type)\n"
msgstr "Servizi"

#. type: deftp
#: guix-git/doc/guix.texi:43888
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} fstrim-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:43890
msgid "Available @code{fstrim-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43892
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{package} (default: @code{util-linux}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43894
msgid "The package providing the @command{fstrim} command."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43895
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{schedule} (default: @code{\"0 0 * * 0\"}) (type: Shepherd calendar event)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43900
msgid "Schedule for launching @command{fstrim}, expressed as a string in traditional cron syntax or as a gexp evaluating to a Shepherd calendar event (@pxref{Timers,,, shepherd,The GNU Shepherd Manual}).  By default this is set to run weekly on Sunday at 00:00."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43901
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{listed-in} (default: @code{'(\"/etc/fstab\" \"/proc/self/mountinfo\")}) (type: maybe-list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43906
msgid "List of files in fstab or kernel mountinfo format.  All missing or empty files are silently ignored.  The evaluation of the list @emph{stops} after the first non-empty file.  File systems with @code{X-fstrim.notrim} mount option in fstab are skipped."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43907
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{verbose?} (default: @code{#t}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43909
msgid "Verbose execution."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43910
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{quiet-unsupported?} (default: @code{#t}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43912
msgid "Suppress error messages if trim operation (ioctl) is unsupported."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43913
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{extra-arguments} (type: maybe-list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43916
msgid "Extra options to append to @command{fstrim} (run @samp{man fstrim} for more information)."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43924
#, no-wrap
msgid "modprobe"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43925
#, no-wrap
msgid "kernel module loader"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:43926
#, no-wrap
msgid "Kernel Module Loader Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43932
msgid "The kernel module loader service allows one to load loadable kernel modules at boot.  This is especially useful for modules that don't autoload and need to be manually loaded, as is the case with @code{ddcci}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43933
#, no-wrap
msgid "kernel-module-loader-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43939
msgid "The service type for loading loadable kernel modules at boot with @command{modprobe}.  Its value must be a list of strings representing module names.  For example loading the drivers provided by @code{ddcci-driver-linux}, in debugging mode by passing some module parameters, can be done as follow:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43944
#, no-wrap
msgid ""
"(use-modules (gnu) (gnu services))\n"
"(use-package-modules linux)\n"
"(use-service-modules linux)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43948
#, no-wrap
msgid ""
"(define ddcci-config\n"
"  (plain-file \"ddcci.conf\"\n"
"              \"options ddcci dyndbg delay=120\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43958
#, no-wrap
msgid ""
"(operating-system\n"
"  ...\n"
"  (services (cons* (service kernel-module-loader-service-type\n"
"                            '(\"ddcci\" \"ddcci_backlight\"))\n"
"                   (simple-service 'ddcci-config etc-service-type\n"
"                                   (list `(\"modprobe.d/ddcci.conf\"\n"
"                                           ,ddcci-config)))\n"
"                   %base-services))\n"
"  (kernel-loadable-modules (list ddcci-driver-linux)))\n"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:43961
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Cachefilesd Service"
msgstr "Servizi"

#. type: cindex
#: guix-git/doc/guix.texi:43963
#, no-wrap
msgid "cachefilesd"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43964
#, no-wrap
msgid "fscache, file system caching (Linux)"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43968
msgid "The Cachefilesd service starts a daemon that caches network file system data locally.  It is especially useful for NFS and AFS shares, where it reduces latencies for repeated access when reading files."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43970
msgid "The daemon can be configured as follows:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43975
#, no-wrap
msgid ""
"(service cachefilesd-service-type\n"
"         (cachefilesd-configuration\n"
"           (cache-directory \"/var/cache/fscache\")))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43977
#, fuzzy, no-wrap
#| msgid "Services"
msgid "cachefilesd-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:43981
msgid "The service type for starting @command{cachefilesd}.  The value for this service type is a @code{cachefilesd-configuration}, whose only required field is @var{cache-directory}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43985
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} cachefilesd-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:43987
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{cachefilesd-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:43989
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{cachefilesd} (default: @code{cachefilesd}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43991
msgid "The cachefilesd package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43992
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{debug-output?} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43994
msgid "Print debugging output to stderr."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43995
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{use-syslog?} (default: @code{#t}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:43997
msgid "Log to syslog facility instead of stdout."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43998
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{scan?} (default: @code{#t}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44000
msgid "Scan for cacheable objects."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44001
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{cache-directory} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44003
msgid "Location of the cache directory."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44004
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{cache-name} (default: @code{\"CacheFiles\"}) (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44006
msgid "Name of cache (keep unique)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44007
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{security-context} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44009
msgid "SELinux security context."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44010
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{pause-culling-for-block-percentage} (default: @code{7}) (type: maybe-non-negative-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44012
msgid "Pause culling when available blocks exceed this percentage."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44013
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{pause-culling-for-file-percentage} (default: @code{7}) (type: maybe-non-negative-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44015
msgid "Pause culling when available files exceed this percentage."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44016
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{resume-culling-for-block-percentage} (default: @code{5}) (type: maybe-non-negative-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44018
msgid "Start culling when available blocks drop below this percentage."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44019
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{resume-culling-for-file-percentage} (default: @code{5}) (type: maybe-non-negative-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44021
msgid "Start culling when available files drop below this percentage."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44022
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{pause-caching-for-block-percentage} (default: @code{1}) (type: maybe-non-negative-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44025
msgid "Pause further allocations when available blocks drop below this percentage."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44026
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{pause-caching-for-file-percentage} (default: @code{1}) (type: maybe-non-negative-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44029
msgid "Pause further allocations when available files drop below this percentage."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44030
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{log2-table-size} (default: @code{12}) (type: maybe-non-negative-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44032
msgid "Size of tables holding cullable objects in logarithm of base 2."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44033
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{cull?} (default: @code{#t}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44035
msgid "Create free space by culling (consumes system load)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44036
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{trace-function-entry-in-kernel-module?} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44038
msgid "Trace function entry in the kernel module (for debugging)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44039
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{trace-function-exit-in-kernel-module?} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44041
msgid "Trace function exit in the kernel module (for debugging)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44042
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{trace-internal-checkpoints-in-kernel-module?} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44044
msgid "Trace internal checkpoints in the kernel module (for debugging)."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44049
#, no-wrap
msgid "rasdaemon"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44050
#, no-wrap
msgid "Platform Reliability, Availability and Serviceability daemon"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:44051
#, no-wrap
msgid "Rasdaemon Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44056
msgid "The Rasdaemon service provides a daemon which monitors platform @acronym{RAS, Reliability@comma{} Availability@comma{} and Serviceability} reports from Linux kernel trace events, logging them to syslogd."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44059
msgid "Reliability, Availability and Serviceability is a concept used on servers meant to measure their robustness."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44062
msgid "@strong{Relability} is the probability that a system will produce correct outputs:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44064
#, no-wrap
msgid "Generally measured as Mean Time Between Failures (MTBF), and"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44065
#, no-wrap
msgid "Enhanced by features that help to avoid, detect and repair hardware"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:44067
msgid "faults"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44071
msgid "@strong{Availability} is the probability that a system is operational at a given time:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44073
#, no-wrap
msgid "Generally measured as a percentage of downtime per a period of time, and"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44074
#, no-wrap
msgid "Often uses mechanisms to detect and correct hardware faults in runtime."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44079
msgid "@strong{Serviceability} is the simplicity and speed with which a system can be repaired or maintained:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44081
#, no-wrap
msgid "Generally measured on Mean Time Between Repair (MTBR)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44086
msgid "Among the monitoring measures, the most usual ones include:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44088
#, no-wrap
msgid "CPU – detect errors at instruction execution and at L1/L2/L3 caches;"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44089
#, no-wrap
msgid "Memory – add error correction logic (ECC) to detect and correct errors;"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44090
#, no-wrap
msgid "I/O – add CRC checksums for transferred data;"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44091
#, no-wrap
msgid "Storage – RAID, journal file systems, checksums, Self-Monitoring,"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:44093
msgid "Analysis and Reporting Technology (SMART)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44099
msgid "By monitoring the number of occurrences of error detections, it is possible to identify if the probability of hardware errors is increasing, and, on such case, do a preventive maintenance to replace a degraded component while those errors are correctable."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44103
msgid "For detailed information about the types of error events gathered and how to make sense of them, see the kernel administrator's guide at @url{https://www.kernel.org/doc/html/latest/admin-guide/ras.html}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44104
#, no-wrap
msgid "rasdaemon-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44107
msgid "Service type for the @command{rasdaemon} service.  It accepts a @code{rasdaemon-configuration} object.  Instantiating like"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44110
#, no-wrap
msgid "(service rasdaemon-service-type)\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44114
msgid "will load with a default configuration, which monitors all events and logs to syslogd."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44116
#, no-wrap
msgid "{Data Type} rasdaemon-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44118
msgid "The data type representing the configuration of @command{rasdaemon}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44120
#, no-wrap
msgid "@code{record?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44125
msgid "A boolean indicating whether to record the events in an SQLite database.  This provides a more structured access to the information contained in the log file.  The database location is hard-coded to @file{/var/lib/rasdaemon/ras-mc_event.db}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44129
#, no-wrap
msgid "zram"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44130
#, no-wrap
msgid "compressed swap"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44131
#, no-wrap
msgid "Compressed RAM-based block devices"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:44132
#, no-wrap
msgid "Zram Device Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44138
msgid "The Zram device service provides a compressed swap device in system memory.  The Linux Kernel documentation has more information about @uref{https://www.kernel.org/doc/html/latest/admin-guide/blockdev/zram.html,zram} devices."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44139
#, no-wrap
msgid "zram-device-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44143
msgid "This service creates the zram block device, formats it as swap and enables it as a swap device.  The service's value is a @code{zram-device-configuration} record."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44144
#, no-wrap
msgid "{Data Type} zram-device-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44147
msgid "This is the data type representing the configuration for the zram-device service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44149
#, no-wrap
msgid "@code{size} (default @code{\"1G\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44153
msgid "This is the amount of space you wish to provide for the zram device.  It accepts a string and can be a number of bytes or use a suffix, eg.: @code{\"512M\"} or @code{1024000}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44153
#, no-wrap
msgid "@code{compression-algorithm} (default @code{'lzo})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44157
msgid "This is the compression algorithm you wish to use.  It is difficult to list all the possible compression options, but common ones supported by Guix's Linux Libre Kernel include @code{'lzo}, @code{'lz4} and @code{'zstd}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44157
#, no-wrap
msgid "@code{memory-limit} (default @code{0})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44164
msgid "This is the maximum amount of memory which the zram device can use.  Setting it to '0' disables the limit.  While it is generally expected that compression will be 2:1, it is possible that uncompressable data can be written to swap and this is a method to limit how much memory can be used.  It accepts a string and can be a number of bytes or use a suffix, eg.: @code{\"2G\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44164
#, no-wrap
msgid "@code{priority} (default @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44169
msgid "This is the priority of the swap device created from the zram device.  @xref{Swap Space} for a description of swap priorities.  You might want to set a specific priority for the zram device, otherwise it could end up not being used much for the reasons described there."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44177
#, no-wrap
msgid "hurd-console-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44179
msgid "This service starts the fancy @code{VGA} console client on the Hurd."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44181
msgid "The service's value is a @code{hurd-console-configuration} record."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44183
#, no-wrap
msgid "{Data Type} hurd-console-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44186
msgid "This is the data type representing the configuration for the hurd-console-service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44188 guix-git/doc/guix.texi:44204
#, no-wrap
msgid "@code{hurd} (default: @var{hurd})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44190 guix-git/doc/guix.texi:44206
msgid "The Hurd package to use."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44193
#, no-wrap
msgid "hurd-getty-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44195
msgid "This service starts a tty using the Hurd @code{getty} program."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44197
msgid "The service's value is a @code{hurd-getty-configuration} record."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44199
#, no-wrap
msgid "{Data Type} hurd-getty-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44202
msgid "This is the data type representing the configuration for the hurd-getty-service."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44209
msgid "The name of the console this Getty runs on---e.g., @code{\"tty1\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44210
#, no-wrap
msgid "@code{baud-rate} (default: @code{38400})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44212
msgid "An integer specifying the baud rate of the tty."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44219
#, no-wrap
msgid "fingerprint"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:44220
#, no-wrap
msgid "Fingerprint Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44224
msgid "The @code{(gnu services authentication)} module provides a DBus service to read and identify fingerprints via a fingerprint sensor."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44225
#, no-wrap
msgid "fprintd-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44228
msgid "The service type for @command{fprintd}, which provides the fingerprint reading capability."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44231
#, no-wrap
msgid "(service fprintd-service-type)\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44234
#, no-wrap
msgid "sysctl"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:44235
#, no-wrap
msgid "System Control Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44239
msgid "The @code{(gnu services sysctl)} provides a service to configure kernel parameters at boot."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44240
#, no-wrap
msgid "sysctl-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44244
msgid "The service type for @command{sysctl}, which modifies kernel parameters under @file{/proc/sys/}.  To enable IPv4 forwarding, it can be instantiated as:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44249
#, no-wrap
msgid ""
"(service sysctl-service-type\n"
"         (sysctl-configuration\n"
"           (settings '((\"net.ipv4.ip_forward\" . \"1\")))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44256
msgid "Since @code{sysctl-service-type} is used in the default lists of services, @code{%base-services} and @code{%desktop-services}, you can use @code{modify-services} to change its configuration and add the kernel parameters that you want (@pxref{Service Reference, @code{modify-services}})."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44263
#, no-wrap
msgid ""
"(modify-services %base-services\n"
"  (sysctl-service-type config =>\n"
"                       (sysctl-configuration\n"
"                         (settings (append '((\"net.ipv4.ip_forward\" . \"1\"))\n"
"                                           %default-sysctl-settings)))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44267
#, no-wrap
msgid "{Data Type} sysctl-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44269
msgid "The data type representing the configuration of @command{sysctl}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44271
#, no-wrap
msgid "@code{sysctl} (default: @code{(file-append procps \"/sbin/sysctl\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44273
msgid "The @command{sysctl} executable to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44274
#, no-wrap
msgid "@code{settings} (default: @code{%default-sysctl-settings})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44276
msgid "An association list specifies kernel parameters and their values."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44279
#, no-wrap
msgid "%default-sysctl-settings"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44282
msgid "An association list specifying the default @command{sysctl} parameters on Guix System."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44284
#, no-wrap
msgid "pcscd"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:44285
#, no-wrap
msgid "PC/SC Smart Card Daemon Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44292
msgid "The @code{(gnu services security-token)} module provides the following service to run @command{pcscd}, the PC/SC Smart Card Daemon.  @command{pcscd} is the daemon program for pcsc-lite and the MuscleCard framework.  It is a resource manager that coordinates communications with smart card readers, smart cards and cryptographic tokens that are connected to the system."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44293
#, no-wrap
msgid "pcscd-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44297
msgid "Service type for the @command{pcscd} service.  Its value must be a @code{pcscd-configuration} object.  To run pcscd in the default configuration, instantiate it as:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44300
#, no-wrap
msgid "(service pcscd-service-type)\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44303
#, no-wrap
msgid "{Data Type} pcscd-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44305
msgid "The data type representing the configuration of @command{pcscd}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44307
#, no-wrap
msgid "@code{pcsc-lite} (default: @code{pcsc-lite})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44309
msgid "The pcsc-lite package that provides pcscd."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44309
#, no-wrap
msgid "@code{usb-drivers} (default: @code{(list ccid)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44312
msgid "List of packages that provide USB drivers to pcscd.  Drivers are expected to be under @file{pcsc/drivers} in the store directory of the package."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44315
#, no-wrap
msgid "LIRC"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:44316
#, fuzzy, no-wrap
#| msgid "Services"
msgid "LIRC Service"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:44319
msgid "The @code{(gnu services lirc)} module provides the following service."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44320
#, fuzzy, no-wrap
#| msgid "Services"
msgid "lirc-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:44323
msgid "Type for a service that runs @url{http://www.lirc.org, LIRC}, a daemon that decodes infrared signals from remote controls."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44325
msgid "The value for this service is a @code{<lirc-configuration>} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44327
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} lirc-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:44329
msgid "Data type representing the configuration of @command{lircd}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44331
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{lirc} (default: @code{lirc}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44333
msgid "Package object for @command{lirc}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44334
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{device} (default: @code{#f}) (type: string)"
msgstr "Documentazione"

#. type: itemx
#: guix-git/doc/guix.texi:44335
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{driver} (default: @code{#f}) (type: string)"
msgstr "Documentazione"

#. type: itemx
#: guix-git/doc/guix.texi:44336
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{config-file} (default: @code{#f}) (type: string-or-file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44338
msgid "TODO.  See @command{lircd} manual for details."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44339
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{extra-options} (default: @code{'()}) (type: list-of-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44341
msgid "Additional command-line options to pass to @command{lircd}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44348
#, no-wrap
msgid "SPICE"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:44349
#, fuzzy, no-wrap
#| msgid "Services"
msgid "SPICE Service"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:44352
msgid "The @code{(gnu services spice)} module provides the following service."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44353
#, fuzzy, no-wrap
#| msgid "Services"
msgid "spice-vdagent-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:44357
msgid "Type of the service that runs @url{https://www.spice-space.org, VDAGENT}, a daemon that enables sharing the clipboard with a vm and setting the guest display resolution when the graphical console window resizes."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44359
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} spice-vdagent-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:44362
msgid "Data type representing the configuration of @code{spice-vdagent-service-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44364
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{spice-vdagent} (default: @code{spice-vdagent}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44366
msgid "Package object for VDAGENT."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44370
#, no-wrap
msgid "inputattach"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:44371
#, no-wrap
msgid "inputattach Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44373
#, no-wrap
msgid "tablet input, for Xorg"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44374
#, no-wrap
msgid "touchscreen input, for Xorg"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44378
msgid "The @uref{https://linuxwacom.github.io/, inputattach} service allows you to use input devices such as Wacom tablets, touchscreens, or joysticks with the Xorg display server."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44379
#, no-wrap
msgid "inputattach-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44382
msgid "Type of a service that runs @command{inputattach} on a device and dispatches events from it."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44384
#, no-wrap
msgid "{Data Type} inputattach-configuration"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44386
#, no-wrap
msgid "@code{device-type} (default: @code{\"wacom\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44389
msgid "The type of device to connect to.  Run @command{inputattach --help}, from the @code{inputattach} package, to see the list of supported device types."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44390
#, no-wrap
msgid "@code{device} (default: @code{\"/dev/ttyS0\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44392
msgid "The device file to connect to the device."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44396
msgid "Baud rate to use for the serial connection.  Should be a number or @code{#f}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44399
msgid "If true, this must be the name of a file to log messages to."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:44402 guix-git/doc/guix.texi:52940
#, no-wrap
msgid "Dictionary Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44403
#, no-wrap
msgid "dictionary"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44406
msgid "The @code{(gnu services dict)} module provides the following service:"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44407
#, fuzzy, no-wrap
#| msgid "Services"
msgid "dicod-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:44410 guix-git/doc/guix.texi:52948
msgid "This is the type of the service that runs the @command{dicod} daemon, an implementation of DICT server (@pxref{Dicod,,, dico, GNU Dico Manual})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44414 guix-git/doc/guix.texi:52952
msgid "You can add @command{open localhost} to your @file{~/.dico} file to make @code{localhost} the default server for @command{dico} client (@pxref{Initialization File,,, dico, GNU Dico Manual})."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:44419
msgid "This service is also available for Guix Home, where it runs directly with your user privileges (@pxref{Miscellaneous Home Services, @code{home-dicod-service-type}})."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44422
#, no-wrap
msgid "{Data Type} dicod-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44424
msgid "Data type representing the configuration of dicod."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44426
#, no-wrap
msgid "@code{dico} (default: @var{dico})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44428
msgid "Package object of the GNU Dico dictionary server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44429
#, no-wrap
msgid "@code{interfaces} (default: @var{'(\"localhost\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44433
msgid "This is the list of IP addresses and ports and possibly socket file names to listen to (@pxref{Server Settings, @code{listen} directive,, dico, GNU Dico Manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44434
#, no-wrap
msgid "@code{handlers} (default: @var{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44436
msgid "List of @code{<dicod-handler>} objects denoting handlers (module instances)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44437
#, no-wrap
msgid "@code{databases} (default: @var{(list %dicod-database:gcide)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44439
msgid "List of @code{<dicod-database>} objects denoting dictionaries to be served."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44442
#, no-wrap
msgid "{Data Type} dicod-handler"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44444
msgid "Data type representing a dictionary handler (module instance)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44448
msgid "Name of the handler (module instance)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44449
#, no-wrap
msgid "@code{module} (default: @var{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44453
msgid "Name of the dicod module of the handler (instance).  If it is @code{#f}, the module has the same name as the handler.  (@pxref{Modules,,, dico, GNU Dico Manual})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44456
msgid "List of strings or gexps representing the arguments for the module handler"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44459
#, no-wrap
msgid "{Data Type} dicod-database"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44461
msgid "Data type representing a dictionary database."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44465
msgid "Name of the database, will be used in DICT commands."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:44466
#, no-wrap
msgid "handler"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44469
msgid "Name of the dicod handler (module instance) used by this database (@pxref{Handlers,,, dico, GNU Dico Manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44470
#, no-wrap
msgid "@code{complex?} (default: @var{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44473
msgid "Whether the database configuration complex.  The complex configuration will need a corresponding @code{<dicod-handler>} object, otherwise not."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44477
msgid "List of strings or gexps representing the arguments for the database (@pxref{Databases,,, dico, GNU Dico Manual})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44480
#, no-wrap
msgid "%dicod-database:gcide"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44483
msgid "A @code{<dicod-database>} object serving the GNU Collaborative International Dictionary of English using the @code{gcide} package."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:44485
#, no-wrap
msgid "{Procedure} dicod-freedict-database dictionary-name"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:44491
msgid "Returns a record of type @code{dicod-database} for purpose of configuring a database for the FreeDict multilingual dictionary named by @var{dictionary-name}, a string such as @code{\"kur-eng\"} for the Kurdish-to-English dictionary, into a service of type @code{dicod-service-type}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44493
#, no-wrap
msgid "%dicod-databases:freedict"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44498
msgid "A relatively large list of records of type @code{dicod-database}, made available for users who wish to configure all the FreeDict multilingual dictionaries provided by the @code{freedict-dictionaries} package into a service of type @code{dicod-service-type}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44504
msgid "The following is an example @code{dicod-service-type} configuration, extending a @command{dicod} daemon serving databases for the wordnet and gcide dictionaries, as well as a selection of FreeDict multilingual dictionaries."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44523
#, no-wrap
msgid ""
"(service dicod-service-type\n"
"         (dicod-configuration\n"
"          (handlers (list\n"
"                     (dicod-handler\n"
"                      (name \"wordnet\")\n"
"                      (module \"wordnet\")\n"
"                      (options\n"
"                       (list #~(string-append \"wnhome=\" #$wordnet))))))\n"
"          (databases (cons*\n"
"                      (dicod-database\n"
"                       (name \"wordnet\")\n"
"                       (complex? #t)\n"
"                       (handler \"wordnet\"))\n"
"                      %dicod-database:gcide\n"
"                      (map\n"
"                       dicod-freedict-database\n"
"                       '(\"fra-eng\" \"eng-fra\" \"eng-spa\" \"spa-eng\"))))))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44525
#, no-wrap
msgid "Docker"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:44526
#, no-wrap
msgid "Docker Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44529
msgid "The @code{(gnu services docker)} module provides the following services."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44530
#, no-wrap
msgid "containerd, container runtime"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44531
#, fuzzy, no-wrap
#| msgid "Services"
msgid "containerd-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:44539
msgid "This service type operates containerd @url{https://containerd.io,containerd}, a daemon responsible for overseeing the entire container lifecycle on its host system. This includes image handling, storage management, container execution, supervision, low-level storage operations, network connections, and more."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44542
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} containerd-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:44544
#, fuzzy
#| msgid "Documentation"
msgid "This is the data type representing the configuration of containerd."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:44547
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{containerd} (default: @code{containerd})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44549
msgid "The containerd daemon package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44550 guix-git/doc/guix.texi:44600
#, no-wrap
msgid "@code{debug?} (default @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44552 guix-git/doc/guix.texi:44602
msgid "Enable or disable debug output."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44555
msgid "List of environment variables to set for @command{containerd}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44558 guix-git/doc/guix.texi:44611
msgid "This must be a list of strings where each string has the form @samp{@var{key}=@var{value}} as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44562
#, no-wrap
msgid ""
"(list \"HTTP_PROXY=socks5://127.0.0.1:9150\"\n"
"      \"HTTPS_PROXY=socks5://127.0.0.1:9150\")\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44567
#, no-wrap
msgid "docker-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44572
msgid "This is the type of the service that runs @url{https://www.docker.com,Docker}, a daemon that can execute application bundles (sometimes referred to as ``containers'') in isolated environments."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44577
msgid "The @code{containerd-service-type} service need to be added to a system configuration, otherwise a message about not any service provides @code{containerd} will be displayed during @code{guix system reconfigure}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44580
#, no-wrap
msgid "{Data Type} docker-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44582
msgid "This is the data type representing the configuration of Docker and Containerd."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44585
#, no-wrap
msgid "@code{docker} (default: @code{docker})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44587
msgid "The Docker daemon package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44588
#, no-wrap
msgid "@code{docker-cli} (default: @code{docker-cli})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44590
msgid "The Docker client package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44591
#, no-wrap
msgid "@code{containerd} (default: @var{containerd})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44593
#, fuzzy
#| msgid "Documentation"
msgid "This field is deprecated in favor of @code{containerd-service-type} service."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:44594
#, no-wrap
msgid "@code{proxy} (default @var{docker-libnetwork-cmd-proxy})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44596
msgid "The Docker user-land networking proxy package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44597
#, no-wrap
msgid "@code{enable-proxy?} (default @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44599
msgid "Enable or disable the use of the Docker user-land networking proxy."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44603
#, no-wrap
msgid "@code{enable-iptables?} (default @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44605
msgid "Enable or disable the addition of iptables rules."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44608
msgid "List of environment variables to set for @command{dockerd}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44615
#, no-wrap
msgid ""
"(list \"LANGUAGE=eo:ca:eu\"\n"
"      \"TMPDIR=/tmp/dockerd\")\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44617
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{config-file} (type: maybe-file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44619
msgid "JSON configuration file pass to @command{dockerd}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44623
#, no-wrap
msgid "Singularity, container service"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44624
#, no-wrap
msgid "singularity-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44629
msgid "This is the type of the service that allows you to run @url{https://www.sylabs.io/singularity/, Singularity}, a Docker-style tool to create and run application bundles (aka. ``containers'').  The value for this service is the Singularity package to use."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44633
msgid "The service does not install a daemon; instead, it installs helper programs as setuid-root (@pxref{Privileged Programs}) such that unprivileged users can invoke @command{singularity run} and similar commands."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44635
#, no-wrap
msgid "Rootless Podman"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:44636
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Rootless Podman Service"
msgstr "Servizi"

#. type: cindex
#: guix-git/doc/guix.texi:44638
#, no-wrap
msgid "rootless podman, container management tool"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44639
#, no-wrap
msgid "podman, rootless"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44640
#, no-wrap
msgid "container management, podman"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44642
msgid "The @code{(gnu services containers)} module provides the following service."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44644
#, fuzzy, no-wrap
#| msgid "Services"
msgid "rootless-podman-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:44647
msgid "This is the service type for @url{https://podman.io, Podman} is a container management tool."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44654
msgid "In addition to providing a drop-in replacement for Docker, Podman offers the ability to run containers in ``root-less'' mode, meaning that regular users can deploy containers without elevated privileges.  It does so mainly by leveraging two Linux kernel features: unprivileged user namespaces, and subordinate user and group IDs (@pxref{subordinate-user-group-ids, the subordinate user and group ID service})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44657
msgid "The @code{rootless-podman-service-type} sets up the system to allow unprivileged users to run @command{podman} commands:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44661
#, no-wrap
msgid ""
"(use-service-modules containers dbus desktop networking @dots{})\n"
"(use-modules (gnu system accounts))  ;for 'subid-range'\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44668
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (users (cons (user-account\n"
"                (name \"alice\")\n"
"                (comment \"Bob's sister\")\n"
"                (group \"users\")\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44686
#, no-wrap
msgid ""
"                ;; Adding the account to the \"cgroup\" group\n"
"                ;; makes it possible to run podman commands.\n"
"                (supplementary-groups '(\"cgroup\" \"wheel\"\n"
"                                        \"audio\" \"video\")))\n"
"               %base-user-accounts))\n"
"  (services\n"
"    (cons* (service dbus-root-service-type)\n"
"           (service dhcpcd-service-type)\n"
"           (service elogind-service-type)\n"
"           (service iptables-service-type)\n"
"           (service rootless-podman-service-type\n"
"                    (rootless-podman-configuration\n"
"                      (subgids\n"
"                       (list (subid-range (name \"alice\"))))\n"
"                      (subuids\n"
"                       (list (subid-range (name \"alice\"))))))\n"
"           %base-services)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44691
msgid "The @code{iptables-service-type} is required for Podman to be able to setup its own networks.  Due to the change in user groups and file systems it is recommended to reboot (or at least logout), before trying to run Podman commands."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44693
msgid "To test your installation you can run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:44702
#, no-wrap
msgid ""
"$ podman run -it --rm docker.io/alpine cat /etc/*release*\n"
"NAME=\"Alpine Linux\"\n"
"ID=alpine\n"
"VERSION_ID=3.20.2\n"
"PRETTY_NAME=\"Alpine Linux v3.20\"\n"
"HOME_URL=\"https://alpinelinux.org/\"\n"
"BUG_REPORT_URL=\"https://gitlab.alpinelinux.org/alpine/aports/-/issues\"\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44708
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} rootless-podman-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:44710
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{rootless-podman-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:44712
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{podman} (default: @code{podman}) (type: package-or-#f)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44715
msgid "The Podman package that will be installed in the system profile.  Pass @code{#f} to not install Podman."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44716
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{group-name} (default: @code{\"cgroup\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44719
msgid "The name of the group that will own /sys/fs/cgroup resources.  Users that want to use rootless Podman have to be in this group."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44720
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{containers-registries} (type: lowerable)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44723
msgid "A string or a gexp evaluating to the path of Podman's @code{containers/registries.conf} configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44724
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{containers-storage} (type: lowerable)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44727
msgid "A string or a gexp evaluating to the path of Podman's @code{containers/storage.conf} configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44728
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{containers-policy} (type: lowerable)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44731
msgid "A string or a gexp evaluating to the path of Podman's @code{containers/policy.json} configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44732
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{pam-limits} (type: list-of-pam-limits-entries)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44734
msgid "The PAM limits to be set for rootless Podman."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44735
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{subgids} (default: @code{()}) (type: list-of-subid-ranges)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44738
msgid "A list of subid ranges representing the subgids that will be available for each configured user."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44739
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{subuids} (default: @code{()}) (type: list-of-subid-ranges)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44742
msgid "A list of subid ranges representing the subuids that will be available for each configured user."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44750
#, no-wrap
msgid "OCI-backed, Shepherd services"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:44751 guix-git/doc/guix.texi:53009
#, fuzzy, no-wrap
#| msgid "Services"
msgid "OCI backed services"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:44759
msgid "Should you wish to manage your @acronym{Open Container Initiative, OCI} containers with the same consistent interface you use for your other Shepherd services, @var{oci-service-type} is the tool to use: given an OCI container image, it will run it in a Shepherd service.  One example where this is useful: it lets you run services that are available as OCI images but not yet packaged for Guix."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44760
#, fuzzy, no-wrap
#| msgid "Services"
msgid "oci-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:44764
msgid "This is a thin wrapper around Docker's or Podman's CLI that executes OCI images backed processes as Shepherd Services."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44797
#, no-wrap
msgid ""
"(simple-service 'oci-provisioning\n"
"                oci-service-type\n"
"                (oci-extension\n"
"                  (networks\n"
"                    (list\n"
"                      (oci-network-configuration (name \"monitoring\"))))\n"
"                  (containers\n"
"                   (list\n"
"                    (oci-container-configuration\n"
"                     (network \"monitoring\")\n"
"                     (image\n"
"                      (oci-image\n"
"                        (repository \"guile\")\n"
"                        (tag \"3\")\n"
"                        (value (specifications->manifest '(\"guile\")))\n"
"                        (pack-options '(#:symlinks ((\"/bin/guile\" -> \"bin/guile\"))\n"
"                                        #:max-layers 2))))\n"
"                     (entrypoint \"/bin/guile\")\n"
"                     (command\n"
"                      '(\"-c\" \"(display \\\"hello!\\n\\\")\")))\n"
"                    (oci-container-configuration\n"
"                      (image \"prom/prometheus\")\n"
"                      (network \"host\")\n"
"                      (ports\n"
"                       '((\"9000\" . \"9000\")\n"
"                         (\"9090\" . \"9090\"))))\n"
"                    (oci-container-configuration\n"
"                      (image \"grafana/grafana:10.0.1\")\n"
"                      (network \"host\")\n"
"                      (volumes\n"
"                       '(\"/var/lib/grafana:/var/lib/grafana\")))))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44813
msgid "In this example three different Shepherd services are going to be added to the system.  Each @code{oci-container-configuration} record translates to a @samp{docker run} or @samp{podman run} invocation and its fields directly map to options.  You can refer to the @url{https://docs.docker.com/engine/reference/commandline/run,Docker} or @url{https://docs.podman.io/en/stable/markdown/podman-run.1.html,Podman} upstream documentation for semantics of each value.  If the images are not found, they will be pulled.  You can refer to the @url{https://docs.docker.com/engine/reference/commandline/pull/,Docker} or @url{https://docs.podman.io/en/stable/markdown/podman-pull.1.html,Podman} upstream documentation for semantics.  The services with @code{(network \"host\")} are going to be attached to the host network and are supposed to behave like native processes with regard to networking."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44818
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} oci-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:44820
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{oci-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:44822
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{runtime} (default: @code{'docker}) (type: symbol)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44825
msgid "The OCI runtime to use to run commands.  It can be either @code{'docker} or @code{'podman}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44826
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{runtime-cli} (type: maybe-package-or-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44832
msgid "The OCI runtime command line to be installed in the system profile and used to provision OCI resources, it can be either a package or a string representing an absolute file name to the runtime binary entrypoint.  When unset it will default to @code{docker-cli} package for the @code{'docker} runtime or to @code{podman} package for the @code{'podman} runtime."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44833
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{runtime-extra-arguments} (default: @code{'()}) (type: list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44836
msgid "A list of strings, gexps or file-like objects that will be placed after each @command{docker} or @command{podman} invokation."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44840
msgid "The user name under whose authority OCI commands will be run.  This field will override the @code{user} field of @code{oci-configuration}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44841
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{group} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44846
msgid "The group name under whose authority OCI commands will be run.  When using the @code{'podman} OCI runtime, this field will be ignored and the default group of the user configured in the @code{user} field will be used.  This field will override the @code{group} field of @code{oci-configuration}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44847
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{subuids-range} (type: maybe-subid-range)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44851
msgid "An optional @code{subid-range} record allocating subuids for the user from the @code{user} field.  When unset, with the rootless Podman OCI runtime, it defaults to @code{(subid-range (name \"oci-container\"))}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44852
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{subgids-range} (type: maybe-subid-range)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44856
msgid "An optional @code{subid-range} record allocating subgids for the user from the @code{user} field.  When unset, with the rootless Podman OCI runtime, it defaults to @code{(subid-range (name \"oci-container\"))}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44857 guix-git/doc/guix.texi:44889
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{containers} (default: @code{'()}) (type: list-of-oci-containers)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44861
msgid "The list of @code{oci-container-configuration} records representing the containers to provision.  The use of the @code{oci-extension} record should be preferred for most cases."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44862 guix-git/doc/guix.texi:44893
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{networks} (default: @code{'()}) (type: list-of-oci-networks)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44866
msgid "The list of @code{oci-network-configuration} records representing the containers to provision.  The use of the @code{oci-extension} record should be preferred for most cases."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44867 guix-git/doc/guix.texi:44897
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{volumes} (default: @code{'()}) (type: list-of-oci-volumes)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44871
msgid "The list of @code{oci-volumes-configuration} records representing the containers to provision.  The use of the @code{oci-extension} record should be preferred for most cases."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44875
msgid "When true, additional output will be printed, allowing to better follow the flow of execution."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44885
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} oci-extension"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:44887
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{oci-extension} fields are:"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44892
msgid "The list of @code{oci-container-configuration} records representing the containers to provision."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44896
msgid "The list of @code{oci-network-configuration} records representing the containers to provision."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44900
msgid "The list of @code{oci-volumes-configuration} records representing the containers to provision."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44911
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} oci-container-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:44913
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{oci-container-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:44915
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{user} (default: @code{\"oci-container\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44917
msgid "The user under whose authority docker commands will be run."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44918
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{group} (default: @code{\"docker\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44920
msgid "The group under whose authority docker commands will be run."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44921
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{command} (default: @code{'()}) (type: list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44923
msgid "Overwrite the default command (@code{CMD}) of the image."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44924
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{entrypoint} (default: @code{\"\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44926
msgid "Overwrite the default entrypoint (@code{ENTRYPOINT}) of the image."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44927
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{host-environment} (default: @code{'()}) (type: list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44935
msgid "Set environment variables in the host environment where @samp{docker run} or @samp{podman run} are invoked.  This is especially useful to pass secrets from the host to the container without having them on the OCI runtime command line, for example: by setting the @code{MYSQL_PASSWORD} on the host and by passing @code{--env MYSQL_PASSWORD} through the @code{extra-arguments} field, it is possible to securely set values in the container environment.  This field's value can be a list of pairs or strings, even mixed:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44939 guix-git/doc/guix.texi:44951
#, no-wrap
msgid ""
"(list '(\"LANGUAGE\" . \"eo:ca:eu\")\n"
"      \"JAVA_HOME=/opt/java\")\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44943
msgid "Pair members can be strings, gexps or file-like objects. Strings are passed directly to @code{make-forkexec-constructor}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44944
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{environment} (default: @code{'()}) (type: list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44947
msgid "Set environment variables inside the container.  This can be a list of pairs or strings, even mixed:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44958
msgid "Pair members can be strings, gexps or file-like objects. Strings are passed directly to the OCI runtime CLI.  You can refer to the @url{https://docs.docker.com/engine/reference/commandline/run/#env,Docker} or @url{https://docs.podman.io/en/stable/markdown/podman-run.1.html#env-e-env,Podman} upstream documentation for semantics."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44959
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{image} (type: string-or-oci-image)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44964
msgid "The image used to build the container.  It can be a string or an @code{oci-image} record.  Strings are resolved by the OCI runtime, and follow the usual format @code{myregistry.local:5000/testing/test-image:tag}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44965
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{provision} (default: @code{\"\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44967
msgid "Set the name of the provisioned Shepherd service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44968
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{requirement} (default: @code{'()}) (type: list-of-symbols)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44971
msgid "Set additional Shepherd services dependencies to the provisioned Shepherd service."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44976
msgid "When @code{log-file} is set, it names the file to which the service's standard output and standard error are redirected.  @code{log-file} is created if it does not exist, otherwise it is appended to."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44980
msgid "Whether this service should be started automatically by the Shepherd.  If it is @code{#f}, the service has to be started manually with @command{herd start}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44981
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{respawn?} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44984
msgid "Whether to have Shepherd restart the service when it stops, for instance when the underlying process dies."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44985
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{shepherd-actions} (default: @code{'()}) (type: list-of-symbols)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44988
msgid "This is a list of @code{shepherd-action} records defining actions supported by the service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44989
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{network} (default: @code{\"\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44991
msgid "Set an OCI network for the spawned container."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44992
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ports} (default: @code{'()}) (type: list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:44995
msgid "Set the port or port ranges to expose from the spawned container.  This can be a list of pairs or strings, even mixed:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44999
#, no-wrap
msgid ""
"(list '(\"8080\" . \"80\")\n"
"      \"10443:443\")\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45006
msgid "Pair members can be strings, gexps or file-like objects. Strings are passed directly to the OCI runtime CLI.  You can refer to the @url{https://docs.docker.com/engine/reference/commandline/run/#publish,Docker} or @url{https://docs.podman.io/en/stable/markdown/podman-run.1.html#publish-p-ip-hostport-containerport-protocol,Podman} upstream documentation for semantics."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45007
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{volumes} (default: @code{'()}) (type: list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45010
msgid "Set volume mappings for the spawned container.  This can be a list of pairs or strings, even mixed:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45014
#, no-wrap
msgid ""
"(list '(\"/root/data/grafana\" . \"/var/lib/grafana\")\n"
"      \"/gnu/store:/gnu/store\")\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45021
msgid "Pair members can be strings, gexps or file-like objects. Strings are passed directly to the OCI runtime CLI.  You can refer to the @url{https://docs.docker.com/engine/reference/commandline/run/#volume,Docker} or @url{https://docs.podman.io/en/stable/markdown/podman-run.1.html#volume-v-source-volume-host-dir-container-dir-options,Podman} upstream documentation for semantics."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45022
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{container-user} (default: @code{\"\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45027
msgid "Set the current user inside the spawned container.  You can refer to the @url{https://docs.docker.com/engine/reference/run/#user,Docker} or @url{https://docs.podman.io/en/stable/markdown/podman-run.1.html#user-u-user-group,Podman} upstream documentation for semantics."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45028
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{workdir} (default: @code{\"\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45034
msgid "Set the current working directory for the spawned Shepherd service.  You can refer to the @url{https://docs.docker.com/engine/reference/run/#workdir,Docker} or @url{https://docs.podman.io/en/stable/markdown/podman-run.1.html#workdir-w-dir,Podman} upstream documentation for semantics."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45035 guix-git/doc/guix.texi:45079
#: guix-git/doc/guix.texi:45103
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{extra-arguments} (default: @code{'()}) (type: list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45038
msgid "A list of strings, gexps or file-like objects that will be directly passed to the @samp{docker run} or @samp{podman run} invokation."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45048
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} oci-network-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:45050
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{oci-network-configuration} fields are:"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45054
msgid "The name of the OCI network to provision."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45055
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{driver} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45057
msgid "The driver to manage the network."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45058
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{gateway} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45060
msgid "IPv4 or IPv6 gateway for the subnet."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45061
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{internal?} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45063
msgid "Restrict external access to the network"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45064
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ip-range} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45066
msgid "Allocate container ip from a sub-range in CIDR format."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45067
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ipam-driver} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45069
#, fuzzy
#| msgid "Power Management Services"
msgid "IP Address Management Driver."
msgstr "Servizi di gestione energetica"

#. type: item
#: guix-git/doc/guix.texi:45070
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ipv6?} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45072
#, fuzzy
#| msgid "Networking"
msgid "Enable IPv6 networking."
msgstr "Rete"

#. type: item
#: guix-git/doc/guix.texi:45073
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{subnet} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45075
msgid "Subnet in CIDR format that represents a network segment."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45076 guix-git/doc/guix.texi:45100
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{labels} (default: @code{'()}) (type: list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45078 guix-git/doc/guix.texi:45102
msgid "The list of labels that will be used to tag the current volume."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45083
msgid "A list of strings, gexps or file-like objects that will be directly passed to the @samp{docker network create} or @samp{podman network create} invokation."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45093
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} oci-volume-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:45095
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{oci-volume-configuration} fields are:"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45099
#, fuzzy
#| msgid "Updating the Guix package definition."
msgid "The name of the OCI volume to provision."
msgstr "Aggiornamento della definizione del pacchetto Guix."

#. type: table
#: guix-git/doc/guix.texi:45107
msgid "A list of strings, gexps or file-like objects that will be directly passed to the @samp{docker volume create} or @samp{podman volume create} invokation."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45117
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} oci-image"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:45119
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{oci-image} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:45121 guix-git/doc/guix.texi:45942
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{repository} (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45124
msgid "A string like @code{myregistry.local:5000/testing/test-image} that names the OCI image."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45125
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{tag} (default: @code{\"latest\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45127
msgid "A string representing the OCI image tag.  Defaults to @code{latest}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45128
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{value} (type: oci-lowerable-image)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45132
msgid "A @code{manifest} or @code{operating-system} record that will be lowered into an OCI compatible tarball.  Otherwise this field's value can be a gexp or a file-like object that evaluates to an OCI compatible tarball."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45133
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{pack-options} (default: @code{'()}) (type: list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45137
msgid "An optional set of keyword arguments that will be passed to the @code{docker-image} procedure from @code{guix scripts pack}.  They can be used to replicate @command{guix pack} behavior:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45146
#, no-wrap
msgid ""
"(oci-image\n"
"  (repository \"guile\")\n"
"  (tag \"3\")\n"
"  (value\n"
"    (specifications->manifest '(\"guile\")))\n"
"  (pack-options '(#:symlinks ((\"/bin/guile\" -> \"bin/guile\"))\n"
"                  #:max-layers 2)))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45150
msgid "If the @code{value} field is an @code{operating-system} record, this field's value will be ignored."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45151
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{system} (default: @code{\"\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45153
msgid "Attempt to build for a given system, e.g.@: \"i686-linux\""
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45154
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{target} (default: @code{\"\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45156
msgid "Attempt to cross-build for a given triple, e.g.@: \"aarch64-linux-gnu\""
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45157
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{grafts?} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45159
msgid "Whether to allow grafting or not in the pack build."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:45168
msgid "subordinate-user-group-ids"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45168
#, no-wrap
msgid "subordinate user and group IDs"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45169
#, no-wrap
msgid "subid, subordinate user and group IDs"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:45170
#, no-wrap
msgid "Subordinate User and Group ID Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45180
msgid "Among the virtualization facilities implemented by the Linux kernel is the concept of @dfn{subordinate IDs}.  Subordinate IDs allow for mapping user and group IDs inside process namespaces to user and group IDs of the host system.  Subordinate user ID ranges (subuids) allow users to map virtual user IDs inside containers to the user ID of an unprivileged user of the host system.  Subordinate group ID ranges (subgids), instead map virtual group IDs to the group ID of an unprivileged user on the host system.  You can access @code{subuid(5)} and @code{subgid(5)} Linux man pages for more details."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45185
msgid "The @code{(gnu system shadow)} module exposes the @code{subids-service-type}, its configuration record @code{subids-configuration} and its extension record @code{subids-extension}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45188
msgid "With @code{subids-service-type}, subuids and subgids ranges can be reserved for users that desire so:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45193 guix-git/doc/guix.texi:45246
#, no-wrap
msgid ""
"(use-modules (gnu system shadow)     ;for 'subids-service-type'\n"
"             (gnu system accounts)   ;for 'subid-range'\n"
"             @dots{})\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45209
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services\n"
"    (list\n"
"      (simple-service 'alice-bob-subids\n"
"                      subids-service-type\n"
"                      (subids-extension\n"
"                        (subgids\n"
"                         (list\n"
"                          (subid-range (name \"alice\"))))\n"
"                        (subuids\n"
"                         (list\n"
"                          (subid-range (name \"alice\"))\n"
"                          (subid-range (name \"bob\")\n"
"                                       (start 100700)))))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45218
msgid "Users (definitely other services), usually, are supposed to extend the service instead of adding subids directly to @code{subids-configuration}, unless the want to change the default behavior for root.  With default settings the @code{subids-service-type} adds, if it's not already there, a configuration for the root account to both @file{/etc/subuid} and @file{/etc/subgid}, possibly starting at the minimum possible subid.  Otherwise the root subuids and subgids ranges are fitted wherever possible."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45220
#, fuzzy
#| msgid "Documentation"
msgid "The above configuration will yield the following:"
msgstr "Documentazione"

#. type: example
#: guix-git/doc/guix.texi:45229
#, no-wrap
msgid ""
"# cat /etc/subgid\n"
"root:100000:65536\n"
"alice:165536:65536\n"
"# cat /etc/subuid\n"
"root:100000:700\n"
"bob:100700:65536\n"
"alice:166236:65536\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45233
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} subids-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:45241
msgid "With default settings the @code{subids-service-type} adds, if it's not already there, a configuration for the root account to both @file{/etc/subuid} and @file{/etc/subgid}, possibly starting at the minimum possible subid.  To disable the default behavior and provide your own definition for the root subid ranges you can set to @code{#f} the @code{add-root?} field:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45273
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services\n"
"    (list\n"
"      (service subids-service-type\n"
"               (subids-configuration\n"
"                (add-root? #f)\n"
"                (subgids\n"
"                  (subid-range (name \"root\")\n"
"                               (start 120000)\n"
"                               (count 100)))\n"
"                (subuids\n"
"                  (subid-range (name \"root\")\n"
"                               (start 120000)\n"
"                               (count 100)))))\n"
"      (simple-service 'alice-bob-subids\n"
"                      subids-service-type\n"
"                      (subids-extension\n"
"                        (subgids\n"
"                         (list\n"
"                          (subid-range (name \"alice\"))))\n"
"                        (subuids\n"
"                         (list\n"
"                          (subid-range (name \"alice\"))\n"
"                          (subid-range (name \"bob\")\n"
"                                       (start 100700)))))))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45276
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{subids-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:45278
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{add-root?} (default: @code{#t}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45280
msgid "Whether to automatically configure subuids and subgids for root."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45281 guix-git/doc/guix.texi:45307
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{subgids} (default: @code{'()}) (type: list-of-subid-ranges)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45286
msgid "The list of @code{subid-range}s that will be serialized to @code{/etc/subgid}.  If a range doesn't specify a start it will be fitted based on its number of requested subids.  If a range doesn't specify a count the default size of 65536 will be assumed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45287 guix-git/doc/guix.texi:45312
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{subuids} (default: @code{'()}) (type: list-of-subid-ranges)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45292
msgid "The list of @code{subid-range}s that will be serialized to @code{/etc/subuid}.  If a range doesn't specify a start it will be fitted based on its number of requested subids.  If a range doesn't specify a count the default size of 65536 will be assumed."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45301
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} subids-extension"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:45304
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{subids-extension} fields are:"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45311
msgid "The list of @code{subid-range}s that will be appended to @code{subids-configuration-subgids}.  Entries with the same name are deduplicated upon merging."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45316
msgid "The list of @code{subid-range}s that will be appended to @code{subids-configuration-subuids}.  Entries with the same name are deduplicated upon merging."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45325
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} subid-range"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:45329
#, fuzzy
#| msgid "Documentation"
msgid "The @code{subid-range} record is defined at @code{(gnu system accounts)}.  Available fields are:"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45334
msgid "The name of the user or group that will own this range."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45335
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{start} (default: @code{#f}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45338
msgid "The first requested subid.  When false the first available subid with enough contiguous subids will be assigned."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45339
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{count} (default: @code{#f}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45342
msgid "The number of total allocated subids.  When #f the default of 65536 will be assumed ."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45349
#, no-wrap
msgid "Audit"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:45350
#, no-wrap
msgid "Auditd Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45353
msgid "The @code{(gnu services auditd)} module provides the following service."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:45354
#, no-wrap
msgid "auditd-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:45359
msgid "This is the type of the service that runs @url{https://people.redhat.com/sgrubb/audit/,auditd}, a daemon that tracks security-relevant information on your system."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:45361
msgid "Examples of things that can be tracked:"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:45365
msgid "File accesses"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:45367
msgid "System calls"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:45369
msgid "Invoked commands"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:45371
msgid "Failed login attempts"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:45373
msgid "Firewall filtering"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:45375
msgid "Network access"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:45386
msgid "@command{auditctl} from the @code{audit} package can be used in order to add or remove events to be tracked (until the next reboot).  In order to permanently track events, put the command line arguments of auditctl into a file called @code{audit.rules} in the configuration directory (see below).  @command{aureport} from the @code{audit} package can be used in order to view a report of all recorded events.  The audit daemon by default logs into the file @file{/var/log/audit.log}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45389
#, no-wrap
msgid "{Data Type} auditd-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45391
msgid "This is the data type representing the configuration of auditd."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45394
#, no-wrap
msgid "@code{audit} (default: @code{audit})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45396
msgid "The audit package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45397
#, no-wrap
msgid "@code{configuration-directory} (default: @code{%default-auditd-configuration-directory})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45401
msgid "The directory containing the configuration file for the audit package, which must be named @code{auditd.conf}, and optionally some audit rules to instantiate on startup."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45405
#, no-wrap
msgid "rshiny"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:45406
#, no-wrap
msgid "R-Shiny service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45409
msgid "The @code{(gnu services science)} module provides the following service."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:45410
#, no-wrap
msgid "rshiny-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:45415
msgid "This is a type of service which is used to run a webapp created with @code{r-shiny}.  This service sets the @env{R_LIBS_USER} environment variable and runs the provided script to call @code{runApp}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45416
#, no-wrap
msgid "{Data Type} rshiny-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45418
msgid "This is the data type representing the configuration of rshiny."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45421
#, no-wrap
msgid "@code{package} (default: @code{r-shiny})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45423
msgid "The package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45424
#, no-wrap
msgid "@code{binary} (default @code{\"rshiny\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45427
msgid "The name of the binary or shell script located at @code{package/bin/} to run when the service is run."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45429
msgid "The common way to create this file is as follows:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45446
#, no-wrap
msgid ""
"@dots{}\n"
"(let* ((out       (assoc-ref %outputs \"out\"))\n"
"       (targetdir (string-append out \"/share/\" ,name))\n"
"       (app       (string-append out \"/bin/\" ,name))\n"
"       (Rbin      (search-input-file %build-inputs \"/bin/Rscript\")))\n"
"  ;; @dots{}\n"
"  (mkdir-p (string-append out \"/bin\"))\n"
"  (call-with-output-file app\n"
"    (lambda (port)\n"
"      (format port\n"
"\"#!~a\n"
"library(shiny)\n"
"setwd(\\\"~a\\\")\n"
"runApp(launch.browser=0, port=4202)~%\\n\"\n"
"      Rbin targetdir))))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45452
#, no-wrap
msgid "Nix"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:45453
#, no-wrap
msgid "Nix service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45456
msgid "The @code{(gnu services nix)} module provides the following service."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:45457
#, no-wrap
msgid "nix-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:45462
msgid "This is the type of the service that runs build daemon of the @url{https://nixos.org/nix/, Nix} package manager.  Here is an example showing how to use it:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45467
#, no-wrap
msgid ""
"(use-modules (gnu))\n"
"(use-service-modules nix)\n"
"(use-package-modules package-management)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45472
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (packages (append (list nix)\n"
"                    %base-packages))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45475
#, no-wrap
msgid ""
"  (services (append (list (service nix-service-type))\n"
"                    %base-services)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:45478
msgid "After @command{guix system reconfigure} configure Nix for your user:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45480
#, no-wrap
msgid "Add a Nix channel and update it.  See"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:45484
msgid "@url{https://wiki.nixos.org/wiki/Nix_channels, Nix channels} for more information about the available channels.  If you would like to use the unstable Nix channel you can do this by running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:45488
#, no-wrap
msgid ""
"$ nix-channel --add https://nixos.org/channels/nixpkgs-unstable\n"
"$ nix-channel --update\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45490
#, no-wrap
msgid "Create your Nix profile directory:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:45495
#, no-wrap
msgid ""
"$ sudo mkdir -p /nix/var/nix/profiles/per-user/$USER\n"
"$ sudo chown $USER:root /nix/var/nix/profiles/per-user/$USER\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45497
#, no-wrap
msgid "Create a symlink to your profile and activate Nix profile:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:45502
#, no-wrap
msgid ""
"$ ln -s \"/nix/var/nix/profiles/per-user/$USER/profile\" ~/.nix-profile\n"
"$ source /run/current-system/profile/etc/profile.d/nix.sh\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45508
#, no-wrap
msgid "{Data Type} nix-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45510
msgid "This data type represents the configuration of the Nix daemon."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45512
#, no-wrap
msgid "@code{nix} (default: @code{nix})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45514
msgid "The Nix package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45515
#, no-wrap
msgid "@code{sandbox} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45517
msgid "Specifies whether builds are sandboxed by default."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45518
#, no-wrap
msgid "@code{build-directory} (default: @code{\"/tmp\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45522
msgid "The directory where build directory are stored during builds.  This is useful to change if, for example, the default location does not have enough space to hold build trees for big packages."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45526
msgid "This is similar to setting the @env{TMPDIR} environment variable for @command{guix-daemon}.  @ref{Build Environment Setup, @env{TMPDIR}}, for more info."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45527
#, no-wrap
msgid "@code{build-sandbox-items} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45530
msgid "This is a list of strings or objects appended to the @code{build-sandbox-items} field of the configuration file."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45538
msgid "Extra command line options for @code{nix-service-type}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45541
#, no-wrap
msgid "Fail2Ban"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:45542
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Fail2Ban service"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:45548
msgid "@uref{http://www.fail2ban.org/, @code{fail2ban}} scans log files (e.g. @code{/var/log/apache/error_log}) and bans IP addresses that show malicious signs -- repeated password failures, attempts to make use of exploits, etc."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45551
msgid "@code{fail2ban-service-type} service type is provided by the @code{(gnu services security)} module."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45554
msgid "This service type runs the @code{fail2ban} daemon.  It can be configured in various ways, which are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45556
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "Basic configuration"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45559
msgid "The basic parameters of the Fail2Ban service can be configured via its @code{fail2ban} configuration, which is documented below."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45560
#, no-wrap
msgid "User-specified jail extensions"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45563
msgid "The @code{fail2ban-jail-service} function can be used to add new Fail2Ban jails."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45564
#, no-wrap
msgid "Shepherd extension mechanism"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45567
msgid "Service developers can extend the @code{fail2ban-service-type} service type itself via the usual service extension mechanism."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:45569
#, fuzzy, no-wrap
#| msgid "Services"
msgid "fail2ban-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:45573
msgid "This is the type of the service that runs @code{fail2ban} daemon.  Below is an example of a basic, explicit configuration:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45588
#, no-wrap
msgid ""
"(append\n"
" (list\n"
"  (service fail2ban-service-type\n"
"           (fail2ban-configuration\n"
"            (extra-jails\n"
"             (list\n"
"              (fail2ban-jail-configuration\n"
"               (name \"sshd\")\n"
"               (enabled? #t))))))\n"
"  ;; There is no implicit dependency on an actual SSH\n"
"  ;; service, so you need to provide one.\n"
"  (service openssh-service-type))\n"
" %base-services)\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:45591
#, fuzzy, no-wrap
#| msgid "Services"
msgid "{Procedure} fail2ban-jail-service svc-type jail"
msgstr "Servizi"

#. type: deffn
#: guix-git/doc/guix.texi:45594
msgid "Extend @var{svc-type}, a @code{<service-type>} object with @var{jail}, a @code{fail2ban-jail-configuration} object."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45610
#, no-wrap
msgid ""
"(append\n"
" (list\n"
"  (service\n"
"   ;; The 'fail2ban-jail-service' procedure can extend any service type\n"
"   ;; with a fail2ban jail.  This removes the requirement to explicitly\n"
"   ;; extend services with fail2ban-service-type.\n"
"   (fail2ban-jail-service\n"
"    openssh-service-type\n"
"    (fail2ban-jail-configuration\n"
"     (name \"sshd\")\n"
"     (enabled? #t)))\n"
"   (openssh-configuration ...))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45615
msgid "Below is the reference for the different @code{jail-service-type} configuration records."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45620
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} fail2ban-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:45622
msgid "Available @code{fail2ban-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45624
#, no-wrap
msgid "@code{fail2ban} (default: @code{fail2ban}) (type: package)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45628
msgid "The @code{fail2ban} package to use.  It is used for both binaries and as base default configuration that is to be extended with @code{<fail2ban-jail-configuration>} objects."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45629
#, no-wrap
msgid "@code{run-directory} (default: @code{\"/var/run/fail2ban\"}) (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45631
msgid "The state directory for the @code{fail2ban} daemon."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45632
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{jails} (default: @code{'()}) (type: list-of-fail2ban-jail-configurations)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45635
msgid "Instances of @code{<fail2ban-jail-configuration>} collected from extensions."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45636
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{extra-jails} (default: @code{'()}) (type: list-of-fail2ban-jail-configurations)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45638
msgid "Instances of @code{<fail2ban-jail-configuration>} explicitly provided."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45639 guix-git/doc/guix.texi:45768
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{extra-content} (default: @code{'()}) (type: text-config)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45642
msgid "Extra raw content to add to the end of the @file{jail.local} file, provided as a list of file-like objects."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45647
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} fail2ban-ignore-cache-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:45649
msgid "Available @code{fail2ban-ignore-cache-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45651
#, no-wrap
msgid "@code{key} (type: string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45653
msgid "Cache key."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45654
#, no-wrap
msgid "@code{max-count} (type: integer)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45656
msgid "Cache size."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45657
#, no-wrap
msgid "@code{max-time} (type: integer)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45659
msgid "Cache time."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45664
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} fail2ban-jail-action-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:45666
msgid "Available @code{fail2ban-jail-action-configuration} fields are:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45670
msgid "Action name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45671
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{arguments} (default: @code{'()}) (type: list-of-arguments)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45673
msgid "Action arguments."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45678
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} fail2ban-jail-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:45680
msgid "Available @code{fail2ban-jail-configuration} fields are:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45684
msgid "Required name of this jail configuration."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45687
msgid "Whether this jail is enabled."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45688
#, no-wrap
msgid "@code{backend} (type: maybe-symbol)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45692
msgid "Backend to use to detect changes in the @code{log-path}.  The default is 'auto.  To consult the defaults of the jail configuration, refer to the @file{/etc/fail2ban/jail.conf} file of the @code{fail2ban} package."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45693
#, no-wrap
msgid "@code{max-retry} (type: maybe-integer)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45696
msgid "The number of failures before a host gets banned (e.g.  @code{(max-retry 5)})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45697
#, no-wrap
msgid "@code{max-matches} (type: maybe-integer)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45700
msgid "The number of matches stored in ticket (resolvable via tag @code{<matches>}) in action."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45701
#, no-wrap
msgid "@code{find-time} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45708
msgid "The time window during which the maximum retry count must be reached for an IP address to be banned.  A host is banned if it has generated @code{max-retry} during the last @code{find-time} seconds (e.g.  @code{(find-time \"10m\")}).  It can be provided in seconds or using Fail2Ban's \"time abbreviation format\", as described in @command{man 5 jail.conf}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45709
#, no-wrap
msgid "@code{ban-time} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45712
msgid "The duration, in seconds or time abbreviated format, that a ban should last.  (e.g.  @code{(ban-time \"10m\")})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45713
#, no-wrap
msgid "@code{ban-time-increment?} (type: maybe-boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45716
msgid "Whether to consider past bans to compute increases to the default ban time of a specific IP address."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45717
#, no-wrap
msgid "@code{ban-time-factor} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45719
msgid "The coefficient to use to compute an exponentially growing ban time."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45720
#, no-wrap
msgid "@code{ban-time-formula} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45722
msgid "This is the formula used to calculate the next value of a ban time."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45723
#, no-wrap
msgid "@code{ban-time-multipliers} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45725
msgid "Used to calculate next value of ban time instead of formula."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45726
#, no-wrap
msgid "@code{ban-time-max-time} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45728
msgid "The maximum number of seconds a ban should last."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45729
#, no-wrap
msgid "@code{ban-time-rnd-time} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45733
msgid "The maximum number of seconds a randomized ban time should last.  This can be useful to stop ``clever'' botnets calculating the exact time an IP address can be unbanned again."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45734
#, no-wrap
msgid "@code{ban-time-overall-jails?} (type: maybe-boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45738
msgid "When true, it specifies the search of an IP address in the database should be made across all jails.  Otherwise, only the current jail of the ban IP address is considered."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45739
#, no-wrap
msgid "@code{ignore-self?} (type: maybe-boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45741
msgid "Never ban the local machine's own IP address."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45742
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ignore-ip} (default: @code{'()}) (type: list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45746
msgid "A list of IP addresses, CIDR masks or DNS hosts to ignore.  @code{fail2ban} will not ban a host which matches an address in this list."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45747
#, no-wrap
msgid "@code{ignore-cache} (type: maybe-fail2ban-ignore-cache-configuration)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45749
msgid "Provide cache parameters for the ignore failure check."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45750
#, no-wrap
msgid "@code{filter} (type: maybe-fail2ban-jail-filter-configuration)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45754
msgid "The filter to use by the jail, specified via a @code{<fail2ban-jail-filter-configuration>} object.  By default, jails have names matching their filter name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45755
#, no-wrap
msgid "@code{log-time-zone} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45757
msgid "The default time zone for log lines that do not have one."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45758
#, no-wrap
msgid "@code{log-encoding} (type: maybe-symbol)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45761
msgid "The encoding of the log files handled by the jail.  Possible values are: @code{'ascii}, @code{'utf-8} and @code{'auto}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45762
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{log-path} (default: @code{'()}) (type: list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45764
msgid "The file names of the log files to be monitored."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45765
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{action} (default: @code{'()}) (type: list-of-fail2ban-jail-actions)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45767
msgid "A list of @code{<fail2ban-jail-action-configuration>}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45771
msgid "Extra content for the jail configuration, provided as a list of file-like objects."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45776
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} fail2ban-jail-filter-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:45778
msgid "Available @code{fail2ban-jail-filter-configuration} fields are:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45782
msgid "Filter to use."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45785
msgid "Mode for filter."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45792
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "resize-file-system"
msgstr "Filesystem"

#. type: subsubheading
#: guix-git/doc/guix.texi:45793
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Resize File System Service"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:45799
msgid "This service type lets you resize a live file system during boot, which can be convenient if a Guix image is flashed on an SD Card (e.g. for an embedded device) or uploaded to a VPS.  In both cases the medium the image will reside upon may be larger than the image you want to produce."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45801
msgid "For an embedded device booting from an SD card you may use something like:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45807
#, no-wrap
msgid ""
"(service resize-file-system-service-type\n"
"         (resize-file-system-configuration\n"
"          (file-system\n"
"           (file-system (device (file-system-label \"root\"))\n"
"                        (type \"ext4\")))))\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:45814
msgid "Be extra cautious to use the correct device and type.  The service has little error handling of its own and relies on the underlying tools.  Wrong use could end in loss of data or the corruption of the operating system."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45819
msgid "Partitions and file systems are grown to the maximum size available.  File systems can only grow when they are on the last partition on a device and have empty space available."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45822
msgid "This service supports the ext2, ext3, ext4, btrfs, and bcachefs file systems."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45825
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{file-system} (type: file-system)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45829
msgid "The file-system object to resize (@pxref{File Systems}).  This object must have the @code{device} and @code{type} fields set.  Other fields are ignored."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45830
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{cloud-utils} (default: @code{cloud-utils}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45833
msgid "The cloud-utils package to use.  This package is used for the @code{growpart} command."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45834
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{e2fsprogs} (default: @code{e2fsprogs}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45837
msgid "The e2fsprogs package to use, used for resizing ext2, ext3, and ext4 file systems."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45838
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{btrfs-progs} (default: @code{btrfs-progs}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45840
msgid "The btrfs-progs package to use, used for resizing the btrfs file system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45841
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{bcachefs-tools} (default: @code{bcachefs-tools}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45843
msgid "The bcachefs-tools package to use, used for resizing the bcachefs file system."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45846
#, no-wrap
msgid "Backup"
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:45847 guix-git/doc/guix.texi:51516
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Backup Services"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:45851
msgid "The @code{(gnu services backup)} module offers services for backing up file system trees.  For now, it provides the @code{restic-backup-service-type}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45856
msgid "With @code{restic-backup-service-type}, you can periodically back up directories and files with @uref{https://restic.net/, Restic}, which supports end-to-end encryption and deduplication.  Consider the following configuration:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45860
#, no-wrap
msgid ""
"(use-service-modules backup @dots{}) ;for 'restic-backup-service-type'\n"
"(use-package-modules sync @dots{})   ;for 'rclone'\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45882
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (packages (append (list rclone)    ;for use by restic\n"
"                    %base-packages))\n"
"  (services\n"
"    (list\n"
"      (service restic-backup-service-type\n"
"               (restic-backup-configuration\n"
"                 (jobs\n"
"                   (list (restic-backup-job\n"
"                           (name \"remote-ftp\")\n"
"                           (repository \"rclone:remote-ftp:backup/restic\")\n"
"                           (password-file \"/root/.restic\")\n"
"                           ;; Every day at 23.\n"
"                           (schedule \"0 23 * * *\")\n"
"                           (files '(\"/root/.restic\"\n"
"                                    \"/root/.config/rclone\"\n"
"                                    \"/etc/ssh/ssh_host_rsa_key\"\n"
"                                    \"/etc/ssh/ssh_host_rsa_key.pub\"\n"
"                                    \"/etc/guix/signing-key.pub\"\n"
"                                    \"/etc/guix/signing-key.sec\"))))))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45888
msgid "Each @code{restic-backup-job} translates to a Shepherd timer which sets the @env{RESTIC_PASSWORD} environment variable by reading the first line of @code{password-file} and runs @command{restic backup}, creating backups using rclone of all the files listed in the @code{files} field."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45891
msgid "The @code{restic-backup-service-type} provides the ability to instantaneously trigger a backup with the @code{trigger} Shepherd action:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:45894
#, no-wrap
msgid "sudo herd trigger remote-ftp\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45898
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} restic-backup-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:45900
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{restic-backup-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:45902
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{jobs} (default: @code{'()}) (type: list-of-restic-backup-jobs)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45904
msgid "The list of backup jobs for the current system."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45914
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} restic-backup-job"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:45916
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{restic-backup-job} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:45918
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{restic} (default: @code{restic}) (type: package)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45920
msgid "The restic package to be used for the current job."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45921
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{user} (default: @code{\"root\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45923
msgid "The user used for running the current job."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45924
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{group} (default: @code{\"root\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45926
msgid "The group used for running the current job."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45932
msgid "The file system path to the log file for this job.  By default the file will have be @file{/var/log/restic-backup/@var{job-name}.log}, where @var{job-name} is the name defined in the @code{name} field.  For Guix Home services it defaults to @file{$XDG_STATE_HOME/shepherd/restic-backup/@var{job-name}.log}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45933
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-duration} (type: maybe-number)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45936
msgid "The maximum duration in seconds that a job may last.  Past @code{max-duration} seconds, the job is forcefully terminated."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45937
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{wait-for-termination?} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45941
msgid "Wait until the job has finished before considering executing it again; otherwise, perform it strictly on every occurrence of event, at the risk of having multiple instances running concurrently."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45944
#, fuzzy
#| msgid "Other posible tools that do the job."
msgid "The restic repository target of this job."
msgstr "Altri possibili strumenti adatti allo scopo."

#. type: table
#: guix-git/doc/guix.texi:45947
msgid "A string denoting a name for this job."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45948
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{password-file} (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45952
msgid "Name of the password file, readable by the configured @code{user}, that will be used to set the @env{RESTIC_PASSWORD} environment variable for the current job."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45953
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{schedule} (type: gexp-or-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45957
msgid "A string or a gexp representing the frequency of the backup.  Gexp must evaluate to @code{calendar-event} records or to strings.  Strings must contain Vixie cron date lines."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45958
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{requirement} (type: maybe-list-of-symbols)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45962
msgid "The list of Shepherd services that this backup job depends upon.  When unset it defaults to @code{'()}, for Guix Home.  Otherwise to @code{'(user-processes file-systems)}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45963
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{files} (default: @code{'()}) (type: list-of-lowerables)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45966
msgid "The list of files or directories to be backed up.  It must be a list of values that can be lowered to strings."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45969
msgid "Whether to enable verbose output for the current backup job."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45970
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{extra-flags} (default: @code{'()}) (type: list-of-lowerables)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:45974
msgid "A list of values that are lowered to strings.  These will be passed as command-line arguments to the current job @command{restic backup} invocation."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45981
#, no-wrap
msgid "DLNA/UPnP"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:45982
#, fuzzy, no-wrap
#| msgid "Services"
msgid "DLNA/UPnP Services"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:45989
msgid "The @code{(gnu services upnp)} module offers services related to @acronym{UPnP, Universal Plug and Play} and @acronym{DLNA, Digital Living Network Alliance}, networking protocols that can be used for media streaming and device interoperability within a local network.  For now, this module provides the @code{readymedia-service-type}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45996
msgid "@uref{https://minidlna.sourceforge.net/, ReadyMedia} (formerly known as MiniDLNA) is a DLNA/UPnP-AV media server.  The project's daemon, @code{minidlnad}, can serve media files (audio, pictures, and video) to DLNA/UPnP-AV clients available on the network.  @code{readymedia-service-type} is a Guix service that wraps around ReadyMedia's @code{minidlnad}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45998
#, fuzzy
#| msgid "Documentation"
msgid "Consider the following configuration:"
msgstr "Documentazione"

#. type: lisp
#: guix-git/doc/guix.texi:46000
#, no-wrap
msgid ""
"(use-service-modules upnp @dots{})\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46017
#, no-wrap
msgid ""
"(operating-system\n"
"  @dots{}\n"
"  (services\n"
"   (list (service readymedia-service-type\n"
"                  (readymedia-configuration\n"
"                   (media-directories\n"
"                    (list (readymedia-media-directory\n"
"                           (path \"/media/audio\")\n"
"                           (types '(A)))\n"
"                          (readymedia-media-directory\n"
"                           (path \"/media/video\")\n"
"                           (types '(V)))\n"
"                          (readymedia-media-directory\n"
"                           (path \"/media/misc\"))))\n"
"                   (extra-config '((\"notify_interval\" . \"60\")))))\n"
"         @dots{})))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46023
msgid "This sets up the ReadyMedia daemon to serve files from the media folders specified in @code{media-directories}.  The @code{media-directories} field is mandatory.  All other fields (such as network ports and the server name) come with a predefined default and can be omitted."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:46028
msgid "This service is also available for Guix Home, where it runs directly with your user privileges (@pxref{Miscellaneous Home Services, @code{home-readymedia-service-type}})."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:46032
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} readymedia-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:46034
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{readymedia-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:46036
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{readymedia} (default: @code{readymedia}) (type: package)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:46038
msgid "The ReadyMedia package to be used for the service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46039
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{friendly-name} (default: @code{#f}) (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:46041
msgid "A custom name that will be displayed on connected clients."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46042
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{media-directories} (type: list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:46045
msgid "The list of media folders to serve content from.  Each item is a @code{readymedia-media-directory}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46046
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{cache-directory} (default: @code{\"/var/cache/readymedia\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:46050
msgid "A folder for ReadyMedia's cache files.  If not existing already, the folder will be created as part of the service activation and the ReadyMedia user will be assigned ownership."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46051
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{log-directory} (default: @code{\"/var/log/readymedia\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:46055
msgid "A folder for ReadyMedia's log files.  If not existing already, the folder will be created as part of the service activation and the ReadyMedia user will be assigned ownership."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46056
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{port} (default: @code{#f}) (type: maybe-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:46058
msgid "A custom port that the service will be listening on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46059
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{extra-config} (default: @code{'()}) (type: alist)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:46061
msgid "An association list of further options, as accepted by ReadyMedia."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:46069
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} readymedia-media-directory"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:46073
msgid "A @code{media-directories} entry includes a folder @code{path} and, optionally, the @code{types} of media files included within the folder."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46075
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{path} (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:46077
msgid "The media folder location."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46078
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{types} (default: @code{'()}) (type: list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:46083
msgid "A list indicating the types of file included in the media folder.  Valid values are combinations of individual media types, i.e. symbol @code{A} for audio, @code{P} for pictures, @code{V} for video.  An empty list means that no type is specified."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46092
#, no-wrap
msgid "privileged programs"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46093
#, no-wrap
msgid "setuid programs"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46094
#, no-wrap
msgid "setgid programs"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46095
#, no-wrap
msgid "capabilities, POSIX"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46096
#, no-wrap
msgid "setcap"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46106
msgid "Some programs need to run with elevated privileges, even when they are launched by unprivileged users.  A notorious example is the @command{passwd} program, which users can run to change their password, and which needs to access the @file{/etc/passwd} and @file{/etc/shadow} files---something normally restricted to root, for obvious security reasons.  To address that, @command{passwd} should be @dfn{setuid-root}, meaning that it always runs with root privileges (@pxref{How Change Persona,,, libc, The GNU C Library Reference Manual}, for more info about the setuid mechanism)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46113
msgid "The store itself @emph{cannot} contain privileged programs: that would be a security issue since any user on the system can write derivations that populate the store (@pxref{The Store}).  Thus, a different mechanism is used: instead of directly granting permissions to files that are in the store, we let the system administrator @emph{declare} which programs should be entrusted with these additional privileges."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46120
msgid "The @code{privileged-programs} field of an @code{operating-system} declaration contains a list of @code{<privileged-program>} denoting the names of programs to have a setuid or setgid bit set (@pxref{Using the Configuration System}).  For instance, the @command{mount.nfs} program, which is part of the nfs-utils package, with a setuid root can be designated like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46125
#, no-wrap
msgid ""
"(privileged-program\n"
"  (program (file-append nfs-utils \"/sbin/mount.nfs\"))\n"
"  (setuid? #t))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46130
msgid "And then, to make @command{mount.nfs} setuid on your system, add the previous example to your operating system declaration by appending it to @code{%default-privileged-programs} like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46139
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; Some fields omitted...\n"
"  (privileged-programs\n"
"    (append (list (privileged-program\n"
"                    (program (file-append nfs-utils \"/sbin/mount.nfs\"))\n"
"                    (setuid? #t)))\n"
"            %default-privileged-programs)))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:46141
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} privileged-program"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:46143
msgid "This data type represents a program with special privileges, such as setuid"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46147
msgid "A file-like object to which all given privileges should apply."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46148
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{setuid?} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:46150
msgid "Whether to set user setuid bit."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46151
#, no-wrap
msgid "@code{setgid?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46153
msgid "Whether to set group setgid bit."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46154
#, no-wrap
msgid "@code{user} (default: @code{0})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46157
msgid "UID (integer) or user name (string) for the user owner of the program, defaults to root."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46158
#, no-wrap
msgid "@code{group} (default: @code{0})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46161
msgid "GID (integer) group name (string) for the group owner of the program, defaults to root."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46162
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{capabilities} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:46166
msgid "A string representing the program's POSIX capabilities, as described by the @code{cap_to_text(3)} man page from the libcap package, or @code{#f} to make no changes."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46172
msgid "A default set of privileged programs is defined by the @code{%default-privileged-programs} variable of the @code{(gnu system)} module."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:46173
#, no-wrap
msgid "{Scheme Variable} %default-privileged-programs"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:46176
msgid "A list of @code{<privileged-program>} denoting common programs with elevated privileges."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:46179
msgid "The list includes commands such as @command{passwd}, @command{ping}, @command{su}, and @command{sudo}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46185
msgid "Under the hood, the actual privileged programs are created in the @file{/run/privileged/bin} directory at system activation time.  The files in this directory refer to the ``real'' binaries, which are in the store."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46189
#, no-wrap
msgid "HTTPS, certificates"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46190
#, no-wrap
msgid "X.509 certificates"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46191
#, no-wrap
msgid "TLS"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46198
msgid "Web servers available over HTTPS (that is, HTTP over the transport-layer security mechanism, TLS) send client programs an @dfn{X.509 certificate} that the client can then use to @emph{authenticate} the server.  To do that, clients verify that the server's certificate is signed by a so-called @dfn{certificate authority} (CA).  But to verify the CA's signature, clients must have first acquired the CA's certificate."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46202
msgid "Web browsers such as GNU@tie{}IceCat include their own set of CA certificates, such that they are able to verify CA signatures out-of-the-box."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46206
msgid "However, most other programs that can talk HTTPS---@command{wget}, @command{git}, @command{w3m}, etc.---need to be told where CA certificates can be found."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46214
msgid "For users of Guix System, this is done by adding a package that provides certificates to the @code{packages} field of the @code{operating-system} declaration (@pxref{operating-system Reference}).  Guix includes one such package, @code{nss-certs}, which is a set of CA certificates provided as part of Mozilla's Network Security Services."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46219
msgid "This package is part of @code{%base-packages}, so there is no need to explicitly add it.  The @file{/etc/ssl/certs} directory, which is where most applications and libraries look for certificates by default, points to the certificates installed globally."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46229
msgid "Unprivileged users, including users of Guix on a foreign distro, can also install their own certificate package in their profile.  A number of environment variables need to be defined so that applications and libraries know where to find them.  Namely, the OpenSSL library honors the @env{SSL_CERT_DIR} and @env{SSL_CERT_FILE} variables.  Some applications add their own environment variables; for instance, the Git version control system honors the certificate bundle pointed to by the @env{GIT_SSL_CAINFO} environment variable.  Thus, you would typically run something like:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46235
#, no-wrap
msgid ""
"guix install nss-certs\n"
"export SSL_CERT_DIR=\"$HOME/.guix-profile/etc/ssl/certs\"\n"
"export SSL_CERT_FILE=\"$HOME/.guix-profile/etc/ssl/certs/ca-certificates.crt\"\n"
"export GIT_SSL_CAINFO=\"$SSL_CERT_FILE\"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46240
msgid "As another example, R requires the @env{CURL_CA_BUNDLE} environment variable to point to a certificate bundle, so you would have to run something like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46244
#, no-wrap
msgid ""
"guix install nss-certs\n"
"export CURL_CA_BUNDLE=\"$HOME/.guix-profile/etc/ssl/certs/ca-certificates.crt\"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46248
msgid "For other applications you may want to look up the required environment variable in the relevant documentation."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46253
#, no-wrap
msgid "name service switch"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46254
#, no-wrap
msgid "NSS"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46263
msgid "The @code{(gnu system nss)} module provides bindings to the configuration file of the libc @dfn{name service switch} or @dfn{NSS} (@pxref{NSS Configuration File,,, libc, The GNU C Library Reference Manual}).  In a nutshell, the NSS is a mechanism that allows libc to be extended with new ``name'' lookup methods for system databases, which includes host names, service names, user accounts, and more (@pxref{Name Service Switch, System Databases and Name Service Switch,, libc, The GNU C Library Reference Manual})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46270
msgid "The NSS configuration specifies, for each system database, which lookup method is to be used, and how the various methods are chained together---for instance, under which circumstances NSS should try the next method in the list.  The NSS configuration is given in the @code{name-service-switch} field of @code{operating-system} declarations (@pxref{operating-system Reference, @code{name-service-switch}})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46271
#, no-wrap
msgid "nss-mdns"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46272
#, no-wrap
msgid ".local, host name lookup"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46277
msgid "As an example, the declaration below configures the NSS to use the @uref{https://0pointer.de/lennart/projects/nss-mdns/, @code{nss-mdns} back-end}, which supports host name lookups over multicast DNS (mDNS)  for host names ending in @code{.local}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46281
#, no-wrap
msgid ""
"(name-service-switch\n"
"   (hosts (list %files    ;first, check /etc/hosts\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46286
#, no-wrap
msgid ""
"                ;; If the above did not succeed, try\n"
"                ;; with 'mdns_minimal'.\n"
"                (name-service\n"
"                  (name \"mdns_minimal\")\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46292
#, no-wrap
msgid ""
"                  ;; 'mdns_minimal' is authoritative for\n"
"                  ;; '.local'.  When it returns \"not found\",\n"
"                  ;; no need to try the next methods.\n"
"                  (reaction (lookup-specification\n"
"                             (not-found => return))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46296
#, no-wrap
msgid ""
"                ;; Then fall back to DNS.\n"
"                (name-service\n"
"                  (name \"dns\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46300
#, no-wrap
msgid ""
"                ;; Finally, try with the \"full\" 'mdns'.\n"
"                (name-service\n"
"                  (name \"mdns\")))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46305
msgid "Do not worry: the @code{%mdns-host-lookup-nss} variable (see below)  contains this configuration, so you will not have to type it if all you want is to have @code{.local} host lookup working."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46313
msgid "Note that, in this case, in addition to setting the @code{name-service-switch} of the @code{operating-system} declaration, you also need to use @code{avahi-service-type} (@pxref{Networking Services, @code{avahi-service-type}}), or @code{%desktop-services}, which includes it (@pxref{Desktop Services}).  Doing this makes @code{nss-mdns} accessible to the name service cache daemon (@pxref{Base Services, @code{nscd-service}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46316
msgid "For convenience, the following variables provide typical NSS configurations."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:46317
#, no-wrap
msgid "%default-nss"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:46320
msgid "This is the default name service switch configuration, a @code{name-service-switch} object."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:46322
#, no-wrap
msgid "%mdns-host-lookup-nss"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:46325
msgid "This is the name service switch configuration with support for host name lookup over multicast DNS (mDNS) for host names ending in @code{.local}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46335
msgid "The reference for name service switch configuration is given below.  It is a direct mapping of the configuration file format of the C library , so please refer to the C library manual for more information (@pxref{NSS Configuration File,,, libc, The GNU C Library Reference Manual}).  Compared to the configuration file format of libc NSS, it has the advantage not only of adding this warm parenthetic feel that we like, but also static checks: you will know about syntax errors and typos as soon as you run @command{guix system}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:46336
#, no-wrap
msgid "{Data Type} name-service-switch"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:46341
msgid "This is the data type representation the configuration of libc's name service switch (NSS).  Each field below represents one of the supported system databases."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46343
#, no-wrap
msgid "aliases"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:46344
#, no-wrap
msgid "ethers"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:46346
#, no-wrap
msgid "gshadow"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:46347
#, no-wrap
msgid "hosts"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:46348
#, no-wrap
msgid "initgroups"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:46349
#, no-wrap
msgid "netgroup"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:46350
#, no-wrap
msgid "networks"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:46353
#, no-wrap
msgid "rpc"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:46355
#, no-wrap
msgid "shadow"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46358
msgid "The system databases handled by the NSS@.  Each of these fields must be a list of @code{<name-service>} objects (see below)."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:46361
#, no-wrap
msgid "{Data Type} name-service"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:46365
msgid "This is the data type representing an actual name service and the associated lookup action."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46370
msgid "A string denoting the name service (@pxref{Services in the NSS configuration,,, libc, The GNU C Library Reference Manual})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46375
msgid "Note that name services listed here must be visible to nscd.  This is achieved by passing the @code{#:name-services} argument to @code{nscd-service} the list of packages providing the needed name services (@pxref{Base Services, @code{nscd-service}})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46376
#, no-wrap
msgid "reaction"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46380
msgid "An action specified using the @code{lookup-specification} macro (@pxref{Actions in the NSS configuration,,, libc, The GNU C Library Reference Manual}).  For example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46384
#, no-wrap
msgid ""
"(lookup-specification (unavailable => continue)\n"
"                      (success => return))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46398
msgid "For bootstrapping purposes, the Linux-Libre kernel is passed an @dfn{initial RAM disk}, or @dfn{initrd}.  An initrd contains a temporary root file system as well as an initialization script.  The latter is responsible for mounting the real root file system, and for loading any kernel modules that may be needed to achieve that."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46407
msgid "The @code{initrd-modules} field of an @code{operating-system} declaration allows you to specify Linux-libre kernel modules that must be available in the initrd.  In particular, this is where you would list modules needed to actually drive the hard disk where your root partition is---although the default value of @code{initrd-modules} should cover most use cases.  For example, assuming you need the @code{megaraid_sas} module in addition to the default modules to be able to access your root file system, you would write:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46412
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (initrd-modules (cons \"megaraid_sas\" %base-initrd-modules)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:46414
#, no-wrap
msgid "%base-initrd-modules"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:46416
msgid "This is the list of kernel modules included in the initrd by default."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46424
msgid "Furthermore, if you need lower-level customization, the @code{initrd} field of an @code{operating-system} declaration allows you to specify which initrd you would like to use.  The @code{(gnu system linux-initrd)} module provides three ways to build an initrd: the high-level @code{base-initrd} procedure and the low-level @code{raw-initrd} and @code{expression->initrd} procedures."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46429
msgid "The @code{base-initrd} procedure is intended to cover most common uses.  For example, if you want to add a bunch of kernel modules to be loaded at boot time, you can define the @code{initrd} field of the operating system declaration like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46437
#, no-wrap
msgid ""
"(initrd (lambda (file-systems . rest)\n"
"          ;; Create a standard initrd but set up networking\n"
"          ;; with the parameters QEMU expects by default.\n"
"          (apply base-initrd file-systems\n"
"                 #:qemu-networking? #t\n"
"                 rest)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46442
msgid "The @code{base-initrd} procedure also handles common use cases that involves using the system as a QEMU guest, or as a ``live'' system with volatile root file system."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46449
msgid "The @code{base-initrd} procedure is built from @code{raw-initrd} procedure.  Unlike @code{base-initrd}, @code{raw-initrd} doesn't do anything high-level, such as trying to guess which kernel modules and packages should be included to the initrd.  An example use of @code{raw-initrd} is when a user has a custom Linux kernel configuration and default kernel modules included by @code{base-initrd} are not available."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46454
msgid "The initial RAM disk produced by @code{base-initrd} or @code{raw-initrd} honors several options passed on the Linux kernel command line (that is, arguments passed @i{via} the @code{linux} command of GRUB, or the @code{-append} option of QEMU), notably:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46456
#, no-wrap
msgid "gnu.load=@var{boot}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46459
msgid "Tell the initial RAM disk to load @var{boot}, a file containing a Scheme program, once it has mounted the root file system."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46463
msgid "Guix uses this option to yield control to a boot program that runs the service activation programs and then spawns the GNU@tie{}Shepherd, the initialization system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46464
#, no-wrap
msgid "root=@var{root}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46469
msgid "Mount @var{root} as the root file system.  @var{root} can be a device name like @code{/dev/sda1}, a file system label, or a file system UUID.  When unspecified, the device name from the root file system of the operating system declaration is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46470
#, no-wrap
msgid "rootfstype=@var{type}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46474
msgid "Set the type of the root file system.  It overrides the @code{type} field of the root file system specified via the @code{operating-system} declaration, if any."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46475
#, no-wrap
msgid "rootflags=@var{options}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46479
msgid "Set the mount @emph{options} of the root file system.  It overrides the @code{options} field of the root file system specified via the @code{operating-system} declaration, if any."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46480
#, no-wrap
msgid "fsck.mode=@var{mode}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46486
msgid "Whether to check the @var{root} file system for errors before mounting it.  @var{mode} is one of @code{skip} (never check), @code{force} (always check), or @code{auto} to respect the root @code{<file-system>} object's @code{check?} setting (@pxref{File Systems}) and run a full scan only if the file system was not cleanly shut down."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46489
msgid "@code{auto} is the default if this option is not present or if @var{mode} is not one of the above."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46490
#, no-wrap
msgid "fsck.repair=@var{level}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46495
msgid "The level of repairs to perform automatically if errors are found in the @var{root} file system.  @var{level} is one of @code{no} (do not write to @var{root} at all if possible), @code{yes} (repair as much as possible), or @code{preen} to repair problems considered safe to repair automatically."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46498
msgid "@code{preen} is the default if this option is not present or if @var{level} is not one of the above."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46499
#, no-wrap
msgid "gnu.system=@var{system}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46502
msgid "Have @file{/run/booted-system} and @file{/run/current-system} point to @var{system}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46503
#, no-wrap
msgid "modprobe.blacklist=@var{modules}@dots{}"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46504
#, no-wrap
msgid "module, black-listing"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46505
#, no-wrap
msgid "black list, of kernel modules"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46510
msgid "Instruct the initial RAM disk as well as the @command{modprobe} command (from the kmod package) to refuse to load @var{modules}.  @var{modules} must be a comma-separated list of module names---e.g., @code{usbkbd,9pnet}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46511
#, no-wrap
msgid "gnu.repl"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46517
msgid "Start a read-eval-print loop (REPL) from the initial RAM disk before it tries to load kernel modules and to mount the root file system.  Our marketing team calls it @dfn{boot-to-Guile}.  The Schemer in you will love it.  @xref{Using Guile Interactively,,, guile, GNU Guile Reference Manual}, for more information on Guile's REPL."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46523
msgid "Now that you know all the features that initial RAM disks produced by @code{base-initrd} and @code{raw-initrd} provide, here is how to use it and customize it further."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:46526
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "{Procedure} raw-initrd file-systems @"
msgstr "Filesystem"

#. type: deffn
#: guix-git/doc/guix.texi:46542
msgid "[#:linux-modules '()] [#:pre-mount #t] [#:mapped-devices '()] @ [#:keyboard-layout #f] [#:helper-packages '()] @ [#:qemu-networking? #f] [#:volatile-root? #f] Return a derivation that builds a raw initrd.  @var{file-systems} is a list of file systems to be mounted by the initrd, possibly in addition to the root file system specified on the kernel command line via @option{root}.  @var{linux-modules} is a list of kernel modules to be loaded at boot time.  @var{mapped-devices} is a list of device mappings to realize before @var{file-systems} are mounted (@pxref{Mapped Devices}).  @var{pre-mount} is a G-expression to evaluate before realizing @var{mapped-devices}.  @var{helper-packages} is a list of packages to be copied in the initrd.  It may include @code{e2fsck/static} or other packages needed by the initrd to check the root file system."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:46548 guix-git/doc/guix.texi:46572
msgid "When true, @var{keyboard-layout} is a @code{<keyboard-layout>} record denoting the desired console keyboard layout.  This is done before @var{mapped-devices} are set up and before @var{file-systems} are mounted such that, should the user need to enter a passphrase or use the REPL, this happens using the intended keyboard layout."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:46552
msgid "When @var{qemu-networking?} is true, set up networking with the standard QEMU parameters.  When @var{virtio?} is true, load additional modules so that the initrd can be used as a QEMU guest with para-virtualized I/O drivers."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:46555
msgid "When @var{volatile-root?} is true, the root file system is writable but any changes to it are lost."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:46557
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "{Procedure} base-initrd file-systems @"
msgstr "Filesystem"

#. type: deffn
#: guix-git/doc/guix.texi:46566
msgid "[#:mapped-devices '()] [#:keyboard-layout #f] @ [#:qemu-networking? #f] [#:volatile-root? #f] @ [#:linux-modules '()] Return as a file-like object a generic initrd, with kernel modules taken from @var{linux}.  @var{file-systems} is a list of file-systems to be mounted by the initrd, possibly in addition to the root file system specified on the kernel command line via @option{root}.  @var{mapped-devices} is a list of device mappings to realize before @var{file-systems} are mounted."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:46574
msgid "@var{qemu-networking?} and @var{volatile-root?} behaves as in @code{raw-initrd}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:46579
msgid "The initrd is automatically populated with all the kernel modules necessary for @var{file-systems} and for the given options.  Additional kernel modules can be listed in @var{linux-modules}.  They will be added to the initrd, and loaded at boot time in the order in which they appear."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46586
msgid "Needless to say, the initrds we produce and use embed a statically-linked Guile, and the initialization program is a Guile program.  That gives a lot of flexibility.  The @code{expression->initrd} procedure builds such an initrd, given the program to run in that initrd."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:46587
#, no-wrap
msgid "{Procedure} expression->initrd exp @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:46593
msgid "[#:guile %guile-static-initrd] [#:name \"guile-initrd\"] Return as a file-like object a Linux initrd (a gzipped cpio archive)  containing @var{guile} and that evaluates @var{exp}, a G-expression, upon booting.  All the derivations referenced by @var{exp} are automatically copied to the initrd."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46599
#, no-wrap
msgid "boot loader"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46606
msgid "The operating system supports multiple bootloaders.  The bootloader is configured using @code{bootloader-configuration} declaration.  All the fields of this structure are bootloader agnostic except for one field, @code{bootloader} that indicates the bootloader to be configured and installed."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46611
msgid "Some of the bootloaders do not honor every field of @code{bootloader-configuration}.  For instance, the extlinux bootloader does not support themes and thus ignores the @code{theme} field."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:46612
#, no-wrap
msgid "{Data Type} bootloader-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:46614
msgid "The type of a bootloader configuration declaration."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46618
#, no-wrap
msgid "EFI, bootloader"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46619
#, no-wrap
msgid "UEFI, bootloader"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46620
#, no-wrap
msgid "BIOS, bootloader"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46626
msgid "The bootloader to use, as a @code{bootloader} object.  For now @code{grub-bootloader}, @code{grub-efi-bootloader}, @code{grub-efi-removable-bootloader}, @code{grub-efi-netboot-bootloader}, @code{grub-efi-netboot-removable-bootloader}, @code{extlinux-bootloader} and @code{u-boot-bootloader} are supported."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46627
#, no-wrap
msgid "ARM, bootloaders"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46628
#, no-wrap
msgid "AArch64, bootloaders"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46633
msgid "Available bootloaders are described in @code{(gnu bootloader @dots{})} modules.  In particular, @code{(gnu bootloader u-boot)} contains definitions of bootloaders for a wide range of ARM and AArch64 systems, using the @uref{https://www.denx.de/wiki/U-Boot/, U-Boot bootloader}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46637
msgid "@code{grub-bootloader} allows you to boot in particular Intel-based machines in ``legacy'' BIOS mode."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46643
msgid "@code{grub-efi-bootloader} allows to boot on modern systems using the @dfn{Unified Extensible Firmware Interface} (UEFI).  This is what you should use if the installation image contains a @file{/sys/firmware/efi} directory when you boot it on your system."
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:46644
#, no-wrap
msgid "grub-efi-removable-bootloader"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46651
msgid "@code{grub-efi-removable-bootloader} allows you to boot your system from removable media by writing the GRUB file to the UEFI-specification location of @file{/EFI/BOOT/BOOTX64.efi} of the boot directory, usually @file{/boot/efi}.  This is also useful for some UEFI firmwares that ``forget'' their configuration from their non-volatile storage. Like @code{grub-efi-bootloader}, this can only be used if the @file{/sys/firmware/efi} directory is available."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:46656 guix-git/doc/guix.texi:46730
msgid "This @emph{will} overwrite the GRUB file from any other operating systems that also place their GRUB file in the UEFI-specification location; making them unbootable."
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:46658
#, no-wrap
msgid "grub-efi-netboot-bootloader"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46662
msgid "@code{grub-efi-netboot-bootloader} allows you to boot your system over network through TFTP@.  In combination with an NFS root file system this allows you to build a diskless Guix system."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46669
msgid "The installation of the @code{grub-efi-netboot-bootloader} generates the content of the TFTP root directory at @code{targets} (@pxref{Bootloader Configuration, @code{targets}}) below the sub-directory @file{efi/Guix}, to be served by a TFTP server.  You may want to mount your TFTP server directories onto the @code{targets} to move the required files to the TFTP server automatically during installation."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46678
msgid "If you plan to use an NFS root file system as well (actually if you mount the store from an NFS share), then the TFTP server needs to serve the file @file{/boot/grub/grub.cfg} and other files from the store (like GRUBs background image, the kernel (@pxref{operating-system Reference, @code{kernel}}) and the initrd (@pxref{operating-system Reference, @code{initrd}})), too.  All these files from the store will be accessed by GRUB through TFTP with their normal store path, for example as @file{tftp://tftp-server/gnu/store/…-initrd/initrd.cpio.gz}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46687
msgid "Two symlinks are created to make this possible.  For each target in the @code{targets} field, the first symlink is @samp{target}@file{/efi/Guix/boot/grub/grub.cfg} pointing to @file{../../../boot/grub/grub.cfg}, where @samp{target} may be @file{/boot}.  In this case the link is not leaving the served TFTP root directory, but otherwise it does.  The second link is @samp{target}@file{/gnu/store} and points to @file{../gnu/store}.  This link is leaving the served TFTP root directory."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46693
msgid "The assumption behind all this is that you have an NFS server exporting the root file system for your Guix system, and additionally a TFTP server exporting your @code{targets} directories—usually a single @file{/boot}—from that same root file system for your Guix system.  In this constellation the symlinks will work."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46698
msgid "For other constellations you will have to program your own bootloader installer, which then takes care to make necessary files from the store accessible through TFTP, for example by copying them into the TFTP root directory for your @code{targets}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46704
msgid "It is important to note that symlinks pointing outside the TFTP root directory may need to be allowed in the configuration of your TFTP server.  Further the store link exposes the whole store through TFTP@.  Both points need to be considered carefully for security aspects.  It is advised to disable any TFTP write access!"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46707
msgid "Please note, that this bootloader will not modify the ‘UEFI Boot Manager’ of the system."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46712
msgid "Beside the @code{grub-efi-netboot-bootloader}, the already mentioned TFTP and NFS servers, you also need a properly configured DHCP server to make the booting over netboot possible.  For all this we can currently only recommend you to look for instructions about @acronym{PXE, Preboot eXecution Environment}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46719
msgid "If a local EFI System Partition (ESP) or a similar partition with a FAT file system is mounted in @code{targets}, then symlinks cannot be created.  In this case everything will be prepared for booting from local storage, matching the behavior of @code{grub-efi-bootloader}, with the difference that all GRUB binaries are copied to @code{targets}, necessary for booting over the network."
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:46720
#, no-wrap
msgid "grub-efi-netboot-removable-bootloader"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46725
msgid "@code{grub-efi-netboot-removable-bootloader} is identical to @code{grub-efi-netboot-bootloader} with the exception that the sub-directory @file{efi/boot} will be used instead of @file{efi/Guix} to comply with the UEFI specification for removable media."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46735
msgid "This is a list of strings denoting the targets onto which to install the bootloader."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46746
msgid "The interpretation of targets depends on the bootloader in question.  For @code{grub-bootloader}, for example, they should be device names understood by the bootloader @command{installer} command, such as @code{/dev/sda} or @code{(hd0)} (@pxref{Invoking grub-install,,, grub, GNU GRUB Manual}).  For @code{grub-efi-bootloader} and @code{grub-efi-removable-bootloader} they should be mount points of the EFI file system, usually @file{/boot/efi}.  For @code{grub-efi-netboot-bootloader}, @code{targets} should be the mount points corresponding to TFTP root directories served by your TFTP server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46747
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{menu-entries} (default: @code{'()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:46751
msgid "A possibly empty list of @code{menu-entry} objects (see below), denoting entries to appear in the bootloader menu, in addition to the current system entry and the entry pointing to previous system generations."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46752
#, no-wrap
msgid "@code{default-entry} (default: @code{0})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46755
msgid "The index of the default boot menu entry.  Index 0 is for the entry of the current system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46756
#, no-wrap
msgid "@code{timeout} (default: @code{5})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46759
msgid "The number of seconds to wait for keyboard input before booting.  Set to 0 to boot immediately, and to -1 to wait indefinitely."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46760
#, no-wrap
msgid "keyboard layout, for the bootloader"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46764
msgid "If this is @code{#f}, the bootloader's menu (if any) uses the default keyboard layout, usually US@tie{}English (``qwerty'')."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46767
msgid "Otherwise, this must be a @code{keyboard-layout} object (@pxref{Keyboard Layout})."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:46771
msgid "This option is currently ignored by bootloaders other than @code{grub} and @code{grub-efi}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46773
#, no-wrap
msgid "@code{theme} (default: @var{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46777
msgid "The bootloader theme object describing the theme to use.  If no theme is provided, some bootloaders might use a default theme, that's true for GRUB."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46778
#, no-wrap
msgid "@code{terminal-outputs} (default: @code{'(gfxterm)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46785
msgid "The output terminals used for the bootloader boot menu, as a list of symbols.  GRUB accepts the values: @code{console}, @code{serial}, @code{serial_@{0-3@}}, @code{gfxterm}, @code{vga_text}, @code{mda_text}, @code{morse}, and @code{pkmodem}.  This field corresponds to the GRUB variable @code{GRUB_TERMINAL_OUTPUT} (@pxref{Simple configuration,,, grub,GNU GRUB manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46786
#, no-wrap
msgid "@code{terminal-inputs} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46794
msgid "The input terminals used for the bootloader boot menu, as a list of symbols.  For GRUB, the default is the native platform terminal as determined at run-time.  GRUB accepts the values: @code{console}, @code{serial}, @code{serial_@{0-3@}}, @code{at_keyboard}, and @code{usb_keyboard}.  This field corresponds to the GRUB variable @code{GRUB_TERMINAL_INPUT} (@pxref{Simple configuration,,, grub,GNU GRUB manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46795
#, no-wrap
msgid "@code{serial-unit} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46799
msgid "The serial unit used by the bootloader, as an integer from 0 to 3.  For GRUB, it is chosen at run-time; currently GRUB chooses 0, which corresponds to COM1 (@pxref{Serial terminal,,, grub,GNU GRUB manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46800
#, no-wrap
msgid "@code{serial-speed} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46804
msgid "The speed of the serial interface, as an integer.  For GRUB, the default value is chosen at run-time; currently GRUB chooses 9600@tie{}bps (@pxref{Serial terminal,,, grub,GNU GRUB manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46805
#, no-wrap
msgid "@code{device-tree-support?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46808
msgid "Whether to support Linux @uref{https://en.wikipedia.org/wiki/Devicetree, device tree} files loading."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46813
msgid "This option in enabled by default.  In some cases involving the @code{u-boot} bootloader, where the device tree has already been loaded in RAM, it can be handy to disable the option by setting it to @code{#f}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46814
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{extra-initrd} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:46818
msgid "File name of an additional initrd to load during the boot.  It may or may not point to a file in the store, but the main use case is for out-of-store files containing secrets."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46826
msgid "In order to be able to provide decryption keys for LUKS devices, they need to be available in the initial RAM disk.  However they cannot be stored inside the usual initrd, since it is stored in the store and being world-readable (as files in the store are) is not a desired property for an initrd containing decryption keys.  You can therefore use this field to instruct GRUB to also load a manually created initrd not stored in the store."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46829
msgid "For any use case not involving secrets, you should use regular initrd (@pxref{operating-system Reference, @code{initrd}}) instead."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46831
msgid "Suitable image can be created for example like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46835
#, no-wrap
msgid ""
"echo /key-file.bin | cpio -oH newc >/key-file.cpio\n"
"chmod 0000 /key-file.cpio\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46838
msgid "After it is created, you can use it in this manner:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46855
#, no-wrap
msgid ""
";; Operating system with encrypted boot partition\n"
"(operating-system\n"
"  @dots{}\n"
"  (bootloader (bootloader-configuration\n"
"               (bootloader grub-efi-bootloader)\n"
"               (targets '(\"/boot/efi\"))\n"
"               ;; Load the initrd with a key file...\n"
"               (extra-initrd \"/key-file.cpio\")))\n"
"  (mapped-devices\n"
"   (list (mapped-device\n"
"          (source (uuid \"12345678-1234-1234-1234-123456789abc\"))\n"
"          (target \"my-root\")\n"
"          (type luks-device-mapping)\n"
"          ;; ... and use it to unlock the root device.\n"
"          (arguments '(#:key-file \"/key-file.bin\"))))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46860
msgid "Be careful when using this option, since pointing to a file that is not readable by the grub while booting will cause the boot to fail and require a manual edit of the initrd line in the grub menu."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46862
msgid "Currently only supported by GRUB."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46866
#, no-wrap
msgid "dual boot"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46867
#, no-wrap
msgid "boot menu"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46873
msgid "Should you want to list additional boot menu entries @i{via} the @code{menu-entries} field above, you will need to create them with the @code{menu-entry} form.  For example, imagine you want to be able to boot another distro (hard to imagine!), you can define a menu entry along these lines:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46880
#, no-wrap
msgid ""
"(menu-entry\n"
"  (label \"The Other Distro\")\n"
"  (linux \"/boot/old/vmlinux-2.6.32\")\n"
"  (linux-arguments '(\"root=/dev/sda2\"))\n"
"  (initrd \"/boot/old/initrd\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46883
msgid "Details below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:46884
#, no-wrap
msgid "{Data Type} menu-entry"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:46886
msgid "The type of an entry in the bootloader menu."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46891
msgid "The label to show in the menu---e.g., @code{\"GNU\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46892
#, no-wrap
msgid "@code{linux} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46894
msgid "The Linux kernel image to boot, for example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46897
#, no-wrap
msgid "(file-append linux-libre \"/bzImage\")\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46902
msgid "For GRUB, it is also possible to specify a device explicitly in the file path using GRUB's device naming convention (@pxref{Naming convention,,, grub, GNU GRUB manual}), for example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46905
#, no-wrap
msgid "\"(hd0,msdos1)/boot/vmlinuz\"\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46909
msgid "If the device is specified explicitly as above, then the @code{device} field is ignored entirely."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46910
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{linux-arguments} (default: @code{'()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:46913
msgid "The list of extra Linux kernel command-line arguments---e.g., @code{'(\"console=ttyS0\")}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46914
#, no-wrap
msgid "@code{initrd} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46917
msgid "A G-Expression or string denoting the file name of the initial RAM disk to use (@pxref{G-Expressions})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46921
msgid "The device where the kernel and initrd are to be found---i.e., for GRUB, @dfn{root} for this menu entry (@pxref{root,,, grub, GNU GRUB manual})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46927
msgid "This may be a file system label (a string), a file system UUID (a bytevector, @pxref{File Systems}), or @code{#f}, in which case the bootloader will search the device containing the file specified by the @code{linux} field (@pxref{search,,, grub, GNU GRUB manual}).  It must @emph{not} be an OS device name such as @file{/dev/sda1}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46928
#, no-wrap
msgid "@code{multiboot-kernel} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46932
msgid "The kernel to boot in Multiboot-mode (@pxref{multiboot,,, grub, GNU GRUB manual}).  When this field is set, a Multiboot menu-entry is generated.  For example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46935
#, no-wrap
msgid "(file-append mach \"/boot/gnumach\")\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46937
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{multiboot-arguments} (default: @code{'()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:46939
msgid "The list of extra command-line arguments for the multiboot-kernel."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46942
msgid "For example, when running in QEMU it can be useful to use a text-based console (use options @option{--nographic} @option{--serial mon:stdio}):"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46945
#, no-wrap
msgid "'(\"console=com0\")\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46951
msgid "To use the new and still experimental @uref{https://darnassus.sceen.net/~hurd-web/rump_kernel/, rumpdisk user-level disk driver} instead of GNU@tie{}Mach's in-kernel IDE driver, set @code{kernel-arguments} to:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46954
#, no-wrap
msgid "'(\"noide\")\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46957
msgid "Of course, these options can be combined:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46960
#, no-wrap
msgid "'(\"console=com0\" \"noide\")\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46962
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{multiboot-modules} (default: @code{'()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:46964
msgid "The list of commands for loading Multiboot modules.  For example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46970
#, no-wrap
msgid ""
"(list (list (file-append hurd \"/hurd/ext2fs.static\") \"ext2fs\"\n"
"             @dots{})\n"
"      (list (file-append libc \"/lib/ld.so.1\") \"exec\"\n"
"             @dots{}))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46972
#, no-wrap
msgid "@code{chain-loader} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46977
msgid "A string that can be accepted by @code{grub}'s @code{chainloader} directive. This has no effect if either @code{linux} or @code{multiboot-kernel} fields are specified. The following is an example of chainloading a different GNU/Linux system."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46988
#, no-wrap
msgid ""
"(bootloader\n"
" (bootloader-configuration\n"
"  ;; @dots{}\n"
"  (menu-entries\n"
"   (list\n"
"    (menu-entry\n"
"     (label \"GNU/Linux\")\n"
"     (device (uuid \"1C31-A17C\" 'fat))\n"
"     (chain-loader \"/EFI/GNULinux/grubx64.efi\"))))))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46993 guix-git/doc/guix.texi:47053
#, no-wrap
msgid "HDPI"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46994 guix-git/doc/guix.texi:47054
#, no-wrap
msgid "HiDPI"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46995 guix-git/doc/guix.texi:47055
#, no-wrap
msgid "resolution"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46999
msgid "For now only GRUB has theme support.  GRUB themes are created using the @code{grub-theme} form, which is not fully documented yet."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:47000
#, no-wrap
msgid "{Data Type} grub-theme"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:47002
msgid "Data type representing the configuration of the GRUB theme."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47004
#, no-wrap
msgid "@code{gfxmode} (default: @code{'(\"auto\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47007
msgid "The GRUB @code{gfxmode} to set (a list of screen resolution strings, @pxref{gfxmode,,, grub, GNU GRUB manual})."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:47010
#, no-wrap
msgid "{Procedure} grub-theme"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:47014
msgid "Return the default GRUB theme used by the operating system if no @code{theme} field is specified in @code{bootloader-configuration} record."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:47017
msgid "It comes with a fancy background image displaying the GNU and Guix logos."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47021
msgid "For example, to override the default resolution, you may use something like"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47029
#, no-wrap
msgid ""
"(bootloader\n"
" (bootloader-configuration\n"
" ;; @dots{}\n"
" (theme (grub-theme\n"
"         (inherit (grub-theme))\n"
"         (gfxmode '(\"1024x786x32\" \"auto\"))))))\n"
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:47032
#, no-wrap
msgid "Invoking @command{guix system}"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:47034
#, fuzzy, no-wrap
#| msgid "File Systems"
msgid "guix system"
msgstr "Filesystem"

#. type: Plain text
#: guix-git/doc/guix.texi:47038
msgid "Once you have written an operating system declaration as seen in the previous section, it can be @dfn{instantiated} using the @command{guix system} command.  The synopsis is:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47041
#, no-wrap
msgid "guix system @var{options}@dots{} @var{action} @var{file}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47047
msgid "@var{file} must be the name of a file containing an @code{operating-system} declaration.  @var{action} specifies how the operating system is instantiated.  Currently the following values are supported:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47049 guix-git/doc/guix.texi:53143
#, no-wrap
msgid "search"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47052
msgid "Display available service type definitions that match the given regular expressions, sorted by relevance:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47074
#, no-wrap
msgid ""
"$ guix system search console\n"
"name: console-fonts\n"
"location: gnu/services/base.scm:806:2\n"
"extends: shepherd-root\n"
"description: Install the given fonts on the specified ttys (fonts are per\n"
"+ virtual console on GNU/Linux).  The value of this service is a list of\n"
"+ tty/font pairs.  The font can be the name of a font provided by the `kbd'\n"
"+ package or any valid argument to `setfont', as in this example:\n"
"+\n"
"+      '((\"tty1\" . \"LatGrkCyr-8x16\")\n"
"+        (\"tty2\" . (file-append\n"
"+                      font-tamzen\n"
"+                      \"/share/kbd/consolefonts/TamzenForPowerline10x20.psf\"))\n"
"+        (\"tty3\" . (file-append\n"
"+                      font-terminus\n"
"+                      \"/share/consolefonts/ter-132n\"))) ; for HDPI\n"
"relevance: 9\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47080
#, no-wrap
msgid ""
"name: mingetty\n"
"location: gnu/services/base.scm:1190:2\n"
"extends: shepherd-root\n"
"description: Provide console login using the `mingetty' program.\n"
"relevance: 2\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47087
#, no-wrap
msgid ""
"name: login\n"
"location: gnu/services/base.scm:860:2\n"
"extends: pam\n"
"description: Provide a console log-in service as specified by its\n"
"+ configuration value, a `login-configuration' object.\n"
"relevance: 2\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47089 guix-git/doc/guix.texi:53179
#, no-wrap
msgid "@dots{}\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47094
msgid "As for @command{guix package --search}, the result is written in @code{recutils} format, which makes it easy to filter the output (@pxref{Top, GNU recutils databases,, recutils, GNU recutils manual})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:47095 guix-git/doc/guix.texi:53228
#, no-wrap
msgid "service type definition, editing"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:47096 guix-git/doc/guix.texi:53229
#, fuzzy, no-wrap
#| msgid "Updating the Guix package definition."
msgid "editing, service type definition"
msgstr "Aggiornamento della definizione del pacchetto Guix."

#. type: item
#: guix-git/doc/guix.texi:47097 guix-git/doc/guix.texi:53230
#, no-wrap
msgid "edit"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47099
msgid "Edit or view the definition of the given service types."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47103
msgid "For example, the command below opens your editor, as specified by the @env{EDITOR} environment variable, on the definition of the @code{openssh} service type:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47106
#, no-wrap
msgid "guix system edit openssh\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47108 guix-git/doc/guix.texi:53241
#, no-wrap
msgid "reconfigure"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47113
msgid "Build the operating system described in @var{file}, activate it, and switch to it@footnote{This action (and the related actions @code{switch-generation} and @code{roll-back}) are usable only on systems already running Guix System.}."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:47121
msgid "It is highly recommended to run @command{guix pull} once before you run @command{guix system reconfigure} for the first time (@pxref{Invoking guix pull}).  Failing to do that you would see an older version of Guix once @command{reconfigure} has completed."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47129
msgid "This effects all the configuration specified in @var{file}: user accounts, system services, global package list, privileged programs, etc.  The command starts system services specified in @var{file} that are not currently running; if a service is currently running this command will arrange for it to be upgraded the next time it is stopped (e.g.@: by @code{herd stop X} or @code{herd restart X})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47135
msgid "This command creates a new generation whose number is one greater than the current generation (as reported by @command{guix system list-generations}).  If that generation already exists, it will be overwritten.  This behavior mirrors that of @command{guix package} (@pxref{Invoking guix package})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47140
msgid "It adds a bootloader menu entry for the new OS configuration, ---unless @option{--no-bootloader} is passed.  For GRUB, it moves entries for older configurations to a submenu, allowing you to choose an older system generation at boot time should you need it."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:47141
#, no-wrap
msgid "kexec, for fast reboots"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:47142
#, no-wrap
msgid "rebooting @i{via} Linux kexec"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47149
msgid "On Linux, @command{guix system reconfigure} also loads the new system for fast reboot @i{via} kexec: running @command{reboot --kexec} will boot the new system by directly executing its kernel, thus bypassing the BIOS initialization phase and bootloader (@pxref{Invoking reboot,,, shepherd, The GNU Shepherd Manual}).  You can avoid this behavior by passing the @option{--no-kexec} option."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:47150 guix-git/doc/guix.texi:47512
#: guix-git/doc/guix.texi:48737
#, no-wrap
msgid "provenance tracking, of the operating system"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47155
msgid "Upon completion, the new system is deployed under @file{/run/current-system}.  This directory contains @dfn{provenance meta-data}: the list of channels in use (@pxref{Channels}) and @var{file} itself, when available.  You can view it by running:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47164
msgid "This information is useful should you later want to inspect how this particular generation was built.  In fact, assuming @var{file} is self-contained, you can later rebuild generation @var{n} of your operating system with:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47170
#, no-wrap
msgid ""
"guix time-machine \\\n"
"  -C /var/guix/profiles/system-@var{n}-link/channels.scm -- \\\n"
"  system reconfigure \\\n"
"  /var/guix/profiles/system-@var{n}-link/configuration.scm\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47176
msgid "You can think of it as some sort of built-in version control! Your system is not just a binary artifact: @emph{it carries its own source}.  @xref{Service Reference, @code{provenance-service-type}}, for more information on provenance tracking."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47182
msgid "By default, @command{reconfigure} @emph{prevents you from downgrading your system}, which could (re)introduce security vulnerabilities and also cause problems with ``stateful'' services such as database management systems.  You can override that behavior by passing @option{--allow-downgrades}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47183 guix-git/doc/guix.texi:53301
#, no-wrap
msgid "switch-generation"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47192
msgid "Switch to an existing system generation.  This action atomically switches the system profile to the specified system generation.  It also rearranges the system's existing bootloader menu entries.  It makes the menu entry for the specified system generation the default, and it moves the entries for the other generations to a submenu, if supported by the bootloader being used.  The next time the system boots, it will use the specified system generation."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47196
msgid "The bootloader itself is not being reinstalled when using this command.  Thus, the installed bootloader is used with an updated configuration file."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47200
msgid "The target generation can be specified explicitly by its generation number.  For example, the following invocation would switch to system generation 7:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47203
#, no-wrap
msgid "guix system switch-generation 7\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47211 guix-git/doc/guix.texi:53320
msgid "The target generation can also be specified relative to the current generation with the form @code{+N} or @code{-N}, where @code{+3} means ``3 generations ahead of the current generation,'' and @code{-1} means ``1 generation prior to the current generation.'' When specifying a negative value such as @code{-1}, you must precede it with @code{--} to prevent it from being parsed as an option.  For example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47214
#, no-wrap
msgid "guix system switch-generation -- -1\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47222
msgid "Currently, the effect of invoking this action is @emph{only} to switch the system profile to an existing generation and rearrange the bootloader menu entries.  To actually start using the target system generation, you must reboot after running this action.  In the future, it will be updated to do the same things as @command{reconfigure}, like activating and deactivating services."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47224 guix-git/doc/guix.texi:53326
msgid "This action will fail if the specified generation does not exist."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47225 guix-git/doc/guix.texi:53327
#, no-wrap
msgid "roll-back"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47231
msgid "Switch to the preceding system generation.  The next time the system boots, it will use the preceding system generation.  This is the inverse of @command{reconfigure}, and it is exactly the same as invoking @command{switch-generation} with an argument of @code{-1}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47235
msgid "Currently, as with @command{switch-generation}, you must reboot after running this action to actually start using the preceding system generation."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47236 guix-git/doc/guix.texi:53333
#, no-wrap
msgid "delete-generations"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:47237
#, no-wrap
msgid "deleting system generations"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:47238 guix-git/doc/guix.texi:53335
#, no-wrap
msgid "saving space"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47242
msgid "Delete system generations, making them candidates for garbage collection (@pxref{Invoking guix gc}, for information on how to run the ``garbage collector'')."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47246
msgid "This works in the same way as @samp{guix package --delete-generations} (@pxref{Invoking guix package, @option{--delete-generations}}).  With no arguments, all system generations but the current one are deleted:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47249
#, no-wrap
msgid "guix system delete-generations\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47253
msgid "You can also select the generations you want to delete.  The example below deletes all the system generations that are more than two months old:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47256
#, no-wrap
msgid "guix system delete-generations 2m\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47261
msgid "Running this command automatically reinstalls the bootloader with an updated list of menu entries---e.g., the ``old generations'' sub-menu in GRUB no longer lists the generations that have been deleted."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47266
msgid "Build the derivation of the operating system, which includes all the configuration files and programs needed to boot and run the system.  This action does not actually install anything."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47267
#, no-wrap
msgid "init"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47271
msgid "Populate the given directory with all the files necessary to run the operating system specified in @var{file}.  This is useful for first-time installations of Guix System.  For instance:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47274
#, no-wrap
msgid "guix system init my-os-config.scm /mnt\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47281
msgid "copies to @file{/mnt} all the store items required by the configuration specified in @file{my-os-config.scm}.  This includes configuration files, packages, and so on.  It also creates other essential files needed for the system to operate correctly---e.g., the @file{/etc}, @file{/var}, and @file{/run} directories, and the @file{/bin/sh} file."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47285
msgid "This command also installs bootloader on the targets specified in @file{my-os-config}, unless the @option{--no-bootloader} option was passed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47286
#, no-wrap
msgid "installer"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47292
msgid "Run the installer.  Usually the installer is built as an @file{iso} image, copied to a USB Stick or DVD, and booted from (@ref{USB Stick and DVD Installation}).  If your machine already runs Guix and you still want to run the installer, e.g., for testing purposes, you can skip the step of creating an @file{iso} and run for instance:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47295
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "guix system installer --dry-run\n"
msgstr "Documentazione"

#. type: quotation
#: guix-git/doc/guix.texi:47301
msgid "If you do not use @option{--dry-run} then you need to run as root.  Be @emph{very careful} when running the installer as root, it can cause data loss or render your system unbootable!"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47303
#, no-wrap
msgid "vm"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:47304 guix-git/doc/guix.texi:48098
#, no-wrap
msgid "virtual machine"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:47305
#, no-wrap
msgid "VM"
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:47309
msgid "guix system vm"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47309
msgid "Build a virtual machine (VM) that contains the operating system declared in @var{file}, and return a script to run that VM."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:47317
msgid "The @code{vm} action and others below can use KVM support in the Linux-libre kernel.  Specifically, if the machine has hardware virtualization support, the corresponding KVM kernel module should be loaded, and the @file{/dev/kvm} device node must exist and be readable and writable by the user and by the build users of the daemon (@pxref{Build Environment Setup})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47322
msgid "Arguments given to the script are passed to QEMU as in the example below, which enables networking and requests 1@tie{}GiB of RAM for the emulated machine:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47325
#, no-wrap
msgid "$ /gnu/store/@dots{}-run-vm.sh -m 1024 -smp 2 -nic user,model=virtio-net-pci\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47328
msgid "It's possible to combine the two steps into one:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47331
#, no-wrap
msgid "$ $(guix system vm my-config.scm) -m 1024 -smp 2 -nic user,model=virtio-net-pci\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47334
msgid "The VM shares its store with the host system."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47339
msgid "By default, the root file system of the VM is mounted volatile; the @option{--persistent} option can be provided to make it persistent instead.  In that case, the VM disk-image file will be copied from the store to the @env{TMPDIR} directory to make it writable."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47344
msgid "Additional file systems can be shared between the host and the VM using the @option{--share} and @option{--expose} command-line options: the former specifies a directory to be shared with write access, while the latter provides read-only access to the shared directory."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47348
msgid "The example below creates a VM in which the user's home directory is accessible read-only, and where the @file{/exchange} directory is a read-write mapping of @file{$HOME/tmp} on the host:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47352
#, no-wrap
msgid ""
"guix system vm my-config.scm \\\n"
"   --expose=$HOME --share=$HOME/tmp=/exchange\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47357
msgid "On GNU/Linux, the default is to boot directly to the kernel; this has the advantage of requiring only a very tiny root disk image since the store of the host can then be mounted."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47362
msgid "The @option{--full-boot} option forces a complete boot sequence, starting with the bootloader.  This requires more disk space since a root image containing at least the kernel, initrd, and bootloader data files must be created."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47365
msgid "The @option{--image-size} option can be used to specify the size of the image."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47372
msgid "The @option{--no-graphic} option will instruct @command{guix system} to spawn a headless VM that will use the invoking tty for IO.  Among other things, this enables copy-pasting, and scrollback.  Use the @kbd{ctrl-a} prefix to issue QEMU commands; e.g.@: @kbd{ctrl-a h} prints a help, @kbd{ctrl-a x} quits the VM, and @kbd{ctrl-a c} switches between the QEMU monitor and the VM."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:47373
#, no-wrap
msgid "System images, creation in various formats"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:47374
#, no-wrap
msgid "Creating system images in various formats"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:47376
#, no-wrap
msgid "image, creating disk images"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47388
msgid "The @code{image} command can produce various image types.  The image type can be selected using the @option{--image-type} option.  It defaults to @code{mbr-hybrid-raw}.  When its value is @code{iso9660}, the @option{--label} option can be used to specify a volume ID with @code{image}.  By default, the root file system of a disk image is mounted non-volatile; the @option{--volatile} option can be provided to make it volatile instead.  When using @code{image}, the bootloader installed on the generated image is taken from the provided @code{operating-system} definition.  The following example demonstrates how to generate an image that uses the @code{grub-efi-bootloader} bootloader and boot it with QEMU:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47396
#, no-wrap
msgid ""
"image=$(guix system image --image-type=qcow2 \\\n"
"        gnu/system/examples/lightweight-desktop.tmpl)\n"
"cp $image /tmp/my-image.qcow2\n"
"chmod +w /tmp/my-image.qcow2\n"
"qemu-system-x86_64 -enable-kvm -hda /tmp/my-image.qcow2 -m 1000 \\\n"
"                   -bios $(guix build ovmf-x86-64)/share/firmware/ovmf_x64.bin\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47402
msgid "When using the @code{mbr-hybrid-raw} image type, a raw disk image is produced; it can be copied as is to a USB stick, for instance.  Assuming @code{/dev/sdc} is the device corresponding to a USB stick, one can copy the image to it using the following command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47405
#, no-wrap
msgid "# dd if=$(guix system image my-os.scm) of=/dev/sdc status=progress\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47409
msgid "The @code{--list-image-types} command lists all the available image types."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:47410
#, no-wrap
msgid "creating virtual machine images"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47419
msgid "When using the @code{qcow2} image type, the returned image is in qcow2 format, which the QEMU emulator can efficiently use. @xref{Running Guix in a VM}, for more information on how to run the image in a virtual machine.  The @code{grub-bootloader} bootloader is always used independently of what is declared in the @code{operating-system} file passed as argument.  This is to make it easier to work with QEMU, which uses the SeaBIOS BIOS by default, expecting a bootloader to be installed in the Master Boot Record (MBR)."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:47420
#, no-wrap
msgid "docker-image, creating docker images"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47426
msgid "When using the @code{docker} image type, a Docker image is produced.  Guix builds the image from scratch, not from a pre-existing Docker base image.  As a result, it contains @emph{exactly} what you define in the operating system configuration file.  You can then load the image and launch a Docker container using commands like the following:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47431
#, no-wrap
msgid ""
"image_id=\"$(docker load < guix-system-docker-image.tar.gz)\"\n"
"container_id=\"$(docker create $image_id)\"\n"
"docker start $container_id\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47438
msgid "This command starts a new Docker container from the specified image.  It will boot the Guix system in the usual manner, which means it will start any services you have defined in the operating system configuration.  You can get an interactive shell running in the container using @command{docker exec}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47441
#, no-wrap
msgid "docker exec -ti $container_id /run/current-system/profile/bin/bash --login\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47448
msgid "Depending on what you run in the Docker container, it may be necessary to give the container additional permissions.  For example, if you intend to build software using Guix inside of the Docker container, you may need to pass the @option{--privileged} option to @code{docker create}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47452
msgid "Last, the @option{--network} option applies to @command{guix system docker-image}: it produces an image where network is supposedly shared with the host, and thus without services like nscd or NetworkManager."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47460
msgid "Return a script to run the operating system declared in @var{file} within a container.  Containers are a set of lightweight isolation mechanisms provided by the kernel Linux-libre.  Containers are substantially less resource-demanding than full virtual machines since the kernel, shared objects, and other resources can be shared with the host system; this also means they provide thinner isolation."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47464
msgid "Currently, the script must be run as root in order to support more than a single user and group.  The container shares its store with the host system."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47468
msgid "As with the @code{vm} action (@pxref{guix system vm}), additional file systems to be shared between the host and container can be specified using the @option{--share} and @option{--expose} options:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47472
#, no-wrap
msgid ""
"guix system container my-config.scm \\\n"
"   --expose=$HOME --share=$HOME/tmp=/exchange\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47477
msgid "The @option{--share} and @option{--expose} options can also be passed to the generated script to bind-mount additional directories into the container."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:47480
msgid "This option requires Linux-libre 3.19 or newer."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47487 guix-git/doc/guix.texi:53444
msgid "@var{options} can contain any of the common build options (@pxref{Common Build Options}).  In addition, @var{options} can contain one of the following:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47496
msgid "Consider the operating-system @var{expr} evaluates to.  This is an alternative to specifying a file which evaluates to an operating system.  This is used to generate the Guix system installer @pxref{Building the Installation Image})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47501
msgid "Attempt to build for @var{system} instead of the host system type.  This works as per @command{guix build} (@pxref{Invoking guix build})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47511
msgid "Return the derivation file name of the given operating system without building anything."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47520
msgid "As discussed above, @command{guix system init} and @command{guix system reconfigure} always save provenance information @i{via} a dedicated service (@pxref{Service Reference, @code{provenance-service-type}}).  However, other commands don't do that by default.  If you wish to, say, create a virtual machine image that contains provenance information, you can run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47523
#, no-wrap
msgid "guix system image -t qcow2 --save-provenance config.scm\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47530
msgid "That way, the resulting image will effectively ``embed its own source'' in the form of meta-data in @file{/run/current-system}.  With that information, one can rebuild the image to make sure it really contains what it pretends to contain; or they could use that to derive a variant of the image."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47531
#, no-wrap
msgid "--image-type=@var{type}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47534
msgid "For the @code{image} action, create an image with given @var{type}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47537
msgid "When this option is omitted, @command{guix system} uses the @code{mbr-hybrid-raw} image type."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:47538
#, no-wrap
msgid "ISO-9660 format"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:47539
#, no-wrap
msgid "CD image format"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:47540
#, no-wrap
msgid "DVD image format"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47543
msgid "@option{--image-type=iso9660} produces an ISO-9660 image, suitable for burning on CDs and DVDs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47544
#, no-wrap
msgid "--image-size=@var{size}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47549
msgid "For the @code{image} action, create an image of the given @var{size}.  @var{size} may be a number of bytes, or it may include a unit as a suffix (@pxref{Block size, size specifications,, coreutils, GNU Coreutils})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47553
msgid "When this option is omitted, @command{guix system} computes an estimate of the image size as a function of the size of the system declared in @var{file}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47558
msgid "For the @code{container} action, allow containers to access the host network, that is, do not create a network namespace."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47564
#, no-wrap
msgid "--skip-checks"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47566
msgid "Skip pre-installation safety checks."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47573
msgid "By default, @command{guix system init} and @command{guix system reconfigure} perform safety checks: they make sure the file systems that appear in the @code{operating-system} declaration actually exist (@pxref{File Systems}), and that any Linux kernel modules that may be needed at boot time are listed in @code{initrd-modules} (@pxref{Initial RAM Disk}).  Passing this option skips these tests altogether."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47576
msgid "Instruct @command{guix system reconfigure} to allow system downgrades."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47584
msgid "By default, @command{reconfigure} prevents you from downgrading your system.  It achieves that by comparing the provenance info of your system (shown by @command{guix system describe}) with that of your @command{guix} command (shown by @command{guix describe}).  If the commits for @command{guix} are not descendants of those used for your system, @command{guix system reconfigure} errors out.  Passing @option{--allow-downgrades} allows you to bypass these checks."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:47590
#, no-wrap
msgid "on-error"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:47591
#, no-wrap
msgid "on-error strategy"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:47592
#, no-wrap
msgid "error strategy"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47593
#, no-wrap
msgid "--on-error=@var{strategy}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47596
msgid "Apply @var{strategy} when an error occurs when reading @var{file}.  @var{strategy} may be one of the following:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47598
#, no-wrap
msgid "nothing-special"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47600
msgid "Report the error concisely and exit.  This is the default strategy."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47601
#, no-wrap
msgid "backtrace"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47603
msgid "Likewise, but also display a backtrace."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47604
#, no-wrap
msgid "debug"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47610
msgid "Report the error and enter Guile's debugger.  From there, you can run commands such as @code{,bt} to get a backtrace, @code{,locals} to display local variable values, and more generally inspect the state of the program.  @xref{Debug Commands,,, guile, GNU Guile Reference Manual}, for a list of available debugging commands."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47617
msgid "Once you have built, configured, re-configured, and re-re-configured your Guix installation, you may find it useful to list the operating system generations available on disk---and that you can choose from the bootloader boot menu:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47620 guix-git/doc/guix.texi:53360
#, no-wrap
msgid "describe"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47623
msgid "Describe the running system generation: its file name, the kernel and bootloader used, etc., as well as provenance information when available."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47630
msgid "The @code{--list-installed} flag is available, with the same syntax that is used in @command{guix package --list-installed} (@pxref{Invoking guix package}).  When the flag is used, the description will include a list of packages that are currently installed in the system profile, with optional filtering based on a regular expression."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:47637
msgid "The @emph{running} system generation---referred to by @file{/run/current-system}---is not necessarily the @emph{current} system generation---referred to by @file{/var/guix/profiles/system}: it differs when, for instance, you chose from the bootloader menu to boot an older generation."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:47641
msgid "It can also differ from the @emph{booted} system generation---referred to by @file{/run/booted-system}---for instance because you reconfigured the system in the meantime."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47643 guix-git/doc/guix.texi:53375
#, no-wrap
msgid "list-generations"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47648
msgid "List a summary of each generation of the operating system available on disk, in a human-readable way.  This is similar to the @option{--list-generations} option of @command{guix package} (@pxref{Invoking guix package})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47653 guix-git/doc/guix.texi:53385
msgid "Optionally, one can specify a pattern, with the same syntax that is used in @command{guix package --list-generations}, to restrict the list of generations displayed.  For instance, the following command displays generations that are up to 10 days old:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47656
#, no-wrap
msgid "$ guix system list-generations 10d\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47662
msgid "The @code{--list-installed} flag may also be specified, with the same syntax that is used in @command{guix package --list-installed}.  This may be helpful if trying to determine when a package was added to the system."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47668
msgid "The @command{guix system} command has even more to offer! The following sub-commands allow you to visualize how your system services relate to each other:"
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:47670
msgid "system-extension-graph"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47672 guix-git/doc/guix.texi:53415
#, no-wrap
msgid "extension-graph"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47679
msgid "Emit to standard output the @dfn{service extension graph} of the operating system defined in @var{file} (@pxref{Service Composition}, for more information on service extensions).  By default the output is in Dot/Graphviz format, but you can choose a different format with @option{--graph-backend}, as with @command{guix graph} (@pxref{Invoking guix graph, @option{--backend}}):"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47681 guix-git/doc/guix.texi:53424
msgid "The command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47684
#, no-wrap
msgid "$ guix system extension-graph @var{file} | xdot -\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47687 guix-git/doc/guix.texi:53430
msgid "shows the extension relations among services."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:47690
msgid "The @command{dot} program is provided by the @code{graphviz} package."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:47693
msgid "system-shepherd-graph"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47693 guix-git/doc/guix.texi:53432
#, no-wrap
msgid "shepherd-graph"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47698
msgid "Emit to standard output the @dfn{dependency graph} of shepherd services of the operating system defined in @var{file}.  @xref{Shepherd Services}, for more information and for an example graph."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47701 guix-git/doc/guix.texi:53439
msgid "Again, the default output format is Dot/Graphviz, but you can pass @option{--graph-backend} to select a different one."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:47705
#, no-wrap
msgid "Invoking @command{guix deploy}"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:47707
#, no-wrap
msgid "guix deploy"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47714
msgid "We've already seen @code{operating-system} declarations used to manage a machine's configuration locally.  Suppose you need to configure multiple machines, though---perhaps you're managing a service on the web that's comprised of several servers.  @command{guix deploy} enables you to use those same @code{operating-system} declarations to manage multiple remote hosts at once as a logical ``deployment''."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:47719
msgid "The functionality described in this section is still under development and is subject to change.  Get in touch with us on @email{guix-devel@@gnu.org}!"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47723
#, no-wrap
msgid "guix deploy @var{file}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47727
msgid "Such an invocation will deploy the machines that the code within @var{file} evaluates to.  As an example, @var{file} might contain a definition like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47734
#, no-wrap
msgid ""
";; This is a Guix deployment of a \"bare bones\" setup, with\n"
";; no X11 display server, to a machine with an SSH daemon\n"
";; listening on localhost:2222. A configuration such as this\n"
";; may be appropriate for virtual machine with ports\n"
";; forwarded to the host's loopback interface.\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47737
#, no-wrap
msgid ""
"(use-service-modules networking ssh)\n"
"(use-package-modules bootloaders)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47758
#, no-wrap
msgid ""
"(define %system\n"
"  (operating-system\n"
"   (host-name \"gnu-deployed\")\n"
"   (timezone \"Etc/UTC\")\n"
"   (bootloader (bootloader-configuration\n"
"                (bootloader grub-bootloader)\n"
"                (targets '(\"/dev/vda\"))\n"
"                (terminal-outputs '(console))))\n"
"   (file-systems (cons (file-system\n"
"                        (mount-point \"/\")\n"
"                        (device \"/dev/vda1\")\n"
"                        (type \"ext4\"))\n"
"                       %base-file-systems))\n"
"   (services\n"
"    (append (list (service dhcp-client-service-type)\n"
"                  (service openssh-service-type\n"
"                           (openssh-configuration\n"
"                            (permit-root-login #t)\n"
"                            (allow-empty-passwords? #t))))\n"
"            %base-services))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47768
#, no-wrap
msgid ""
"(list (machine\n"
"       (operating-system %system)\n"
"       (environment managed-host-environment-type)\n"
"       (configuration (machine-ssh-configuration\n"
"                       (host-name \"localhost\")\n"
"                       (system \"x86_64-linux\")\n"
"                       (user \"alice\")\n"
"                       (identity \"./id_rsa\")\n"
"                       (port 2222)))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47781
msgid "The file should evaluate to a list of @var{machine} objects.  This example, upon being deployed, will create a new generation on the remote system realizing the @code{operating-system} declaration @code{%system}.  @code{environment} and @code{configuration} specify how the machine should be provisioned---that is, how the computing resources should be created and managed.  The above example does not create any resources, as a @code{'managed-host} is a machine that is already running the Guix system and available over the network.  This is a particularly simple case; a more complex deployment may involve, for example, starting virtual machines through a Virtual Private Server (VPS) provider.  In such a case, a different @var{environment} type would be used."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47786
msgid "Do note that you first need to generate a key pair on the coordinator machine to allow the daemon to export signed archives of files from the store (@pxref{Invoking guix archive}), though this step is automatic on Guix System:"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47794
msgid "Each target machine must authorize the key of the master machine so that it accepts store items it receives from the coordinator:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47797
#, no-wrap
msgid "# guix archive --authorize < coordinator-public-key.txt\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47808
msgid "@code{user}, in this example, specifies the name of the user account to log in as to perform the deployment.  Its default value is @code{root}, but root login over SSH may be forbidden in some cases.  To work around this, @command{guix deploy} can log in as an unprivileged user and employ @code{sudo} to escalate privileges.  This will only work if @code{sudo} is currently installed on the remote and can be invoked non-interactively as @code{user}.  That is, the line in @code{sudoers} granting @code{user} the ability to use @code{sudo} must contain the @code{NOPASSWD} tag.  This can be accomplished with the following operating system configuration snippet:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47812
#, no-wrap
msgid ""
"(use-modules ...\n"
"             (gnu system))               ;for %sudoers-specification\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47814
#, no-wrap
msgid ""
"(define %user \"username\")\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47822
#, no-wrap
msgid ""
"(operating-system\n"
"  ...\n"
"  (sudoers-file\n"
"     (plain-file \"sudoers\"\n"
"                 (string-append (plain-file-content %sudoers-specification)\n"
"                                (format #f \"~a ALL = NOPASSWD: ALL~%\"\n"
"                                        %user)))))\n"
"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47827
msgid "For more information regarding the format of the @file{sudoers} file, consult @command{man sudoers}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47832
msgid "Once you've deployed a system on a set of machines, you may find it useful to run a command on all of them.  The @option{--execute} or @option{-x} option lets you do that; the example below runs @command{uname -a} on all the machines listed in the deployment file:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47835
#, no-wrap
msgid "guix deploy @var{file} -x -- uname -a\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47839
msgid "One thing you may often need to do after deployment is restart specific services on all the machines, which you can do like so:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47842
#, no-wrap
msgid "guix deploy @var{file} -x -- herd restart @var{service}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47846
msgid "The @command{guix deploy -x} command returns zero if and only if the command succeeded on all the machines."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47850
msgid "You may also wish to roll back configurations on machines to a previous generation.  You can do that using the @option{--roll-back} or @option{-r} option like so:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47853
#, no-wrap
msgid "guix deploy --roll-back @var{file}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47859
msgid "Below are the data types you need to know about when writing a deployment file."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:47860
#, no-wrap
msgid "{Data Type} machine"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:47863
msgid "This is the data type representing a single machine in a heterogeneous Guix deployment."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47867
msgid "The object of the operating system configuration to deploy."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:47868
#, no-wrap
msgid "environment"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47870
msgid "An @code{environment-type} describing how the machine should be provisioned."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47871
#, no-wrap
msgid "@code{configuration} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47876
msgid "An object describing the configuration for the machine's @code{environment}.  If the @code{environment} has a default configuration, @code{#f} may be used.  If @code{#f} is used for an environment with no default configuration, however, an error will be thrown."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:47879
#, no-wrap
msgid "{Data Type} machine-ssh-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:47882
msgid "This is the data type representing the SSH client parameters for a machine with an @code{environment} of @code{managed-host-environment-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47885 guix-git/doc/guix.texi:47970
#, no-wrap
msgid "@code{build-locally?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47887
msgid "If false, system derivations will be built on the machine being deployed to."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:47887 guix-git/doc/guix.texi:53562
#, no-wrap
msgid "system"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47890
msgid "The system type describing the architecture of the machine being deployed to---e.g., @code{\"x86_64-linux\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47890 guix-git/doc/guix.texi:47965
#, no-wrap
msgid "@code{authorize?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47893
msgid "If true, the coordinator's signing key will be added to the remote's ACL keyring."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47895
#, no-wrap
msgid "@code{identity} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47898
msgid "If specified, the path to the SSH private key to use to authenticate with the remote host."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47899
#, no-wrap
msgid "@code{host-key} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47901
msgid "This should be the SSH host key of the machine, which looks like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47904
#, no-wrap
msgid "ssh-ed25519 AAAAC3Nz@dots{} root@@example.org\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47909
msgid "When @code{host-key} is @code{#f}, the server is authenticated against the @file{~/.ssh/known_hosts} file, just like the OpenSSH @command{ssh} client does."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47910 guix-git/doc/guix.texi:47962
#, no-wrap
msgid "@code{allow-downgrades?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47912 guix-git/doc/guix.texi:47964
msgid "Whether to allow potential downgrades."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47920
msgid "Like @command{guix system reconfigure}, @command{guix deploy} compares the channel commits currently deployed on the remote host (as returned by @command{guix system describe}) to those currently in use (as returned by @command{guix describe}) to determine whether commits currently in use are descendants of those deployed.  When this is not the case and @code{allow-downgrades?} is false, it raises an error.  This ensures you do not accidentally downgrade remote machines."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47921
#, no-wrap
msgid "@code{safety-checks?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47927
msgid "Whether to perform ``safety checks'' before deployment.  This includes verifying that devices and file systems referred to in the operating system configuration actually exist on the target machine, and making sure that Linux modules required to access storage devices at boot time are listed in the @code{initrd-modules} field of the operating system."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47930
msgid "These safety checks ensure that you do not inadvertently deploy a system that would fail to boot.  Be careful before turning them off!"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:47933
#, no-wrap
msgid "{Data Type} digital-ocean-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:47936
msgid "This is the data type describing the Droplet that should be created for a machine with an @code{environment} of @code{digital-ocean-environment-type}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:47938
#, no-wrap
msgid "ssh-key"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47941
msgid "The path to the SSH private key to use to authenticate with the remote host.  In the future, this field may not exist."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:47941
#, no-wrap
msgid "tags"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47944
msgid "A list of string ``tags'' that uniquely identify the machine.  Must be given such that no two machines in the deployment have the same set of tags."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:47944
#, no-wrap
msgid "region"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47946
msgid "A Digital Ocean region slug, such as @code{\"nyc3\"}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47948
msgid "A Digital Ocean size slug, such as @code{\"s-1vcpu-1gb\"}"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:47948
#, no-wrap
msgid "enable-ipv6?"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47950
msgid "Whether or not the droplet should be created with IPv6 networking."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:47953
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} hetzner-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:47959
msgid "This is the data type describing the server that should be created for a machine with an @code{environment} of @code{hetzner-environment-type}. It allows you to configure deployment to a @acronym{VPS, virtual private server} hosted by @uref{https://www.hetzner.com, Hetzner}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47969
msgid "If true, the public signing key @code{\"/etc/guix/signing-key.pub\"} of the machine that invokes @command{guix deploy} will be added to the operating system ACL keyring of the target machine."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47978
msgid "If true, system derivations will be built on the machine that invokes @command{guix deploy}, otherwise derivations are build on the target machine.  Set this to @code{#f} if the machine you are deploying from has a different architecture than the target machine and you can't build derivations for the target architecture by other means, like offloading (@pxref{Daemon Offload Setup}) or emulation (@pxref{transparent-emulation-qemu, Transparent Emulation with QEMU})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47979
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{delete?} (default: @code{#t})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:47983
msgid "If true, the server will be deleted when an error happens in the provisioning phase. If false, the server will be kept in order to debug any issues."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47984
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ipv4} (default: @code{#t})"
msgstr "Documentazione"

#. type: itemx
#: guix-git/doc/guix.texi:47985
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ipv6} (default: @code{#t})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:47989
msgid "When false, no public IP address is attached.  Specify the name of an existing primary ip to attach it to the machine.  Other values would create a new address automatically."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47990
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{labels} (default: @code{'()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:47995
msgid "A user defined alist of key/value pairs attached to the SSH key and the server on the Hetzner API.  Keys and values must be strings, e.g. @code{'((\"environment\" . \"development\"))}.  For more information, see @uref{https://docs.hetzner.cloud/#labels, Labels}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47996
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{location} (default: @code{\"fsn1\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:48001
msgid "The name of a @uref{https://docs.hetzner.com/cloud/general/locations, location} to create the server in.  For example, @code{\"fsn1\"} corresponds to the Hetzner site in Falkenstein, Germany, while @code{\"sin\"} corresponds to its site in Singapore."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48002
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{server-type} (default: @code{\"cx42\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:48012
msgid "The name of the @uref{https://docs.hetzner.com/cloud/servers/overview#server-types, server type} this virtual server should be created with.  For example, @code{\"cx42\"} corresponds to a x86_64 server that has 8 VCPUs, 16 GB of memory and 160 GB of storage, while @code{\"cax31\"} to the AArch64 equivalent.  Other server types and their current prices can be found @uref{https://www.hetzner.com/cloud/#pricing, here}.  The @code{\"cpx11\"} server type is currently not supported, since its rescue system is too small to bootstrap a Guix system from."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48013
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ssh-key} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:48016
msgid "If specified, the file name of the SSH private key to use to authenticate with the remote host."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48017
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ssh-public-key} (default: extracted from @code{ssh-key})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:48021
msgid "If specified, either a public key as returned by @code{string->public-key} or the path to the SSH public key to use to authenticate with the remote host."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:48027
msgid "When deploying a machine for the first time, the following steps are taken to provision a server for the machine on the @uref{https://www.hetzner.com/cloud, Hetzner Cloud} service:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:48032
msgid "Create the SSH key of the machine on the Hetzner API."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:48035
msgid "Create a server for the machine on the Hetzner API."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:48039
msgid "Format the root partition of the disk using the file system of the machine's operating system.  Supported file systems are btrfs and ext4."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:48045
msgid "Install a minimal Guix operating system on the server using the @uref{https://docs.hetzner.com/cloud/servers/getting-started/rescue-system, rescue mode}.  This minimal system is used to install the machine's operating system, after rebooting."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:48049
msgid "Reboot the server and apply the machine's operating system on the server."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:48054
msgid "Once the server has been provisioned and SSH is available, deployment continues by delegating it to the @code{managed-host-environment-type}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:48061
msgid "Servers on the Hetzner Cloud service can be provisioned on the AArch64 architecture using UEFI boot mode, or on the x86_64 architecture using BIOS boot mode.  The @code{(gnu machine hetzner)} module exports the @code{%hetzner-os-arm} and @code{%hetzner-os-x86} operating systems that are compatible with those two architectures, and can be used as a base for defining your custom operating system."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:48068
msgid "The following example shows the definition of two machines that are deployed on the Hetzner Cloud service.  The first one uses the @code{%hetzner-os-arm} operating system to run a server with 16 shared vCPUs and 32 GB of RAM on the @code{aarch64} architecture, the second one uses the @code{%hetzner-os-x86} operating system on a server with 16 shared vCPUs and 32 GB of RAM on the @code{x86_64} architecture."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48072
#, no-wrap
msgid ""
"(use-modules (gnu machine)\n"
"             (gnu machine hetzner))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48085
#, no-wrap
msgid ""
"(list (machine\n"
"       (operating-system %hetzner-os-arm)\n"
"       (environment hetzner-environment-type)\n"
"       (configuration (hetzner-configuration\n"
"                       (server-type \"cax41\")\n"
"                       (ssh-key \"/home/charlie/.ssh/id_rsa\"))))\n"
"      (machine\n"
"       (operating-system %hetzner-os-x86)\n"
"       (environment hetzner-environment-type)\n"
"       (configuration (hetzner-configuration\n"
"                       (server-type \"cpx51\")\n"
"                       (ssh-public-key \"/home/charlie/.ssh/id_rsa.pub\")))))\n"
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:48087
#, no-wrap
msgid "GUIX_HETZNER_API_TOKEN"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:48092
msgid "Passing this file to @command{guix deploy} with the environment variable @env{GUIX_HETZNER_API_TOKEN} set to a valid Hetzner @uref{https://docs.hetzner.com/cloud/api/getting-started/generating-api-token, API key} should provision two machines for you."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:48096
#, no-wrap
msgid "Running Guix in a Virtual Machine"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48104
msgid "To run Guix in a virtual machine (VM), one can use the pre-built Guix VM image distributed at @url{@value{BASE-URL}/guix-system-vm-image-@value{VERSION}.x86_64-linux.qcow2}.  This image is a compressed image in QCOW format.  You can pass it to an emulator such as @uref{https://qemu.org/, QEMU} (see below for details)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48111
msgid "This image boots the Xfce graphical environment and it contains some commonly used tools.  You can install more software in the image by running @command{guix package} in a terminal (@pxref{Invoking guix package}).  You can also reconfigure the system based on its initial configuration file available as @file{/run/current-system/configuration.scm} (@pxref{Using the Configuration System})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48114
msgid "Instead of using this pre-built image, one can also build their own image using @command{guix system image} (@pxref{Invoking guix system})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:48115
#, no-wrap
msgid "QEMU"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48122
msgid "If you built your own image, you must copy it out of the store (@pxref{The Store}) and give yourself permission to write to the copy before you can use it.  When invoking QEMU, you must choose a system emulator that is suitable for your hardware platform.  Here is a minimal QEMU invocation that will boot the result of @command{guix system image -t qcow2} on x86_64 hardware:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48129
#, no-wrap
msgid ""
"$ qemu-system-x86_64 \\\n"
"   -nic user,model=virtio-net-pci \\\n"
"   -enable-kvm -m 2048 \\\n"
"   -device virtio-blk,drive=myhd \\\n"
"   -drive if=none,file=guix-system-vm-image-@value{VERSION}.x86_64-linux.qcow2,id=myhd\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48132
msgid "Here is what each of these options means:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48134
#, no-wrap
msgid "qemu-system-x86_64"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48137
msgid "This specifies the hardware platform to emulate.  This should match the host."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48138
#, no-wrap
msgid "-nic user,model=virtio-net-pci"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48146
msgid "Enable the unprivileged user-mode network stack.  The guest OS can access the host but not vice versa.  This is the simplest way to get the guest OS online.  @code{model} specifies which network device to emulate: @code{virtio-net-pci} is a special device made for virtualized operating systems and recommended for most uses.  Assuming your hardware platform is x86_64, you can get a list of available NIC models by running @command{qemu-system-x86_64 -nic model=help}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48147
#, no-wrap
msgid "-enable-kvm"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48151
msgid "If your system has hardware virtualization extensions, enabling the virtual machine support (KVM) of the Linux kernel will make things run faster."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48153
#, no-wrap
msgid "-m 2048"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48156
msgid "RAM available to the guest OS, in mebibytes.  Defaults to 128@tie{}MiB, which may be insufficient for some operations."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48157
#, no-wrap
msgid "-device virtio-blk,drive=myhd"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48162
msgid "Create a @code{virtio-blk} drive called ``myhd''.  @code{virtio-blk} is a ``paravirtualization'' mechanism for block devices that allows QEMU to achieve better performance than if it were emulating a complete disk drive.  See the QEMU and KVM documentation for more info."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48163
#, no-wrap
msgid "-drive if=none,file=/tmp/qemu-image,id=myhd"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48167
msgid "Use our QCOW image, the @file{guix-system-vm-image-@value{VERSION}.x86_64-linux.qcow2} file, as the backing store of the ``myhd'' drive."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48177
msgid "The default @command{run-vm.sh} script that is returned by an invocation of @command{guix system vm} does not add a @command{-nic user} flag by default.  To get network access from within the vm add the @code{(dhcp-client-service)} to your system definition and start the VM using @command{$(guix system vm config.scm) -nic user}.  An important caveat of using @command{-nic user} for networking is that @command{ping} will not work, because it uses the ICMP protocol.  You'll have to use a different command to check for network connectivity, for example @command{guix download}."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:48178
#, no-wrap
msgid "Connecting Through SSH"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48186
msgid "To enable SSH inside a VM you need to add an SSH server like @code{openssh-service-type} to your VM (@pxref{Networking Services, @code{openssh-service-type}}).  In addition you need to forward the SSH port, 22 by default, to the host.  You can do this with"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48189
#, no-wrap
msgid "$(guix system vm config.scm) -nic user,model=virtio-net-pci,hostfwd=tcp::10022-:22\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48192
msgid "To connect to the VM you can run"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48195
#, no-wrap
msgid "ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -p 10022 localhost\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48202
msgid "The @command{-p} tells @command{ssh} the port you want to connect to.  @command{-o UserKnownHostsFile=/dev/null} prevents @command{ssh} from complaining every time you modify your @command{config.scm} file and the @command{-o StrictHostKeyChecking=no} prevents you from having to allow a connection to an unknown host every time you connect."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:48208
msgid "If you find the above @samp{hostfwd} example not to be working (e.g., your SSH client hangs attempting to connect to the mapped port of your VM), make sure that your Guix System VM has networking support, such as by using the @code{dhcp-client-service-type} service type."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:48210
#, no-wrap
msgid "Using @command{virt-viewer} with Spice"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48216
msgid "As an alternative to the default @command{qemu} graphical client you can use the @command{remote-viewer} from the @command{virt-viewer} package.  To connect pass the @command{-spice port=5930,disable-ticketing} flag to @command{qemu}.  See previous section for further information on how to do this."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48219
msgid "Spice also allows you to do some nice stuff like share your clipboard with your VM@.  To enable that you'll also have to pass the following flags to @command{qemu}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48225
#, no-wrap
msgid ""
"-device virtio-serial-pci,id=virtio-serial0,max_ports=16,bus=pci.0,addr=0x5\n"
"-chardev spicevmc,name=vdagent,id=vdagent\n"
"-device virtserialport,nr=1,bus=virtio-serial0.0,chardev=vdagent,\\\n"
"name=com.redhat.spice.0\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48229
msgid "You'll also need to add the @code{(spice-vdagent-service)} to your system definition (@pxref{Miscellaneous Services, Spice service})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48236
msgid "The previous sections show the available services and how one can combine them in an @code{operating-system} declaration.  But how do we define them in the first place? And what is a service anyway?"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:48249
#, no-wrap
msgid "daemons"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48262
msgid "Here we define a @dfn{service} as, broadly, something that extends the functionality of the operating system.  Often a service is a process---a @dfn{daemon}---started when the system boots: a secure shell server, a Web server, the Guix build daemon, etc.  Sometimes a service is a daemon whose execution can be triggered by another daemon---e.g., an FTP server started by @command{inetd} or a D-Bus service activated by @command{dbus-daemon}.  Occasionally, a service does not map to a daemon.  For instance, the ``account'' service collects user accounts and makes sure they exist when the system runs; the ``udev'' service collects device management rules and makes them available to the eudev daemon; the @file{/etc} service populates the @file{/etc} directory of the system."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:48263
#, no-wrap
msgid "service extensions"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48275
msgid "Guix system services are connected by @dfn{extensions}.  For instance, the secure shell service @emph{extends} the Shepherd---the initialization system, running as PID@tie{}1---by giving it the command lines to start and stop the secure shell daemon (@pxref{Networking Services, @code{openssh-service-type}}); the UPower service extends the D-Bus service by passing it its @file{.service} specification, and extends the udev service by passing it device management rules (@pxref{Desktop Services, @code{upower-service}}); the Guix daemon service extends the Shepherd by passing it the command lines to start and stop the daemon, and extends the account service by passing it a list of required build user accounts (@pxref{Base Services})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48279
msgid "All in all, services and their ``extends'' relations form a directed acyclic graph (DAG).  If we represent services as boxes and extensions as arrows, a typical system might provide something like this:"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48281
msgid "@image{images/service-graph,,5in,Typical service extension graph.}"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:48282
#, no-wrap
msgid "system service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48290
msgid "At the bottom, we see the @dfn{system service}, which produces the directory containing everything to run and boot the system, as returned by the @command{guix system build} command.  @xref{Service Reference}, to learn about the other service types shown here.  @xref{system-extension-graph, the @command{guix system extension-graph} command}, for information on how to generate this representation for a particular operating system definition."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:48291
#, no-wrap
msgid "service types"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48297
msgid "Technically, developers can define @dfn{service types} to express these relations.  There can be any number of services of a given type on the system---for instance, a system running two instances of the GNU secure shell server (lsh) has two instances of @code{lsh-service-type}, with different parameters."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48300
msgid "The following section describes the programming interface for service types and services."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48307
msgid "A @dfn{service type} is a node in the DAG described above.  Let us start with a simple example, the service type for the Guix build daemon (@pxref{Invoking guix-daemon}):"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48317
#, no-wrap
msgid ""
"(define guix-service-type\n"
"  (service-type\n"
"   (name 'guix)\n"
"   (extensions\n"
"    (list (service-extension shepherd-root-service-type guix-shepherd-service)\n"
"          (service-extension account-service-type guix-accounts)\n"
"          (service-extension activation-service-type guix-activation)))\n"
"   (default-value (guix-configuration))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48321
msgid "It defines three things:"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:48325
msgid "A name, whose sole purpose is to make inspection and debugging easier."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:48330
msgid "A list of @dfn{service extensions}, where each extension designates the target service type and a procedure that, given the parameters of the service, returns a list of objects to extend the service of that type."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:48333
msgid "Every service type has at least one service extension.  The only exception is the @dfn{boot service type}, which is the ultimate service."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:48336
msgid "Optionally, a default value for instances of this type."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48339
msgid "In this example, @code{guix-service-type} extends three services:"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48341 guix-git/doc/guix.texi:49052
#, no-wrap
msgid "shepherd-root-service-type"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48346
msgid "The @code{guix-shepherd-service} procedure defines how the Shepherd service is extended.  Namely, it returns a @code{<shepherd-service>} object that defines how @command{guix-daemon} is started and stopped (@pxref{Shepherd Services})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48347
#, no-wrap
msgid "account-service-type"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48352
msgid "This extension for this service is computed by @code{guix-accounts}, which returns a list of @code{user-group} and @code{user-account} objects representing the build user accounts (@pxref{Invoking guix-daemon})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48353
#, no-wrap
msgid "activation-service-type"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48357
msgid "Here @code{guix-activation} is a procedure that returns a gexp, which is a code snippet to run at ``activation time''---e.g., when the service is booted."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48360
msgid "A service of this type is instantiated like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48366
#, no-wrap
msgid ""
"(service guix-service-type\n"
"         (guix-configuration\n"
"           (build-accounts 5)\n"
"           (extra-options '(\"--gc-keep-derivations\"))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48374
msgid "The second argument to the @code{service} form is a value representing the parameters of this specific service instance.  @xref{guix-configuration-type, @code{guix-configuration}}, for information about the @code{guix-configuration} data type.  When the value is omitted, the default value specified by @code{guix-service-type} is used:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48377
#, no-wrap
msgid "(service guix-service-type)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48381
msgid "@code{guix-service-type} is quite simple because it extends other services but is not extensible itself."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48385
msgid "The service type for an @emph{extensible} service looks like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48392
#, no-wrap
msgid ""
"(define udev-service-type\n"
"  (service-type (name 'udev)\n"
"                (extensions\n"
"                 (list (service-extension shepherd-root-service-type\n"
"                                          udev-shepherd-service)))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48399
#, no-wrap
msgid ""
"                (compose concatenate)       ;concatenate the list of rules\n"
"                (extend (lambda (config rules)\n"
"                          (udev-configuration\n"
"                           (inherit config)\n"
"                           (rules (append (udev-configuration-rules config)\n"
"                                          rules)))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48405
msgid "This is the service type for the @uref{https://github.com/eudev-project/eudev, eudev device management daemon}.  Compared to the previous example, in addition to an extension of @code{shepherd-root-service-type}, we see two new fields:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48407
#, no-wrap
msgid "compose"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48410
msgid "This is the procedure to @dfn{compose} the list of extensions to services of this type."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48413
msgid "Services can extend the udev service by passing it lists of rules; we compose those extensions simply by concatenating them."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48414
#, no-wrap
msgid "extend"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48417
msgid "This procedure defines how the value of the service is @dfn{extended} with the composition of the extensions."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48422
msgid "Udev extensions are composed into a list of rules, but the udev service value is itself a @code{<udev-configuration>} record.  So here, we extend that record by appending the list of rules it contains to the list of contributed rules."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48428
msgid "This is a string giving an overview of the service type.  The string can contain Texinfo markup (@pxref{Overview,,, texinfo, GNU Texinfo}).  The @command{guix system search} command searches these strings and displays them (@pxref{Invoking guix system})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48433
msgid "There can be only one instance of an extensible service type such as @code{udev-service-type}.  If there were more, the @code{service-extension} specifications would be ambiguous."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48436
msgid "Still here? The next section provides a reference of the programming interface for services."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48444
msgid "We have seen an overview of service types (@pxref{Service Types and Services}).  This section provides a reference on how to manipulate services and service types.  This interface is provided by the @code{(gnu services)} module."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48445
#, fuzzy, no-wrap
#| msgid "Services"
msgid "{Procedure} service type [value]"
msgstr "Servizi"

#. type: deffn
#: guix-git/doc/guix.texi:48449
msgid "Return a new service of @var{type}, a @code{<service-type>} object (see below).  @var{value} can be any object; it represents the parameters of this particular service instance."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48453
msgid "When @var{value} is omitted, the default value specified by @var{type} is used; if @var{type} does not specify a default value, an error is raised."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48455
msgid "For instance, this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48458
#, no-wrap
msgid "(service openssh-service-type)\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48462
msgid "is equivalent to this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48466
#, no-wrap
msgid ""
"(service openssh-service-type\n"
"         (openssh-configuration))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48470
msgid "In both cases the result is an instance of @code{openssh-service-type} with the default configuration."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48472
#, fuzzy, no-wrap
#| msgid "Services"
msgid "{Procedure} service? obj"
msgstr "Servizi"

#. type: deffn
#: guix-git/doc/guix.texi:48474
msgid "Return true if @var{obj} is a service."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48476
#, fuzzy, no-wrap
#| msgid "Services"
msgid "{Procedure} service-kind service"
msgstr "Servizi"

#. type: deffn
#: guix-git/doc/guix.texi:48478
msgid "Return the type of @var{service}---i.e., a @code{<service-type>} object."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48480
#, fuzzy, no-wrap
#| msgid "Services"
msgid "{Procedure} service-value service"
msgstr "Servizi"

#. type: deffn
#: guix-git/doc/guix.texi:48483
msgid "Return the value associated with @var{service}.  It represents its parameters."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48486
msgid "Here is an example of how a service is created and manipulated:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48495
#, no-wrap
msgid ""
"(define s\n"
"  (service nginx-service-type\n"
"           (nginx-configuration\n"
"            (nginx nginx)\n"
"            (log-directory log-directory)\n"
"            (run-directory run-directory)\n"
"            (file config-file))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48498
#, no-wrap
msgid ""
"(service? s)\n"
"@result{} #t\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48501
#, no-wrap
msgid ""
"(eq? (service-kind s) nginx-service-type)\n"
"@result{} #t\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48511
msgid "The @code{modify-services} form provides a handy way to change the parameters of some of the services of a list such as @code{%base-services} (@pxref{Base Services, @code{%base-services}}).  It evaluates to a list of services.  Of course, you could always use standard list combinators such as @code{map} and @code{fold} to do that (@pxref{SRFI-1, List Library,, guile, GNU Guile Reference Manual}); @code{modify-services} simply provides a more concise form for this common pattern."
msgstr ""

#. type: defspec
#: guix-git/doc/guix.texi:48512
#, no-wrap
msgid "modify-services services @"
msgstr ""

#. type: defspec
#: guix-git/doc/guix.texi:48514
msgid "(type variable => body) @dots{}"
msgstr ""

#. type: defspec
#: guix-git/doc/guix.texi:48517
msgid "Modify the services listed in @var{services} according to the given clauses.  Each clause has the form:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48520
#, no-wrap
msgid "(@var{type} @var{variable} => @var{body})\n"
msgstr ""

#. type: defspec
#: guix-git/doc/guix.texi:48527
msgid "where @var{type} is a service type---e.g., @code{guix-service-type}---and @var{variable} is an identifier that is bound within the @var{body} to the service parameters---e.g., a @code{guix-configuration} instance---of the original service of that @var{type}."
msgstr ""

#. type: defspec
#: guix-git/doc/guix.texi:48534
msgid "The @var{body} should evaluate to the new service parameters, which will be used to configure the new service.  This new service will replace the original in the resulting list.  Because a service's service parameters are created using @code{define-record-type*}, you can write a succinct @var{body} that evaluates to the new service parameters by using the @code{inherit} feature that @code{define-record-type*} provides."
msgstr ""

#. type: defspec
#: guix-git/doc/guix.texi:48536
msgid "Clauses can also have the following form:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48539
#, no-wrap
msgid "(delete @var{type})\n"
msgstr ""

#. type: defspec
#: guix-git/doc/guix.texi:48543
msgid "Such a clause removes all services of the given @var{type} from @var{services}."
msgstr ""

#. type: defspec
#: guix-git/doc/guix.texi:48545
msgid "@xref{Using the Configuration System}, for example usage."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48552
msgid "Next comes the programming interface for service types.  This is something you want to know when writing new service definitions, but not necessarily when simply looking for ways to customize your @code{operating-system} declaration."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:48553
#, no-wrap
msgid "{Data Type} service-type"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:48554
#, no-wrap
msgid "service type"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:48557
msgid "This is the representation of a @dfn{service type} (@pxref{Service Types and Services})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48561
msgid "This is a symbol, used only to simplify inspection and debugging."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:48562
#, no-wrap
msgid "extensions"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48564
msgid "A non-empty list of @code{<service-extension>} objects (see below)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48565
#, no-wrap
msgid "@code{compose} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48569
msgid "If this is @code{#f}, then the service type denotes services that cannot be extended---i.e., services that do not receive ``values'' from other services."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48573
msgid "Otherwise, it must be a one-argument procedure.  The procedure is called by @code{fold-services} and is passed a list of values collected from extensions.  It may return any single value."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48574
#, no-wrap
msgid "@code{extend} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48576
msgid "If this is @code{#f}, services of this type cannot be extended."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48582
msgid "Otherwise, it must be a two-argument procedure: @code{fold-services} calls it, passing it the initial value of the service as the first argument and the result of applying @code{compose} to the extension values as the second argument.  It must return a value that is a valid parameter value for the service instance."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48588
msgid "This is a string, possibly using Texinfo markup, describing in a couple of sentences what the service is about.  This string allows users to find about the service through @command{guix system search} (@pxref{Invoking guix system})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48589
#, no-wrap
msgid "@code{default-value} (default: @code{&no-default-value})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48592
msgid "The default value associated for instances of this service type.  This allows users to use the @code{service} form without its second argument:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48595
#, no-wrap
msgid "(service @var{type})\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48599
msgid "The returned service in this case has the default value specified by @var{type}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:48602
msgid "@xref{Service Types and Services}, for examples."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48604
#, no-wrap
msgid "{Procedure} service-extension target-type compute"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48609
msgid "Return a new extension for services of type @var{target-type}.  @var{compute} must be a one-argument procedure: @code{fold-services} calls it, passing it the value associated with the service that provides the extension; it must return a valid value for the target service."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48611
#, no-wrap
msgid "{Procedure} service-extension? obj"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48613
msgid "Return true if @var{obj} is a service extension."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48619
msgid "Occasionally, you might want to simply extend an existing service.  This involves creating a new service type and specifying the extension of interest, which can be verbose; the @code{simple-service} procedure provides a shorthand for this."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48620
#, no-wrap
msgid "{Procedure} simple-service name target value"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48624
msgid "Return a service that extends @var{target} with @var{value}.  This works by creating a singleton service type @var{name}, of which the returned service is an instance."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48627
msgid "For example, this extends mcron (@pxref{Scheduled Job Execution}) with an additional job:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48631
#, no-wrap
msgid ""
"(simple-service 'my-mcron-job mcron-service-type\n"
"                #~(job '(next-hour (3)) \"guix gc -F 2G\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48641
msgid "At the core of the service abstraction lies the @code{fold-services} procedure, which is responsible for ``compiling'' a list of services down to a single directory that contains everything needed to boot and run the system---the directory shown by the @command{guix system build} command (@pxref{Invoking guix system}).  In essence, it propagates service extensions down the service graph, updating each node parameters on the way, until it reaches the root node."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48642
#, no-wrap
msgid "{Procedure} fold-services services [#:target-type system-service-type]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48645
msgid "Fold @var{services} by propagating their extensions down to the root of type @var{target-type}; return the root service adjusted accordingly."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48649
msgid "Lastly, the @code{(gnu services)} module also defines several essential service types, some of which are listed below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48650
#, no-wrap
msgid "system-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48653
msgid "This is the root of the service graph.  It produces the system directory as returned by the @command{guix system build} command."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48655
#, no-wrap
msgid "boot-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48658
msgid "The type of the ``boot service'', which produces the @dfn{boot script}.  The boot script is what the initial RAM disk runs when booting."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48660
#, no-wrap
msgid "etc-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48664
msgid "The type of the @file{/etc} service.  This service is used to create files under @file{/etc} and can be extended by passing it name/file tuples such as:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48667
#, no-wrap
msgid "(list `(\"issue\" ,(plain-file \"issue\" \"Welcome!\\n\")))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48671
msgid "In this example, the effect would be to add an @file{/etc/issue} file pointing to the given file."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48673
#, fuzzy, no-wrap
#| msgid "Services"
msgid "etc-profile-d-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:48682
msgid "The type of the @file{/etc/profile.d} service.  This service is used to create files under @file{/etc/profile.d}.  It takes as value a list of file-like objects, as can be produced with @code{local-file}, @code{plain-file}, etc.  Note that provided files whose file names do not end with @file{.sh} are @emph{not} added to @file{/etc/profile.d/} and are silently dropped.  Package objects can also be provided directly to have their @file{etc/profile.d/*.sh} prefixed files added.  A simple usage may look like:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48686
#, no-wrap
msgid ""
"(simple-service 'my-important-profile-file etc-profile-d-service-type\n"
"                (list (plain-file \"youppi.sh\" \"HOW_IMPORTANT=very\")))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48689
#, fuzzy, no-wrap
#| msgid "Services"
msgid "etc-bashrc-d-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:48701
msgid "The type of the @file{/etc/bashrc.d} service.  This service is used to create files under @file{/etc/bashrc.d}.  It takes as value a list of file-like objects, as can be produced with @code{local-file}, @code{plain-file}, etc.  Note that provided files whose file names do not end with @file{.sh} are @emph{not} added to @file{/etc/profile.d/} and are silently dropped.  The default value is made available via the @var{%default-etc-bashrc-d-files} variable for users to extended.  Package objects can also be provided directly to have their @file{etc/bashrc.d/*.sh} prefixed files added.  Since the service is part @code{%base-services}, it can be extended via @code{simple-service} like so:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48704 guix-git/doc/guix.texi:48720
#, no-wrap
msgid ""
"(use-package-modules gnome)     ;for the `vte' package\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48707
#, no-wrap
msgid ""
"(simple-service 'vte-integration etc-bashrc-d-service-type\n"
"                (list (file-append vte \"/etc/profile.d/vte.sh\")))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48710
#, fuzzy, no-wrap
#| msgid "Services"
msgid "vte-integration-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:48717
msgid "This services adds the @file{/etc/bashrc.d/vte.sh} to your system, which improves the Bash and Zsh experience when using VTE-powered terminal emulators.  This causes for example the current directory to be displayed in the terminal emulator's tab title, and the current directory to be preserved when creating a new tab, among other features.  The value of the service is the @code{vte} package to use."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48722
#, fuzzy, no-wrap
#| msgid "Services"
msgid "(service vte-integration-service-type vte)\n"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:48725
#, fuzzy, no-wrap
#| msgid "Services"
msgid "privileged-program-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:48729
msgid "Type for the ``privileged-program service''.  This service collects lists of executable file names, passed as gexps, and adds them to the set of privileged programs on the system (@pxref{Privileged Programs})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48731
#, no-wrap
msgid "profile-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48735
msgid "Type of the service that populates the @dfn{system profile}---i.e., the programs under @file{/run/current-system/profile}.  Other services can extend it by passing it lists of packages to add to the system profile."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48739
#, no-wrap
msgid "provenance-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48743
msgid "This is the type of the service that records @dfn{provenance meta-data} in the system itself.  It creates several files under @file{/run/current-system}:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48745
#, no-wrap
msgid "channels.scm"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48750
msgid "This is a ``channel file'' that can be passed to @command{guix pull -C} or @command{guix time-machine -C}, and which describes the channels used to build the system, if that information was available (@pxref{Channels})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48751
#, no-wrap
msgid "configuration.scm"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48756
msgid "This is the file that was passed as the value for this @code{provenance-service-type} service.  By default, @command{guix system reconfigure} automatically passes the OS configuration file it received on the command line."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48757
#, no-wrap
msgid "provenance"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48760
msgid "This contains the same information as the two other files but in a format that is more readily processable."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48764
msgid "In general, these two pieces of information (channels and configuration file) are enough to reproduce the operating system ``from source''."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:48765
#, no-wrap
msgid "Caveats"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:48772
msgid "This information is necessary to rebuild your operating system, but it is not always sufficient.  In particular, @file{configuration.scm} itself is insufficient if it is not self-contained---if it refers to external Guile modules or to extra files.  If you want @file{configuration.scm} to be self-contained, we recommend that modules or files it refers to be part of a channel."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:48780
msgid "Besides, provenance meta-data is ``silent'' in the sense that it does not change the bits contained in your system, @emph{except for the meta-data bits themselves}.  Two different OS configurations or sets of channels can lead to the same system, bit-for-bit; when @code{provenance-service-type} is used, these two systems will have different meta-data and thus different store file names, which makes comparison less trivial."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48785
msgid "This service is automatically added to your operating system configuration when you use @command{guix system reconfigure}, @command{guix system init}, or @command{guix deploy}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48787
#, no-wrap
msgid "linux-loadable-module-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48791
msgid "Type of the service that collects lists of packages containing kernel-loadable modules, and adds them to the set of kernel-loadable modules."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48794
msgid "This service type is intended to be extended by other service types, such as below:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48800
#, no-wrap
msgid ""
"(simple-service 'installing-module\n"
"                linux-loadable-module-service-type\n"
"                (list module-to-install-1\n"
"                      module-to-install-2))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48804
msgid "This does not actually load modules at bootup, only adds it to the kernel profile so that it @emph{can} be loaded by other means."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:48809
#, no-wrap
msgid "shepherd services"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:48810
#, no-wrap
msgid "PID 1"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:48811
#, no-wrap
msgid "init system"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48817
msgid "The @code{(gnu services shepherd)} module provides a way to define services managed by the GNU@tie{}Shepherd, which is the initialization system---the first process that is started when the system boots, also known as PID@tie{}1 (@pxref{Introduction,,, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48823
msgid "Services in the Shepherd can depend on each other.  For instance, the SSH daemon may need to be started after the syslog daemon has been started, which in turn can only happen once all the file systems have been mounted.  The simple operating system defined earlier (@pxref{Using the Configuration System}) results in a service graph like this:"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48825
msgid "@image{images/shepherd-graph,,5in,Typical shepherd service graph.}"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48829
msgid "You can actually generate such a graph for any operating system definition using the @command{guix system shepherd-graph} command (@pxref{system-shepherd-graph, @command{guix system shepherd-graph}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48833
msgid "The @code{%shepherd-root-service} is a service object representing PID@tie{}1, of type @code{shepherd-root-service-type}; it can be extended by passing it lists of @code{<shepherd-service>} objects."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:48834
#, no-wrap
msgid "{Data Type} shepherd-service"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:48836
msgid "The data type representing a service managed by the Shepherd."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:48838
#, no-wrap
msgid "provision"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48840
msgid "This is a list of symbols denoting what the service provides."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48845
msgid "These are the names that may be passed to @command{herd start}, @command{herd status}, and similar commands (@pxref{Invoking herd,,, shepherd, The GNU Shepherd Manual}).  @xref{Defining Services,,, shepherd, The GNU Shepherd Manual}, for details."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48846
#, no-wrap
msgid "@code{requirement} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48848
msgid "List of symbols denoting the Shepherd services this one depends on."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:48849
#, no-wrap
msgid "@code{user-processes} Shepherd service"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48855
msgid "With very few exceptions, services that start a daemon must depend at least on the @code{user-processes} service; this ensures that these daemons are started after all the file systems have been mounted and that, during shutdown, they are stopped before attempting to terminate remaining user processes."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:48856
#, no-wrap
msgid "one-shot services, for the Shepherd"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48861
msgid "Whether this service is @dfn{one-shot}.  One-shot services stop immediately after their @code{start} action has completed.  @xref{Slots of services,,, shepherd, The GNU Shepherd Manual}, for more info."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48862
#, no-wrap
msgid "@code{respawn?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48865
msgid "Whether to restart the service when it stops, for instance when the underlying process dies."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48866
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{respawn-limit} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:48870
msgid "Set a limit on how many times and how frequently a service may be restarted by Shepherd before it is disabled.  @xref{Defining Services,,, shepherd, The GNU Shepherd Manual}, for details."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48871
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{respawn-delay} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:48874
msgid "When true, this is the delay in seconds before restarting a failed service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48875
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{start} (default: @code{#~(const #t)})"
msgstr "Documentazione"

#. type: itemx
#: guix-git/doc/guix.texi:48876
#, no-wrap
msgid "@code{stop} (default: @code{#~(const #f)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48882
msgid "The @code{start} and @code{stop} fields refer to the Shepherd's facilities to start and stop processes (@pxref{Service De- and Constructors,,, shepherd, The GNU Shepherd Manual}).  They are given as G-expressions that get expanded in the Shepherd configuration file (@pxref{G-Expressions})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48883
#, no-wrap
msgid "@code{actions} (default: @code{'()})"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:48884
#, no-wrap
msgid "actions, of Shepherd services"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48889
msgid "This is a list of @code{shepherd-action} objects (see below) defining @dfn{actions} supported by the service, in addition to the standard @code{start} and @code{stop} actions.  Actions listed here become available as @command{herd} sub-commands:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48892
#, no-wrap
msgid "herd @var{action} @var{service} [@var{arguments}@dots{}]\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48894
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{free-form} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:48900
msgid "When set, this field replaces the @code{start}, @code{stop}, and @code{actions} fields.  It is meant to be used when the service definition comes from some other source, typically the service collection provided by the Shepherd proper (@pxref{Service Collection,,, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:48901
#, no-wrap
msgid "REPL service, for shepherd"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48905
msgid "For example, the snippet below defines a service for the Shepherd's built-in @acronym{REPL, read-eval-print loop} service (@pxref{REPL Service,,, shepherd, The GNU Shepherd Manual}):"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48911
#, no-wrap
msgid ""
"(shepherd-service\n"
"  (provision '(repl))\n"
"  (modules '((shepherd service repl)))\n"
"  (free-form #~(repl-service)))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48917
msgid "In this case, the service object is returned by the @code{repl-service} procedure of the Shepherd, so all the @code{free-form} G-expression does is call that procedure.  Note that the @code{provision} field must be consistent with the actual service provision."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48921
msgid "Whether this service should be started automatically by the Shepherd.  If it is @code{#f} the service has to be started manually with @code{herd start}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48924
msgid "A documentation string, as shown when running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48927
#, no-wrap
msgid "herd doc @var{service-name}\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48931
msgid "where @var{service-name} is one of the symbols in @code{provision} (@pxref{Invoking herd,,, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48935
msgid "This is the list of modules that must be in scope when @code{start} and @code{stop} are evaluated."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48943
msgid "The example below defines a Shepherd service that spawns @command{syslogd}, the system logger from the GNU Networking Utilities (@pxref{syslogd invocation, @command{syslogd},, inetutils, GNU Inetutils}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48955
#, no-wrap
msgid ""
"(let ((config (plain-file \"syslogd.conf\" \"@dots{}\")))\n"
"  (shepherd-service\n"
"    (documentation \"Run the syslog daemon (syslogd).\")\n"
"    (provision '(syslogd))\n"
"    (requirement '(user-processes))\n"
"    (start #~(make-forkexec-constructor\n"
"               (list #$(file-append inetutils \"/libexec/syslogd\")\n"
"                     \"--rcfile\" #$config)\n"
"               #:pid-file \"/var/run/syslog.pid\"))\n"
"    (stop #~(make-kill-destructor))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48970
msgid "Key elements in this example are the @code{start} and @code{stop} fields: they are @dfn{staged} code snippets that use the @code{make-forkexec-constructor} procedure provided by the Shepherd and its dual, @code{make-kill-destructor} (@pxref{Service De- and Constructors,,, shepherd, The GNU Shepherd Manual}).  The @code{start} field will have @command{shepherd} spawn @command{syslogd} with the given option; note that we pass @code{config} after @option{--rcfile}, which is a configuration file declared above (contents of this file are omitted).  Likewise, the @code{stop} field tells how this service is to be stopped; in this case, it is stopped by making the @code{kill} system call on its PID@.  Code staging is achieved using G-expressions: @code{#~} stages code, while @code{#$} ``escapes'' back to host code (@pxref{G-Expressions})."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:48971
#, no-wrap
msgid "{Data Type} shepherd-action"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:48974
msgid "This is the data type that defines additional actions implemented by a Shepherd service (see above)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48978
msgid "Symbol naming the action."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48981
msgid "This is a documentation string for the action.  It can be viewed by running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48984
#, no-wrap
msgid "herd doc @var{service} action @var{action}\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48986
#, no-wrap
msgid "procedure"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48990
msgid "This should be a gexp that evaluates to a procedure of at least one argument, which is the ``running value'' of the service (@pxref{Slots of services,,, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:48994
msgid "The following example defines an action called @code{say-hello} that kindly greets the user:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49003
#, no-wrap
msgid ""
"(shepherd-action\n"
"  (name 'say-hello)\n"
"  (documentation \"Say hi!\")\n"
"  (procedure #~(lambda (running . args)\n"
"                 (format #t \"Hello, friend! arguments: ~s\\n\"\n"
"                         args)\n"
"                 #t)))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:49006
msgid "Assuming this action is added to the @code{example} service, then you can do:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49012
#, no-wrap
msgid ""
"# herd say-hello example\n"
"Hello, friend! arguments: ()\n"
"# herd say-hello example a b c\n"
"Hello, friend! arguments: (\"a\" \"b\" \"c\")\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:49017
msgid "This, as you can see, is a fairly sophisticated way to say hello.  @xref{Defining Services,,, shepherd, The GNU Shepherd Manual}, for more info on actions."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49019
#, no-wrap
msgid "configuration file, of Shepherd services"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:49020
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Procedure} shepherd-configuration-action"
msgstr "Documentazione"

#. type: deffn
#: guix-git/doc/guix.texi:49023
msgid "Return a @code{configuration} action to display @var{file}, which should be the name of the service's configuration file."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:49027
msgid "It can be useful to equip services with that action.  For example, the service for the Tor anonymous router (@pxref{Networking Services, @code{tor-service-type}}) is defined roughly like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49033
#, no-wrap
msgid ""
"(let ((torrc (plain-file \"torrc\" @dots{})))\n"
"  (shepherd-service\n"
"    (provision '(tor))\n"
"    (requirement '(user-processes loopback syslogd))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49040
#, no-wrap
msgid ""
"    (start #~(make-forkexec-constructor\n"
"              (list #$(file-append tor \"/bin/tor\") \"-f\" #$torrc)\n"
"              #:user \"tor\" #:group \"tor\"))\n"
"    (stop #~(make-kill-destructor))\n"
"    (actions (list (shepherd-configuration-action torrc)))\n"
"    (documentation \"Run the Tor anonymous network overlay.\")))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:49044
msgid "Thanks to this action, administrators can inspect the configuration file passed to @command{tor} with this shell command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49047
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "cat $(herd configuration tor)\n"
msgstr "Documentazione"

#. type: deffn
#: guix-git/doc/guix.texi:49050
msgid "This can come in as a handy debugging tool!"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49054
msgid "The service type for the Shepherd ``root service''---i.e., PID@tie{}1."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49059
msgid "This is the service type that extensions target when they want to create shepherd services (@pxref{Service Types and Services}, for an example).  Each extension must pass a list of @code{<shepherd-service>}.  Its value must be a @code{shepherd-configuration}, as described below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:49061
#, no-wrap
msgid "{Data Type} shepherd-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:49063 guix-git/doc/guix.texi:50790
msgid "This data type represents the Shepherd's configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49065 guix-git/doc/guix.texi:50792
#, no-wrap
msgid "shepherd (default: @code{shepherd})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:49067 guix-git/doc/guix.texi:50794
msgid "The Shepherd package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49068 guix-git/doc/guix.texi:50805
#, no-wrap
msgid "services (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:49072 guix-git/doc/guix.texi:50809
msgid "A list of @code{<shepherd-service>} to start.  You should probably use the service extension mechanism instead (@pxref{Shepherd Services})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49077
msgid "The following example specifies the Shepherd package for the operating system:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49092
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; ...\n"
"  (services (append (list openssh-service-type))\n"
"            ;; ...\n"
"            %desktop-services)\n"
"  ;; ...\n"
"  ;; Use own Shepherd package.\n"
"  (essential-services\n"
"   (modify-services (operating-system-default-essential-services\n"
"                     this-operating-system)\n"
"     (shepherd-root-service-type config => (shepherd-configuration\n"
"                                            (inherit config)\n"
"                                            (shepherd my-shepherd))))))\n"
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:49095
msgid "shepherd-transient-timer-services"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49095
#, no-wrap
msgid "@code{transient} service, Shepherd"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49096
#, fuzzy, no-wrap
#| msgid "Services"
msgid "shepherd-transient-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:49100
msgid "This service type represents the Shepherd's @code{transient} service, which lets you spawn commands in the background and interact with them as regular Shepherd services; it is similar to @command{systemd-run}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49104
msgid "For example, the command below spawns @command{rsync} in the background, in an environment where the @env{SSH_AUTH_SOCK} environment variable has the given value:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49108
#, no-wrap
msgid ""
"herd spawn transient -E SSH_AUTH_SOCK=$SSH_AUTH_SOCK -- \\\n"
"  rsync -e ssh -vur . backup.example.org:\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49112
msgid "@xref{Transient Service Maker,,, shepherd, The GNU Shepherd Manual}, for more info on the @code{transient} service."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49114
#, no-wrap
msgid "@code{timer} service, Shepherd"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49115
#, fuzzy, no-wrap
#| msgid "Services"
msgid "shepherd-timer-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:49119
msgid "This is the service type representing the Shepherd's @code{timer} service, which lets you schedule the execution of commands, similar to the venerable @command{at} command.  Here is an example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49122
#, no-wrap
msgid "herd schedule timer at 07:00 -- mpg123 Music/alarm.mp3\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49126
msgid "@xref{Timer Service,,, shepherd, The GNU Shepherd Manual}, for more info on the @code{timer} service."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:49129
#, fuzzy
#| msgid "Services"
msgid "shepherd-system-log"
msgstr "Servizi"

#. type: cindex
#: guix-git/doc/guix.texi:49129
#, no-wrap
msgid "system log service, from Shepherd"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49130
#, no-wrap
msgid "syslogd, Shepherd system log service"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49131
#, fuzzy, no-wrap
#| msgid "Services"
msgid "shepherd-system-log-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:49136
msgid "This service implements a @dfn{system log}, reading messages applications send to @file{/dev/log} and writing them to files or terminals according to user-defined rules.  It provides functionality traditionally implemented by @command{syslogd} programs."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49139
#, fuzzy
#| msgid "Documentation"
msgid "The value of services of this type must be a @code{system-log-configuration} record, as described below."
msgstr "Documentazione"

#. type: defvar
#: guix-git/doc/guix.texi:49141
#, fuzzy
#| msgid "Services"
msgid "This service is part of @code{%base-services} (@pxref{Base Services})."
msgstr "Servizi"

#. type: deftp
#: guix-git/doc/guix.texi:49145
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} system-log-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:49147
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{system-log-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:49149
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{provision} (default: @code{(system-log syslogd)}) (type: list-of-symbols)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:49151
msgid "The name(s) of the system log service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49152
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{requirement} (default: @code{(root-file-system)}) (type: list-of-symbols)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:49154
msgid "Dependencies of the system log service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49155
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{kernel-log-file} (type: gexp-or-string-or-false)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:49157
msgid "File from which kernel messages are read, @file{/dev/kmsg} by default."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49158
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{message-destination} (default: @code{#f}) (type: gexp-or-false)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:49164
msgid "This gexp must evaluate to a procedure that, when passed a log message, returns the list of files to write it to; @code{#f} is equivalent to using @code{(default-message-destination-procedure)}.  @xref{System Log Service,,,shepherd,The GNU Shepherd Manual}, for information on how to write that procedure."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49165
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{date-format} (type: gexp-or-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:49171
msgid "String or string-valued gexp specifying how to format timestamps in log files.  It must be a valid string for @code{strftime} (@pxref{Time,,, guile,GNU Guile Reference Manual}), including delimiting space---e.g., @code{\"%c \"} for a format identical to that of traditional syslogd implementations."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49172
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{history-size} (type: gexp-or-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:49175
msgid "Number of logging messages kept in memory for the purposes of making them available to @command{herd status system-log}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49176
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-silent-time} (type: gexp-or-integer-or-false)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:49180
msgid "Time after which a mark is written to log files if nothing was logged during that time frame.  When set to @code{#f}, this feature is disabled."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49188
#, no-wrap
msgid "%shepherd-root-service"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49190
msgid "This service represents PID@tie{}1."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49194
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "complex configurations"
msgstr "Documentazione"

#. type: Plain text
#: guix-git/doc/guix.texi:49199
msgid "Some programs might have rather complex configuration files or formats, and to make it easier to create Scheme bindings for these configuration files, you can use the utilities defined in the @code{(gnu services configuration)} module."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49206
msgid "The main utility is the @code{define-configuration} macro, a helper used to define a Scheme record type (@pxref{Record Overview,,, guile, GNU Guile Reference Manual}).  The fields from this Scheme record can be serialized using @dfn{serializers}, which are procedures that take some kind of Scheme value and translates them into another Scheme value or @ref{G-Expressions}."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:49207
#, no-wrap
msgid "define-configuration name clause1 clause2 @dots{}"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:49210
msgid "Create a record type named @code{@var{name}} that contains the fields found in the clauses."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:49212
msgid "A clause has the following form:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49219
#, no-wrap
msgid ""
"(@var{field-name}\n"
" @var{type-decl}\n"
" @var{documentation}\n"
" @var{option*}\n"
" @dots{})\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:49223
msgid "@var{field-name} is an identifier that denotes the name of the field in the generated record."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:49226
msgid "@var{type-decl} is either @code{@var{type}} for fields that require a value to be set or @code{(@var{type} @var{default-value})} otherwise."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:49234
msgid "@var{type} is the type of the value corresponding to @var{field-name}; since Guile is untyped, a predicate procedure---@code{@var{type}?}---will be called on the value corresponding to the field to ensure that the value is of the correct type.  This means that if say, @var{type} is @code{package}, then a procedure named @code{package?} will be applied on the value to make sure that it is indeed a @code{<package>} object."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:49238
msgid "@var{default-value} is the default value corresponding to the field; if none is specified, the user is forced to provide a value when creating an object of the record type."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:49243
msgid "@var{documentation} is a string formatted with Texinfo syntax which should provide a description of what setting this field does."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:49245
msgid "@var{option*} is one of the following subclauses:"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:49247
#, no-wrap
msgid "empty-serializer"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:49249
msgid "Exclude this field from serialization."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:49250
#, no-wrap
msgid "(serializer @var{serializer})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:49257
msgid "@var{serializer} is the name of a procedure which takes two arguments, the first is the name of the field, and the second is the value corresponding to the field.  The procedure should return a string or @ref{G-Expressions} that represents the content that will be serialized to the configuration file.  If none is specified, a procedure of the name @code{serialize-@var{type}} will be used."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:49259
msgid "An example of a simple serializer procedure:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49263
#, no-wrap
msgid ""
"(define (serialize-boolean field-name value)\n"
"  (let ((value (if value \"true\" \"false\")))\n"
"    #~(string-append '#$field-name \" = \" #$value)))\n"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:49265
#, no-wrap
msgid "(sanitizer @var{sanitizer})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:49270
msgid "@var{sanitizer} is a procedure which takes one argument, a user-supplied value, and returns a ``sanitized'' value for the field.  If no sanitizer is specified, a default sanitizer is used, which raises an error if the value is not of type @var{type}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:49273
msgid "An example of a sanitizer for a field that accepts both strings and symbols looks like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49278
#, no-wrap
msgid ""
"(define (sanitize-foo value)\n"
"  (cond ((string? value) value)\n"
"        ((symbol? value) (symbol->string value))\n"
"        (else (error \"bad value\"))))\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:49290
msgid "In some cases multiple different configuration records might be defined in the same file, but their serializers for the same type might have to be different, because they have different configuration formats.  For example, the @code{serialize-boolean} procedure for the Getmail service would have to be different from the one for the Transmission service.  To make it easier to deal with this situation, one can specify a serializer prefix by using the @code{prefix} literal in the @code{define-configuration} form.  This means that one doesn't have to manually specify a custom @var{serializer} for every field."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49294
#, no-wrap
msgid ""
"(define (foo-serialize-string field-name value)\n"
"  @dots{})\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49297
#, no-wrap
msgid ""
"(define (bar-serialize-string field-name value)\n"
"  @dots{})\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49303
#, no-wrap
msgid ""
"(define-configuration foo-configuration\n"
"  (label\n"
"   string\n"
"   \"The name of label.\")\n"
"  (prefix foo-))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49309
#, no-wrap
msgid ""
"(define-configuration bar-configuration\n"
"  (ip-address\n"
"   string\n"
"   \"The IPv4 address for this device.\")\n"
"  (prefix bar-))\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:49315
msgid "However, in some cases you might not want to serialize any of the values of the record, to do this, you can use the @code{no-serialization} literal.  There is also the @code{define-configuration/no-serialization} macro which is a shorthand of this."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49323
#, no-wrap
msgid ""
";; Nothing will be serialized to disk.\n"
"(define-configuration foo-configuration\n"
"  (field\n"
"   (string \"test\")\n"
"   \"Some documentation.\")\n"
"  (no-serialization))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49329
#, no-wrap
msgid ""
";; The same thing as above.\n"
"(define-configuration/no-serialization bar-configuration\n"
"  (field\n"
"   (string \"test\")\n"
"   \"Some documentation.\"))\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:49332
#, no-wrap
msgid "define-maybe type"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:49337
msgid "Sometimes a field should not be serialized if the user doesn’t specify a value.  To achieve this, you can use the @code{define-maybe} macro to define a ``maybe type''; if the value of a maybe type is left unset, or is set to the @code{%unset-value} value, then it will not be serialized."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:49344
msgid "When defining a ``maybe type'', the corresponding serializer for the regular type will be used by default.  For example, a field of type @code{maybe-string} will be serialized using the @code{serialize-string} procedure by default, you can of course change this by specifying a custom serializer procedure.  Likewise, the type of the value would have to be a string, or left unspecified."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49347
#, no-wrap
msgid ""
"(define-maybe string)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49350
#, no-wrap
msgid ""
"(define (serialize-string field-name value)\n"
"  @dots{})\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49357
#, no-wrap
msgid ""
"(define-configuration baz-configuration\n"
"  (name\n"
"   ;; If set to a string, the `serialize-string' procedure will be used\n"
"   ;; to serialize the string.  Otherwise this field is not serialized.\n"
"   maybe-string\n"
"   \"The name of this module.\"))\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:49361
msgid "Like with @code{define-configuration}, one can set a prefix for the serializer name by using the @code{prefix} literal."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49365
#, no-wrap
msgid ""
"(define-maybe integer\n"
"  (prefix baz-))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49368
#, no-wrap
msgid ""
"(define (baz-serialize-integer field-name value)\n"
"  @dots{})\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:49375
msgid "There is also the @code{no-serialization} literal, which when set means that no serializer will be defined for the ``maybe type'', regardless of whether its value is set or not.  @code{define-maybe/no-serialization} is a shorthand for specifying the @code{no-serialization} literal."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49378
#, no-wrap
msgid ""
"(define-maybe/no-serialization symbol)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49383
#, no-wrap
msgid ""
"(define-configuration/no-serialization test-configuration\n"
"  (mode\n"
"   maybe-symbol\n"
"   \"Docstring.\"))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:49386
#, no-wrap
msgid "{Procedure} maybe-value-set? value"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:49389
msgid "Predicate to check whether a user explicitly specified the value of a maybe field."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:49391
#, no-wrap
msgid "{Procedure} serialize-configuration configuration fields"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:49396
msgid "Return a G-expression that contains the values corresponding to the @var{fields} of @var{configuration}, a record that has been generated by @code{define-configuration}.  The G-expression can then be serialized to disk by using something like @code{mixed-text-file}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49401
msgid "Once you have defined a configuration record, you will most likely also want to document it so that other people know to use it.  To help with that, there are two procedures, both of which are documented below."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:49402
#, no-wrap
msgid "{Procedure} generate-documentation documentation documentation-name"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:49408
msgid "Generate a Texinfo fragment from the docstrings in @var{documentation}, a list of @code{(@var{label} @var{fields} @var{sub-documentation} ...)}.  @var{label} should be a symbol and should be the name of the configuration record.  @var{fields} should be a list of all the fields available for the configuration record."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:49415
msgid "@var{sub-documentation} is a @code{(@var{field-name} @var{configuration-name})} tuple.  @var{field-name} is the name of the field which takes another configuration record as its value, and @var{configuration-name} is the name of that configuration record.  The same value may be used for multiple @var{field-name}s, in case a field accepts different types of configurations."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:49422
msgid "@var{sub-documentation} is only needed if there are nested configuration records.  For example, the @code{getmail-configuration} record (@pxref{Mail Services}) accepts a @code{getmail-configuration-file} record in one of its @code{rcfile} field, therefore documentation for @code{getmail-configuration-file} is nested in @code{getmail-configuration}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49429
#, no-wrap
msgid ""
"(generate-documentation\n"
"  `((getmail-configuration ,getmail-configuration-fields\n"
"     (rcfile getmail-configuration-file))\n"
"    @dots{})\n"
"  'getmail-configuration)\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:49433
msgid "@var{documentation-name} should be a symbol and should be the name of the configuration record."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:49436
#, no-wrap
msgid "{Procedure} configuration->documentation configuration-symbol"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:49442
msgid "Take @var{configuration-symbol}, the symbol corresponding to the name used when defining a configuration record with @code{define-configuration}, and print the Texinfo documentation of its fields.  This is useful if there aren’t any nested configuration records since it only prints the documentation for the top-level fields."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49450
msgid "As of right now, there is no automated way to generate documentation for configuration records and put them in the manual.  Instead, every time you make a change to the docstrings of a configuration record, you have to manually call @code{generate-documentation} or @code{configuration->documentation}, and paste the output into the @file{doc/guix.texi} file."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49454
msgid "Below is an example of a record type created using @code{define-configuration} and friends."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49461
#, no-wrap
msgid ""
"(use-modules (gnu services)\n"
"             (guix gexp)\n"
"             (gnu services configuration)\n"
"             (srfi srfi-26)\n"
"             (srfi srfi-1))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49469
#, no-wrap
msgid ""
";; Turn field names, which are Scheme symbols into strings\n"
"(define (uglify-field-name field-name)\n"
"  (let ((str (symbol->string field-name)))\n"
"    ;; field? -> is-field\n"
"    (if (string-suffix? \"?\" str)\n"
"        (string-append \"is-\" (string-drop-right str 1))\n"
"        str)))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49472
#, no-wrap
msgid ""
"(define (serialize-string field-name value)\n"
"  #~(string-append #$(uglify-field-name field-name) \" = \" #$value \"\\n\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49475
#, no-wrap
msgid ""
"(define (serialize-integer field-name value)\n"
"  (serialize-string field-name (number->string value)))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49478
#, no-wrap
msgid ""
"(define (serialize-boolean field-name value)\n"
"  (serialize-string field-name (if value \"true\" \"false\")))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49481
#, no-wrap
msgid ""
"(define (serialize-contact-name field-name value)\n"
"  #~(string-append \"\\n[\" #$value \"]\\n\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49484
#, no-wrap
msgid ""
"(define (list-of-contact-configurations? lst)\n"
"  (every contact-configuration? lst))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49489
#, no-wrap
msgid ""
"(define (serialize-list-of-contact-configurations field-name value)\n"
"  #~(string-append #$@@(map (cut serialize-configuration <>\n"
"                                contact-configuration-fields)\n"
"                           value)))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49496
#, no-wrap
msgid ""
"(define (serialize-contacts-list-configuration configuration)\n"
"  (mixed-text-file\n"
"   \"contactrc\"\n"
"   #~(string-append \"[Owner]\\n\"\n"
"                    #$(serialize-configuration\n"
"                       configuration contacts-list-configuration-fields))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49499
#, no-wrap
msgid ""
"(define-maybe integer)\n"
"(define-maybe string)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49514
#, no-wrap
msgid ""
"(define-configuration contact-configuration\n"
"  (name\n"
"   string\n"
"   \"The name of the contact.\"\n"
"   serialize-contact-name)\n"
"  (phone-number\n"
"   maybe-integer\n"
"   \"The person's phone number.\")\n"
"  (email\n"
"   maybe-string\n"
"   \"The person's email address.\")\n"
"  (married?\n"
"   boolean\n"
"   \"Whether the person is married.\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49526
#, no-wrap
msgid ""
"(define-configuration contacts-list-configuration\n"
"  (name\n"
"   string\n"
"   \"The name of the owner of this contact list.\")\n"
"  (email\n"
"   string\n"
"   \"The owner's email address.\")\n"
"  (contacts\n"
"   (list-of-contact-configurations '())\n"
"   \"A list of @@code@{contact-configuration@} records which contain\n"
"information about all your contacts.\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49529
msgid "A contacts list configuration could then be created like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49545
#, no-wrap
msgid ""
"(define my-contacts\n"
"  (contacts-list-configuration\n"
"   (name \"Alice\")\n"
"   (email \"alice@@example.org\")\n"
"   (contacts\n"
"    (list (contact-configuration\n"
"           (name \"Bob\")\n"
"           (phone-number 1234)\n"
"           (email \"bob@@gnu.org\")\n"
"           (married? #f))\n"
"          (contact-configuration\n"
"           (name \"Charlie\")\n"
"           (phone-number 0000)\n"
"           (married? #t))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49549
msgid "After serializing the configuration to disk, the resulting file would look like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49554
#, no-wrap
msgid ""
"[owner]\n"
"name = Alice\n"
"email = alice@@example.org\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49559
#, no-wrap
msgid ""
"[Bob]\n"
"phone-number = 1234\n"
"email = bob@@gnu.org\n"
"is-married = false\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49563
#, no-wrap
msgid ""
"[Charlie]\n"
"phone-number = 0\n"
"is-married = true\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49567
#, no-wrap
msgid "troubleshooting, Guix System"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49568
#, no-wrap
msgid "guix system troubleshooting"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49580
msgid "Guix System allows rebooting into a previous generation should the last one be malfunctioning, which makes it quite robust against being broken irreversibly.  This feature depends on GRUB being correctly functioning though, which means that if for whatever reasons your GRUB installation becomes corrupted during a system reconfiguration, you may not be able to easily boot into a previous generation.  A technique that can be used in this case is to @i{chroot} into your broken system and reconfigure it from there.  Such technique is explained below."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49581
#, no-wrap
msgid "chroot, guix system"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49582
#, no-wrap
msgid "chrooting, guix system"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49583
#, no-wrap
msgid "repairing GRUB, via chroot"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49596
msgid "This section details how to @i{chroot} to an already installed Guix System with the aim of reconfiguring it, for example to fix a broken GRUB installation.  The process is similar to how it would be done on other GNU/Linux systems, but there are some Guix System particularities such as the daemon and profiles that make it worthy of explaining here."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:49605
msgid "Obtain a bootable image of Guix System.  It is recommended the latest development snapshot so the kernel and the tools used are at least as as new as those of your installed system; it can be retrieved from the @url{https://ci.guix.gnu.org/search/latest/ISO-9660?query=spec:images+status:success+system:x86_64-linux+image.iso, https://ci.guix.gnu.org} URL.  Follow the @pxref{USB Stick and DVD Installation} section for copying it to a bootable media."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:49614
msgid "Boot the image, and proceed with the graphical text-based installer until your network is configured.  Alternatively, you could configure the network manually by following the @ref{manual-installation-networking} section.  If you get the error @samp{RTNETLINK answers: Operation not possible due to RF-kill}, try @samp{rfkill list} followed by @samp{rfkill unblock 0}, where @samp{0} is your device identifier (ID)."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:49620
msgid "Switch to a virtual console (tty) if you haven't already by pressing simultaneously the @kbd{Control + Alt + F4} keys.  Mount your file system at @file{/mnt}.  Assuming your root partition is @file{/dev/sda2}, you would do:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49623
#, no-wrap
msgid "mount /dev/sda2 /mnt\n"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:49627
msgid "Mount special block devices and Linux-specific directories:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49632
#, no-wrap
msgid ""
"mount --rbind /proc /mnt/proc\n"
"mount --rbind /sys /mnt/sys\n"
"mount --rbind /dev /mnt/dev\n"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:49636
msgid "If your system is EFI-based, you must also mount the ESP partition.  Assuming it is @file{/dev/sda1}, you can do so with:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49639
#, no-wrap
msgid "mount /dev/sda1 /mnt/boot/efi\n"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:49643
msgid "Enter your system via chroot:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49646
#, no-wrap
msgid "chroot /mnt /bin/sh\n"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:49652
msgid "Source the system profile as well as your @var{user} profile to setup the environment, where @var{user} is the user name used for the Guix System you are attempting to repair:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49656
#, no-wrap
msgid ""
"source /var/guix/profiles/system/profile/etc/profile\n"
"source /home/@var{user}/.guix-profile/etc/profile\n"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:49660
msgid "To ensure you are working with the Guix revision you normally would as your normal user, also source your current Guix profile:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49663
#, no-wrap
msgid "source /home/@var{user}/.config/guix/current/etc/profile\n"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:49667
msgid "Start a minimal @command{guix-daemon} in the background:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49670
#, no-wrap
msgid "guix-daemon --build-users-group=guixbuild --disable-chroot &\n"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:49674
msgid "Edit your Guix System configuration if needed, then reconfigure with:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49677
#, no-wrap
msgid "guix system reconfigure your-config.scm\n"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:49681
msgid "Finally, you should be good to reboot the system to test your fix."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49686
#, no-wrap
msgid "home configuration"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49698
msgid "Guix supports declarative configuration of @dfn{home environments} by utilizing the configuration mechanism described in the previous chapter (@pxref{Defining Services}), but for user's dotfiles and packages.  It works both on Guix System and foreign distros and allows users to declare all the packages and services that should be installed and configured for the user.  Once a user has written a file containing a @code{home-environment} record, such a configuration can be @dfn{instantiated} by an unprivileged user with the @command{guix home} command (@pxref{Invoking guix home})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49709
msgid "The user's home environment usually consists of three basic parts: software, configuration, and state.  Software in mainstream distros are usually installed system-wide, but with GNU Guix most software packages can be installed on a per-user basis without needing root privileges, and are thus considered part of the user’s @dfn{home environment}.  Packages on their own are not very useful in many cases, because often they require some additional configuration, usually config files that reside in @env{XDG_CONFIG_HOME} (@file{~/.config} by default) or other directories.  Everything else can be considered state, like media files, application databases, and logs."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49712
msgid "Using Guix for managing home environments provides a number of advantages:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49715
#, no-wrap
msgid "All software can be configured in one language (Guile Scheme),"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:49718
msgid "this gives users the ability to share values between configurations of different programs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49719
#, no-wrap
msgid "A well-defined home environment is self-contained and can be"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:49722
msgid "created in a declarative and reproducible way---there is no need to grab external binaries or manually edit some configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49723
#, no-wrap
msgid "After every @command{guix home reconfigure} invocation, a new home"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:49727
msgid "environment generation will be created.  This means that users can rollback to a previous home environment generation so they don’t have to worry about breaking their configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49728
#, no-wrap
msgid "It is possible to manage stateful data with Guix Home, this"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:49733
msgid "includes the ability to automatically clone Git repositories on the initial setup of the machine, and periodically running commands like @command{rsync} to sync data with another host.  This functionality is still in an experimental stage, though."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49750
msgid "The home environment is configured by providing a @code{home-environment} declaration in a file that can be passed to the @command{guix home} command (@pxref{Invoking guix home}).  The easiest way to get started is by generating an initial configuration with @command{guix home import}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49753
#, no-wrap
msgid "guix home import ~/src/guix-config\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49761
msgid "The @command{guix home import} command reads some of the ``dot files'' such as @file{~/.bashrc} found in your home directory and copies them to the given directory, @file{~/src/guix-config} in this case; it also reads the contents of your profile, @file{~/.guix-profile}, and, based on that, it populates @file{~/src/guix-config/home-configuration.scm} with a Home configuration that resembles your current configuration."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49767
msgid "A simple setup can include Bash and a custom text configuration, like in the example below.  Don't be afraid to declare home environment parts, which overlaps with your current dot files: before installing any configuration files, Guix Home will back up existing config files to a separate place in the home directory."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:49773
msgid "It is highly recommended that you manage your shell or shells with Guix Home, because it will make sure that all the necessary scripts are sourced by the shell configuration file.  Otherwise you will need to do it manually. (@pxref{Configuring the Shell})."
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:49775
#, no-wrap
msgid "home-environment"
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:49776
#, fuzzy, no-wrap
#| msgid "Services"
msgid "%base-home-services"
msgstr "Servizi"

#. type: include
#: guix-git/doc/guix.texi:49778
#, no-wrap
msgid "he-config-bare-bones.scm"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49785
msgid "The @code{packages} field should be self-explanatory, it will install the list of packages into the user's profile.  The most important field is @code{services}, it contains a list of @dfn{home services}, which are the basic building blocks of a home environment."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49793
msgid "There is no daemon (at least not necessarily) related to a home service, a home service is just an element that is used to declare part of home environment and extend other parts of it.  The extension mechanism discussed in the previous chapter (@pxref{Defining Services}) should not be confused with Shepherd services (@pxref{Shepherd Services}).  Using this extension mechanism and some Scheme code that glues things together gives the user the freedom to declare their own, very custom, home environments."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49794 guix-git/doc/guix.texi:53185
#, no-wrap
msgid "container, for @command{guix home}"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49797
msgid "Once the configuration looks good, you can first test it in a throw-away ``container'':"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49800 guix-git/doc/guix.texi:53195
#, no-wrap
msgid "guix home container config.scm\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49808
msgid "The command above spawns a shell where your home environment is running.  The shell runs in a container, meaning it's isolated from the rest of the system, so it's a good way to try out your configuration---you can see if configuration bits are missing or misbehaving, if daemons get started, and so on.  Once you exit that shell, you're back to the prompt of your original shell ``in the real world''."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49811
msgid "Once you have a configuration file that suits your needs, you can reconfigure your home by running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49814
#, no-wrap
msgid "guix home reconfigure config.scm\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49818
msgid "This ``builds'' your home environment and creates @file{~/.guix-home} pointing to it.  Voilà!"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:49825
msgid "Make sure the operating system has elogind, systemd, or a similar mechanism to create the XDG run-time directory and has the @env{XDG_RUNTIME_DIR} variable set.  Failing that, the @file{on-first-login} script will not execute anything, and processes like user Shepherd and its descendants will not start."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49832
msgid "If you're using Guix System, you can embed your home configuration in your system configuration such that @command{guix system reconfigure} will deploy both the system @emph{and} your home at once! @xref{guix-home-service-type, @code{guix-home-service-type}}, for how to do that."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49837
msgid "This section is safe to skip if your shell or shells are managed by Guix Home.  Otherwise, read it carefully."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49844
msgid "There are a few scripts that must be evaluated by a login shell to activate the home environment.  The shell startup files only read by login shells often have @code{profile} suffix.  For more information about login shells see @ref{Invoking Bash,,, bash, The GNU Bash Reference Manual} and see @ref{Bash Startup Files,,, bash, The GNU Bash Reference Manual}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49851
msgid "The first script that needs to be sourced is @file{setup-environment}, which sets all the necessary environment variables (including variables declared by the user) and the second one is @file{on-first-login}, which starts Shepherd for the current user and performs actions declared by other home services that extends @code{home-run-on-first-login-service-type}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49854
msgid "Guix Home will always create @file{~/.profile}, which contains the following lines:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49859
#, no-wrap
msgid ""
"HOME_ENVIRONMENT=$HOME/.guix-home\n"
". $HOME_ENVIRONMENT/setup-environment\n"
"$HOME_ENVIRONMENT/on-first-login\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49869
msgid "This makes POSIX compliant login shells activate the home environment.  However, in most cases this file won't be read by most modern shells, because they are run in non POSIX mode by default and have their own @file{*profile} startup files.  For example Bash will prefer @file{~/.bash_profile} in case it exists and only if it doesn't will it fallback to @file{~/.profile}.  Zsh (if no additional options are specified) will ignore @file{~/.profile}, even if @file{~/.zprofile} doesn't exist."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49874
msgid "To make your shell respect @file{~/.profile}, add @code{. ~/.profile} or @code{source ~/.profile} to the startup file for the login shell.  In case of Bash, it is @file{~/.bash_profile}, and in case of Zsh, it is @file{~/.zprofile}."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:49878
msgid "This step is only required if your shell is @emph{not} managed by Guix Home.  Otherwise, everything will be done automatically."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49882
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home services"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:49891
msgid "A @dfn{home service} is not necessarily something that has a daemon and is managed by Shepherd (@pxref{Jump Start,,, shepherd, The GNU Shepherd Manual}), in most cases it doesn't.  It's a simple building block of the home environment, often declaring a set of packages to be installed in the home environment profile, a set of config files to be symlinked into @env{XDG_CONFIG_HOME} (@file{~/.config} by default), and environment variables to be set by a login shell."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49899
msgid "There is a service extension mechanism (@pxref{Service Composition})  which allows home services to extend other home services and utilize capabilities they provide; for example: declare mcron jobs (@pxref{Top,,, mcron, GNU@tie{}Mcron}) by extending @ref{Mcron Home Service}; declare daemons by extending @ref{Shepherd Home Service}; add commands, which will be invoked on by the Bash by extending @ref{Shells Home Services, @code{home-bash-service-type}}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49910
msgid "A good way to discover available home services is using the @command{guix home search} command (@pxref{Invoking guix home}).  After the required home services are found, include its module with the @code{use-modules} form (@pxref{use-modules,, Using Guile Modules, guile, The GNU Guile Reference Manual}), or the @code{#:use-modules} directive (@pxref{define-module,, Creating Guile Modules, guile, The GNU Guile Reference Manual}) and declare a home service using the @code{service} function, or extend a service type by declaring a new service with the @code{simple-service} procedure from @code{(gnu services)}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49939
msgid "There are a few essential home services defined in @code{(gnu home services)}, they are mostly for internal use and are required to build a home environment, but some of them will be useful for the end user."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49940
#, no-wrap
msgid "environment variables"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49942
#, no-wrap
msgid "home-environment-variables-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49947
msgid "The service of this type will be instantiated by every home environment automatically by default, there is no need to define it, but someone may want to extend it with a list of pairs to set some environment variables."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49951
#, no-wrap
msgid ""
"(list (\"ENV_VAR1\" . \"value1\")\n"
"      (\"ENV_VAR2\" . \"value2\"))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49956
msgid "The easiest way to extend a service type, without defining a new service type is to use the @code{simple-service} helper from @code{(gnu services)}."
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:49957
#, no-wrap
msgid "literal-string"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49966
#, no-wrap
msgid ""
"(simple-service 'some-useful-env-vars-service\n"
"\t\thome-environment-variables-service-type\n"
"\t\t`((\"LESSHISTFILE\" . \"$XDG_CACHE_HOME/.lesshst\")\n"
"                  (\"SHELL\" . ,(file-append zsh \"/bin/zsh\"))\n"
"                  (\"USELESS_VAR\" . #f)\n"
"                  (\"_JAVA_AWT_WM_NONREPARENTING\" . #t)\n"
"                  (\"LITERAL_VALUE\" . ,(literal-string \"$@{abc@}\"))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49971
msgid "If you include such a service in you home environment definition, it will add the following content to the @file{setup-environment} script (which is expected to be sourced by the login shell):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49977
#, no-wrap
msgid ""
"export LESSHISTFILE=\"$XDG_CACHE_HOME/.lesshst\"\n"
"export SHELL=\"/gnu/store/2hsg15n644f0glrcbkb1kqknmmqdar03-zsh-5.8/bin/zsh\"\n"
"export _JAVA_AWT_WM_NONREPARENTING\n"
"export LITERAL_VALUE='$@{abc@}'\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49983
msgid "Notice that @code{literal-string} above lets us declare that a value is to be interpreted as a @dfn{literal string}, meaning that ``special characters'' such as the dollar sign will not be interpreted by the shell."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:49989
msgid "Make sure that module @code{(gnu packages shells)} is imported with @code{use-modules} or any other way, this namespace contains the definition of the @code{zsh} package, which is used in the example above."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50002
msgid "The association list (@pxref{Association Lists, alists, Association Lists, guile, The GNU Guile Reference manual}) is a data structure containing key-value pairs, for @code{home-environment-variables-service-type} the key is always a string, the value can be a string, string-valued gexp (@pxref{G-Expressions}), file-like object (@pxref{G-Expressions, file-like object}) or boolean.  For gexps, the variable will be set to the value of the gexp; for file-like objects, it will be set to the path of the file in the store (@pxref{The Store}); for @code{#t}, it will export the variable without any value; and for @code{#f}, it will omit variable."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50005
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-profile-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:50011
msgid "The service of this type will be instantiated by every home environment automatically, there is no need to define it, but you may want to extend it with a list of packages if you want to install additional packages into your profile.  Other services, which need to make some programs available to the user will also extend this service type."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50013
msgid "The extension value is just a list of packages:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50016
#, no-wrap
msgid "(list htop vim emacs)\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50026
msgid "The same approach as @code{simple-service} (@pxref{Service Reference, simple-service}) for @code{home-environment-variables-service-type} can be used here, too.  Make sure that modules containing the specified packages are imported with @code{use-modules}.  To find a package or information about its module use @command{guix search} (@pxref{Invoking guix package}).  Alternatively, @code{specification->package} can be used to get the package record from a string without importing its related module."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50030
msgid "There are few more essential services, but users are not expected to extend them."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50031
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:50036
msgid "The root of home services DAG, it generates a folder, which later will be symlinked to @file{~/.guix-home}, it contains configurations, profile with binaries and libraries, and some necessary scripts to glue things together."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50038
#, no-wrap
msgid "home-run-on-first-login-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50043
msgid "The service of this type generates a Guile script, which is expected to be executed by the login shell.  It is only executed if the special flag file inside @env{XDG_RUNTIME_DIR} hasn't been created, this prevents redundant executions of the script if multiple login shells are spawned."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50049
msgid "It can be extended with a gexp.  However, to autostart an application, users @emph{should not} use this service, in most cases it's better to extend @code{home-shepherd-service-type} with a Shepherd service (@pxref{Shepherd Services}), or extend the shell's startup file with the required command using the appropriate service type."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50051
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-files-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:50058
msgid "The service of this type allows to specify a list of files, which will go to @file{~/.guix-home/files}, usually this directory contains configuration files (to be more precise it contains symlinks to files in @file{/gnu/store}), which should be placed in @file{$XDG_CONFIG_HOME} or in rare cases in @file{$HOME}.  It accepts extension values in the following format:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50062
#, no-wrap
msgid ""
"`((\".sway/config\" ,sway-file-like-object)\n"
"  (\".tmux.conf\" ,(local-file \"./tmux.conf\")))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50075
msgid "Each nested list contains two values: a subdirectory and file-like object.  After building a home environment @file{~/.guix-home/files} will be populated with appropriate content and all nested directories will be created accordingly, however, those files won't go any further until some other service will do it.  By default a @code{home-symlink-manager-service-type}, which creates necessary symlinks in home folder to files from @file{~/.guix-home/files} and backs up already existing, but clashing configs and other things, is a part of essential home services (enabled by default), but it's possible to use alternative services to implement more advanced use cases like read-only home.  Feel free to experiment and share your results."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:50077
#, no-wrap
msgid "dot files in Guix Home"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50081
msgid "It is often the case that Guix Home users already have a setup for versioning their user configuration files (also known as @emph{dot files}) in a single directory, and some way of automatically deploy changes to their user home."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:50082
#, no-wrap
msgid "Stow-like dot file management"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50087
msgid "The @code{home-dotfiles-service-type} from @code{(gnu home services dotfiles)} is designed to ease the way into using Guix Home for this kind of users, allowing them to point the service to their dotfiles directory without migrating them to Guix native configurations."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50091
msgid "Please keep in mind that it is advisable to keep your dotfiles directories under version control, for example in the same repository where you'd track your Guix Home configuration."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50094
msgid "There are two supported dotfiles directory layouts, for now. The @code{'plain} layout, which is structured as follows:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:50111
#, no-wrap
msgid ""
"~$ tree -a ./dotfiles/\n"
"dotfiles/\n"
"├── .gitconfig\n"
"├── .gnupg\n"
"│   ├── gpg-agent.conf\n"
"│   └── gpg.conf\n"
"├── .guile\n"
"├── .config\n"
"│   ├── guix\n"
"│   │   └── channels.scm\n"
"│   └── nixpkgs\n"
"│       └── config.nix\n"
"├── .nix-channels\n"
"├── .tmux.conf\n"
"└── .vimrc\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50115
msgid "This tree structure is installed as is to the home directory upon @command{guix home reconfigure}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50120
msgid "The @code{'stow} layout, which must follow the layout suggested by @uref{https://www.gnu.org/software/stow/, GNU Stow} presents an additional application specific directory layer, just like:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:50145
#, no-wrap
msgid ""
"~$ tree -a ./dotfiles/\n"
"dotfiles/\n"
"├── git\n"
"│   └── .gitconfig\n"
"├── gpg\n"
"│   └── .gnupg\n"
"│       ├── gpg-agent.conf\n"
"│       └── gpg.conf\n"
"├── guile\n"
"│   └── .guile\n"
"├── guix\n"
"│   └── .config\n"
"│       └── guix\n"
"│           └── channels.scm\n"
"├── nix\n"
"│   ├── .config\n"
"│   │   └── nixpkgs\n"
"│   │       └── config.nix\n"
"│   └── .nix-channels\n"
"├── tmux\n"
"│   └── .tmux.conf\n"
"└── vim\n"
"    └── .vimrc\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:50147
#, no-wrap
msgid "13 directories, 10 files\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50153
msgid "For an informal specification please refer to the Stow manual (@pxref{Introduction,,, stow, The GNU Stow Manual}). This tree structure is installed following GNU Stow's logic to the home directory upon @command{guix home reconfigure}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50155
msgid "A suitable configuration with a @code{'plain} layout could be:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50163
#, no-wrap
msgid ""
"(home-environment\n"
"  ;; @dots{}\n"
"  (services\n"
"    (service home-dotfiles-service-type\n"
"             (home-dotfiles-configuration\n"
"               (directories '(\"./dotfiles\"))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50166
msgid "The expected home directory state would then be:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:50182
#, no-wrap
msgid ""
".\n"
"├── .config\n"
"│   ├── guix\n"
"│   │   └── channels.scm\n"
"│   └── nixpkgs\n"
"│       └── config.nix\n"
"├── .gitconfig\n"
"├── .gnupg\n"
"│   ├── gpg-agent.conf\n"
"│   └── gpg.conf\n"
"├── .guile\n"
"├── .nix-channels\n"
"├── .tmux.conf\n"
"└── .vimrc\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50184
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-dotfiles-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:50192
msgid "Return a service which is very similar to @code{home-files-service-type} (and actually extends it), but designed to ease the way into using Guix Home for users that already track their dotfiles under some kind of version control.  This service allows users to point Guix Home to their dotfiles directory and have their files automatically provisioned to their home directory, without migrating all of their dotfiles to Guix native configurations."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50196
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} home-dotfiles-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:50198
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{home-dotfiles-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:50200
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{source-directory} (default: @code{(current-source-directory)}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:50204
msgid "The path where dotfile directories are resolved.  By default dotfile directories are resolved relative the source location where @code{home-dotfiles-configuration} appears."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50205
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{layout} (default: @code{'plain}) (type: symbol)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:50208
msgid "The intended layout of the specified @code{directory}.  It can be either @code{'stow} or @code{'plain}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50209
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{directories} (default: @code{'()}) (type: list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:50212
msgid "The list of dotfiles directories where @code{home-dotfiles-service-type} will look for application dotfiles."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50213
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{packages} (type: maybe-list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:50218
msgid "The names of a subset of the GNU Stow package layer directories.  When provided the @code{home-dotfiles-service-type} will only provision dotfiles from this subset of applications.  This field will be ignored if @code{layout} is set to @code{'plain}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50219
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{excluded} (default: @code{'(\".*~\" \".*\\\\.swp\" \"\\\\.git\" \"\\\\.gitignore\")}) (type: list-of-strings)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:50222
msgid "The list of file patterns @code{home-dotfiles-service-type} will exclude while visiting each one of the @code{directories}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50230
#, no-wrap
msgid "home-xdg-configuration-files-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50237
msgid "The service is very similar to @code{home-files-service-type} (and actually extends it), but used for defining files, which will go to @file{~/.guix-home/files/.config}, which will be symlinked to @file{$XDG_CONFIG_HOME} by @code{home-symlink-manager-service-type} (for example) during activation.  It accepts extension values in the following format:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50243
#, no-wrap
msgid ""
"`((\"sway/config\" ,sway-file-like-object)\n"
"  ;; -> ~/.guix-home/files/.config/sway/config\n"
"  ;; -> $XDG_CONFIG_HOME/sway/config (by symlink-manager)\n"
"  (\"tmux/tmux.conf\" ,(local-file \"./tmux.conf\")))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50246
#, no-wrap
msgid "home-activation-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50250
msgid "The service of this type generates a guile script, which runs on every @command{guix home reconfigure} invocation or any other action, which leads to the activation of the home environment."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50252
#, no-wrap
msgid "home-symlink-manager-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50256
msgid "The service of this type generates a guile script, which will be executed during activation of home environment, and do a few following steps:"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:50261
msgid "Reads the content of @file{files/} directory of current and pending home environments."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:50266
msgid "Cleans up all symlinks created by symlink-manager on previous activation.  Also, sub-directories, which become empty also will be cleaned up."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:50279
msgid "Creates new symlinks the following way: It looks @file{files/} directory (usually defined with @code{home-files-service-type}, @code{home-xdg-configuration-files-service-type} and maybe some others), takes the files from @file{files/.config/} subdirectory and put respective links in @env{XDG_CONFIG_HOME}.  For example symlink for @file{files/.config/sway/config} will end up in @file{$XDG_CONFIG_HOME/sway/config}.  The rest files in @file{files/} outside of @file{files/.config/} subdirectory will be treated slightly different: symlink will just go to @file{$HOME}.  @file{files/.some-program/config} will end up in @file{$HOME/.some-program/config}."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:50282
msgid "If some sub-directories are missing, they will be created."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:50285
msgid "If there is a clashing files on the way, they will be backed up."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50290
msgid "symlink-manager is a part of essential home services and is enabled and used by default."
msgstr ""

#. type: node
#: guix-git/doc/guix.texi:50293
#, no-wrap
msgid "Shells Home Services"
msgstr "Servizi Home per le Shell"

#. type: subsection
#: guix-git/doc/guix.texi:50294
#, no-wrap
msgid "Shells"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:50296 guix-git/doc/guix.texi:53147
#, no-wrap
msgid "shell"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:50297
#, no-wrap
msgid "login shell"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:50298
#, no-wrap
msgid "interactive shell"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:50299 guix-git/doc/guix.texi:53149
#, no-wrap
msgid "bash"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:50300 guix-git/doc/guix.texi:53150
#, no-wrap
msgid "zsh"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50306
msgid "Shells play a quite important role in the environment initialization process, you can configure them manually as described in section @ref{Configuring the Shell}, but the recommended way is to use home services listed below.  It's both easier and more reliable."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50316
msgid "Each home environment instantiates @code{home-shell-profile-service-type}, which creates a @file{~/.profile} startup file for all POSIX-compatible shells.  This file contains all the necessary steps to properly initialize the environment, but many modern shells like Bash or Zsh prefer their own startup files, that's why the respective home services (@code{home-bash-service-type} and @code{home-zsh-service-type}) ensure that @file{~/.profile} is sourced by @file{~/.bash_profile} and @file{~/.zprofile}, respectively."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:50317
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Shell Profile Service"
msgstr "Servizi"

#. type: deftp
#: guix-git/doc/guix.texi:50319
#, no-wrap
msgid "{Data Type} home-shell-profile-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50321
msgid "Available @code{home-shell-profile-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50323
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{profile} (default: @code{'()}) (type: text-config)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:50333
msgid "@code{home-shell-profile} is instantiated automatically by @code{home-environment}, DO NOT create this service manually, it can only be extended.  @code{profile} is a list of file-like objects, which will go to @file{~/.profile}.  By default @file{~/.profile} contains the initialization code which must be evaluated by the login shell to make home-environment's profile available to the user, but other commands can be added to the file if it is really necessary.  In most cases shell's configuration files are preferred places for user's customizations.  Extend home-shell-profile service only if you really know what you do."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:50338
#, no-wrap
msgid "Bash Home Service"
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:50341
msgid "home-bash-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50341
#, no-wrap
msgid "{Data Type} home-bash-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50343
msgid "Available @code{home-bash-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50345
#, no-wrap
msgid "@code{package} (default: @code{bash}) (type: package)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50347
msgid "The Bash package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50348
#, no-wrap
msgid "@code{guix-defaults?} (default: @code{#t}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50354
msgid "Add sane defaults like setting @env{PS1}, @env{SHELL}, and ensuring @file{/etc/profile} is sourced for non-interactive SSH shells.  If you use Guix System, is it safe to set this to @code{#f}, as in this case this is already taken care of by the globally installed @file{/etc/bashrc}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50355 guix-git/doc/guix.texi:50426
#: guix-git/doc/guix.texi:50465
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{environment-variables} (default: @code{'()}) (type: alist)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:50360
msgid "Association list of environment variables to set for the Bash session.  The rules for the @code{home-environment-variables-service-type} apply here (@pxref{Essential Home Services}).  The contents of this field will be added after the contents of the @code{bash-profile} field."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50361
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{aliases} (default: @code{%default-bash-aliases}) (type: alist)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:50366
msgid "Association list of aliases to set for the Bash session.  The aliases will be defined after the contents of the @code{bashrc} field has been put in the @file{.bashrc} file.  The alias will automatically be quoted, so something like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50369
#, no-wrap
msgid "'((\"ls\" . \"ls -alF\"))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50372 guix-git/doc/guix.texi:50575
#: guix-git/doc/guix.texi:50589 guix-git/doc/guix.texi:50614
msgid "turns into"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:50375
#, no-wrap
msgid "alias ls=\"ls -alF\"\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50377 guix-git/doc/guix.texi:50435
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{bash-profile} (default: @code{'()}) (type: text-config)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:50382
msgid "List of file-like objects, which will be added to @file{.bash_profile}.  Used for executing user's commands at start of login shell (In most cases the shell started on tty just after login).  @file{.bash_login} won't be ever read, because @file{.bash_profile} always present."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50383 guix-git/doc/guix.texi:50439
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{bashrc} (default: @code{'()}) (type: text-config)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:50388
msgid "List of file-like objects, which will be added to @file{.bashrc}.  Used for executing user's commands at start of interactive shell (The shell for interactive usage started by typing @code{bash} or by terminal app or any other program)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50389 guix-git/doc/guix.texi:50443
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{bash-logout} (default: @code{'()}) (type: text-config)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:50394
msgid "List of file-like objects, which will be added to @file{.bash_logout}.  Used for executing user's commands at the exit of login shell.  It won't be read in some cases (if the shell terminates by exec'ing another process for example)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50404
msgid "You can extend the Bash service by using the @code{home-bash-extension} configuration record, whose fields must mirror that of @code{home-bash-configuration} (@pxref{home-bash-configuration}).  The contents of the extensions will be added to the end of the corresponding Bash configuration files (@pxref{Bash Startup Files,,, bash, The GNU Bash Reference Manual}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50408
msgid "For example, here is how you would define a service that extends the Bash service such that @file{~/.bash_profile} defines an additional environment variable, @env{PS1}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50416
#, no-wrap
msgid ""
"(define bash-fancy-prompt-service\n"
"  (simple-service 'bash-fancy-prompt\n"
"                  home-bash-service-type\n"
"                  (home-bash-extension\n"
"                   (environment-variables\n"
"                    '((\"PS1\" . \"\\\\u \\\\wλ \"))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50421
msgid "You would then add @code{bash-fancy-prompt-service} to the list in the @code{services} field of your @code{home-environment}.  The reference of @code{home-bash-extension} follows."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50422
#, no-wrap
msgid "{Data Type} home-bash-extension"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50424
msgid "Available @code{home-bash-extension} fields are:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50430
msgid "Additional environment variables to set.  These will be combined with the environment variables from other extensions and the base service to form one coherent block of environment variables."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50431
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{aliases} (default: @code{'()}) (type: alist)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:50434
msgid "Additional aliases to set.  These will be combined with the aliases from other extensions and the base service."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50438
msgid "Additional text blocks to add to @file{.bash_profile}, which will be combined with text blocks from other extensions and the base service."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50442
msgid "Additional text blocks to add to @file{.bashrc}, which will be combined with text blocks from other extensions and the base service."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50446
msgid "Additional text blocks to add to @file{.bash_logout}, which will be combined with text blocks from other extensions and the base service."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:50450
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Zsh Home Service"
msgstr "Servizi"

#. type: deftp
#: guix-git/doc/guix.texi:50452
#, no-wrap
msgid "{Data Type} home-zsh-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50454
msgid "Available @code{home-zsh-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50456
#, no-wrap
msgid "@code{package} (default: @code{zsh}) (type: package)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50458
msgid "The Zsh package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50459
#, no-wrap
msgid "@code{xdg-flavor?} (default: @code{#t}) (type: boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50464
msgid "Place all the configs to @file{$XDG_CONFIG_HOME/zsh}.  Makes @file{~/.zshenv} to set @env{ZDOTDIR} to @file{$XDG_CONFIG_HOME/zsh}.  Shell startup process will continue with @file{$XDG_CONFIG_HOME/zsh/.zshenv}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50467
msgid "Association list of environment variables to set for the Zsh session."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50468
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{zshenv} (default: @code{'()}) (type: text-config)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:50473
msgid "List of file-like objects, which will be added to @file{.zshenv}.  Used for setting user's shell environment variables.  Must not contain commands assuming the presence of tty or producing output.  Will be read always.  Will be read before any other file in @env{ZDOTDIR}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50474
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{zprofile} (default: @code{'()}) (type: text-config)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:50479
msgid "List of file-like objects, which will be added to @file{.zprofile}.  Used for executing user's commands at start of login shell (In most cases the shell started on tty just after login).  Will be read before @file{.zlogin}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50480
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{zshrc} (default: @code{'()}) (type: text-config)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:50485
msgid "List of file-like objects, which will be added to @file{.zshrc}.  Used for executing user's commands at start of interactive shell (The shell for interactive usage started by typing @code{zsh} or by terminal app or any other program)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50486
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{zlogin} (default: @code{'()}) (type: text-config)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:50490
msgid "List of file-like objects, which will be added to @file{.zlogin}.  Used for executing user's commands at the end of starting process of login shell."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50491
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{zlogout} (default: @code{'()}) (type: text-config)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:50496
msgid "List of file-like objects, which will be added to @file{.zlogout}.  Used for executing user's commands at the exit of login shell.  It won't be read in some cases (if the shell terminates by exec'ing another process for example)."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:50501
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Inputrc Profile Service"
msgstr "Servizi"

#. type: cindex
#: guix-git/doc/guix.texi:50502
#, no-wrap
msgid "inputrc"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:50503
#, no-wrap
msgid "readline"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50512
msgid "The @uref{https://tiswww.cwru.edu/php/chet/readline/rltop.html, GNU Readline package} includes Emacs and vi editing modes, with the ability to customize the configuration with settings in the @file{~/.inputrc} file.  With the @code{gnu home services shells} module, you can setup your readline configuration in a predictable manner, as shown below.  For more information about configuring an @file{~/.inputrc} file, @pxref{Readline Init File,,, readline, GNU Readline}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50513
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-inputrc-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:50518
msgid "This is the service to setup various @file{.inputrc} configurations. The settings in @file{.inputrc} are read by all programs which are linked with GNU Readline."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50521 guix-git/doc/guix.texi:50913
#: guix-git/doc/guix.texi:51167 guix-git/doc/guix.texi:51938
#: guix-git/doc/guix.texi:52000 guix-git/doc/guix.texi:52471
msgid "Here is an example of a service and its configuration that you could add to the @code{services} field of your @code{home-environment}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50547
#, no-wrap
msgid ""
"(service home-inputrc-service-type\n"
"         (home-inputrc-configuration\n"
"           (key-bindings\n"
"            `((\"Control-l\" . \"clear-screen\")))\n"
"           (variables\n"
"            `((\"bell-style\" . \"visible\")\n"
"              (\"colored-completion-prefix\" . #t)\n"
"              (\"editing-mode\" . \"vi\")\n"
"              (\"show-mode-in-prompt\" . #t)))\n"
"           (conditional-constructs\n"
"            `((\"$if mode=vi\" .\n"
"               ,(home-inputrc-configuration\n"
"                  (variables\n"
"                   `((\"colored-stats\" . #t)\n"
"                     (\"enable-bracketed-paste\" . #t)))))\n"
"              (\"$else\" .\n"
"               ,(home-inputrc-configuration\n"
"                  (variables\n"
"                   `((\"show-all-if-ambiguous\" . #t)))))\n"
"              (\"endif\" . #t)\n"
"              (\"$include\" . \"/etc/inputrc\")\n"
"              (\"$include\" . ,(file-append\n"
"                               (specification->package \"readline\")\n"
"                               \"/etc/inputrc\"))))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50555
msgid "The example above starts with a combination of @code{key-bindings} and @code{variables}.  The @code{conditional-constructs} show how it is possible to add conditionals and includes.  In the example above @code{colored-stats} is only enabled if the editing mode is @code{vi} style, and it also reads any additional configuration located in @file{/etc/inputrc} or in @file{/gnu/store/@dots{}-readline/etc/inputrc}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50558
msgid "The value associated with a @code{home-inputrc-service-type} instance must be a @code{home-inputrc-configuration} record, as described below."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:50562
#, fuzzy
#| msgid "Documentation"
msgid "home-inputrc-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:50562
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} home-inputrc-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:50564
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{home-inputrc-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:50566
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{key-bindings} (default: @code{'()}) (type: alist)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:50569
msgid "Association list of readline key bindings to be added to the @file{~/.inputrc} file."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50572
#, no-wrap
msgid "'((\\\"Control-l\\\" . \\\"clear-screen\\\"))\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:50578
#, no-wrap
msgid "Control-l: clear-screen\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50580
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{variables} (default: @code{'()}) (type: alist)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:50582
msgid "Association list of readline variables to set."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50586
#, no-wrap
msgid ""
"'((\\\"bell-style\\\" . \\\"visible\\\")\n"
"  (\\\"colored-completion-prefix\\\" . #t))\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:50593
#, no-wrap
msgid ""
"set bell-style visible\n"
"set colored-completion-prefix on\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50595
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{conditional-constructs} (default: @code{'()}) (type: alist)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:50599
msgid "Association list of conditionals to add to the initialization file.  This includes @command{$if}, @command{else}, @command{endif} and @command{include} and they receive a value of another @command{home-inputrc-configuration}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50611
#, no-wrap
msgid ""
"(conditional-constructs\n"
" `((\\\"$if mode=vi\\\" .\n"
"     ,(home-inputrc-configuration\n"
"        (variables\n"
"         `((\\\"show-mode-in-prompt\\\" . #t)))))\n"
"   (\\\"$else\\\" .\n"
"     ,(home-inputrc-configuration\n"
"        (key-bindings\n"
"         `((\\\"Control-l\\\" . \\\"clear-screen\\\")))))\n"
"   (\\\"$endif\\\" . #t)))\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:50621
#, no-wrap
msgid ""
"$if mode=vi\n"
"set show-mode-in-prompt on\n"
"$else\n"
"Control-l: clear-screen\n"
"$endif\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50623
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{extra-content} (default: @code{\"\"}) (type: text-config)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:50626
msgid "Extra content appended as-is to the configuration file.  Run @command{man readline} for more information about all the configuration options."
msgstr ""

#. type: node
#: guix-git/doc/guix.texi:50630
#, no-wrap
msgid "Mcron Home Service"
msgstr "Servizio Home Mcron"

#. type: subsection
#: guix-git/doc/guix.texi:50631
#, no-wrap
msgid "Scheduled User's Job Execution"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:50633
#, no-wrap
msgid "cron, per-user"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:50634
#, no-wrap
msgid "mcron, per-user"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:50635
#, no-wrap
msgid "scheduling jobs per-user"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50643
msgid "The @code{(gnu home services mcron)} module provides an interface to GNU@tie{}mcron, a daemon to run jobs at scheduled times (@pxref{Top,,, mcron, GNU@tie{}mcron}).  The information about system's mcron is applicable here (@pxref{mcron-service, mcron reference}), the only difference for home services is that they have to be declared in a @code{home-environment} record instead of an @code{operating-system} record."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:50648
msgid "We recommend defining periodic tasks as Shepherd timers, which provide more flexibility than mcron.  @xref{Shepherd Home Service}, for more info."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50650
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-mcron-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:50654
msgid "This is the type of the @code{mcron} home service, whose value is a @code{home-mcron-configuration} object.  It allows to manage scheduled tasks."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50661
#, no-wrap
msgid "{Data Type} home-mcron-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50663
msgid "Available @code{home-mcron-configuration} fields are:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50684
msgid "@code{(ice-9 format)} format string for log messages.  The default value produces messages like \"@samp{@var{pid} @var{name}: @var{message}\"} (@pxref{Invoking mcron, Invoking,, mcron,GNU@tie{}mcron}).  Each message is also prefixed by a timestamp by GNU Shepherd."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:50689 guix-git/doc/guix.texi:50690
#, no-wrap
msgid "Power Management Home Services"
msgstr "Servizi Home di gestione energetica"

#. type: cindex
#: guix-git/doc/guix.texi:50692
#, no-wrap
msgid "power management"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50695
msgid "The @code{(gnu home services pm)} module provides home services pertaining to battery power."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50696
#, no-wrap
msgid "home-batsignal-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50702
msgid "Service for @code{batsignal}, a program that monitors battery levels and warns the user through desktop notifications when their battery is getting low.  You can also configure a command to be run when the battery level passes a point deemed ``dangerous''.  This service is configured with the @code{home-batsignal-configuration} record."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50704
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} home-batsignal-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:50706
msgid "Data type representing the configuration for batsignal."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50708
#, no-wrap
msgid "@code{warning-level} (default: @code{15})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50710
msgid "The battery level to send a warning message at."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50711
#, no-wrap
msgid "@code{warning-message} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50715
msgid "The message to send as a notification when the battery level reaches the @code{warning-level}.  Setting to @code{#f} uses the default message."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50716
#, no-wrap
msgid "@code{critical-level} (default: @code{5})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50718
msgid "The battery level to send a critical message at."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50719
#, no-wrap
msgid "@code{critical-message} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50723
msgid "The message to send as a notification when the battery level reaches the @code{critical-level}.  Setting to @code{#f} uses the default message."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50724
#, no-wrap
msgid "@code{danger-level} (default: @code{2})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50726
msgid "The battery level to run the @code{danger-command} at."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50727
#, no-wrap
msgid "@code{danger-command} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50730
msgid "The command to run when the battery level reaches the @code{danger-level}.  Setting to @code{#f} disables running the command entirely."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50731
#, no-wrap
msgid "@code{full-level} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50734
msgid "The battery level to send a full message at.  Setting to @code{#f} disables sending the full message entirely."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50735
#, no-wrap
msgid "@code{full-message} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50738
msgid "The message to send as a notification when the battery level reaches the @code{full-level}.  Setting to @code{#f} uses the default message."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50739
#, no-wrap
msgid "@code{batteries} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50742
msgid "The batteries to monitor.  Setting to @code{'()} tries to find batteries automatically."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50743
#, no-wrap
msgid "@code{poll-delay} (default: @code{60})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50745
msgid "The time in seconds to wait before checking the batteries again."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50746
#, no-wrap
msgid "@code{icon} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50749
msgid "A file-like object to use as the icon for battery notifications.  Setting to @code{#f} disables notification icons entirely."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50750
#, no-wrap
msgid "@code{notifications?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50752
msgid "Whether to send any notifications."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50753
#, no-wrap
msgid "@code{notifications-expire?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50755
msgid "Whether notifications sent expire after a time."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50756
#, no-wrap
msgid "@code{notification-command} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50759
msgid "Command to use to send messages.  Setting to @code{#f} sends a notification through @code{libnotify}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50760
#, no-wrap
msgid "@code{ignore-missing?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50762
msgid "Whether to ignore missing battery errors."
msgstr ""

#. type: node
#: guix-git/doc/guix.texi:50765
#, no-wrap
msgid "Shepherd Home Service"
msgstr "Servizio Home Shepherd"

#. type: subsection
#: guix-git/doc/guix.texi:50766
#, no-wrap
msgid "Managing User Daemons"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:50768
#, no-wrap
msgid "shepherd services, for users"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50775
msgid "The @code{(gnu home services shepherd)} module supports the definitions of per-user Shepherd services (@pxref{Introduction,,, shepherd, The GNU Shepherd Manual}).  You extend @code{home-shepherd-service-type} with new services; Guix Home then takes care of starting the @code{shepherd} daemon for you when you log in, which in turns starts the services you asked for."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50776
#, no-wrap
msgid "home-shepherd-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50781
msgid "The service type for the userland Shepherd, which allows one to manage long-running processes or one-shot tasks.  User's Shepherd is not an init process (PID 1), but almost all other information described in (@pxref{Shepherd Services}) is applicable here too."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50786
msgid "This is the service type that extensions target when they want to create shepherd services (@pxref{Service Types and Services}, for an example).  Each extension must pass a list of @code{<shepherd-service>}.  Its value must be a @code{home-shepherd-configuration}, as described below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50788
#, no-wrap
msgid "{Data Type} home-shepherd-configuration"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50795
#, no-wrap
msgid "auto-start? (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50797
msgid "Whether or not to start Shepherd on first login."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50798
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "daemonize? (default: @code{#t})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:50800
msgid "Whether or not to run Shepherd in the background."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50801
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "silent? (default: @code{#t})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:50804
msgid "When true, the @command{shepherd} process does not write anything to standard output when started automatically."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:50812
#, no-wrap
msgid "timers, per-user"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50817
msgid "The Shepherd allows you to define @dfn{timers}, a special type of service that performs a given task periodically.  Just like you can define timers at the system level (@pxref{Scheduled Job Execution}), you can do so in your home environment."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50826
msgid "The example below defines a home environment where a Shepherd timer runs the @command{mkid} command twice per day (@pxref{mkid invocation,,, idutils, ID Database Utilities}).  It does so by extending @code{home-shepherd-service-type} with @code{simple-service}; the Shepherd timer itself is produced by the @code{shepherd-timer} procedure (@pxref{shepherd-timer-procedure, @code{shepherd-timer}}), which is given the service name, a gexp specifying its schedule, and a gexp specifying the command to run."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50831
#, no-wrap
msgid ""
"(use-modules (gnu) (guix)\n"
"             (gnu home services shepherd)\n"
"             (gnu packages idutils))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50841
#, no-wrap
msgid ""
"(define idutils-service\n"
"  ;; Index my 'doc' directory everyday at 12:15PM and 7:15PM.\n"
"  (simple-service\n"
"   'update-idutils-database home-shepherd-service-type\n"
"   (list (shepherd-timer '(update-idutils-database)\n"
"                         #~(calendar-event #:hours '(12 19)\n"
"                                           #:minutes '(15))\n"
"                         #~(#$(file-append idutils \"/bin/mkid\")\n"
"                            \"doc\")))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50846
#, no-wrap
msgid ""
"(home-environment\n"
"  ;; @dots{}\n"
"  (services (append (list idutils-service)\n"
"                    %base-home-services)))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:50851
#, fuzzy, no-wrap
#| msgid "Services"
msgid "log rotation, for user services"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:50856
msgid "The Shepherd also comes with a @dfn{log rotation service}, which compresses and then deletes old log files produced by services and daemons that it runs.  This service is made available through @code{home-log-rotation-service-type} as described below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50857
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-log-rotation-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:50863
msgid "This is the service type for the user Shepherd log rotation service (@pxref{Log Rotation Service,,, shepherd, The GNU Shepherd Manual}).  Its value must be a @code{log-rotation-configuration} record, exactly as for its system-wide counterpart.  @xref{log-rotation-configuration}, for its reference."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50865
#, fuzzy
#| msgid "Services"
msgid "This service is part of @code{%base-home-services}."
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:50867
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-shepherd-transient-service-type"
msgstr "Servizi"

#. type: defvarx
#: guix-git/doc/guix.texi:50868
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-shepherd-timer-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:50872
msgid "These are the @code{timer} and @code{transient} Shepherd services.  The former lets you schedule command execution for later, while the latter can run commands in the background as a regular service."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50876
msgid "@xref{shepherd-transient-timer-services, the system @code{timer} and @code{transient} services}, which are their Guix System counterparts, for more info."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:50878 guix-git/doc/guix.texi:50879
#, no-wrap
msgid "Secure Shell"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:50881
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "secure shell client, configuration"
msgstr "Documentazione"

#. type: cindex
#: guix-git/doc/guix.texi:50882
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "SSH client, configuration"
msgstr "Documentazione"

#. type: Plain text
#: guix-git/doc/guix.texi:50890
msgid "The @uref{https://www.openssh.com, OpenSSH package} includes a client, the @command{ssh} command, that allows you to connect to remote machines using the @acronym{SSH, secure shell} protocol.  With the @code{(gnu home services ssh)} module, you can set up OpenSSH so that it works in a predictable fashion, almost independently of state on the local machine.  To do that, you instantiate @code{home-openssh-service-type} in your Home configuration, as explained below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50891
#, no-wrap
msgid "home-openssh-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50894
msgid "This is the type of the service to set up the OpenSSH client.  It takes care of several things:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:50900
msgid "providing a @file{~/.ssh/config} file based on your configuration so that @command{ssh} knows about hosts you regularly connect to and their associated parameters;"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:50905
msgid "providing a @file{~/.ssh/authorized_keys}, which lists public keys that the local SSH server, @command{sshd}, may accept to connect to this user account;"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:50909
msgid "optionally providing a @file{~/.ssh/known_hosts} file so that @file{ssh} can authenticate hosts you connect to."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50925
#, no-wrap
msgid ""
"(service home-openssh-service-type\n"
"         (home-openssh-configuration\n"
"          (hosts\n"
"           (list (openssh-host (name \"ci.guix.gnu.org\")\n"
"                               (user \"charlie\"))\n"
"                 (openssh-host (name \"chbouib\")\n"
"                               (host-name \"chbouib.example.org\")\n"
"                               (user \"supercharlie\")\n"
"                               (port 10022))))\n"
"          (authorized-keys (list (local-file \"alice.pub\")))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50932
msgid "The example above lists two hosts and their parameters.  For instance, running @command{ssh chbouib} will automatically connect to @code{chbouib.example.org} on port 10022, logging in as user @samp{supercharlie}.  Further, it marks the public key in @file{alice.pub} as authorized for incoming connections."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50935
msgid "The value associated with a @code{home-openssh-service-type} instance must be a @code{home-openssh-configuration} record, as describe below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50937
#, no-wrap
msgid "{Data Type} home-openssh-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50941
msgid "This is the datatype representing the OpenSSH client and server configuration in one's home environment.  It contains the following fields:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50943
#, no-wrap
msgid "@code{hosts} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50947
msgid "A list of @code{openssh-host} records specifying host names and associated connection parameters (see below).  This host list goes into @file{~/.ssh/config}, which @command{ssh} reads at startup."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50948
#, no-wrap
msgid "@code{known-hosts} (default: @code{*unspecified*})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50950
msgid "This must be either:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:50956
msgid "@code{*unspecified*}, in which case @code{home-openssh-service-type} leaves it up to @command{ssh} and to the user to maintain the list of known hosts at @file{~/.ssh/known_hosts}, or"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:50960
msgid "a list of file-like objects, in which case those are concatenated and emitted as @file{~/.ssh/known_hosts}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50969
msgid "The @file{~/.ssh/known_hosts} contains a list of host name/host key pairs that allow @command{ssh} to authenticate hosts you connect to and to detect possible impersonation attacks.  By default, @command{ssh} updates it in a @dfn{TOFU, trust-on-first-use} fashion, meaning that it records the host's key in that file the first time you connect to it.  This behavior is preserved when @code{known-hosts} is set to @code{*unspecified*}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50975
msgid "If you instead provide a list of host keys upfront in the @code{known-hosts} field, your configuration becomes self-contained and stateless: it can be replicated elsewhere or at another point in time.  Preparing this list can be relatively tedious though, which is why @code{*unspecified*} is kept as a default."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50976
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{authorized-keys} (default: @code{#false})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:50981
msgid "The default @code{#false} value means: Leave any @file{~/.ssh/authorized_keys} file alone.  Otherwise, this must be a list of file-like objects, each of which containing an SSH public key that should be authorized to connect to this machine."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50987
msgid "Concretely, these files are concatenated and made available as @file{~/.ssh/authorized_keys}.  If an OpenSSH server, @command{sshd}, is running on this machine, then it @emph{may} take this file into account: this is what @command{sshd} does by default, but be aware that it can also be configured to ignore it."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50988
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{add-keys-to-agent} (default: @code{no})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51001
msgid "This string specifies whether keys should be automatically added to a running ssh-agent.  If this option is set to @code{yes} and a key is loaded from a file, the key and its passphrase are added to the agent with the default lifetime, as if by @code{ssh-add}.  If this option is set to @code{ask}, @code{ssh} will require confirmation.  If this option is set to @code{confirm}, each use of the key must be confirmed.  If this option is set to @code{no}, no keys are added to the agent.  Alternately, this option may be specified as a time interval to specify the key's lifetime in @code{ssh-agent}, after which it will automatically be removed.  The argument must be @code{no}, @code{yes}, @code{confirm} (optionally followed by a time interval), @code{ask} or a time interval."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:51006
#, no-wrap
msgid "{Data Type} openssh-host"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:51008
msgid "Available @code{openssh-host} fields are:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51014
msgid "Name of this host declaration.  A @code{openssh-host} must define only @code{name} or @code{match-criteria}.  Use host-name @code{\\\"*\\\"} for top-level options."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51015
#, no-wrap
msgid "@code{host-name} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51017
msgid "Host name---e.g., @code{\"foo.example.org\"} or @code{\"192.168.1.2\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51018
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{match-criteria} (type: maybe-match-criteria)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51025
msgid "When specified, this string denotes the set of hosts to which the entry applies, superseding the @code{host-name} field.  Its first element must be all or one of @code{ssh-match-keywords}.  The rest of the elements are arguments for the keyword, or other criteria.  A @code{openssh-host} must define only @code{name} or @code{match-criteria}.  Other host configuration options will apply to all hosts matching @code{match-criteria}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51026
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{address-family} (type: maybe-address-family)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51030
msgid "Address family to use when connecting to this host: one of @code{AF_INET} (for IPv4 only), @code{AF_INET6} (for IPv6 only).  Additionally, the field can be left unset to allow any address family."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51031
#, no-wrap
msgid "@code{identity-file} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51033
msgid "The identity file to use---e.g., @code{\"/home/charlie/.ssh/id_ed25519\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51034 guix-git/doc/guix.texi:51074
#, no-wrap
msgid "@code{port} (type: maybe-natural-number)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51036 guix-git/doc/guix.texi:51076
msgid "TCP port number to connect to."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51039 guix-git/doc/guix.texi:51070
msgid "User name on the remote host."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51040
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{forward-x11?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51043
msgid "Whether to forward remote client connections to the local X11 graphical display."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51044
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{forward-x11-trusted?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51047
msgid "Whether remote X11 clients have full access to the original X11 graphical display."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51048
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{forward-agent?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51051
msgid "Whether the authentication agent (if any) is forwarded to the remote machine."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51052
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{compression?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51054
msgid "Whether to compress data in transit."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51055
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{proxy} (type: maybe-proxy-command-or-jump-list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51059
msgid "The command to use to connect to the server or a list of SSH hosts to jump through before connecting to the server.  The field may be set to either a @code{proxy-command} or a list of @code{proxy-jump} records."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51063
msgid "As an example, a @code{proxy-command} to connect via an HTTP proxy at 192.0.2.0 would be constructed with: @code{(proxy-command \"nc -X connect -x 192.0.2.0:8080 %h %p\")}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:51064
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} proxy-jump"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:51066
msgid "Available @code{proxy-jump} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51071
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{host-name} (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51073
msgid "Host name---e.g., @code{foo.example.org} or @code{192.168.1.2}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51081
#, no-wrap
msgid "@code{host-key-algorithms} (type: maybe-string-list)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51084
msgid "The list of accepted host key algorithms---e.g., @code{'(\"ssh-ed25519\")}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51085
#, no-wrap
msgid "@code{accepted-key-types} (type: maybe-string-list)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51087
msgid "The list of accepted user public key types."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51088 guix-git/doc/guix.texi:51266
#: guix-git/doc/guix.texi:51380
#, no-wrap
msgid "@code{extra-content} (default: @code{\"\"}) (type: raw-configuration-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51091
msgid "Extra content appended as-is to this @code{Host} block in @file{~/.ssh/config}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:51096
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Parcimonie, Home service"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:51102
msgid "The @code{parcimonie} service runs a daemon that slowly refreshes a GnuPG public key from a keyserver.  It refreshes one key at a time; between every key update parcimonie sleeps a random amount of time, long enough for the previously used Tor circuit to expire.  This process is meant to make it hard for an attacker to correlate the multiple key update."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51106
msgid "As an example, here is how you would configure @code{parcimonie} to refresh the keys in your GnuPG keyring, as well as those keyrings created by Guix, such as when running @code{guix import}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51111
#, no-wrap
msgid ""
"(service home-parcimonie-service-type\n"
"         (home-parcimonie-configuration\n"
"           (refresh-guix-keyrings? #t)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51116
msgid "This assumes that the Tor anonymous routing daemon is already running on your system.  On Guix System, this can be achieved by setting up @code{tor-service-type} (@pxref{Networking Services, @code{tor-service-type}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51118 guix-git/doc/guix.texi:51225
#: guix-git/doc/guix.texi:51803
msgid "The service reference is given below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51119
#, fuzzy, no-wrap
#| msgid "Services"
msgid "parcimonie-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:51123
msgid "This is the service type for @command{parcimonie} (@uref{https://salsa.debian.org/intrigeri/parcimonie, Parcimonie's web site}).  Its value must be a @code{home-parcimonie-configuration}, as shown below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:51127
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Table} home-parcimonie-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:51129
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{home-parcimonie-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:51131
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{parcimonie} (default: @code{parcimonie}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51133
msgid "The parcimonie package to use."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51136
msgid "Whether to have more verbose logging from the service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51137
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{gnupg-already-torified?} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51140
msgid "Whether GnuPG is already configured to pass all traffic through @uref{https://torproject.org, Tor}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51141
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{refresh-guix-keyrings?} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51145
msgid "Guix creates a few keyrings in the @var{$XDG_CONFIG_HOME}, such as when running @code{guix import} (@pxref{Invoking guix import}).  Setting this to @code{#t} will also refresh any keyrings which Guix has created."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51146
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{extra-content} (default: @code{#f}) (type: raw-configuration-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51148
msgid "Raw content to add to the parcimonie command."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:51155
#, no-wrap
msgid "ssh-agent"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51163
msgid "The @uref{https://www.openssh.com, OpenSSH package} includes a daemon, the @command{ssh-agent} command, that manages keys to connect to remote machines using the @acronym{SSH, secure shell} protocol.  With the @code{(gnu home services ssh)} service, you can configure the OpenSSH ssh-agent to run upon login.  @xref{GNU Privacy Guard, @code{home-gpg-agent-service-type}}, for an alternative to OpenSSH's @command{ssh-agent}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51172
#, no-wrap
msgid ""
"(service home-ssh-agent-service-type\n"
"         (home-ssh-agent-configuration\n"
"          (extra-options '(\"-t\" \"1h30m\"))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51174
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-ssh-agent-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:51177
msgid "This is the type of the @code{ssh-agent} home service, whose value is a @code{home-ssh-agent-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:51179
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} home-ssh-agent-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:51181
msgid "Available @code{home-ssh-agent-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51183
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{openssh} (default: @code{openssh}) (type: file-like)"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:51186
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{socket-directory} (default: @code{@env{XDG_RUNTIME_DIR}/ssh-agent\"}) (type: gexp)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51188
msgid "The directory to write the ssh-agent's @file{socket} file."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51192
msgid "Extra options will be passed to @command{ssh-agent}, please run @command{man ssh-agent} for more information."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:51196 guix-git/doc/guix.texi:51197
#, no-wrap
msgid "GNU Privacy Guard"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:51199
#, fuzzy, no-wrap
#| msgid "Services"
msgid "GNU Privacy Guard, Home service"
msgstr "Servizi"

#. type: cindex
#: guix-git/doc/guix.texi:51200
#, fuzzy, no-wrap
#| msgid "Services"
msgid "GPG, Home service"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:51204
msgid "The @code{(gnu home services gnupg)} module provides services that help you set up the GNU Privacy Guard, also known as GnuPG or GPG, in your home environment."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:51205
#, fuzzy, no-wrap
#| msgid "Services"
msgid "gpg-agent, Home service"
msgstr "Servizi"

#. type: cindex
#: guix-git/doc/guix.texi:51206
#, no-wrap
msgid "SSH agent, with gpg-agent"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51211
msgid "The @code{gpg-agent} service configures and sets up GPG's agent, the program that is responsible for managing OpenPGP private keys and, optionally, OpenSSH (secure shell) private keys (@pxref{Invoking GPG-AGENT,,, gnupg, Using the GNU Privacy Guard})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51215
msgid "As an example, here is how you would configure @code{gpg-agent} with SSH support such that it uses the Emacs-based Pinentry interface when prompting for a passphrase:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51222
#, no-wrap
msgid ""
"(service home-gpg-agent-service-type\n"
"         (home-gpg-agent-configuration\n"
"          (pinentry-program\n"
"           (file-append pinentry-emacs \"/bin/pinentry-emacs\"))\n"
"          (ssh-support? #t)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51226
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-gpg-agent-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:51230
msgid "This is the service type for @command{gpg-agent} (@pxref{Invoking GPG-AGENT,,, gnupg, Using the GNU Privacy Guard}).  Its value must be a @code{home-gpg-agent-configuration}, as shown below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:51234
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} home-gpg-agent-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:51236
msgid "Available @code{home-gpg-agent-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51238
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{gnupg} (default: @code{gnupg}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51240
msgid "The GnuPG package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51241
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{pinentry-program} (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51246
msgid "Pinentry program to use.  Pinentry is a small user interface that @command{gpg-agent} delegates to anytime it needs user input for a passphrase or @acronym{PIN,personal identification number} (@pxref{Top,,, pinentry,Using the PIN-Entry})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51247
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{ssh-support?} (default: @code{#f}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51252
msgid "Whether to enable @acronym{SSH,secure shell} support.  When true, @command{gpg-agent} acts as a drop-in replacement for OpenSSH's @command{ssh-agent} program, taking care of OpenSSH secret keys and directing passphrase requests to the chosen Pinentry program."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51253
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{default-cache-ttl} (default: @code{600}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51255
msgid "Time a cache entry is valid, in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51256
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-cache-ttl} (default: @code{7200}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51259
msgid "Maximum time a cache entry is valid, in seconds.  After this time a cache entry will be expired even if it has been accessed recently."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51260
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{default-cache-ttl-ssh} (default: @code{1800}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51262
msgid "Time a cache entry for SSH keys is valid, in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51263
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{max-cache-ttl-ssh} (default: @code{7200}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51265
msgid "Maximum time a cache entry for SSH keys is valid, in seconds."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51268
msgid "Raw content to add to the end of @file{~/.gnupg/gpg-agent.conf}."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:51277 guix-git/doc/guix.texi:51278
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Desktop Home Services"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:51283
msgid "The @code{(gnu home services desktop)} module provides services that you may find useful on ``desktop'' systems running a graphical user environment such as Xorg."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:51284
#, fuzzy, no-wrap
#| msgid "Services"
msgid "X Window, for Guix Home services"
msgstr "Servizi"

#. type: cindex
#: guix-git/doc/guix.texi:51285
#, no-wrap
msgid "X11, in Guix Home"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51286
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-x11-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:51289
msgid "This is the service type representing the X Window graphical display server (also referred to as ``X11'')."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51295
msgid "X Window is necessarily started by a system service; on Guix System, starting it is the responsibility of @code{gdm-service-type} and similar services (@pxref{X Window}).  At the level of Guix Home, as an unprivileged user, we cannot start X Window; all we can do is check whether it is running.  This is what this service does."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51301
msgid "As a user, you probably don't need to worry or explicitly instantiate @code{home-x11-service-type}.  Services that require an X Window graphical display, such as @code{home-redshift-service-type} below, instantiate it and depend on its corresponding @code{x11-display} Shepherd service (@pxref{Shepherd Home Service})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51306
msgid "When X Window is running, the @code{x11-display} Shepherd service starts and sets the @env{DISPLAY} environment variable of the @command{shepherd} process, using its original value if it was already set; otherwise, it fails to start."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51309
msgid "The service can also be forced to use a given value for @env{DISPLAY}, like so:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:51312
#, no-wrap
msgid "herd start x11-display :3\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51316
msgid "In the example above, @code{x11-display} is instructed to set @env{DISPLAY} to @code{:3}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51318
#, no-wrap
msgid "home-redshift-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51323
msgid "This is the service type for @uref{https://github.com/jonls/redshift, Redshift}, a program that adjusts the display color temperature according to the time of day.  Its associated value must be a @code{home-redshift-configuration} record, as shown below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51326
msgid "A typical configuration, where we manually specify the latitude and longitude, might look like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51333
#, no-wrap
msgid ""
"(service home-redshift-service-type\n"
"         (home-redshift-configuration\n"
"          (location-provider 'manual)\n"
"          (latitude 35.81)    ;northern hemisphere\n"
"          (longitude -0.80))) ;west of Greenwich\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:51336
#, no-wrap
msgid "{Data Type} home-redshift-configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:51338
msgid "Available @code{home-redshift-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51340
#, no-wrap
msgid "@code{redshift} (default: @code{redshift}) (type: file-like)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51342
msgid "Redshift package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51343
#, no-wrap
msgid "@code{location-provider} (default: @code{geoclue2}) (type: symbol)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51349
msgid "Geolocation provider---@code{'manual} or @code{'geoclue2}.  In the former case, you must also specify the @code{latitude} and @code{longitude} fields so Redshift can determine daytime at your place.  In the latter case, the Geoclue system service must be running; it will be queried for location information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51350
#, no-wrap
msgid "@code{adjustment-method} (default: @code{randr}) (type: symbol)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51352
msgid "Color adjustment method."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51353
#, no-wrap
msgid "@code{daytime-temperature} (default: @code{6500}) (type: integer)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51355
msgid "Daytime color temperature (kelvins)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51356
#, no-wrap
msgid "@code{nighttime-temperature} (default: @code{4500}) (type: integer)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51358
msgid "Nighttime color temperature (kelvins)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51359
#, no-wrap
msgid "@code{daytime-brightness} (type: maybe-inexact-number)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51361
msgid "Daytime screen brightness, between 0.1 and 1.0, or left unspecified."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51362
#, no-wrap
msgid "@code{nighttime-brightness} (type: maybe-inexact-number)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51364
msgid "Nighttime screen brightness, between 0.1 and 1.0, or left unspecified."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51365
#, no-wrap
msgid "@code{latitude} (type: maybe-inexact-number)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51367
msgid "Latitude, when @code{location-provider} is @code{'manual}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51368
#, no-wrap
msgid "@code{longitude} (type: maybe-inexact-number)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51370
msgid "Longitude, when @code{location-provider} is @code{'manual}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51371
#, no-wrap
msgid "@code{dawn-time} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51375
msgid "Custom time for the transition from night to day in the morning---@code{\"HH:MM\"} format.  When specified, solar elevation is not used to determine the daytime/nighttime period."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51376
#, no-wrap
msgid "@code{dusk-time} (type: maybe-string)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51379
msgid "Likewise, custom time for the transition from day to night in the evening."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51384
msgid "Extra content appended as-is to the Redshift configuration file.  Run @command{man redshift} for more information about the configuration file format."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51389
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-dbus-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:51392
msgid "This is the service type for running a session-specific D-Bus, for unprivileged applications that require D-Bus to be running."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:51394
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} home-dbus-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:51396
msgid "The configuration record for @code{home-dbus-service-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51398
#, no-wrap
msgid "@code{dbus} (default: @code{dbus})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51400
msgid "The package providing the @code{/bin/dbus-daemon} command."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51403
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-unclutter-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:51409
msgid "This is the service type for Unclutter, a program that runs on the background of an X11 session and detects when the X pointer hasn't moved for a specified idle timeout, after which it hides the cursor so that you can focus on the text underneath.  Its associated value must be a @code{home-unclutter-configuration} record, as shown below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51412
msgid "A typical configuration, where we manually specify the idle timeout (in seconds), might look like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51417
#, no-wrap
msgid ""
"(service home-unclutter-service-type\n"
"         (home-unclutter-configuration\n"
"          (idle-timeout 2)))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:51420
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} home-unclutter-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:51422
#, fuzzy
#| msgid "Documentation"
msgid "The configuration record for @code{home-unclutter-service-type}."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:51424
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{unclutter} (default: @code{unclutter}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51426
msgid "Unclutter package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51427
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{idle-timeout} (default: @code{5}) (type: integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51429
msgid "A timeout in seconds after which to hide cursor."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51433
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-xmodmap-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:51439
msgid "This is the service type for the @uref{https://gitlab.freedesktop.org/xorg/app/xmodmap,xmodmap} utility to modify keymaps and pointer button mappings under the Xorg display server.  Its associated value must be a @code{home-xmodmap-configuration} record, as shown below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51447
msgid "The @code{key-map} field takes a list of objects, each of which is either a @dfn{statement} (a string) or an @dfn{assignment} (a pair of strings).  As an example, the snippet below swaps around the @kbd{Caps_Lock} and the @kbd{Control_L} keys, by first removing the keysyms (on the right-hand side) from the corresponding modifier maps (on the left-hand side), re-assigning them by swapping each other out, and finally adding back the keysyms to the modifier maps."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51457
#, no-wrap
msgid ""
"(service home-xmodmap-service-type\n"
"         (home-xmodmap-configuration\n"
"          (key-map '((\"remove Lock\" . \"Caps_Lock\")\n"
"                     (\"remove Control\" . \"Control_L\")\n"
"                     (\"keysym Control_L\" . \"Caps_Lock\")\n"
"                     (\"keysym Caps_Lock\" . \"Control_L\")\n"
"                     (\"add Lock\" . \"Caps_Lock\")\n"
"                     (\"add Control\" . \"Control_L\")))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:51460
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} home-xmodmap-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:51463
#, fuzzy
#| msgid "Documentation"
msgid "The configuration record for @code{home-xmodmap-service-type}.  Its available fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:51465
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{xmodmap} (default: @code{xmodmap}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51467
msgid "The @code{xmodmap} package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51468
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{key-map} (default: @code{'()}) (type: list)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51470
msgid "The list of expressions to be read by @code{xmodmap} on service startup."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51474
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-startx-command-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:51476
msgid "Add @command{startx} to the home profile putting it onto @env{PATH}."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:51483 guix-git/doc/guix.texi:51484
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Guix Home Services"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:51488
msgid "The @code{(gnu home services guix)} module provides services for user-specific Guix configuration."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51489
#, no-wrap
msgid "home-channels-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51495
msgid "This is the service type for managing @file{$XDG_CONFIG_HOME/guix/channels.scm}, the file that controls the channels received on @command{guix pull} (@pxref{Channels}).  Its associated value is a list of @code{channel} records, defined in the @code{(guix channels)} module."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51502
msgid "Generally, it is better to extend this service than to directly configure it, as its default value is the default guix channel(s)  defined by @code{%default-channels}.  If you configure this service directly, be sure to include a guix channel.  @xref{Specifying Additional Channels} and @ref{Using a Custom Guix Channel} for more details."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51504
msgid "A typical extension for adding a channel might look like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51512
#, no-wrap
msgid ""
"(simple-service 'variant-packages-service\n"
"                home-channels-service-type\n"
"                (list\n"
"                 (channel\n"
"                  (name 'variant-packages)\n"
"                  (url \"https://example.org/variant-packages.git\"))))\n"
msgstr ""

#. type: node
#: guix-git/doc/guix.texi:51515
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Backup Home Services"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:51520
msgid "The @code{(gnu home services backup)} module offers services for backing up file system trees.  For now, it provides the @code{home-restic-backup-service-type}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51525
msgid "With @code{home-restic-backup-service-type}, you can periodically back up directories and files with @uref{https://restic.net/, Restic}, which supports end-to-end encryption and deduplication.  Consider the following configuration:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51530
#, no-wrap
msgid ""
"(use-modules (gnu home services backup) ;for 'restic-backup-job', 'home-restic-backup-service-type'\n"
"             (gnu packages sync)        ;for 'rclone'\n"
"             @dots{})\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51532 guix-git/doc/guix.texi:51567
#, no-wrap
msgid ""
"(home-environment\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51549
#, no-wrap
msgid ""
"  (packages (list rclone    ;for use by restic\n"
"                  @dots{}))\n"
"  (services\n"
"    (list\n"
"      @dots{}\n"
"      (simple-service 'backup-jobs\n"
"                      home-restic-backup-service-type\n"
"                      (list (restic-backup-job\n"
"                              (name \"remote-ftp\")\n"
"                              (repository \"rclone:remote-ftp:backup/restic\")\n"
"                              (password-file \"/home/alice/.restic\")\n"
"                              ;; Every day at 23.\n"
"                              (schedule \"0 23 * * *\")\n"
"                              (files '(\"/home/alice/.restic\"\n"
"                                       \"/home/alice/.config/rclone\"\n"
"                                       \"/home/alice/Pictures\"))))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51555
msgid "In general it is preferable to extend the @code{home-restic-backup-service-type}, as shown in the example above.  This is because it takes care of wrapping everything with @code{for-home}, which enables the @code{home-restic-backup-service-type} and @code{restic-backup-service-type} to share the same codebase."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51558
#, fuzzy
#| msgid "Documentation"
msgid "For a custom configuration, wrap your @code{restic-backup-configuration} in @code{for-home}, as in this example:"
msgstr "Documentazione"

#. type: lisp
#: guix-git/doc/guix.texi:51565
#, no-wrap
msgid ""
"(use-modules (gnu services)             ;for 'for-home'\n"
"             (gnu services backup)      ;for 'restic-backup-job' and 'restic-backup-configuration'\n"
"             (gnu home services backup) ;for 'home-restic-backup-service-type'\n"
"             (gnu packages sync)        ;for 'rclone'\n"
"             @dots{})\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51577
#, no-wrap
msgid ""
"  (packages (list rclone    ;for use by restic\n"
"                  @dots{}))\n"
"  (services\n"
"    (list\n"
"      @dots{}\n"
"      (service home-restic-backup-service-type\n"
"               (for-home\n"
"                (restic-backup-configuration\n"
"                 (jobs (list @dots{}))))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51585
msgid "You can refer to @pxref{Miscellaneous Services, @code{restic-backup-service-type}} for details about @code{restic-backup-configuration} and @code{restic-backup-job}.  The only difference is that the @code{home-restic-backup-service-type} will ignore the @code{user} and @code{group} field of @code{restic-backup-job}."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:51586 guix-git/doc/guix.texi:51587
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Fonts Home Services"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:51593
msgid "The @code{(gnu home services fontutils)} module provides services for user-specific Fontconfig setup.  The @uref{https://www.freedesktop.org/wiki/Software/fontconfig,Fontconfig} library is used by many applications to access fonts on the system."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51594
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-fontconfig-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:51600
msgid "This is the service type for generating configurations for Fontconfig.  Its associated value is a list of either strings (or gexps) pointing to fonts locations, or SXML (@pxref{SXML,,, guile, GNU Guile Reference Manual}) fragments to be converted into XML and put inside the main @code{fontconfig} node."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51606
msgid "Generally, it is better to extend this service than to directly configure it, as its default value is the default Guix Home's profile font installation path (@file{~/.guix-home/profile/share/fonts}).  If you configure this service directly, be sure to include the above directory."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51609
msgid "Here's how you'd extend it to include fonts installed with the Nix package manager, and to prefer your favourite monospace font:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51618
#, no-wrap
msgid ""
"(simple-service 'additional-fonts-service\n"
"                home-fontconfig-service-type\n"
"                (list \"~/.nix-profile/share/fonts\"\n"
"                      '(alias\n"
"                        (family \"monospace\")\n"
"                        (prefer\n"
"                         (family \"Liberation Mono\")))))\n"
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:51621 guix-git/doc/guix.texi:51622
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Sound Home Services"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:51626
msgid "The @code{(gnu home services sound)} module provides services related to sound support."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:51627
#, fuzzy, no-wrap
#| msgid "Services"
msgid "PulseAudio, home service"
msgstr "Servizi"

#. type: cindex
#: guix-git/doc/guix.texi:51628
#, no-wrap
msgid "RTP, for PulseAudio"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:51629
#, fuzzy, no-wrap
#| msgid "Services"
msgid "PulseAudio RTP Streaming Services"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:51639
msgid "The following services dynamically reconfigure the @uref{https://pulseaudio.org,PulseAudio sound server}: they let you toggle broadcast of audio output over the network using the @acronym{RTP, real-time transport protocol} and, correspondingly, playback of sound received over RTP.  Once @code{home-pulseaudio-rtp-sink-service-type} is among your home services, you can start broadcasting audio output by running this command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:51642 guix-git/doc/guix.texi:51708
#, no-wrap
msgid "herd start pulseaudio-rtp-sink\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51647
msgid "You can then run a PulseAudio-capable mixer, such as @code{pavucontrol} or @code{pulsemixer} (both from the same-named package) to control which audio stream(s) should be sent to the RTP ``sink''."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51654
msgid "By default, audio is broadcasted to a multicast address: any device on the @acronym{LAN, local area network} receives it and may play it.  Using multicast in this way puts a lot of pressure on the network and degrades its performance, so you may instead prefer sending to specifically one device.  The first way to do that is by specifying the IP address of the target device when starting the service:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:51657
#, no-wrap
msgid "herd start pulseaudio-rtp-sink 192.168.1.42\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51661
msgid "The other option is to specify this IP address as the one to use by default in your home environment configuration:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51665
#, no-wrap
msgid ""
"(service home-pulseaudio-rtp-sink-service-type\n"
"         \"192.168.1.42\")\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51669
msgid "On the device where you intend to receive and play the RTP stream, you can use @code{home-pulseaudio-rtp-source-service-type}, like so:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51672
#, no-wrap
msgid "(service home-pulseaudio-rtp-source-service-type)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51675
msgid "This will then let you start the receiving module for PulseAudio:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:51678
#, no-wrap
msgid "herd start pulseaudio-rtp-source\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51683
msgid "Again, by default it will listen on the multicast address.  If, instead, you'd like it to listen for direct incoming connections, you can do that by running:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51687
#, no-wrap
msgid ""
"(service home-pulseaudio-rtp-source-service-type\n"
"         \"0.0.0.0\")\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51690
msgid "The reference of these services is given below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51691
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-pulseaudio-rtp-sink-service-type"
msgstr "Servizi"

#. type: defvarx
#: guix-git/doc/guix.texi:51692
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-pulseaudio-rtp-source-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:51695
msgid "This is the type of the service to send, respectively receive, audio streams over @acronym{RTP, real-time transport protocol}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51700
msgid "The value associated with this service is the IP address (a string)  where to send, respectively receive, the audio stream.  By default, audio is sent/received on multicast address @code{%pulseaudio-rtp-multicast-address}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51705
msgid "This service defines one Shepherd service: @code{pulseaudio-rtp-sink}, respectively @code{pulseaudio-rtp-source}.  The service is not started by default, so you have to explicitly start it when you want to turn it on, as in this example:"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51711
msgid "Stopping the Shepherd service turns off broadcasting."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51713
#, no-wrap
msgid "%pulseaudio-rtp-multicast-address"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51715
msgid "This is the multicast address used by default by the two services above."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:51717
#, fuzzy, no-wrap
#| msgid "Services"
msgid "PipeWire, home service"
msgstr "Servizi"

#. type: subsubheading
#: guix-git/doc/guix.texi:51718
#, fuzzy, no-wrap
#| msgid "Services"
msgid "PipeWire Home Service"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:51724
msgid "@uref{https://pipewire.org, PipeWire} provides a low-latency, graph-based audio and video processing service.  In addition to its native protocol, it can also be used as a replacement for both JACK and PulseAudio."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51734
msgid "While PipeWire provides the media processing and API, it does not, directly, know about devices such as sound cards, nor how you might want to connect applications, hardware, and media processing filters.  Instead, PipeWire relies on a @dfn{session manager} to specify all these relationships.  While you may use any session manager you wish, for most people the @url{https://pipewire.pages.freedesktop.org/wireplumber/, WirePlumber} session manager, a reference implementation provided by the PipeWire project itself, suffices, and that is the one @code{home-pipewire-service-type} uses."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51739
msgid "PipeWire can be used as a replacement for PulseAudio by setting @code{enable-pulseaudio?} to @code{#t} in @code{home-pipewire-configuration}, so that existing PulseAudio clients may use it without any further configuration."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51744
msgid "In addition, JACK clients may connect to PipeWire by using the @command{pw-jack} program, which comes with PipeWire.  Simply prefix the command with @command{pw-jack} when you run it, and audio data should go through PipeWire:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:51747
#, no-wrap
msgid "pw-jack mpv -ao=jack sound-file.wav\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51753
msgid "For more information on PulseAudio emulation, see @uref{https://gitlab.freedesktop.org/pipewire/pipewire/-/wikis/Config-PulseAudio}, for JACK, see @uref{https://gitlab.freedesktop.org/pipewire/pipewire/-/wikis/Config-JACK}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51759
msgid "As PipeWire does not use @code{dbus} to start its services on demand (as PulseAudio does), @code{home-pipewire-service-type} uses Shepherd to start services when logged in, provisioning the @code{pipewire}, @code{wireplumber}, and, if configured, @code{pipewire-pulseaudio} services.  @xref{Shepherd Home Service}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51760
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-pipewire-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:51763
msgid "This provides the service definition for @command{pipewire}, which will run on login.  Its value is a @code{home-pipewire-configuration} object."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51766
msgid "To start the service, add it to the @code{service} field of your @code{home-environment}, such as:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51769
#, fuzzy, no-wrap
#| msgid "Services"
msgid "(service home-pipewire-service-type)\n"
msgstr "Servizi"

#. type: deftp
#: guix-git/doc/guix.texi:51772
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} home-pipewire-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:51774
#, fuzzy
#| msgid "Documentation"
msgid "Available @code{home-pipewire-configuration} fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:51776
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{pipewire} (default: @code{pipewire}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51778
msgid "The PipeWire package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51779
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{wireplumber} (default: @code{wireplumber}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51781
msgid "The WirePlumber package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51782
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{enable-pulseaudio?} (default: @code{#t}) (type: boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51785
msgid "When true, enable PipeWire's PulseAudio emulation support, allowing PulseAudio clients to use PipeWire transparently."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51786 guix-git/doc/guix.texi:51844
#: guix-git/doc/guix.texi:51915
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{extra-content} (default: @code{\"\"}) (type: string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51788
#, fuzzy
#| msgid "Documentation"
msgid "Extra content to add to the end of @file{~/.config/alsa/asoundrc}."
msgstr "Documentazione"

#. type: subsection
#: guix-git/doc/guix.texi:51791 guix-git/doc/guix.texi:51792
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Mail Home Services"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:51796
msgid "The @code{(gnu home services mail)} module provides services that help you set up the tools to work with emails in your home environment."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:51797
#, no-wrap
msgid "msmtp"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51801
msgid "@uref{https://marlam.de/msmtp, MSMTP} is a @acronym{SMTP, Simple Mail Transfer Protocol} client.  It sends mail to a predefined SMTP server that takes care of proper delivery."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51804
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-msmtp-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:51808
msgid "This is the service type for @command{msmtp}.  Its value must be a @code{home-msmtp-configuration}, as shown below.  It provides the @file{~/.config/msmtp/config} file."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51811
msgid "As an example, here is how you would configure @code{msmtp} for a single account:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51825
#, no-wrap
msgid ""
"(service home-msmtp-service-type\n"
"         (home-msmtp-configuration\n"
"          (accounts\n"
"           (list\n"
"            (msmtp-account\n"
"             (name \"alice\")\n"
"             (configuration\n"
"              (msmtp-configuration\n"
"               (host \"mail.example.org\")\n"
"               (port 587)\n"
"               (user \"alice\")\n"
"               (password-eval \"pass Mail/alice\"))))))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:51830
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} home-msmtp-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:51832
msgid "Available @code{home-msmtp-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51834
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{defaults} (type: msmtp-configuration)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51836
msgid "The configuration that will be set as default for all accounts."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51837
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{accounts} (default: @code{'()}) (type: list-of-msmtp-accounts)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51840
msgid "A list of @code{msmtp-account} records which contain information about all your accounts."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51841
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{default-account} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51843
msgid "Set the default account."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51848
msgid "Extra content appended as-is to the configuration file.  Run @command{man msmtp} for more information about the configuration file format."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:51857
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} msmtp-account"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:51859
msgid "Available @code{msmtp-account} fields are:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51863
msgid "The unique name of the account."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51864
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{configuration} (type: msmtp-configuration)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51866
msgid "The configuration for this given account."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:51875
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} msmtp-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:51877
msgid "Available @code{msmtp-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51879
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{auth?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51881
msgid "Enable or disable authentication."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51882
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{tls?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51884
msgid "Enable or disable TLS (also known as SSL) for secured connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51885
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{tls-starttls?} (type: maybe-boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51888
msgid "Choose the TLS variant: start TLS from within the session (‘on’, default), or tunnel the session through TLS (‘off’)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51889
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{tls-trust-file} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51892
msgid "Activate server certificate verification using a list of trusted Certification Authorities (CAs)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51897
msgid "Enable logging to the specified file.  An empty argument disables logging.  The file name ‘-’ directs the log information to standard output."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51898
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{host} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51900
msgid "The SMTP server to send the mail to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51901
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{port} (type: maybe-integer)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51904
msgid "The port that the SMTP server listens on.  The default is 25 (\"smtp\"), unless TLS without STARTTLS is used, in which case it is 465 (\"smtps\")."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51907
msgid "Set the user name for authentication."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51908
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{from} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51910
msgid "Set the envelope-from address."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51911
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{password-eval} (type: maybe-string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51914
msgid "Set the password for authentication to the output (stdout) of the command cmd."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51919
msgid "Extra content appended as-is to the configuration block.  Run @command{man msmtp} for more information about the configuration file format."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:51926 guix-git/doc/guix.texi:51927
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Messaging Home Services"
msgstr "Servizi"

#. type: cindex
#: guix-git/doc/guix.texi:51929
#, no-wrap
msgid "znc"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51933
msgid "The @uref{https://znc.in, ZNC bouncer} can be run as a daemon to manage your IRC presence.  With the @code{(gnu home services messaging)} service, you can configure ZNC to run upon login."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51935
msgid "You will have to provide a @file{~/.znc/configs/znc.conf} separately."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51941
#, fuzzy, no-wrap
#| msgid "Services"
msgid "(service home-znc-service-type)\n"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:51943
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-znc-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:51946
msgid "This is the type of the ZNC home service, whose value is a @code{home-znc-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:51948
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} home-znc-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:51950
msgid "Available @code{home-znc-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51952
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{znc} (default: @code{znc}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:51954
msgid "The ZNC package to use."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51958
msgid "Extra options will be passed to @command{znc}, please run @command{man znc} for more information."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51968
msgid "The @uref{https://gitlab.com/janneke/snuik, Snuik IRC bot} can be run as a daemon to aid talking to users that are currently offline.  With the @code{(gnu home services messaging)} service, you can configure Snuik to run upon login."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51969
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-snuik-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:51972
msgid "This is the type of the Snuik home service, whose value is a @code{home-snuik-configuration} object."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51979
msgid "You may specify a custom configuration by providing a @code{snuik-configuration} record, exactly like for @code{snuik-service-type} and wrapping it in @code{for-home}.  Here is an example of a service and its configuration that you could add to the @code{services} field of your @code{home-environment}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51988
#, no-wrap
msgid ""
"(service home-snuik-service-type\n"
"         (for-home\n"
"          (snuik-configuration\n"
"           (server \"irc.oftc.net\")\n"
"           (nick \"sneek\")\n"
"           (password \"snuik is sneeky\")\n"
"           (channels '(\"#reproducible-builds\")))))\n"
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:51990 guix-git/doc/guix.texi:51991
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Media Home Services"
msgstr "Servizi"

#. type: cindex
#: guix-git/doc/guix.texi:51993
#, no-wrap
msgid "kodi"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51997
msgid "The @uref{https://kodi.tv, Kodi media center} can be run as a daemon on a media server.  With the @code{(gnu home services kodi)} service, you can configure Kodi to run upon login."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52005
#, no-wrap
msgid ""
"(service home-kodi-service-type\n"
"  (home-kodi-configuration\n"
"   (extra-options '(\"--settings=\"<settings-file>\"))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52007
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-kodi-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:52010
msgid "This is the type of the Kodi home service, whose value is a @code{home-kodi-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:52012
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} home-kodi-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:52014
msgid "Available @code{home-kodi-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52016
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{kodi} (default: @code{kodi}) (type: file-like)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52018
msgid "The Kodi package to use."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52022
msgid "Extra options will be passed to @command{kodi}, please run @command{man kodi} for more information."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:52028 guix-git/doc/guix.texi:52029
#, no-wrap
msgid "mpv Media Player"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:52031
#, fuzzy, no-wrap
#| msgid "Services"
msgid "mpv, Home Service"
msgstr "Servizi"

#. type: cindex
#: guix-git/doc/guix.texi:52032
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "mpv, configuration"
msgstr "Documentazione"

#. type: Plain text
#: guix-git/doc/guix.texi:52039
msgid "Configuring the @uref{https://mpv.io/, mpv media player} can be somewhat daunting task, due to the sheer amount of options available, especially if one wants to be able to inherit the configuration in their code.  The @code{home-mpv-service-type} is provided to help with that problem.  When the service is added to your home environment, file based on the passed configuration is generated and placed into the correct location."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:52043
msgid "Due to the bug #74748, it does not use Guix Records to represent the configuration, but uses keyword arguments to achieve similar result.  Example follows:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52050
#, no-wrap
msgid ""
"(service home-mpv-service-type\n"
"         (make-home-mpv-configuration\n"
"          #:global (make-mpv-profile-configuration\n"
"                    #:fullscreen? #t\n"
"                    #:alang '(\"jpn\" \"eng\"))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52052
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-mpv-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:52055
msgid "This is the type of the mpv home service, whose value is a @code{home-mpv-configuration} object."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:52057
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Procedure} make-home-mpv-configuration"
msgstr "Documentazione"

#. type: deffn
#: guix-git/doc/guix.texi:52060
msgid "Return a new instance of @code{home-mpv-configuration}.  Available keyword arguments are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52062
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{inherit} (default: @code{#t})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52064
msgid "Inherit fields from an another instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52065
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{global} (default: @code{(make-mpv-profile-configuration)})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52067
msgid "The global configuration preceding all profiles."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52068
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{profiles} (default: @code{()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52071
#, fuzzy
#| msgid "Documentation"
msgid "An alist containing configuration for any additional profiles to include in the configuration file."
msgstr "Documentazione"

#. type: lisp
#: guix-git/doc/guix.texi:52076
#, no-wrap
msgid ""
"(make-home-mpv-configuration\n"
" #:profiles `((fullscreen . ,(make-mpv-profile-configuration\n"
"                              #:fullscreen? #t))))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52078
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{extra-config} (default: @code{#f})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52081
msgid "Additional content to include in the configuration file.  It is placed at the end of the file."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:52085
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Procedure} make-mpv-profile-configuration"
msgstr "Documentazione"

#. type: deffn
#: guix-git/doc/guix.texi:52091
msgid "Return a new instance of @code{mpv-profile-configuration}.  As above, it also supports the @code{#:inherit} argument.  Additionally it supports keyword arguments named after the options of @command{mpv}.  Hence @option{--fullscreen} (or @code{fullscreen} in the configuration file)  becomes @code{#:fullscreen?}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:52097
msgid "Few options are using their aliases instead.  @option{audio} instead of @option{aid}, @option{video} instead of @option{vid}, @option{sub} instead of @option{sid}, @option{screenshot-directory} instead of @option{screenshot-dir} and @option{watch-later-directory} instead of @option{watch-later-dir}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:52099
msgid "Valid values for the fields depend on their type."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52101
#, no-wrap
msgid "Flags"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52103
msgid "The value should be @code{#f} or @code{#t}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52104
#, no-wrap
msgid "Numerical fields"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52107
msgid "Integer and integer64 fields are validated by @code{integer?}, float and double fields by @code{real?}.  Ranges are checked when applicable."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52108
#, no-wrap
msgid "Aspect"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52110
msgid "Same as integer."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52111
#, no-wrap
msgid "ByteSize"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52113
msgid "Same as integer64."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52114
#, no-wrap
msgid "Choice"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52118
msgid "The value should be a symbol representing member of the enumeration.  If the choice has @samp{or ...} part, it can also be value of that alternative type."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52119
#, no-wrap
msgid "@var{type} list"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52121
msgid "The value should be a list of the @var{type}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:52128
msgid "Other types accept strings, with validation of the values where possible (e.g. type @samp{Color} is validated, but type @samp{Audio channels or channel map} is not).  If an option is marked as taking a file, values satisfying @code{file-like?} can also be used."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:52133
msgid "The full list of currently supported keyword arguments is below.  For the types, allowed values and full description please refer to the @command{mpv --list-options} and @uref{https://mpv.io/manual/stable/#options, mpv manual}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:52137
msgid "Only set fields are output to the configuration file.  Accessors are provided for every field, returning either their value or a sentinel object @code{%unset-value} (from @code{(gnu services configuration)})."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:52456
msgid "@code{ab-loop-a}, @code{ab-loop-b}, @code{ab-loop-count}, @code{access-references?}, @code{ad}, @code{ad-lavc-ac3drc}, @code{ad-lavc-downmix?}, @code{ad-lavc-o}, @code{ad-lavc-threads}, @code{ad-queue-enable?}, @code{ad-queue-max-bytes}, @code{ad-queue-max-samples}, @code{ad-queue-max-secs}, @code{af}, @code{audio}, @code{alang}, @code{allow-delayed-peak-detect?}, @code{alsa-buffer-time}, @code{alsa-ignore-chmap?}, @code{alsa-mixer-device}, @code{alsa-mixer-index}, @code{alsa-mixer-name}, @code{alsa-non-interleaved?}, @code{alsa-periods}, @code{alsa-resample?}, @code{ao}, @code{ao-null-broken-delay?}, @code{ao-null-broken-eof?}, @code{ao-null-buffer}, @code{ao-null-channel-layouts}, @code{ao-null-format}, @code{ao-null-latency}, @code{ao-null-outburst}, @code{ao-null-speed}, @code{ao-null-untimed?}, @code{ao-pcm-append?}, @code{ao-pcm-file}, @code{ao-pcm-waveheader?}, @code{archive-exts}, @code{audio-backward-batch}, @code{audio-backward-overlap}, @code{audio-buffer}, @code{audio-channels}, @code{audio-client-name}, @code{audio-delay}, @code{audio-demuxer}, @code{audio-device}, @code{audio-display}, @code{audio-exclusive?}, @code{audio-exts}, @code{audio-fallback-to-null?}, @code{audio-file-auto}, @code{audio-file-paths}, @code{audio-files}, @code{audio-format}, @code{audio-normalize-downmix?}, @code{audio-pitch-correction?}, @code{audio-resample-cutoff}, @code{audio-resample-filter-size}, @code{audio-resample-linear?}, @code{audio-resample-max-output-size}, @code{audio-resample-phase-shift}, @code{audio-reversal-buffer}, @code{audio-samplerate}, @code{audio-spdif}, @code{audio-stream-silence?}, @code{audio-swresample-o}, @code{audio-wait-open}, @code{auto-window-resize?}, @code{autocreate-playlist}, @code{autofit}, @code{autofit-larger}, @code{autofit-smaller}, @code{autoload-files?}, @code{autosync}, @code{background}, @code{background-color}, @code{blend-subtitles}, @code{bluray-device}, @code{border?}, @code{border-background}, @code{brightness}, @code{cache}, @code{cache-on-disk?}, @code{cache-pause?}, @code{cache-pause-initial?}, @code{cache-pause-wait}, @code{cache-secs}, @code{cdda-cdtext?}, @code{cdda-device}, @code{cdda-overlap}, @code{cdda-paranoia}, @code{cdda-sector-size}, @code{cdda-skip?}, @code{cdda-span-a}, @code{cdda-span-b}, @code{cdda-speed}, @code{cdda-toc-offset}, @code{chapter-merge-threshold}, @code{chapter-seek-threshold}, @code{chapters-file}, @code{clipboard-backends}, @code{clipboard-monitor?}, @code{config?}, @code{container-fps-override}, @code{contrast}, @code{cookies?}, @code{cookies-file}, @code{corner-rounding}, @code{correct-downscaling?}, @code{correct-pts?}, @code{cover-art-auto}, @code{cover-art-files}, @code{cover-art-whitelist}, @code{cscale}, @code{cscale-antiring}, @code{cscale-blur}, @code{cscale-clamp}, @code{cscale-param1}, @code{cscale-param2}, @code{cscale-radius}, @code{cscale-taper}, @code{cscale-window}, @code{cscale-wparam}, @code{cscale-wtaper}, @code{cursor-autohide}, @code{cursor-autohide-fs-only?}, @code{deband?}, @code{deband-grain}, @code{deband-iterations}, @code{deband-range}, @code{deband-threshold}, @code{deinterlace}, @code{deinterlace-field-parity}, @code{demuxer}, @code{demuxer-backward-playback-step}, @code{demuxer-cache-dir}, @code{demuxer-cache-unlink-files}, @code{demuxer-cache-wait?}, @code{demuxer-donate-buffer?}, @code{demuxer-hysteresis-secs}, @code{demuxer-lavf-allow-mimetype?}, @code{demuxer-lavf-analyzeduration}, @code{demuxer-lavf-buffersize}, @code{demuxer-lavf-format}, @code{demuxer-lavf-hacks?}, @code{demuxer-lavf-linearize-timestamps}, @code{demuxer-lavf-o}, @code{demuxer-lavf-probe-info}, @code{demuxer-lavf-probescore}, @code{demuxer-lavf-probesize}, @code{demuxer-lavf-propagate-opts?}, @code{demuxer-max-back-bytes}, @code{demuxer-max-bytes}, @code{demuxer-mkv-crop-compat?}, @code{demuxer-mkv-probe-start-time?}, @code{demuxer-mkv-probe-video-duration}, @code{demuxer-mkv-subtitle-preroll}, @code{demuxer-mkv-subtitle-preroll-secs}, @code{demuxer-mkv-subtitle-preroll-secs-index}, @code{demuxer-rawaudio-channels}, @code{demuxer-rawaudio-format}, @code{demuxer-rawaudio-rate}, @code{demuxer-rawvideo-codec}, @code{demuxer-rawvideo-format}, @code{demuxer-rawvideo-fps}, @code{demuxer-rawvideo-h}, @code{demuxer-rawvideo-mp-format}, @code{demuxer-rawvideo-size}, @code{demuxer-rawvideo-w}, @code{demuxer-readahead-secs}, @code{demuxer-seekable-cache}, @code{demuxer-termination-timeout}, @code{demuxer-thread?}, @code{directory-filter-types}, @code{directory-mode}, @code{display-fps-override}, @code{display-tags}, @code{dither}, @code{dither-depth}, @code{dither-size-fruit}, @code{drag-and-drop}, @code{dscale}, @code{dscale-antiring}, @code{dscale-blur}, @code{dscale-clamp}, @code{dscale-param1}, @code{dscale-param2}, @code{dscale-radius}, @code{dscale-taper}, @code{dscale-window}, @code{dscale-wparam}, @code{dscale-wtaper}, @code{dump-stats}, @code{dvbin-card}, @code{dvbin-channel-switch-offset}, @code{dvbin-file}, @code{dvbin-full-transponder?}, @code{dvbin-prog}, @code{dvbin-timeout}, @code{dvd-angle}, @code{dvd-device}, @code{dvd-speed}, @code{edition}, @code{egl-config-id}, @code{egl-output-format}, @code{embeddedfonts?}, @code{end}, @code{error-diffusion}, @code{external-files}, @code{fbo-format}, @code{focus-on}, @code{force-media-title}, @code{force-render?}, @code{force-rgba-osd-rendering?}, @code{force-seekable?}, @code{force-window}, @code{force-window-position?}, @code{framedrop}, @code{frames}, @code{fs-screen}, @code{fs-screen-name}, @code{fullscreen?}, @code{gamma}, @code{gamma-auto?}, @code{gamma-factor}, @code{gamut-mapping-mode}, @code{gapless-audio}, @code{geometry}, @code{glsl-shader-opts}, @code{glsl-shaders}, @code{gpu-api}, @code{gpu-context}, @code{gpu-debug?}, @code{gpu-dumb-mode}, @code{gpu-hwdec-interop}, @code{gpu-shader-cache?}, @code{gpu-shader-cache-dir}, @code{gpu-sw?}, @code{gpu-tex-pad-x}, @code{gpu-tex-pad-y}, @code{hdr-compute-peak}, @code{hdr-contrast-recovery}, @code{hdr-contrast-smoothness}, @code{hdr-peak-decay-rate}, @code{hdr-peak-percentile}, @code{hdr-scene-threshold-high}, @code{hdr-scene-threshold-low}, @code{hidpi-window-scale?}, @code{hls-bitrate}, @code{hr-seek}, @code{hr-seek-demuxer-offset}, @code{hr-seek-framedrop?}, @code{http-header-fields}, @code{http-proxy}, @code{hue}, @code{hwdec}, @code{hwdec-codecs}, @code{hwdec-extra-frames}, @code{hwdec-image-format}, @code{hwdec-software-fallback}, @code{icc-3dlut-size}, @code{icc-cache?}, @code{icc-cache-dir}, @code{icc-force-contrast}, @code{icc-intent}, @code{icc-profile}, @code{icc-profile-auto?}, @code{icc-use-luma?}, @code{idle}, @code{ignore-path-in-watch-later-config?}, @code{image-display-duration}, @code{image-exts}, @code{image-lut}, @code{image-lut-type}, @code{image-subs-video-resolution?}, @code{include}, @code{index}, @code{initial-audio-sync?}, @code{input-ar-delay}, @code{input-ar-rate}, @code{input-builtin-bindings?}, @code{input-builtin-dragging?}, @code{input-commands}, @code{input-conf}, @code{input-cursor?}, @code{input-cursor-passthrough?}, @code{input-default-bindings?}, @code{input-doubleclick-time}, @code{input-dragging-deadzone}, @code{input-ime?}, @code{input-ipc-client}, @code{input-ipc-server}, @code{input-key-fifo-size}, @code{input-media-keys?}, @code{input-preprocess-wheel?}, @code{input-right-alt-gr?}, @code{input-terminal?}, @code{input-test?}, @code{input-touch-emulate-mouse?}, @code{input-vo-keyboard?}, @code{interpolation?}, @code{interpolation-preserve?}, @code{interpolation-threshold}, @code{inverse-tone-mapping?}, @code{jack-autostart?}, @code{jack-connect?}, @code{jack-name}, @code{jack-port}, @code{jack-std-channel-layout}, @code{keep-open}, @code{keep-open-pause?}, @code{keepaspect?}, @code{keepaspect-window?}, @code{lavfi-complex}, @code{length}, @code{libplacebo-opts}, @code{linear-downscaling?}, @code{linear-upscaling?}, @code{load-auto-profiles}, @code{load-commands?}, @code{load-console?}, @code{load-positioning?}, @code{load-scripts?}, @code{load-select?}, @code{load-stats-overlay?}, @code{load-unsafe-playlists?}, @code{log-file}, @code{loop-file}, @code{loop-playlist}, @code{lut}, @code{lut-type}, @code{mc}, @code{media-controls?}, @code{merge-files?}, @code{metadata-codepage}, @code{mf-fps}, @code{mf-type}, @code{monitoraspect}, @code{monitorpixelaspect}, @code{msg-color?}, @code{msg-level}, @code{msg-module?}, @code{msg-time?}, @code{mute?}, @code{native-fs?}, @code{native-keyrepeat?}, @code{native-touch?}, @code{network-timeout}, @code{oac}, @code{oacopts}, @code{ocopy-metadata?}, @code{of}, @code{ofopts}, @code{on-all-workspaces?}, @code{ontop?}, @code{ontop-level}, @code{opengl-check-pattern-a}, @code{opengl-check-pattern-b}, @code{opengl-early-flush}, @code{opengl-es}, @code{opengl-glfinish?}, @code{opengl-pbo?}, @code{opengl-rectangle-textures?}, @code{opengl-swapinterval}, @code{opengl-waitvsync?}, @code{orawts?}, @code{ordered-chapters?}, @code{ordered-chapters-files}, @code{oremove-metadata}, @code{osc?}, @code{osd-align-x}, @code{osd-align-y}, @code{osd-back-color}, @code{osd-bar?}, @code{osd-bar-align-x}, @code{osd-bar-align-y}, @code{osd-bar-h}, @code{osd-bar-marker-min-size}, @code{osd-bar-marker-scale}, @code{osd-bar-marker-style}, @code{osd-bar-outline-size}, @code{osd-bar-w}, @code{osd-blur}, @code{osd-bold?}, @code{osd-border-style}, @code{osd-color}, @code{osd-duration}, @code{osd-font}, @code{osd-font-provider}, @code{osd-font-size}, @code{osd-fonts-dir}, @code{osd-fractions?}, @code{osd-italic?}, @code{osd-justify}, @code{osd-level}, @code{osd-margin-x}, @code{osd-margin-y}, @code{osd-msg1}, @code{osd-msg2}, @code{osd-msg3}, @code{osd-on-seek}, @code{osd-outline-color}, @code{osd-outline-size}, @code{osd-playing-msg}, @code{osd-playing-msg-duration}, @code{osd-playlist-entry}, @code{osd-scale}, @code{osd-scale-by-window?}, @code{osd-selected-color}, @code{osd-selected-outline-color}, @code{osd-shadow-offset}, @code{osd-spacing}, @code{osd-status-msg}, @code{oset-metadata}, @code{ovc}, @code{ovcopts}, @code{panscan}, @code{pause?}, @code{pipewire-buffer}, @code{pipewire-remote}, @code{pipewire-volume-mode}, @code{pitch}, @code{play-direction}, @code{player-operation-mode}, @code{playlist-exts}, @code{playlist-start}, @code{prefetch-playlist?}, @code{profile}, @code{pulse-allow-suspended?}, @code{pulse-buffer}, @code{pulse-host}, @code{pulse-latency-hacks?}, @code{quiet?}, @code{really-quiet?}, @code{rebase-start-time?}, @code{referrer}, @code{replaygain}, @code{replaygain-clip?}, @code{replaygain-fallback}, @code{replaygain-preamp}, @code{reset-on-next-file}, @code{resume-playback?}, @code{resume-playback-check-mtime?}, @code{rtsp-transport}, @code{saturation}, @code{save-position-on-quit?}, @code{save-watch-history?}, @code{scale}, @code{scale-antiring}, @code{scale-blur}, @code{scale-clamp}, @code{scale-param1}, @code{scale-param2}, @code{scale-radius}, @code{scale-taper}, @code{scale-window}, @code{scale-wparam}, @code{scale-wtaper}, @code{scaler-resizes-only?}, @code{screen}, @code{screen-name}, @code{screenshot-avif-encoder}, @code{screenshot-avif-opts}, @code{screenshot-avif-pixfmt}, @code{screenshot-directory}, @code{screenshot-format}, @code{screenshot-high-bit-depth?}, @code{screenshot-jpeg-quality}, @code{screenshot-jpeg-source-chroma?}, @code{screenshot-jxl-distance}, @code{screenshot-jxl-effort}, @code{screenshot-png-compression}, @code{screenshot-png-filter}, @code{screenshot-sw?}, @code{screenshot-tag-colorspace?}, @code{screenshot-template}, @code{screenshot-webp-compression}, @code{screenshot-webp-lossless?}, @code{screenshot-webp-quality}, @code{script-opts}, @code{scripts}, @code{secondary-sid}, @code{secondary-sub-ass-override}, @code{secondary-sub-delay}, @code{secondary-sub-pos}, @code{secondary-sub-visibility?}, @code{sharpen}, @code{show-in-taskbar?}, @code{shuffle?}, @code{sub}, @code{sigmoid-center}, @code{sigmoid-slope}, @code{sigmoid-upscaling?}, @code{slang}, @code{snap-window?}, @code{speed}, @code{spirv-compiler}, @code{sstep}, @code{start}, @code{stop-playback-on-init-failure?}, @code{stop-screensaver}, @code{stream-buffer-size}, @code{stream-dump}, @code{stream-lavf-o}, @code{stream-record}, @code{stretch-dvd-subs?}, @code{stretch-image-subs-to-screen?}, @code{sub-align-x}, @code{sub-align-y}, @code{sub-ass?}, @code{sub-ass-force-margins?}, @code{sub-ass-justify?}, @code{sub-ass-override}, @code{sub-ass-prune-delay}, @code{sub-ass-scale-with-window?}, @code{sub-ass-style-overrides}, @code{sub-ass-styles}, @code{sub-ass-use-video-data}, @code{sub-ass-video-aspect-override}, @code{sub-ass-vsfilter-color-compat}, @code{sub-auto}, @code{sub-auto-exts}, @code{sub-back-color}, @code{sub-blur}, @code{sub-bold?}, @code{sub-border-style}, @code{sub-clear-on-seek?}, @code{sub-codepage}, @code{sub-color}, @code{sub-create-cc-track?}, @code{sub-delay}, @code{sub-demuxer}, @code{sub-file-paths}, @code{sub-files}, @code{sub-filter-jsre}, @code{sub-filter-regex}, @code{sub-filter-regex-enable?}, @code{sub-filter-regex-plain?}, @code{sub-filter-regex-warn?}, @code{sub-filter-sdh?}, @code{sub-filter-sdh-enclosures}, @code{sub-filter-sdh-harder?}, @code{sub-fix-timing?}, @code{sub-font}, @code{sub-font-provider}, @code{sub-font-size}, @code{sub-fonts-dir}, @code{sub-forced-events-only?}, @code{sub-fps}, @code{sub-gauss}, @code{sub-gray?}, @code{sub-hinting}, @code{sub-italic?}, @code{sub-justify}, @code{sub-lavc-o}, @code{sub-line-spacing}, @code{sub-margin-x}, @code{sub-margin-y}, @code{sub-outline-color}, @code{sub-outline-size}, @code{sub-past-video-end?}, @code{sub-pos}, @code{sub-scale}, @code{sub-scale-by-window?}, @code{sub-scale-signs?}, @code{sub-scale-with-window?}, @code{sub-shadow-offset}, @code{sub-shaper}, @code{sub-spacing}, @code{sub-speed}, @code{sub-stretch-durations?}, @code{sub-use-margins?}, @code{sub-visibility?}, @code{sub-vsfilter-bidi-compat?}, @code{subs-fallback}, @code{subs-fallback-forced}, @code{subs-match-os-language?}, @code{subs-with-matching-audio}, @code{swapchain-depth}, @code{sws-allow-zimg?}, @code{sws-bitexact?}, @code{sws-cgb}, @code{sws-chs}, @code{sws-cs}, @code{sws-cvs}, @code{sws-fast?}, @code{sws-lgb}, @code{sws-ls}, @code{sws-scaler}, @code{target-colorspace-hint}, @code{target-contrast}, @code{target-gamut}, @code{target-lut}, @code{target-peak}, @code{target-prim}, @code{target-trc}, @code{taskbar-progress?}, @code{teletext-page}, @code{temporal-dither?}, @code{temporal-dither-period}, @code{term-osd}, @code{term-osd-bar?}, @code{term-osd-bar-chars}, @code{term-playing-msg}, @code{term-status-msg}, @code{term-title}, @code{terminal?}, @code{title}, @code{title-bar?}, @code{tls-ca-file}, @code{tls-cert-file}, @code{tls-key-file}, @code{tls-verify?}, @code{tone-mapping}, @code{tone-mapping-max-boost}, @code{tone-mapping-param}, @code{tone-mapping-visualize?}, @code{track-auto-selection?}, @code{tscale}, @code{tscale-antiring}, @code{tscale-blur}, @code{tscale-clamp}, @code{tscale-param1}, @code{tscale-param2}, @code{tscale-radius}, @code{tscale-taper}, @code{tscale-window}, @code{tscale-wparam}, @code{tscale-wtaper}, @code{untimed?}, @code{use-embedded-icc-profile?}, @code{use-filedir-conf?}, @code{user-agent}, @code{vaapi-device}, @code{vd}, @code{vd-apply-cropping?}, @code{vd-lavc-assume-old-x264?}, @code{vd-lavc-bitexact?}, @code{vd-lavc-check-hw-profile?}, @code{vd-lavc-dr}, @code{vd-lavc-fast?}, @code{vd-lavc-film-grain}, @code{vd-lavc-framedrop}, @code{vd-lavc-o}, @code{vd-lavc-show-all?}, @code{vd-lavc-skipframe}, @code{vd-lavc-skipidct}, @code{vd-lavc-skiploopfilter}, @code{vd-lavc-threads}, @code{vd-queue-enable?}, @code{vd-queue-max-bytes}, @code{vd-queue-max-samples}, @code{vd-queue-max-secs}, @code{vf}, @code{video}, @code{video-align-x}, @code{video-align-y}, @code{video-aspect-method}, @code{video-aspect-override}, @code{video-backward-batch}, @code{video-backward-overlap}, @code{video-crop}, @code{video-exts}, @code{video-latency-hacks?}, @code{video-margin-ratio-bottom}, @code{video-margin-ratio-left}, @code{video-margin-ratio-right}, @code{video-margin-ratio-top}, @code{video-osd?}, @code{video-output-levels}, @code{video-pan-x}, @code{video-pan-y}, @code{video-recenter?}, @code{video-reversal-buffer}, @code{video-rotate}, @code{video-scale-x}, @code{video-scale-y}, @code{video-sync}, @code{video-sync-max-audio-change}, @code{video-sync-max-factor}, @code{video-sync-max-video-change}, @code{video-timing-offset}, @code{video-unscaled}, @code{video-zoom}, @code{vlang}, @code{vo}, @code{vo-image-avif-encoder}, @code{vo-image-avif-opts}, @code{vo-image-avif-pixfmt}, @code{vo-image-format}, @code{vo-image-high-bit-depth?}, @code{vo-image-jpeg-quality}, @code{vo-image-jpeg-source-chroma?}, @code{vo-image-jxl-distance}, @code{vo-image-jxl-effort}, @code{vo-image-outdir}, @code{vo-image-png-compression}, @code{vo-image-png-filter}, @code{vo-image-tag-colorspace?}, @code{vo-image-webp-compression}, @code{vo-image-webp-lossless?}, @code{vo-image-webp-quality}, @code{vo-kitty-alt-screen?}, @code{vo-kitty-cols}, @code{vo-kitty-config-clear?}, @code{vo-kitty-height}, @code{vo-kitty-left}, @code{vo-kitty-rows}, @code{vo-kitty-top}, @code{vo-kitty-use-shm?}, @code{vo-kitty-width}, @code{vo-null-fps}, @code{vo-sixel-alt-screen?}, @code{vo-sixel-buffered?}, @code{vo-sixel-cols}, @code{vo-sixel-config-clear?}, @code{vo-sixel-dither}, @code{vo-sixel-fixedpalette?}, @code{vo-sixel-height}, @code{vo-sixel-left}, @code{vo-sixel-pad-x}, @code{vo-sixel-pad-y}, @code{vo-sixel-reqcolors}, @code{vo-sixel-rows}, @code{vo-sixel-threshold}, @code{vo-sixel-top}, @code{vo-sixel-width}, @code{vo-tct-256?}, @code{vo-tct-algo}, @code{vo-tct-buffering}, @code{vo-tct-height}, @code{vo-tct-width}, @code{vo-vaapi-scaled-osd?}, @code{vo-vaapi-scaling}, @code{vo-vdpau-chroma-deint?}, @code{vo-vdpau-colorkey}, @code{vo-vdpau-composite-detect?}, @code{vo-vdpau-denoise}, @code{vo-vdpau-force-yuv?}, @code{vo-vdpau-fps}, @code{vo-vdpau-hqscaling}, @code{vo-vdpau-output-surfaces}, @code{vo-vdpau-pullup?}, @code{vo-vdpau-queuetime-fs}, @code{vo-vdpau-queuetime-windowed}, @code{vo-vdpau-sharpen}, @code{volume}, @code{volume-gain}, @code{volume-gain-max}, @code{volume-gain-min}, @code{volume-max}, @code{vulkan-async-compute?}, @code{vulkan-async-transfer?}, @code{vulkan-device}, @code{vulkan-display-display}, @code{vulkan-display-mode}, @code{vulkan-display-plane}, @code{vulkan-queue-count}, @code{vulkan-swap-mode}, @code{watch-history-path}, @code{watch-later-directory}, @code{watch-later-options}, @code{wayland-app-id}, @code{wayland-configure-bounds}, @code{wayland-content-type}, @code{wayland-disable-vsync?}, @code{wayland-edge-pixels-pointer}, @code{wayland-edge-pixels-touch}, @code{wayland-internal-vsync}, @code{wayland-present?}, @code{wid}, @code{window-dragging?}, @code{window-maximized?}, @code{window-minimized?}, @code{window-scale}, @code{write-filename-in-watch-later-config?}, @code{x11-bypass-compositor}, @code{x11-name}, @code{x11-netwm}, @code{x11-present}, @code{x11-wid-title?}, @code{xv-adaptor}, @code{xv-buffers}, @code{xv-ck}, @code{xv-ck-method}, @code{xv-colorkey}, @code{xv-port}, @code{ytdl?}, @code{ytdl-format}, @code{ytdl-raw-options}, @code{zimg-dither}, @code{zimg-fast?}, @code{zimg-scaler}, @code{zimg-scaler-chroma}, @code{zimg-scaler-chroma-param-a}, @code{zimg-scaler-chroma-param-b}, @code{zimg-scaler-param-a}, @code{zimg-scaler-param-b}, and @code{zimg-threads}."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:52459 guix-git/doc/guix.texi:52460
#, no-wrap
msgid "Sway window manager"
msgstr "Window manager Sway"

#. type: cindex
#: guix-git/doc/guix.texi:52462
#, fuzzy, no-wrap
#| msgid "Services"
msgid "sway, Home Service"
msgstr "Servizi"

#. type: cindex
#: guix-git/doc/guix.texi:52463
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "sway, configuration"
msgstr "Documentazione"

#. type: Plain text
#: guix-git/doc/guix.texi:52468
msgid "The @code{(gnu home services sway)} module provides @code{home-sway-service-type}, a home service to configure the @uref{https://github.com/swaywm/sway,Sway window manager for Wayland} in a declarative way."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52484
#, no-wrap
msgid ""
"(service home-sway-service-type\n"
"         (sway-configuration\n"
"          (gestures\n"
"           '((swipe:3:down . \"move to scratchpad\")\n"
"             (swipe:3:up   . \"scratchpad show\")))\n"
"          (outputs\n"
"           (list (sway-output\n"
"                  (identifier '*)\n"
"                  (background (file-append sway\n"
"                                           \"\\\n"
"/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png\")))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:52487
msgid "The above example describes a Sway configuration in which"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:52491
msgid "all monitors use a particular wallpaper whose @file{.png} is provided by the @code{sway} package;"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:52494
msgid "swiping down (resp.@: up) with three fingers moves the active window to the scratchpad (resp.@: shows/hides the scratchpad)."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:52501
msgid "This home service only sets up the configuration file and profile packages for Sway.  It does @emph{not} start Sway in any way.  If you want to do so, you might be interested in using @code{greetd-wlgreet-sway-session} instead."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:52505
msgid "The procedure @code{sway-configuration->file} defined below can be used to provide the value for the @emph{optional} @code{sway-configuration} field of @code{greetd-wlgreet-sway-session}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:52507
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Procedure} sway-configuration->file config"
msgstr "Documentazione"

#. type: deffn
#: guix-git/doc/guix.texi:52511
msgid "This procedure takes one argument @code{config}, which must be a @code{sway-configuration} record (defined below), and returns a file-like object representing the serialized configuration."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52513
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-sway-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:52515
msgid "This is a home service type to set up Sway.  It takes care of:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:52518
msgid "providing a @file{~/.config/sway/config} file,"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:52520
msgid "adding Sway-related packages to your profile."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:52523
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} sway-configuration"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:52526
#, fuzzy
#| msgid "Documentation"
msgid "This configuration record describes the Sway configuration (see@ @cite{sway(5)}).  Available fields are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:52528
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{variables} (default: @code{%sway-default-variables})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52532
msgid "The value of this field is an association list in which keys are symbols and values are either strings, G-expressions or file-like objects (@pxref{G-Expressions})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52534
msgid "Example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52540
#, no-wrap
msgid ""
"(variables `((mod . \"Mod4\") ; string\n"
"             (term ; file-append\n"
"              . ,(file-append foot \"/bin/foot\"))\n"
"             (Term ; G-expression\n"
"              . ,#~(string-append #$foot \"/bin/foot\"))))\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:52547
msgid "Default keybindings assume the existence of variables named @code{$mod}, @code{$left}, @code{$right}, @code{$up} and @code{$down}.  If you choose not to define these variables, make sure to remove keybindings referring to them."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52549
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{keybindings} (default: @code{%sway-default-keybindings})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52553
msgid "This field describes keybindings for the @emph{default} mode.  The value is an association list: keys are symbols and values are either strings or G-expressions."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52557
msgid "The following snippet launches the terminal when pressing @kbd{$mod+t} and @kbd{$mod+Shift+t} (assuming that a variable @code{$term} is defined):"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52560
#, no-wrap
msgid ""
"`(($mod+t . ,#~(string-append \"exec \" #$foot \"/bin/foot\"))\n"
"  ($mod+Shift+t . \"exec $term\"))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52562
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{gestures} (default: @code{%sway-default-gestures})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52564
msgid "Similar to the previous field, but for finger-gestures."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52567
msgid "The following snippet allows to navigate through workspaces by swiping right and left with three fingers:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52570
#, no-wrap
msgid ""
"'((swipe:3:right . \"workspace next_on_output\")\n"
"  (swipe:3:left  . \"workspace prev_on_output\"))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52572
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{packages} (default: @code{%sway-default-packages})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52575
msgid "This field describes a list of packages to add to the user profile.  At the moment, the default value only adds @code{sway} to the profile."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52578
msgid "List of @code{sway-input} configuration records (described below)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52579
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{outputs} (default: @code{'()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52581
msgid "List of @code{sway-output} configuration records (described below)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52582
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{bar} (optional @code{sway-bar} record)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52585
msgid "Optional @code{sway-bar} record (described below) to configure a Sway bar."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52586
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{modes} (default: @code{%sway-default-modes})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52591
msgid "List of @code{sway-mode} records (described below) to add modes to the Sway configuration.  The default value @code{%sway-default-modes} adds the ``resize'' mode of the default Sway configuration (as described below)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52592
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{startup+reload-programs} (default: @code{'()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52596
msgid "Programs to execute at startup time @emph{and} after every configuration reload.  The value of this field is a list of strings, G-expressions or file-like objects (@pxref{G-Expressions})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52597
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{startup-programs} (default: @code{%sway-default-startup-programs})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52600
msgid "Programs to execute at startup time.  As above, values of this field are a list of strings, G-expressions or file-like objects."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52605
msgid "The default value, @code{%sway-default-startup-programs}, executes @code{swayidle} in order to lock the screen after 5@ minutes of inactivity (displaying a background distributed with Sway) and turn the screen off after 10@ minutes of inactivity."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52606 guix-git/doc/guix.texi:52653
#: guix-git/doc/guix.texi:52707
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{extra-content} (default: @code{'()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52609
msgid "Lines to add to the configuration file.  The value of this field is a list of strings or G-expressions."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:52612
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} sway-input"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:52617
msgid "@code{sway-input} records describe input blocks (see@ @cite{sway-input(5)}).  For example, the following snippet makes all keyboards use a French layout, in which @kbd{capslock} has been remapped to @kbd{ctrl}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52621
#, no-wrap
msgid ""
"(sway-input (identifier \"type:keyboard\")\n"
"            (layout\n"
"              (keyboard-layout \"fr\" #:options '(\"ctrl:nocaps\"))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:52624
#, fuzzy
#| msgid "Documentation"
msgid "Available fields for @code{sway-input} configuration records are:"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:52626 guix-git/doc/guix.texi:52664
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{identifier} (default: @code{'*})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52630
msgid "Identifier of the input.  The field accepts symbols and strings.  If the @code{identifier} is a symbol, it is inserted as is; if it is a string, it will be quoted in the configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52631
#, no-wrap
msgid "@code{layout} (optional @code{<keyboard-layout>} record)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52635
msgid "Keyboard specific option.  Field specifying the layout to use for the input.  The value must be a @code{<keyboard-layout>} record (@pxref{Keyboard Layout})."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:52639
msgid "@code{(gnu home services sway)} does not re-export the @code{keyboard-layout} procedure."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52641
#, no-wrap
msgid "@code{disable-while-typing} (optional boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52644
msgid "If @code{#t} (resp.@: @code{#f}) enables (resp.@: disables) the ``disable while typing'' option for this input."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52645
#, no-wrap
msgid "@code{disable-while-trackpointing} (optional boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52648
msgid "If @code{#t} (resp.@: @code{#f}), enables (resp.@: disables) the ``disable while track-pointing'' option for this input."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52649
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{tap} (optional boolean)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52652
msgid "Enables or disables the ``tap'' option, which allows clicking by tapping on a touchpad."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52656
msgid "Lines to add to the input block.  The value of this field must a list whose elements are either strings or G-expressions."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:52659
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} sway-output"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:52662
msgid "@code{sway-output} records describe Sway outputs (see@ @cite{sway-output(5)}).  Available fields are:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52668
msgid "Identifier of the monitor.  The field accepts symbols and strings.  If the @code{identifier} is a symbol, it is inserted as is; if it is a string, it will be quoted in the configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52669
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{resolution} (optional string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52671
msgid "This string defines the resolution of the monitor."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52672 guix-git/doc/guix.texi:52762
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{position} (optional)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52675
msgid "The (optional) value of this field must be a @code{point}.  Example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52679
#, no-wrap
msgid ""
"(position\n"
" (point (x 1920)\n"
"        (y 0)))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52681
#, no-wrap
msgid "@code{background} (optional)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52684
msgid "The value of this field describes what wallpaper to use on this output.  The field accepts the following types of values:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:52687
msgid "a string,"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:52689
#, fuzzy
#| msgid "G-expression"
msgid "a G-expression,"
msgstr "espressione-G"

#. type: itemize
#: guix-git/doc/guix.texi:52691
msgid "a file-like object,"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:52696
msgid "a pair.  The first argument of this pair must be a string, a G-expression or a file-like object.  The second element describes how the wallpaper will be displayed.  It must be a symbol among @code{stretch}, @code{fill}, @code{fit}, @code{center} and @code{tile}."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:52699
msgid "If the second element is not specified (@i{i.e.}@: when the value is not a pair), the @code{fill} mode will be used."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:52705
msgid "In order to use an SVG file, you must have @code{librsvg} in your profile (@i{e.g.}@: by adding it in the @code{packages} field of @code{sway-configuration})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52710
msgid "List defining additional lines to add to the output configuration block.  Elements of the list must be either strings or G-expressions."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:52713
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} sway-border-color"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:52715
#, no-wrap
msgid "border"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52717
msgid "Color of the border."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52717
#, no-wrap
msgid "background"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52719
msgid "Color of the background."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52719
#, no-wrap
msgid "text"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52721
msgid "Color of the text."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:52724
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} sway-color"
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:52726
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{background} (optional string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52728
msgid "Background color of the bar."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52729
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{statusline} (optional string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52731
msgid "Text color of the status line."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52732
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{focused-background} (optional string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52734
msgid "Background color of the bar on the currently focused monitor."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52735
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{focused-statusline} (optional string)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52737
msgid "Text color of the statusline on the currently focused monitor."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52738
#, no-wrap
msgid "@code{focused-workspace} (optional @code{sway-border-color})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52740
msgid "Color scheme for focused workspaces."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52741
#, no-wrap
msgid "@code{active-workspace} (optional @code{sway-border-color})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52743
msgid "Color scheme for active workspaces."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52744
#, no-wrap
msgid "@code{inactive-workspace} (optional @code{sway-border-color})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52746
msgid "Color scheme for inactive workspaces."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52747
#, no-wrap
msgid "@code{urgent-workspace} (optional @code{sway-border-color})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52749
msgid "Color scheme for workspaces containing ``urgent windows''."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52750
#, no-wrap
msgid "@code{binding-mode} (optional @code{sway-border-color})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52752
msgid "Color scheme for the binding mode indicator."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:52755
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} sway-bar"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:52757
msgid "Describes the Sway bar (see@ @cite{sway-bar(5)})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52759
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{identifier} (default: @code{'bar0})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52761
msgid "Identifier of the bar.  The value must be a symbol."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52765
msgid "Specify the position of the bar.  Accepted values are @code{'top} or @code{'bottom}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52766
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{hidden-state} (optional)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52769
msgid "Specify the appearance of the bar when it is hidden.  Accepted values are @code{'hide} or @code{'show}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52770
#, no-wrap
msgid "@code{binding-mode-indicator} (optional)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52772
msgid "Boolean enabling or disabling the binding mode indicator."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52773
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{colors} (optional)"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52775
#, fuzzy
#| msgid "Documentation"
msgid "An optional @code{sway-color} configuration record."
msgstr "Documentazione"

#. type: item
#: guix-git/doc/guix.texi:52776
#, no-wrap
msgid "@code{status-command} (optional)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52780
msgid "This field accept strings, G-expressions and executable file-like values.  The default value is a command (string) that prints the date and time every second."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52783
msgid "Each line printed on @code{stdout} by this command (or script) will be displayed on the status area of the bar."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52785
msgid "Below are a few examples using:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:52788
msgid "a string: @code{\"while date +'%Y-%m-%d %X'; do sleep 1; done\"},"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:52790
msgid "a G-exp:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52794
#, no-wrap
msgid ""
"#~(string-append \"while \"\n"
"                 #$coreutils \"/bin/date\"\n"
"                 \" +'%Y-%m-%d %X'; do sleep 1; done\")\n"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:52797
msgid "an executable file:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52810
#, no-wrap
msgid ""
"(program-file\n"
" \"sway-bar-status\"\n"
" #~(begin\n"
"     (use-modules (ice-9 format)\n"
"                  (srfi srfi-19))\n"
"     (let loop ()\n"
"       (let* ((date (date->string\n"
"                     (current-date)\n"
"                     \"~d/~m/~Y (~a) • ~H:~M:~S\")))\n"
"         (format #t \"~a~%~!\" date)\n"
"         (sleep 1)\n"
"         (loop)))))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52813 guix-git/doc/guix.texi:52855
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{mouse-bindings} (default: @code{'()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52816
msgid "This field accepts an associative list.  Keys are integers describing mouse events.  Values can either be strings or G-expressions."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52824
msgid "The module @code{(gnu home services sway)} exports constants @code{%ev-code-mouse-left}, @code{%ev-code-mouse-right} and @code{%ev-code-mouse-scroll-click} whose values are integers corresponding to left, right and scroll click respectively.  For example, with @code{(mouse-bindings `((,%ev-code-mouse-left . \"exec $term\")))}, left clicks in the status bar open the terminal (assuming that the variable @code{$term} is bound to a terminal)."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:52827
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} sway-mode"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:52830
msgid "Describes a Sway mode (see@ @cite{sway(5)}).  For example, the following snippet defines the resize mode of the default Sway configuration:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:52844
#, no-wrap
msgid ""
"(sway-mode\n"
" (mode-name \"resize\")\n"
" (keybindings\n"
"  '(($left  . \"resize shrink width 10px\")\n"
"    ($right . \"resize grow width 10px\")\n"
"    ($down  . \"resize grow height 10px\")\n"
"    ($up    . \"resize shrink height 10px\")\n"
"    (Left   . \"resize shrink width 10px\")\n"
"    (Right  . \"resize grow width 10px\")\n"
"    (Down   . \"resize grow height 10px\")\n"
"    (Up     . \"resize shrink height 10px\")\n"
"    (Return . \"mode \\\"default\\\"\")\n"
"    (Escape . \"mode \\\"default\\\"\"))))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52847
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{mode-name} (default: @code{\"default\"})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52849
msgid "Name of the mode.  This field accepts strings."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52850
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{keybindings} (default: @code{'()})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:52854
msgid "This field describes keybindings.  The value is an association list: keys are symbols and values are either strings or G-expressions, as above."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52859
msgid "Ditto, but keys are mouse events (integers).  Constants @code{%ev-code-mouse-*} described above can be used as helpers to define mouse bindings."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:52862 guix-git/doc/guix.texi:52863
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Networking Home Services"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:52867
msgid "This section lists services somewhat networking-related that you may use with Guix Home."
msgstr ""

#. type: subheading
#: guix-git/doc/guix.texi:52868
#, fuzzy, no-wrap
#| msgid "Networking services."
msgid "Syncthing Service"
msgstr "Servizi di rete."

#. type: Plain text
#: guix-git/doc/guix.texi:52875
msgid "The @code{(gnu home services syncthing)} module provides a service to set up the @uref{Syncthing, https://syncthing.net} continuous file backup service."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52876
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-syncthing-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:52881
msgid "This is the service type for the @command{syncthing} daemon; it is the Home counterpart of the @code{syncthing-service-type} system service (@pxref{Networking Services, @code{syncthing-service-type}}).  The value for this service type is a @command{syncthing-configuration}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52883
msgid "Here is how you would set it up with the default configuration:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52886
#, fuzzy, no-wrap
#| msgid "Services"
msgid "(service home-syncthing-service-type)\n"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:52890
msgid "For a custom configuration, wrap you @code{syncthing-configuration} in @code{for-home}, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52895
#, no-wrap
msgid ""
"(service home-syncthing-service-type\n"
"         (for-home\n"
"          (syncthing-configuration (logflags 5))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52900
msgid "For details about @code{syncthing-configuration}, check out the documentation of the system service (@pxref{Networking Services, @code{syncthing-service-type}})."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:52903 guix-git/doc/guix.texi:52904
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Miscellaneous Home Services"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:52907
msgid "This section lists Home services that lack a better place."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:52908
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Beets Service"
msgstr "Servizi"

#. type: cindex
#: guix-git/doc/guix.texi:52910
#, fuzzy, no-wrap
#| msgid "Services"
msgid "Beets service, for Home"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:52913
msgid "The @code{(gnu home services music)} module provides the following service:"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52914
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-beets-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:52919
msgid "@uref{https://beets.io, Beets} is a music file and metadata manager that can be used via its command-line interface, @command{beet}. Beets requires a YAML configuration file and this Guix Home service is to create such file."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:52922
msgid "The service can be used as follows:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52926
#, no-wrap
msgid ""
"(service home-beets-service-type\n"
"         (home-beets-configuration (directory \"/home/alice/music\")))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:52930
msgid "Additional options can be specified via the service wild-card field @code{extra-options}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52938
#, no-wrap
msgid ""
"(service home-beets-service-type\n"
"         (home-beets-configuration\n"
"          (directory \"/home/alice/music\")\n"
"          (extra-options '(\"\n"
"import:\n"
"  move: yes\"))))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:52942
#, fuzzy, no-wrap
#| msgid "Services"
msgid "dictionary service, for Home"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:52944
msgid "The @code{(gnu home services dict)} module provides the following service:"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52945
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-dicod-service-type"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:52957
msgid "This service is a direct mapping of the @code{dicod-service-type} system service (@pxref{Miscellaneous Services, Dictionary Service}).  You can use it like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52960
#, fuzzy, no-wrap
#| msgid "Services"
msgid "(service home-dicod-service-type)\n"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:52965
msgid "You may specify a custom configuration by providing a @code{dicod-configuration} record, exactly like for @code{dicod-service-type}, but wrapping it in @code{for-home}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52970
#, no-wrap
msgid ""
"(service home-dicod-service-type\n"
"         (for-home\n"
"          (dicod-configuration @dots{})))\n"
msgstr ""

#. type: subheading
#: guix-git/doc/guix.texi:52972
#, fuzzy, no-wrap
#| msgid "Services"
msgid "ReadyMedia Service"
msgstr "Servizi"

#. type: cindex
#: guix-git/doc/guix.texi:52974
#, fuzzy, no-wrap
#| msgid "Services"
msgid "ReadyMedia, DLNA/UPnP Service"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:52979
msgid "The @code{(gnu home services upnp)} module provides a service to set up the @uref{https://minidlna.sourceforge.net/, ReadyMedia} @acronym{DLNA, Digital Living Network Alliance} @acronym{UPnP, Universal Plug and Play} media server."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52980
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-readymedia-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:52985
msgid "This is the service type for the @command{minidlnad} daemon; it is the Home counterpart of the @code{readymedia-service-type} system service (@pxref{Miscellaneous Services, @code{readymedia-service-type}}).  The value for this service type is a @code{readymedia-configuration}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:52989
msgid "The service can be used with a @code{readymedia-configuration} wrapped in @code{for-home} like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:53003
#, no-wrap
msgid ""
"(service home-readymedia-service-type\n"
"         (for-home\n"
"          (readymedia-configuration\n"
"            (media-directories\n"
"             (list (readymedia-directory\n"
"                     (path \"/path/to/media/audio\")\n"
"                     (types '(A)))\n"
"                   (readymedia-directory\n"
"                     (path \"/path/to/media/video\")\n"
"                     (types '(V)))\n"
"                   (readymedia-directory\n"
"                     (path \"/path/to/media/misc\")))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53008
msgid "For details about @code{readymedia-configuration}, check out the documentation of the system service (@pxref{Miscellaneous Services, @code{readymedia-service-type}})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:53011
#, fuzzy, no-wrap
#| msgid "Services"
msgid "OCI-backed, for Home"
msgstr "Servizi"

#. type: Plain text
#: guix-git/doc/guix.texi:53013
msgid "The @code{(gnu home services containers)} module provides the following service:"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53014
#, fuzzy, no-wrap
#| msgid "Services"
msgid "home-oci-service-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:53017
msgid "This is the type of the service that allows to manage your OCI containers with the same consistent interface you use for your other Home Shepherd services."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53022
msgid "This service is a direct mapping of the @code{oci-service-type} system service (@pxref{Miscellaneous Services, OCI backed services}).  You can use it like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:53026
#, no-wrap
msgid ""
"(use-modules (gnu services containers)\n"
"             (gnu home services containers))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:53065
#, no-wrap
msgid ""
"(simple-service 'home-oci-provisioning\n"
"                home-oci-service-type\n"
"                (oci-extension\n"
"                  (volumes\n"
"                    (list\n"
"                      (oci-volume-configuration (name \"prometheus\"))\n"
"                      (oci-volume-configuration (name \"grafana\"))))\n"
"                  (networks\n"
"                    (list\n"
"                      (oci-network-configuration (name \"monitoring\"))))\n"
"                  (containers\n"
"                   (list\n"
"                    (oci-container-configuration\n"
"                     (network \"monitoring\")\n"
"                     (image\n"
"                      (oci-image\n"
"                        (repository \"guile\")\n"
"                        (tag \"3\")\n"
"                        (value (specifications->manifest '(\"guile\")))\n"
"                        (pack-options '(#:symlinks ((\"/bin/guile\" -> \"bin/guile\"))\n"
"                                        #:max-layers 2))))\n"
"                     (entrypoint \"/bin/guile\")\n"
"                     (command\n"
"                      '(\"-c\" \"(display \\\"hello!\\n\\\")\")))\n"
"                    (oci-container-configuration\n"
"                      (image \"prom/prometheus\")\n"
"                      (network \"monitoring\")\n"
"                      (ports\n"
"                       '((\"9000\" . \"9000\")\n"
"                         (\"9090\" . \"9090\")))\n"
"                      (volumes\n"
"                       (list\n"
"                        '((\"prometheus\" . \"/var/lib/prometheus\")))))\n"
"                    (oci-container-configuration\n"
"                      (image \"grafana/grafana:10.0.1\")\n"
"                      (network \"monitoring\")\n"
"                      (volumes\n"
"                       '((\"grafana:/var/lib/grafana\"))))))))\n"
"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53071
msgid "You may specify a custom configuration by providing a @code{oci-configuration} record, exactly like for @code{oci-service-type}, but wrapping it in @code{for-home}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:53076
#, no-wrap
msgid ""
"(use-modules (gnu services)\n"
"             (gnu services containers)\n"
"             (gnu home services containers))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:53082
#, no-wrap
msgid ""
"(service home-oci-service-type\n"
"         (for-home\n"
"          (oci-configuration\n"
"           (runtime 'podman)\n"
"           (verbose? #t))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:53121
#, no-wrap
msgid ""
"(simple-service 'home-oci-provisioning\n"
"                home-oci-service-type\n"
"                (oci-extension\n"
"                  (volumes\n"
"                    (list\n"
"                      (oci-volume-configuration (name \"prometheus\"))\n"
"                      (oci-volume-configuration (name \"grafana\"))))\n"
"                  (networks\n"
"                    (list\n"
"                      (oci-network-configuration (name \"monitoring\"))))\n"
"                  (containers\n"
"                   (list\n"
"                    (oci-container-configuration\n"
"                     (network \"monitoring\")\n"
"                     (image\n"
"                      (oci-image\n"
"                        (repository \"guile\")\n"
"                        (tag \"3\")\n"
"                        (value (specifications->manifest '(\"guile\")))\n"
"                        (pack-options '(#:symlinks ((\"/bin/guile\" -> \"bin/guile\"))\n"
"                                        #:max-layers 2))))\n"
"                     (entrypoint \"/bin/guile\")\n"
"                     (command\n"
"                      '(\"-c\" \"(display \\\"hello!\\n\\\")\")))\n"
"                    (oci-container-configuration\n"
"                      (image \"prom/prometheus\")\n"
"                      (network \"monitoring\")\n"
"                      (ports\n"
"                       '((\"9000\" . \"9000\")\n"
"                         (\"9090\" . \"9090\")))\n"
"                      (volumes\n"
"                       (list\n"
"                        '((\"prometheus\" . \"/var/lib/prometheus\")))))\n"
"                    (oci-container-configuration\n"
"                      (image \"grafana/grafana:10.0.1\")\n"
"                      (network \"monitoring\")\n"
"                      (volumes\n"
"                       '((\"grafana:/var/lib/grafana\"))))))))\n"
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:53124
#, no-wrap
msgid "Invoking @command{guix home}"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:53126
#, no-wrap
msgid "guix home"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53131
msgid "Once you have written a home environment declaration (@pxref{Declaring the Home Environment,,,,}, it can be @dfn{instantiated} using the @command{guix home} command.  The synopsis is:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53134
#, no-wrap
msgid "guix home @var{options}@dots{} @var{action} @var{file}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53141
msgid "@var{file} must be the name of a file containing a @code{home-environment} declaration.  @var{action} specifies how the home environment is instantiated, but there are few auxiliary actions which don't instantiate it.  Currently the following values are supported:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53146
msgid "Display available home service type definitions that match the given regular expressions, sorted by relevance:"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:53148
#, no-wrap
msgid "shell-profile"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53159
#, no-wrap
msgid ""
"$ guix home search shell\n"
"name: home-shell-profile\n"
"location: gnu/home/services/shells.scm:100:2\n"
"extends: home-files\n"
"description: Create `~/.profile', which is used for environment initialization of POSIX compliant login shells.\n"
"+ This service type can be extended with a list of file-like objects.\n"
"relevance: 6\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53165
#, no-wrap
msgid ""
"name: home-fish\n"
"location: gnu/home/services/shells.scm:640:2\n"
"extends: home-files home-profile\n"
"description: Install and configure Fish, the friendly interactive shell.\n"
"relevance: 3\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53171
#, no-wrap
msgid ""
"name: home-zsh\n"
"location: gnu/home/services/shells.scm:290:2\n"
"extends: home-files home-profile\n"
"description: Install and configure Zsh.\n"
"relevance: 1\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53177
#, no-wrap
msgid ""
"name: home-bash\n"
"location: gnu/home/services/shells.scm:508:2\n"
"extends: home-files home-profile\n"
"description: Install and configure GNU Bash.\n"
"relevance: 1\n"
"\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53184
msgid "As for @command{guix search}, the result is written in @code{recutils} format, which makes it easy to filter the output (@pxref{Top, GNU recutils databases,, recutils, GNU recutils manual})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53189
msgid "Spawn a shell in an isolated environment---a @dfn{container}---containing your home as specified by @var{file}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53192
msgid "For example, this is how you would start an interactive shell in a container with your home:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53200
msgid "This is a throw-away container where you can lightheartedly fiddle with files; any changes made within the container, any process started---all this disappears as soon as you exit that shell."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53202
msgid "As with @command{guix shell}, several options control that container:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53207
msgid "Enable networking within the container (it is disabled by default)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53214
msgid "As with @command{guix shell}, make directory @var{source} of the host system available as @var{target} inside the container---read-only if you pass @option{--expose}, and writable if you pass @option{--share} (@pxref{Invoking guix shell, @option{--expose} and @option{--share}})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53220
msgid "Additionally, you can run a command in that container, instead of spawning an interactive shell.  For instance, here is how you would check which Shepherd services are started in a throw-away home container:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53223
#, no-wrap
msgid "guix home container config.scm -- herd status\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53227
msgid "The command to run in the container must come after @code{--} (double hyphen)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53232
msgid "Edit or view the definition of the given Home service types."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53236
msgid "For example, the command below opens your editor, as specified by the @env{EDITOR} environment variable, on the definition of the @code{home-mcron} service type:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53239
#, no-wrap
msgid "guix home edit home-mcron\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53249
msgid "Build the home environment described in @var{file}, and switch to it.  Switching means that the activation script will be evaluated and (in basic scenario) symlinks to configuration files generated from @code{home-environment} declaration will be created in @file{~}.  If the file with the same path already exists in home folder it will be moved to @file{~/@var{timestamp}-guix-home-legacy-configs-backup}, where @var{timestamp} is a current UNIX epoch time."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:53254
msgid "It is highly recommended to run @command{guix pull} once before you run @command{guix home reconfigure} for the first time (@pxref{Invoking guix pull})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53261
msgid "This effects all the configuration specified in @var{file}.  The command starts Shepherd services specified in @var{file} that are not currently running; if a service is currently running, this command will arrange for it to be upgraded the next time it is stopped (e.g.@: by @code{herd stop @var{service}} or @code{herd restart @var{service}})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53267
msgid "This command creates a new generation whose number is one greater than the current generation (as reported by @command{guix home list-generations}).  If that generation already exists, it will be overwritten.  This behavior mirrors that of @command{guix package} (@pxref{Invoking guix package})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:53268
#, no-wrap
msgid "provenance tracking, of the home environment"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53273
msgid "Upon completion, the new home is deployed under @file{~/.guix-home}.  This directory contains @dfn{provenance meta-data}: the list of channels in use (@pxref{Channels}) and @var{file} itself, when available.  You can view the provenance information by running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53276
#, no-wrap
msgid "guix home describe\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53282
msgid "This information is useful should you later want to inspect how this particular generation was built.  In fact, assuming @var{file} is self-contained, you can later rebuild generation @var{n} of your home environment with:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53288
#, no-wrap
msgid ""
"guix time-machine \\\n"
"  -C /var/guix/profiles/per-user/@var{USER}/guix-home-@var{n}-link/channels.scm -- \\\n"
"  home reconfigure \\\n"
"  /var/guix/profiles/per-user/@var{USER}/guix-home-@var{n}-link/configuration.scm\n"
"\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53293
msgid "You can think of it as some sort of built-in version control! Your home is not just a binary artifact: @emph{it carries its own source}."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:53299
msgid "If you're using Guix System, @ref{guix-home-service-type, @code{guix-home-service-type}}, on how to embed your home configuration in your system configuration such that @command{guix system reconfigure} deploys both your system and your home."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:53302
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "home generations"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:53305
msgid "Switch to an existing home generation.  This action atomically switches the home profile to the specified home generation."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53309
msgid "The target generation can be specified explicitly by its generation number.  For example, the following invocation would switch to home generation 7:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53312
#, no-wrap
msgid "guix home switch-generation 7\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53323
#, no-wrap
msgid "guix home switch-generation -- -1\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53332
msgid "Switch to the preceding home generation.  This is the inverse of @command{reconfigure}, and it is exactly the same as invoking @command{switch-generation} with an argument of @code{-1}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:53334
#, no-wrap
msgid "deleting home generations"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53339
msgid "Delete home generations, making them candidates for garbage collection (@pxref{Invoking guix gc}, for information on how to run the ``garbage collector'')."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53343
msgid "This works in the same way as @samp{guix package --delete-generations} (@pxref{Invoking guix package, @option{--delete-generations}}).  With no arguments, all home generations but the current one are deleted:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53346
#, no-wrap
msgid "guix home delete-generations\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53350
msgid "You can also select the generations you want to delete.  The example below deletes all the home generations that are more than two months old:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53353
#, no-wrap
msgid "guix home delete-generations 2m\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53359
msgid "Build the derivation of the home environment, which includes all the configuration files and programs needed.  This action does not actually install anything."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53363
msgid "Describe the current home generation: its file name, as well as provenance information when available."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53370
msgid "To show installed packages in the current home generation's profile, the @code{--list-installed} flag is provided, with the same syntax that is used in @command{guix package --list-installed} (@pxref{Invoking guix package}).  For instance, the following command shows a table of all the packages with ``emacs'' in their name that are installed in the current home generation's profile:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53373
#, no-wrap
msgid "guix home describe --list-installed=emacs\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53380
msgid "List a summary of each generation of the home environment available on disk, in a human-readable way.  This is similar to the @option{--list-generations} option of @command{guix package} (@pxref{Invoking guix package})."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53388
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "guix home list-generations 10d\n"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:53394
msgid "The @code{--list-installed} flag may also be specified, with the same syntax that is used in @command{guix home describe}.  This may be helpful if trying to determine when a package was added to the home profile."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53395
#, no-wrap
msgid "import"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53402
msgid "Generate a @dfn{home environment} from the packages in the default profile and configuration files found in the user's home directory.  The configuration files will be copied to the specified directory, and a @file{home-configuration.scm} will be populated with the home environment.  Note that not every home service that exists is supported (@pxref{Home Services})."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53406
#, no-wrap
msgid ""
"$ guix home import ~/guix-config\n"
"guix home: '/home/alice/guix-config' populated with all the Home configuration files\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53412
msgid "And there's more! @command{guix home} also provides the following sub-commands to visualize how the services of your home environment relate to one another:"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:53414
#, no-wrap
msgid "service extension graph, of a home environment"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53422
msgid "Emit to standard output the @dfn{service extension graph} of the home environment defined in @var{file} (@pxref{Service Composition}, for more information on service extensions).  By default the output is in Dot/Graphviz format, but you can choose a different format with @option{--graph-backend}, as with @command{guix graph} (@pxref{Invoking guix graph, @option{--backend}}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53427
#, no-wrap
msgid "guix home extension-graph @var{file} | xdot -\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:53431
#, no-wrap
msgid "Shepherd dependency graph, for a home environment"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53436
msgid "Emit to standard output the @dfn{dependency graph} of shepherd services of the home environment defined in @var{file}.  @xref{Shepherd Services}, for more information and for an example graph."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53452
msgid "Consider the home-environment @var{expr} evaluates to.  This is an alternative to specifying a file which evaluates to a home environment."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53455
msgid "Instruct @command{guix home reconfigure} to allow system downgrades."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53462
msgid "Just like @command{guix system}, @command{guix home reconfigure}, by default, prevents you from downgrading your home to older or unrelated revisions compared to the channel revisions that were used to deploy it---those shown by @command{guix home describe}.  Using @option{--allow-downgrades} allows you to bypass that check, at the risk of downgrading your home---be careful!"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:53468
#, no-wrap
msgid "documentation, searching for"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:53469
#, no-wrap
msgid "searching for documentation"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:53470
#, no-wrap
msgid "Info, documentation format"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:53471
#, no-wrap
msgid "man pages"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:53472
#, no-wrap
msgid "manual pages"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53479
msgid "In most cases packages installed with Guix come with documentation.  There are two main documentation formats: ``Info'', a browsable hypertext format used for GNU software, and ``manual pages'' (or ``man pages''), the linear documentation format traditionally found on Unix.  Info manuals are accessed with the @command{info} command or with Emacs, and man pages are accessed using @command{man}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53483
msgid "You can look for documentation of software installed on your system by keyword.  For example, the following command searches for information about ``TLS'' in Info manuals:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53491
#, no-wrap
msgid ""
"$ info -k TLS\n"
"\"(emacs)Network Security\" -- STARTTLS\n"
"\"(emacs)Network Security\" -- TLS\n"
"\"(gnutls)Core TLS API\" -- gnutls_certificate_set_verify_flags\n"
"\"(gnutls)Core TLS API\" -- gnutls_certificate_set_verify_function\n"
"@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53497
msgid "The command below searches for the same keyword in man pages@footnote{The database searched by @command{man -k} is only created in profiles that contain the @code{man-db} package.}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53503
#, no-wrap
msgid ""
"$ man -k TLS\n"
"SSL (7)              - OpenSSL SSL/TLS library\n"
"certtool (1)         - GnuTLS certificate tool\n"
"@dots {}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53509
msgid "These searches are purely local to your computer so you have the guarantee that documentation you find corresponds to what you have actually installed, you can access it off-line, and your privacy is respected."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53512
msgid "Once you have these results, you can view the relevant documentation by running, say:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53515
#, no-wrap
msgid "$ info \"(gnutls)Core TLS API\"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53519
msgid "or:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53522
#, no-wrap
msgid "$ man certtool\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53530
msgid "Info manuals contain sections and indices as well as hyperlinks like those found in Web pages.  The @command{info} reader (@pxref{Top, Info reader,, info-stnd, Stand-alone GNU Info}) and its Emacs counterpart (@pxref{Misc Help,,, emacs, The GNU Emacs Manual}) provide intuitive key bindings to navigate manuals.  @xref{Getting Started,,, info, Info: An Introduction}, for an introduction to Info navigation."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53539
msgid "The packages and systems built by Guix are intended, like most computer programs, to run on a CPU with a specific instruction set, and under a specific operating system.  Those programs are often also targeting a specific kernel and system library.  Those constraints are captured by Guix in @code{platform} records."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:53546
#, no-wrap
msgid "@code{platform} Reference"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53552
msgid "The @code{platform} data type describes a @dfn{platform}: an @acronym{ISA, instruction set architecture}, combined with an operating system and possibly additional system-wide settings such as the @acronym{ABI, application binary interface}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:53553
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} platform"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:53555
msgid "This is the data type representing a platform."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53561
msgid "This field specifies the platform's GNU triplet as a string (@pxref{Specifying Target Triplets, GNU configuration triplets,, autoconf, Autoconf})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53565
msgid "This string is the system type as it is known to Guix and passed, for instance, to the @option{--system} option of most commands."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53569
msgid "It usually has the form @code{\"@var{cpu}-@var{kernel}\"}, where @var{cpu} is the target CPU and @var{kernel} the target operating system kernel."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53573
msgid "It can be for instance @code{\"aarch64-linux\"} or @code{\"armhf-linux\"}.  You will encounter system types when you perform native builds (@pxref{Native Builds})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53574
#, no-wrap
msgid "@code{linux-architecture} (default: @code{#false})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53578
msgid "This optional string field is only relevant if the kernel is Linux.  In that case, it corresponds to the ARCH variable used when building Linux, @code{\"mips\"} for instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53579
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "@code{rust-target} (default: @code{#false})"
msgstr "Documentazione"

#. type: table
#: guix-git/doc/guix.texi:53583
msgid "This optional string field is used to determine which rust target is best supported by this platform.  For example, the base level system targeted by @code{armhf-linux} system is closest to @code{armv7-unknown-linux-gnueabihf}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:53584
#, no-wrap
msgid "glibc-dynamic-linker"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53588
msgid "This field is the name of the GNU C Library dynamic linker for the corresponding system, as a string.  It can be @code{\"/lib/ld-linux-armhf.so.3\"}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53597
msgid "The @code{(guix platforms @dots{})} modules export the following variables, each of which is bound to a @code{platform} record."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53598
#, no-wrap
msgid "armv7-linux"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53600
msgid "Platform targeting ARM v7 CPU running GNU/Linux."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53604
msgid "Platform targeting ARM v8 CPU running GNU/Linux."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53606
#, no-wrap
msgid "loongarch64-linux"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53608
msgid "Platform targeting loongarch 64-bit CPU running GNU/Linux."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53610
#, no-wrap
msgid "mips64-linux"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53612
msgid "Platform targeting MIPS little-endian 64-bit CPU running GNU/Linux."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53614
#, no-wrap
msgid "powerpc-linux"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53616
msgid "Platform targeting PowerPC big-endian 32-bit CPU running GNU/Linux."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53620
msgid "Platform targeting PowerPC little-endian 64-bit CPU running GNU/Linux."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53624
msgid "Platform targeting RISC-V 64-bit CPU running GNU/Linux."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53628
msgid "Platform targeting x86 CPU running GNU/Linux."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53632
msgid "Platform targeting x86 64-bit CPU running GNU/Linux."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53634
#, no-wrap
msgid "x86_64-linux-x32"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53637
msgid "Platform targeting x86 64-bit CPU running GNU/Linux with the run-time using the X32 ABI."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53639
#, no-wrap
msgid "i686-mingw"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53642
msgid "Platform targeting x86 CPU running Windows, with run-time support from MinGW."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53644
#, no-wrap
msgid "x86_64-mingw"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53647
msgid "Platform targeting x86 64-bit CPU running Windows, with run-time support from MinGW."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53652
msgid "Platform targeting x86 CPU running GNU/Hurd (also referred to as ``GNU'')."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53654
#, no-wrap
msgid "avr"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53657
msgid "Platform targeting AVR CPUs without an operating system, with run-time support from AVR Libc."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53659
#, no-wrap
msgid "or1k-elf"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53662
msgid "Platform targeting OpenRISC 1000 CPU without an operating system and without a C standard library."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53664
#, no-wrap
msgid "xtensa-ath9k-elf"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53667
msgid "Platform targeting Xtensa CPU used in the Qualcomm Atheros AR7010 and AR9271 USB 802.11n @acronym{NICs, Network Interface Controllers}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:53672
#, no-wrap
msgid "system images"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53684
msgid "When it comes to installing Guix System for the first time on a new machine, you can basically proceed in three different ways.  The first one is to use an existing operating system on the machine to run the @command{guix system init} command (@pxref{Invoking guix system}).  The second one, is to produce an installation image (@pxref{Building the Installation Image}). This is a bootable system which role is to eventually run @command{guix system init}.  Finally, the third option would be to produce an image that is a direct instantiation of the system you wish to run.  That image can then be copied on a bootable device such as an USB drive or a memory card.  The target machine would then directly boot from it, without any kind of installation procedure."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53693
msgid "The @command{guix system image} command is able to turn an operating system definition into a bootable image.  This command supports different image types, such as @code{mbr-hybrid-raw}, @code{iso9660} and @code{docker}.  Any modern @code{x86_64} machine will probably be able to boot from an @code{iso9660} image.  However, there are a few machines out there that require specific image types.  Those machines, in general using @code{ARM} processors, may expect specific partitions at specific offsets."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53696
msgid "This chapter explains how to define customized system images and how to turn them into actual bootable images."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53709
msgid "The @code{image} record, described right after, allows you to define a customized bootable system image."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:53710
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} image"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:53712
msgid "This is the data type representing a system image."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53714
#, no-wrap
msgid "@code{name} (default: @code{#false})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53717
msgid "The image name as a symbol, @code{'my-iso9660} for instance.  The name is optional and it defaults to @code{#false}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53720
msgid "The image format as a symbol.  The following formats are supported:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53722
#, no-wrap
msgid "@code{disk-image}, a raw disk image composed of one or multiple"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:53724
msgid "partitions."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53725
#, no-wrap
msgid "@code{compressed-qcow2}, a compressed qcow2 image composed of"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:53727
msgid "one or multiple partitions."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53728
#, no-wrap
msgid "@code{docker}, a Docker image."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53730
#, no-wrap
msgid "@code{iso9660}, an ISO-9660 image."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53732
#, no-wrap
msgid "@code{tarball}, a tar.gz image archive."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53734
#, no-wrap
msgid "@code{wsl2}, a WSL2 image."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53738
#, no-wrap
msgid "@code{platform} (default: @code{#false})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53742
msgid "The @code{platform} record the image is targeting (@pxref{Platforms}), @code{aarch64-linux} for instance.  By default, this field is set to @code{#false} and the image will target the host platform."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53743 guix-git/doc/guix.texi:53805
#, no-wrap
msgid "@code{size} (default: @code{'guess})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53747
msgid "The image size in bytes or @code{'guess}.  The @code{'guess} symbol, which is the default, means that the image size will be inferred based on the image content."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53750
msgid "The image's @code{operating-system} record that is instantiated."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53751
#, no-wrap
msgid "@code{partition-table-type} (default: @code{'mbr})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53754
msgid "The image partition table type as a symbol.  Possible values are @code{'mbr} and @code{'gpt}.  It default to @code{'mbr}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53755
#, no-wrap
msgid "@code{partitions} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53758
msgid "The image partitions as a list of @code{partition} records (@pxref{partition Reference})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53759
#, no-wrap
msgid "@code{compression?} (default: @code{#true})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53763
msgid "Whether the image content should be compressed, as a boolean.  It defaults to @code{#true} and only applies to @code{'iso9660} image formats."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53764
#, no-wrap
msgid "@code{volatile-root?} (default: @code{#true})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53766
msgid "Whether the image root partition should be made volatile, as a boolean."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53771
msgid "This is achieved by using a RAM backed file system (overlayfs) that is mounted on top of the root partition by the initrd.  It defaults to @code{#true}.  When set to @code{#false}, the image root partition is mounted as read-write partition by the initrd."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53772
#, no-wrap
msgid "@code{shared-store?} (default: @code{#false})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53779
msgid "Whether the image's store should be shared with the host system, as a boolean.  This can be useful when creating images dedicated to virtual machines.  When set to @code{#false}, which is the default, the image's @code{operating-system} closure is copied to the image.  Otherwise, when set to @code{#true}, it is assumed that the host store will be made available at boot, using a @code{9p} mount for instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53780
#, no-wrap
msgid "@code{shared-network?} (default: @code{#false})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53784
msgid "Whether to use the host network interfaces within the image, as a boolean.  This is only used for the @code{'docker} image format.  It defaults to @code{#false}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53785
#, no-wrap
msgid "@code{substitutable?} (default: @code{#true})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53788
msgid "Whether the image derivation should be substitutable, as a boolean.  It defaults to @code{true}."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:53797
#, no-wrap
msgid "@code{partition} Reference"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53800
msgid "In @code{image} record may contain some partitions."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:53801
#, fuzzy, no-wrap
#| msgid "Documentation"
msgid "{Data Type} partition"
msgstr "Documentazione"

#. type: deftp
#: guix-git/doc/guix.texi:53803
msgid "This is the data type representing an image partition."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53809
msgid "The partition size in bytes or @code{'guess}.  The @code{'guess} symbol, which is the default, means that the partition size will be inferred based on the partition content."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53810
#, no-wrap
msgid "@code{offset} (default: @code{0})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53814
msgid "The partition's start offset in bytes, relative to the image start or the previous partition end.  It defaults to @code{0} which means that there is no offset applied."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53815
#, no-wrap
msgid "@code{file-system} (default: @code{\"ext4\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53817
msgid "The partition file system as a string, defaulting to @code{\"ext4\"}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53820
msgid "The supported values are @code{\"vfat\"}, @code{\"fat16\"}, @code{\"fat32\"}, @code{\"btrfs\"}, and @code{\"ext4\"}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53823
msgid "@code{\"vfat\"}, @code{\"fat16\"}, and @code{\"fat32\"} partitions without the @code{'esp} flag are by default LBA compatible."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53824
#, no-wrap
msgid "@code{file-system-options} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53829
msgid "The partition file system creation options that should be passed to the partition creation tool, as a list of strings.  This is only supported when creating @code{\"vfat\"}, @code{\"fat16\"}, @code{\"fat32\"} or @code{\"ext4\"} partitions."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53832
msgid "See the @code{\"extended-options\"} man page section of the @code{\"mke2fs\"} tool for a more complete reference."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53836
msgid "The partition label as a mandatory string, @code{\"my-root\"} for instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53837
#, no-wrap
msgid "@code{uuid} (default: @code{#false})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53841
msgid "The partition UUID as an @code{uuid} record (@pxref{File Systems}).  By default it is @code{#false}, which means that the partition creation tool will attribute a random UUID to the partition."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53848
msgid "The partition flags as a list of symbols.  Possible values are @code{'boot} and @code{'esp}.  The @code{'boot} flags should be set if you want to boot from this partition.  Exactly one partition should have this flag set, usually the root one. The @code{'esp} flag identifies a UEFI System Partition."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53849
#, no-wrap
msgid "@code{initializer} (default: @code{#false})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53854
msgid "The partition initializer procedure as a gexp.  This procedure is called to populate a partition.  If no initializer is passed, the @code{initialize-root-partition} procedure from the @code{(gnu build image)} module is used."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53863
msgid "Let's say you would like to create an MBR image with three distinct partitions:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53865
#, no-wrap
msgid "The @acronym{ESP, EFI System Partition}, a partition of"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:53867
msgid "40@tie{}MiB at offset 1024@tie{}KiB with a vfat file system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53868
#, no-wrap
msgid "an ext4 partition of 50@tie{}MiB data file, and labeled ``data''."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53870
#, no-wrap
msgid "an ext4 bootable partition containing the @code{%simple-os}"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:53872
msgid "operating-system."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53876
msgid "You would then write the following image definition in a @code{my-image.scm} file for instance."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:53883
#, no-wrap
msgid ""
"(use-modules (gnu)\n"
"             (gnu image)\n"
"             (gnu tests)\n"
"             (gnu system image)\n"
"             (guix gexp))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:53885 guix-git/doc/guix.texi:54003
#, no-wrap
msgid ""
"(define MiB (expt 2 20))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:53914
#, no-wrap
msgid ""
"(image\n"
" (format 'disk-image)\n"
" (operating-system %simple-os)\n"
" (partitions\n"
"  (list\n"
"   (partition\n"
"    (size (* 40 MiB))\n"
"    (offset (* 1024 1024))\n"
"    (label \"GNU-ESP\")\n"
"    (file-system \"vfat\")\n"
"    (flags '(esp))\n"
"    (initializer (gexp initialize-efi-partition)))\n"
"   (partition\n"
"    (size (* 50 MiB))\n"
"    (label \"DATA\")\n"
"    (file-system \"ext4\")\n"
"    (initializer #~(lambda* (root . rest)\n"
"                     (mkdir root)\n"
"                     (call-with-output-file\n"
"                         (string-append root \"/data\")\n"
"                       (lambda (port)\n"
"                         (format port \"my-data\"))))))\n"
"   (partition\n"
"    (size 'guess)\n"
"    (label root-label)\n"
"    (file-system \"ext4\")\n"
"    (flags '(boot))\n"
"    (initializer (gexp initialize-root-partition))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53922
msgid "Note that the first and third partitions use generic initializers procedures, initialize-efi-partition and initialize-root-partition respectively.  The initialize-efi-partition installs a GRUB EFI loader that is loading the GRUB bootloader located in the root partition.  The initialize-root-partition instantiates a complete system as defined by the @code{%simple-os} operating-system."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53924
msgid "You can now run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53927
#, no-wrap
msgid "guix system image my-image.scm\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53931
msgid "to instantiate the @code{image} definition.  That produces a disk image which has the expected structure:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53940
#, no-wrap
msgid ""
"$ parted $(guix system image my-image.scm) print\n"
"@dots{}\n"
"Model:  (file)\n"
"Disk /gnu/store/yhylv1bp5b2ypb97pd3bbhz6jk5nbhxw-disk-image: 1714MB\n"
"Sector size (logical/physical): 512B/512B\n"
"Partition Table: msdos\n"
"Disk Flags:\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53945
#, no-wrap
msgid ""
"Number  Start   End     Size    Type     File system  Flags\n"
" 1      1049kB  43.0MB  41.9MB  primary  fat16        esp\n"
" 2      43.0MB  95.4MB  52.4MB  primary  ext4\n"
" 3      95.4MB  1714MB  1619MB  primary  ext4         boot\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53950
msgid "The size of the @code{boot} partition has been inferred to @code{1619MB} so that it is large enough to host the @code{%simple-os} operating-system."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53955
msgid "You can also use existing @code{image} record definitions and inherit from them to simplify the @code{image} definition.  The @code{(gnu system image)} module provides the following @code{image} definition variables."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53956
#, fuzzy, no-wrap
#| msgid "Services"
msgid "mbr-disk-image"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:53960
msgid "An MBR disk-image composed of a single ROOT partition.  The ROOT partition starts at a 1@tie{}MiB offset so that the bootloader can install itself in the post-MBR gap."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53962
#, no-wrap
msgid "mbr-hybrid-disk-image"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53970
msgid "An MBR disk-image composed of two partitions: a 64 bits ESP partition and a ROOT boot partition.  The ESP partition starts at a 1@tie{}MiB offset so that a BIOS compatible bootloader can install itself in the post-MBR gap.  The image can be used by @code{x86_64} and @code{i686} machines supporting only legacy BIOS booting.  The ESP partition ensures that it can also be used by newer machines relying on UEFI booting, hence the @emph{hybrid} denomination."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53972
#, no-wrap
msgid "efi-disk-image"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53976
msgid "A GPT disk-image composed of two partitions: a 64 bits ESP partition and a ROOT boot partition.  This image can be used on most @code{x86_64} and @code{i686} machines, supporting BIOS or UEFI booting."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53978
#, no-wrap
msgid "efi32-disk-image"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53980
msgid "Same as @code{efi-disk-image} but with a 32 bits EFI partition."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53982
#, no-wrap
msgid "iso9660-image"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53985
msgid "An ISO-9660 image composed of a single bootable partition.  This image can also be used on most @code{x86_64} and @code{i686} machines."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53987
#, no-wrap
msgid "docker-image"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53989
msgid "A Docker image that can be used to spawn a Docker container."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53993
msgid "Using the @code{efi-disk-image} we can simplify our previous @code{image} declaration this way:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:54001
#, no-wrap
msgid ""
"(use-modules (gnu)\n"
"             (gnu image)\n"
"             (gnu tests)\n"
"             (gnu system image)\n"
"             (guix gexp)\n"
"             (ice-9 match))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:54015
#, no-wrap
msgid ""
"(define data\n"
"  (partition\n"
"   (size (* 50 MiB))\n"
"   (label \"DATA\")\n"
"   (file-system \"ext4\")\n"
"   (initializer #~(lambda* (root . rest)\n"
"                    (mkdir root)\n"
"                    (call-with-output-file\n"
"                        (string-append root \"/data\")\n"
"                      (lambda (port)\n"
"                        (format port \"my-data\")))))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:54023
#, no-wrap
msgid ""
"(image\n"
" (inherit efi-disk-image)\n"
" (operating-system %simple-os)\n"
" (partitions\n"
"  (match (image-partitions efi-disk-image)\n"
"    ((esp root)\n"
"     (list esp data root)))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54027
msgid "This will give the exact same @code{image} instantiation but the @code{image} declaration is simpler."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54036
msgid "The @command{guix system image} command can, as we saw above, take a file containing an @code{image} declaration as argument and produce an actual disk image from it.  The same command can also handle a file containing an @code{operating-system} declaration as argument.  In that case, how is the @code{operating-system} turned into an image?"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54040
msgid "That's where the @code{image-type} record intervenes.  This record defines how to transform an @code{operating-system} record into an @code{image} record."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:54041
#, no-wrap
msgid "{Data Type} image-type"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:54043
msgid "This is the data type representing an image-type."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:54048
msgid "The image-type name as a mandatory symbol, @code{'efi32-raw} for instance."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:54049
#, no-wrap
msgid "constructor"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:54053
msgid "The image-type constructor, as a mandatory procedure that takes an @code{operating-system} record as argument and returns an @code{image} record."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54059
msgid "There are several @code{image-type} records provided by the @code{(gnu system image)} and the @code{(gnu system images @dots{})} modules."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54060
#, fuzzy, no-wrap
#| msgid "Services"
msgid "mbr-raw-image-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:54062
msgid "Build an image based on the @code{mbr-disk-image} image."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54064
#, fuzzy, no-wrap
#| msgid "Services"
msgid "mbr-hybrid-raw-image-type"
msgstr "Servizi"

#. type: defvar
#: guix-git/doc/guix.texi:54066
msgid "Build an image based on the @code{mbr-hybrid-disk-image} image."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54068
#, no-wrap
msgid "efi-raw-image-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54070
msgid "Build an image based on the @code{efi-disk-image} image."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54072
#, no-wrap
msgid "efi32-raw-image-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54074
msgid "Build an image based on the @code{efi32-disk-image} image."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54076
#, no-wrap
msgid "qcow2-image-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54079
msgid "Build an image based on the @code{mbr-disk-image} image but with the @code{compressed-qcow2} image format."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54081
#, no-wrap
msgid "iso-image-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54083
msgid "Build a compressed image based on the @code{iso9660-image} image."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54085
#, no-wrap
msgid "uncompressed-iso-image-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54088
msgid "Build an image based on the @code{iso9660-image} image but with the @code{compression?} field set to @code{#false}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54090
#, no-wrap
msgid "docker-image-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54092
msgid "Build an image based on the @code{docker-image} image."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54094
#, no-wrap
msgid "raw-with-offset-image-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54098
msgid "Build an MBR image with a single partition starting at a @code{1024KiB} offset.  This is useful to leave some room to install a bootloader in the post-MBR gap."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54100
#, no-wrap
msgid "pinebook-pro-image-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54105
msgid "Build an image that is targeting the Pinebook Pro machine.  The MBR image contains a single partition starting at a @code{9MiB} offset.  The @code{u-boot-pinebook-pro-rk3399-bootloader} bootloader will be installed in this gap."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54107
#, no-wrap
msgid "rock64-image-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54112
msgid "Build an image that is targeting the Rock64 machine.  The MBR image contains a single partition starting at a @code{16MiB} offset.  The @code{u-boot-rock64-rk3328-bootloader} bootloader will be installed in this gap."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54114
#, no-wrap
msgid "novena-image-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54117
msgid "Build an image that is targeting the Novena machine.  It has the same characteristics as @code{raw-with-offset-image-type}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54119
#, no-wrap
msgid "pine64-image-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54122
msgid "Build an image that is targeting the Pine64 machine.  It has the same characteristics as @code{raw-with-offset-image-type}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54124
#, no-wrap
msgid "hurd-image-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54128
msgid "Build an image that is targeting a @code{i386} machine running the Hurd kernel.  The MBR image contains a single ext2 partitions with specific @code{file-system-options} flags."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54130
#, no-wrap
msgid "hurd-qcow2-image-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54133
msgid "Build an image similar to the one built by the @code{hurd-image-type} but with the @code{format} set to @code{'compressed-qcow2}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54135
#, no-wrap
msgid "wsl2-image-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:54138
msgid "Build an image for the @acronym{WSL2, Windows Subsystem for Linux 2}.  It can be imported by running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54142
#, no-wrap
msgid ""
"wsl --import Guix ./guix ./wsl2-image.tar.gz\n"
"wsl -d Guix\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54150
msgid "So, if we get back to the @code{guix system image} command taking an @code{operating-system} declaration as argument.  By default, the @code{mbr-raw-image-type} is used to turn the provided @code{operating-system} into an actual bootable image."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54156
msgid "To use a different @code{image-type}, the @code{--image-type} option can be used.  The @code{--list-image-types} option will list all the supported image types.  It turns out to be a textual listing of all the @code{image-types} variables described just above (@pxref{Invoking guix system})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54163
msgid "Let's take the example of the Pine64, an ARM based machine.  To be able to produce an image targeting this board, we need the following elements:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:54165
#, no-wrap
msgid "An @code{operating-system} record containing at least"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:54168
msgid "an appropriate kernel (@code{linux-libre-arm64-generic}) and bootloader @code{u-boot-pine64-lts-bootloader}) for the Pine64."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:54169
#, no-wrap
msgid "Possibly, an @code{image-type} record providing a way to"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:54172
msgid "turn an @code{operating-system} record to an @code{image} record suitable for the Pine64."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:54173
#, no-wrap
msgid "An actual @code{image} that can be instantiated with the"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:54175
msgid "@command{guix system image} command."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54181
msgid "The @code{(gnu system images pine64)} module provides all those elements: @code{pine64-barebones-os}, @code{pine64-image-type} and @code{pine64-barebones-raw-image} respectively."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54184
msgid "The module returns the @code{pine64-barebones-raw-image} in order for users to be able to run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54187
#, no-wrap
msgid "guix system image gnu/system/images/pine64.scm\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54192
msgid "Now, thanks to the @code{pine64-image-type} record declaring the @code{'pine64-raw} @code{image-type}, one could also prepare a @code{my-pine.scm} file with the following content:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:54198
#, no-wrap
msgid ""
"(use-modules (gnu system images pine64))\n"
"(operating-system\n"
"  (inherit pine64-barebones-os)\n"
"  (timezone \"Europe/Athens\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54201
msgid "to customize the @code{pine64-barebones-os}, and run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54204
#, no-wrap
msgid "$ guix system image --image-type=pine64-raw my-pine.scm\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54209
msgid "Note that there are other modules in the @code{gnu/system/images} directory targeting @code{Novena}, @code{Pine64}, @code{PinebookPro} and @code{Rock64} machines."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:54213
#, no-wrap
msgid "debugging files"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54219
msgid "Program binaries, as produced by the GCC compilers for instance, are typically written in the ELF format, with a section containing @dfn{debugging information}.  Debugging information is what allows the debugger, GDB, to map binary code to source code; it is required to debug a compiled program in good conditions."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54223
msgid "This chapter explains how to use separate debug info when packages provide it, and how to rebuild packages with debug info when it's missing."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54239
msgid "The problem with debugging information is that it takes up a fair amount of disk space.  For example, debugging information for the GNU C Library weighs in at more than 60 MiB@.  Thus, as a user, keeping all the debugging info of all the installed programs is usually not an option.  Yet, space savings should not come at the cost of an impediment to debugging---especially in the GNU system, which should make it easier for users to exert their computing freedom (@pxref{GNU Distribution})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54246
msgid "Thankfully, the GNU Binary Utilities (Binutils) and GDB provide a mechanism that allows users to get the best of both worlds: debugging information can be stripped from the binaries and stored in separate files.  GDB is then able to load debugging information from those files, when they are available (@pxref{Separate Debug Files,,, gdb, Debugging with GDB})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54254
msgid "The GNU distribution takes advantage of this by storing debugging information in the @code{lib/debug} sub-directory of a separate package output unimaginatively called @code{debug} (@pxref{Packages with Multiple Outputs}).  Users can choose to install the @code{debug} output of a package when they need it.  For instance, the following command installs the debugging information for the GNU C Library and for GNU Guile:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54257
#, no-wrap
msgid "guix install glibc:debug guile:debug\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54263
msgid "GDB must then be told to look for debug files in the user's profile, by setting the @code{debug-file-directory} variable (consider setting it from the @file{~/.gdbinit} file, @pxref{Startup,,, gdb, Debugging with GDB}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54266
#, no-wrap
msgid "(gdb) set debug-file-directory ~/.guix-profile/lib/debug\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54270
msgid "From there on, GDB will pick up debugging information from the @file{.debug} files under @file{~/.guix-profile/lib/debug}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54275
msgid "Below is an alternative GDB script which is useful when working with other profiles.  It takes advantage of the optional Guile integration in GDB.  This snippet is included by default on Guix System in the @file{~/.gdbinit} file."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54283
#, no-wrap
msgid ""
"guile\n"
"(use-modules (gdb))\n"
"(execute (string-append \"set debug-file-directory \"\n"
"                        (or (getenv \"GDB_DEBUG_FILE_DIRECTORY\")\n"
"                            \"~/.guix-profile/lib/debug\")))\n"
"end\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54291
msgid "In addition, you will most likely want GDB to be able to show the source code being debugged.  To do that, you will have to unpack the source code of the package of interest (obtained with @code{guix build --source}, @pxref{Invoking guix build}), and to point GDB to that source directory using the @code{directory} command (@pxref{Source Path, @code{directory},, gdb, Debugging with GDB})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54299
msgid "The @code{debug} output mechanism in Guix is implemented by the @code{gnu-build-system} (@pxref{Build Systems}).  Currently, it is opt-in---debugging information is available only for the packages with definitions explicitly declaring a @code{debug} output.  To check whether a package has a @code{debug} output, use @command{guix package --list-available} (@pxref{Invoking guix package})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54301
msgid "Read on for how to deal with packages lacking a @code{debug} output."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54313
msgid "As we saw above, some packages, but not all, provide debugging info in a @code{debug} output.  What can you do when debugging info is missing? The @option{--with-debug-info} option provides a solution to that: it allows you to rebuild the package(s) for which debugging info is missing---and only those---and to graft those onto the application you're debugging.  Thus, while it's not as fast as installing a @code{debug} output, it is relatively inexpensive."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54318
msgid "Let's illustrate that.  Suppose you're experiencing a bug in Inkscape and would like to see what's going on in GLib, a library that's deep down in its dependency graph.  As it turns out, GLib does not have a @code{debug} output and the backtrace GDB shows is all sadness:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54329
#, no-wrap
msgid ""
"(gdb) bt\n"
"#0  0x00007ffff5f92190 in g_getenv ()\n"
"   from /gnu/store/@dots{}-glib-2.62.6/lib/libglib-2.0.so.0\n"
"#1  0x00007ffff608a7d6 in gobject_init_ctor ()\n"
"   from /gnu/store/@dots{}-glib-2.62.6/lib/libgobject-2.0.so.0\n"
"#2  0x00007ffff7fe275a in call_init (l=<optimized out>, argc=argc@@entry=1, argv=argv@@entry=0x7fffffffcfd8,\n"
"    env=env@@entry=0x7fffffffcfe8) at dl-init.c:72\n"
"#3  0x00007ffff7fe2866 in call_init (env=0x7fffffffcfe8, argv=0x7fffffffcfd8, argc=1, l=<optimized out>)\n"
"    at dl-init.c:118\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54333
msgid "To address that, you install Inkscape linked against a variant GLib that contains debug info:"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54339
msgid "This time, debugging will be a whole lot nicer:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54357
#, no-wrap
msgid ""
"$ gdb --args sh -c 'exec inkscape'\n"
"@dots{}\n"
"(gdb) b g_getenv\n"
"Function \"g_getenv\" not defined.\n"
"Make breakpoint pending on future shared library load? (y or [n]) y\n"
"Breakpoint 1 (g_getenv) pending.\n"
"(gdb) r\n"
"Starting program: /gnu/store/@dots{}-profile/bin/sh -c exec\\ inkscape\n"
"@dots{}\n"
"(gdb) bt\n"
"#0  g_getenv (variable=variable@@entry=0x7ffff60c7a2e \"GOBJECT_DEBUG\") at ../glib-2.62.6/glib/genviron.c:252\n"
"#1  0x00007ffff608a7d6 in gobject_init () at ../glib-2.62.6/gobject/gtype.c:4380\n"
"#2  gobject_init_ctor () at ../glib-2.62.6/gobject/gtype.c:4493\n"
"#3  0x00007ffff7fe275a in call_init (l=<optimized out>, argc=argc@@entry=3, argv=argv@@entry=0x7fffffffd088,\n"
"    env=env@@entry=0x7fffffffd0a8) at dl-init.c:72\n"
"@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54360
msgid "Much better!"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54364
msgid "Note that there can be packages for which @option{--with-debug-info} will not have the desired effect.  @xref{Package Transformation Options, @option{--with-debug-info}}, for more information."
msgstr ""

#. type: chapter
#: guix-git/doc/guix.texi:54366
#, no-wrap
msgid "Using @TeX{} and @LaTeX{}"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:54368
#, no-wrap
msgid "@TeX{} packages"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:54369
#, no-wrap
msgid "@LaTeX{} packages"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54376
msgid "Guix provides packages for the @TeX{}, @LaTeX{}, ConTeXt, LuaTeX, and related typesetting systems, taken from the @uref{https://www.tug.org/texlive/, @TeX{} Live distribution}.  Because @TeX{} Live is so huge and because finding one's way in this maze is tricky, this section provides some guidance on how to deploy the relevant packages to compile @TeX{} and @LaTeX{} documents."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54378
msgid "@TeX{} Live currently comes in two mutually exclusive flavors in Guix:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:54384
msgid "The ``monolithic'' @code{texlive} package: it comes with @emph{every single @TeX{} Live package} (roughly 4,200), but it is huge---more than 4@tie{}GiB for a single package!"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:54388
msgid "A ``modular'' @TeX{} Live distribution, in which you only install the packages you need, whose name is always prefixed with @samp{texlive-}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54397
msgid "To insist, these two flavors cannot be combined@footnote{No rule without exception! As the monolithic @TeX{} Live does not contain the @command{biber} executable, it is okay to combine it with @code{texlive-biber}, which does.}.  If in the modular setting your document does not compile, the solution is not to add the monolithic @code{texlive} package, but to add the set of missing packages from the modular distribution."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54404
msgid "Building a coherent system that provides all the essential tools and, at the same time, satisfies all of its internal dependencies can be a difficult task.  It is therefore recommended to start with sets of packages, called @dfn{collections}, and @dfn{schemes}, the name for collections of collections.  The following command lists available schemes and collections (@pxref{guix-search,, Invoking guix package}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54407
#, no-wrap
msgid "guix search texlive-\\(scheme\\|collection\\) | recsel -p name,description\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54412
msgid "If needed, you may then complete your system with individual packages, particularly when they belong to a large collection you're not otherwise interested in."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54415
msgid "For instance, the following manifest is a reasonable, yet frugal starting point for a French @LaTeX{} user:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:54419
#, no-wrap
msgid ""
"(specifications->manifest\n"
" '(\"rubber\"\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:54424
#, no-wrap
msgid ""
"   \"texlive-scheme-basic\"\n"
"   \"texlive-collection-latexrecommended\"\n"
"   \"texlive-collection-fontsrecommended\"\n"
"   \"texlive-babel-french\"\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:54429
#, no-wrap
msgid ""
"   ;; From \"latexextra\" collection.\n"
"   \"texlive-tabularray\"\n"
"   ;; From \"binextra\" collection.\n"
"   \"texlive-texdoc\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54435
msgid "If you come across a document that does not compile in such a basic setting, the main difficulty is finding the missing packages.  In this case, @command{pdflatex} and similar commands tend to fail with obscure error messages along the lines of:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54439
#, no-wrap
msgid ""
"doc.tex: File `tikz.sty' not found.\n"
"doc.tex:7: Emergency stop.\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54443
msgid "or, for a missing font:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54447
#, no-wrap
msgid ""
"kpathsea: Running mktexmf phvr7t\n"
"! I can't find file `phvr7t'.\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54451
msgid "How do you determine what the missing package is? In the first case, you will find the answer by running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54457
#, no-wrap
msgid ""
"$ guix search texlive tikz\n"
"name: texlive-pgf\n"
"version: 59745\n"
"@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54462
msgid "In the second case, @command{guix search} turns up nothing.  Instead, you can search the @TeX{} Live package database using the @command{tlmgr} command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54466
#, no-wrap
msgid ""
"$ tlmgr info phvr7t\n"
"tlmgr: cannot find package phvr7t, searching for other matches:\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54468
#, no-wrap
msgid ""
"Packages containing `phvr7t' in their title/description:\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54477
#, no-wrap
msgid ""
"Packages containing files matching `phvr7t':\n"
"helvetic:\n"
"        texmf-dist/fonts/tfm/adobe/helvetic/phvr7t.tfm\n"
"        texmf-dist/fonts/tfm/adobe/helvetic/phvr7tn.tfm\n"
"        texmf-dist/fonts/vf/adobe/helvetic/phvr7t.vf\n"
"        texmf-dist/fonts/vf/adobe/helvetic/phvr7tn.vf\n"
"tex4ht:\n"
"        texmf-dist/tex4ht/ht-fonts/alias/adobe/helvetic/phvr7t.htf\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54483
msgid "The file is available in the @TeX{} Live @code{helvetic} package, which is known in Guix as @code{texlive-helvetic}.  Quite a ride, but you found it!"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:54487
#, no-wrap
msgid "security updates"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54496
msgid "Occasionally, important security vulnerabilities are discovered in software packages and must be patched.  Guix developers try hard to keep track of known vulnerabilities and to apply fixes as soon as possible in the @code{master} branch of Guix (we do not yet provide a ``stable'' branch containing only security updates).  The @command{guix lint} tool helps developers find out about vulnerable versions of software packages in the distribution:"
msgstr ""

#. type: smallexample
#: guix-git/doc/guix.texi:54503
#, no-wrap
msgid ""
"$ guix lint -c cve\n"
"gnu/packages/base.scm:652:2: glibc@@2.21: probably vulnerable to CVE-2015-1781, CVE-2015-7547\n"
"gnu/packages/gcc.scm:334:2: gcc@@4.9.3: probably vulnerable to CVE-2015-5276\n"
"gnu/packages/image.scm:312:2: openjpeg@@2.1.0: probably vulnerable to CVE-2016-1923, CVE-2016-1924\n"
"@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54506
msgid "@xref{Invoking guix lint}, for more information."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54515
msgid "Guix follows a functional package management discipline (@pxref{Introduction}), which implies that, when a package is changed, @emph{every package that depends on it} must be rebuilt.  This can significantly slow down the deployment of fixes in core packages such as libc or Bash, since basically the whole distribution would need to be rebuilt.  Using pre-built binaries helps (@pxref{Substitutes}), but deployment may still take more time than desired."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:54516
#, no-wrap
msgid "grafts"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54524
msgid "To address this, Guix implements @dfn{grafts}, a mechanism that allows for fast deployment of critical updates without the costs associated with a whole-distribution rebuild.  The idea is to rebuild only the package that needs to be patched, and then to ``graft'' it onto packages explicitly installed by the user and that were previously referring to the original package.  The cost of grafting is typically very low, and order of magnitudes lower than a full rebuild of the dependency chain."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:54525
#, no-wrap
msgid "replacements of packages, for grafts"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54531
msgid "For instance, suppose a security update needs to be applied to Bash.  Guix developers will provide a package definition for the ``fixed'' Bash, say @code{bash-fixed}, in the usual way (@pxref{Defining Packages}).  Then, the original package definition is augmented with a @code{replacement} field pointing to the package containing the bug fix:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:54538
#, no-wrap
msgid ""
"(define bash\n"
"  (package\n"
"    (name \"bash\")\n"
"    ;; @dots{}\n"
"    (replacement bash-fixed)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54548
msgid "From there on, any package depending directly or indirectly on Bash---as reported by @command{guix gc --requisites} (@pxref{Invoking guix gc})---that is installed is automatically ``rewritten'' to refer to @code{bash-fixed} instead of @code{bash}.  This grafting process takes time proportional to the size of the package, usually less than a minute for an ``average'' package on a recent machine.  Grafting is recursive: when an indirect dependency requires grafting, then grafting ``propagates'' up to the package that the user is installing."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54556
msgid "Currently, the length of the name and version of the graft and that of the package it replaces (@code{bash-fixed} and @code{bash} in the example above) must be equal.  This restriction mostly comes from the fact that grafting works by patching files, including binary files, directly.  Other restrictions may apply: for instance, when adding a graft to a package providing a shared library, the original shared library and its replacement must have the same @code{SONAME} and be binary-compatible."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54560
msgid "The @option{--no-grafts} command-line option allows you to forcefully avoid grafting (@pxref{Common Build Options, @option{--no-grafts}}).  Thus, the command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54563
#, no-wrap
msgid "guix build bash --no-grafts\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54567
msgid "returns the store file name of the original Bash, whereas:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54570
#, no-wrap
msgid "guix build bash\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54575
msgid "returns the store file name of the ``fixed'', replacement Bash.  This allows you to distinguish between the two variants of Bash."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54578
msgid "To verify which Bash your whole profile refers to, you can run (@pxref{Invoking guix gc}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54581
#, no-wrap
msgid "guix gc -R $(readlink -f ~/.guix-profile) | grep bash\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54586
msgid "@dots{} and compare the store file names that you get with those above.  Likewise for a complete Guix system generation:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54589
#, no-wrap
msgid "guix gc -R $(guix system build my-config.scm) | grep bash\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54593
msgid "Lastly, to check which Bash running processes are using, you can use the @command{lsof} command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54596
#, no-wrap
msgid "lsof | grep /gnu/store/.*bash\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:54604
#, no-wrap
msgid "bootstrapping"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54611
msgid "Bootstrapping in our context refers to how the distribution gets built ``from nothing''.  Remember that the build environment of a derivation contains nothing but its declared inputs (@pxref{Introduction}).  So there's an obvious chicken-and-egg problem: how does the first package get built? How does the first compiler get compiled?"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54619
msgid "It is tempting to think of this question as one that only die-hard hackers may care about.  However, while the answer to that question is technical in nature, its implications are wide-ranging.  How the distribution is bootstrapped defines the extent to which we, as individuals and as a collective of users and hackers, can trust the software we run.  It is a central concern from the standpoint of @emph{security} and from a @emph{user freedom} viewpoint."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:54620 guix-git/doc/guix.texi:54844
#, no-wrap
msgid "bootstrap binaries"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54630
msgid "The GNU system is primarily made of C code, with libc at its core.  The GNU build system itself assumes the availability of a Bourne shell and command-line tools provided by GNU Coreutils, Awk, Findutils, `sed', and `grep'.  Furthermore, build programs---programs that run @code{./configure}, @code{make}, etc.---are written in Guile Scheme (@pxref{Derivations}).  Consequently, to be able to build anything at all, from scratch, Guix relies on pre-built binaries of Guile, GCC, Binutils, libc, and the other packages mentioned above---the @dfn{bootstrap binaries}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54634
msgid "These bootstrap binaries are ``taken for granted'', though we can also re-create them if needed (@pxref{Preparing to Use the Bootstrap Binaries})."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:54641
#, no-wrap
msgid "The Full-Source Bootstrap"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54648
msgid "Guix---like other GNU/Linux distributions---is traditionally bootstrapped from a set of bootstrap binaries: Bourne shell, command-line tools provided by GNU Coreutils, Awk, Findutils, `sed', and `grep' and Guile, GCC, Binutils, and the GNU C Library (@pxref{Bootstrapping}).  Usually, these bootstrap binaries are ``taken for granted.''"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54654
msgid "Taking the bootstrap binaries for granted means that we consider them to be a correct and trustworthy ``seed'' for building the complete system.  Therein lies a problem: the combined size of these bootstrap binaries is about 250MB (@pxref{Bootstrappable Builds,,, mes, GNU Mes}).  Auditing or even inspecting these is next to impossible."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54666
msgid "For @code{i686-linux} and @code{x86_64-linux}, Guix now features a @dfn{full-source bootstrap}.  This bootstrap is rooted in @file{hex0-seed} from the @url{https://savannah.gnu.org/projects/stage0, Stage0} package.  The hex0 program is minimalist assembler: it reads space-separated hexadecimal digits (nibbles) from a file, possibly including comments, and emits on standard output the bytes corresponding to those hexadecimal numbers.  The source code of this initial hex0 program is a file called @url{https://github.com/oriansj/bootstrap-seeds/blob/master/POSIX/x86/hex0_x86.hex0,@file{hex0_x86.hex0}} and is written in the @code{hex0} language."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54668
msgid "Hex0 is self-hosting, which means that it can build itself:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54671
#, no-wrap
msgid "./hex0-seed hex0_x86.hex0 hex0\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54675
msgid "Hex0 it is the ASCII-equivalent of the binary program and can be produced by doing something much like:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54679
#, no-wrap
msgid ""
"sed 's/[;#].*$//g' hex0_x86.hex0 | xxd -r -p > hex0\n"
"chmod +x hex0\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54683
msgid "It is because of this ASCII-binary equivalence that we can bless this initial 357-byte binary as source, and hence `full-source bootstrap''."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54690
msgid "The bootstrap then continues: @code{hex0} builds @code{hex1} and then on to @code{M0}, @code{hex2}, @code{M1}, @code{mescc-tools} and finally @code{M2-Planet}.  Then, using @code{mescc-tools}, @code{M2-Planet} we build Mes (@pxref{Top, GNU Mes Reference Manual,, mes, GNU Mes}, a Scheme interpreter and C compiler in Scheme).  From here on starts the more traditional @code{C}-based bootstrap of the GNU System."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54697
msgid "Another step that Guix has taken is to replace the shell and all its utilities with implementations in Guile Scheme, the @emph{Scheme-only bootstrap}.  Gash (@pxref{Gash,,, gash, The Gash manual}) is a POSIX-compatible shell that replaces Bash, and it comes with Gash Utils which has minimalist replacements for Awk, the GNU Core Utilities, Grep, Gzip, Sed, and Tar."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54707
msgid "Building the GNU System from source is currently only possible by adding some historical GNU packages as intermediate steps@footnote{Packages such as @code{gcc-2.95.3}, @code{binutils-2.14}, @code{glibc-2.2.5}, @code{gzip-1.2.4}, @code{tar-1.22}, and some others.  For details, see @file{gnu/packages/commencement.scm}.}.  As Gash and Gash Utils mature, and GNU packages become more bootstrappable again (e.g., new releases of GNU Sed will also ship as gzipped tarballs again, as alternative to the hard to bootstrap @code{xz}-compression), this set of added packages can hopefully be reduced again."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54711
msgid "The graph below shows the resulting dependency graph for @code{gcc-core-mesboot0}, the bootstrap compiler used for the traditional bootstrap of the rest of the Guix System."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54719
msgid "@image{images/gcc-core-mesboot0-graph,6in,,Dependency graph of gcc-core-mesboot0}"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54722
msgid "Work is ongoing to bring these bootstraps to the @code{arm-linux} and @code{aarch64-linux} architectures and to the Hurd."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54726
msgid "If you are interested, join us on @samp{#bootstrappable} on the Libera.Chat IRC network or discuss on @email{bug-mes@@gnu.org} or @email{gash-devel@@nongnu.org}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54733
msgid "@image{images/bootstrap-graph,6in,,Dependency graph of the early bootstrap derivations}"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54738
msgid "The figure above shows the very beginning of the dependency graph of the distribution, corresponding to the package definitions of the @code{(gnu packages bootstrap)} module.  A similar figure can be generated with @command{guix graph} (@pxref{Invoking guix graph}), along the lines of:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54743
#, no-wrap
msgid ""
"guix graph -t derivation \\\n"
"  -e '(@@@@ (gnu packages bootstrap) %bootstrap-gcc)' \\\n"
"  | dot -Tps > gcc.ps\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54746
msgid "or, for the further Reduced Binary Seed bootstrap"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54751
#, no-wrap
msgid ""
"guix graph -t derivation \\\n"
"  -e '(@@@@ (gnu packages bootstrap) %bootstrap-mes)' \\\n"
"  | dot -Tps > mes.ps\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54760
msgid "At this level of detail, things are slightly complex.  First, Guile itself consists of an ELF executable, along with many source and compiled Scheme files that are dynamically loaded when it runs.  This gets stored in the @file{guile-2.0.7.tar.xz} tarball shown in this graph.  This tarball is part of Guix's ``source'' distribution, and gets inserted into the store with @code{add-to-store} (@pxref{The Store})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54769
msgid "But how do we write a derivation that unpacks this tarball and adds it to the store? To solve this problem, the @code{guile-bootstrap-2.0.drv} derivation---the first one that gets built---uses @code{bash} as its builder, which runs @code{build-bootstrap-guile.sh}, which in turn calls @code{tar} to unpack the tarball.  Thus, @file{bash}, @file{tar}, @file{xz}, and @file{mkdir} are statically-linked binaries, also part of the Guix source distribution, whose sole purpose is to allow the Guile tarball to be unpacked."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54781
msgid "Once @code{guile-bootstrap-2.0.drv} is built, we have a functioning Guile that can be used to run subsequent build programs.  Its first task is to download tarballs containing the other pre-built binaries---this is what the @file{.tar.xz.drv} derivations do.  Guix modules such as @code{ftp-client.scm} are used for this purpose.  The @code{module-import.drv} derivations import those modules in a directory in the store, using the original layout.  The @code{module-import-compiled.drv} derivations compile those modules, and write them in an output directory with the right layout.  This corresponds to the @code{#:modules} argument of @code{build-expression->derivation} (@pxref{Derivations})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54786
msgid "Finally, the various tarballs are unpacked by the derivations @code{gcc-bootstrap-0.drv}, @code{glibc-bootstrap-0.drv}, or @code{bootstrap-mes-0.drv} and @code{bootstrap-mescc-tools-0.drv}, at which point we have a working C tool chain."
msgstr ""

#. type: unnumberedsec
#: guix-git/doc/guix.texi:54787
#, no-wrap
msgid "Building the Build Tools"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54796
msgid "Bootstrapping is complete when we have a full tool chain that does not depend on the pre-built bootstrap tools discussed above.  This no-dependency requirement is verified by checking whether the files of the final tool chain contain references to the @file{/gnu/store} directories of the bootstrap inputs.  The process that leads to this ``final'' tool chain is described by the package definitions found in the @code{(gnu packages commencement)} module."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54803
msgid "The @command{guix graph} command allows us to ``zoom out'' compared to the graph above, by looking at the level of package objects instead of individual derivations---remember that a package may translate to several derivations, typically one derivation to download its source, one to build the Guile modules it needs, and one to actually build the package from source.  The command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54808
#, no-wrap
msgid ""
"guix graph -t bag \\\n"
"  -e '(@@@@ (gnu packages commencement)\n"
"          glibc-final-with-bootstrap-bash)' | xdot -\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54815
msgid "displays the dependency graph leading to the ``final'' C library@footnote{You may notice the @code{glibc-intermediate} label, suggesting that it is not @emph{quite} final, but as a good approximation, we will consider it final.}, depicted below."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54817
msgid "@image{images/bootstrap-packages,6in,,Dependency graph of the early packages}"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54823
msgid "The first tool that gets built with the bootstrap binaries is GNU@tie{}Make---noted @code{make-boot0} above---which is a prerequisite for all the following packages.  From there Findutils and Diffutils get built."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54828
msgid "Then come the first-stage Binutils and GCC, built as pseudo cross tools---i.e., with @option{--target} equal to @option{--host}.  They are used to build libc.  Thanks to this cross-build trick, this libc is guaranteed not to hold any reference to the initial tool chain."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54834
msgid "From there the final Binutils and GCC (not shown above) are built.  GCC uses @command{ld} from the final Binutils, and links programs against the just-built libc.  This tool chain is used to build the other packages used by Guix and by the GNU Build System: Guile, Bash, Coreutils, etc."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54840
msgid "And voilà! At this point we have the complete set of build tools that the GNU Build System expects.  These are in the @code{%final-inputs} variable of the @code{(gnu packages commencement)} module, and are implicitly used by any package that uses @code{gnu-build-system} (@pxref{Build Systems, @code{gnu-build-system}})."
msgstr ""

#. type: unnumberedsec
#: guix-git/doc/guix.texi:54842
#, no-wrap
msgid "Building the Bootstrap Binaries"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54849
msgid "Because the final tool chain does not depend on the bootstrap binaries, those rarely need to be updated.  Nevertheless, it is useful to have an automated way to produce them, should an update occur, and this is what the @code{(gnu packages make-bootstrap)} module provides."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54855
msgid "The following command builds the tarballs containing the bootstrap binaries (Binutils, GCC, glibc, for the traditional bootstrap and linux-libre-headers, bootstrap-mescc-tools, bootstrap-mes for the Reduced Binary Seed bootstrap, and Guile, and a tarball containing a mixture of Coreutils and other basic command-line tools):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54858
#, no-wrap
msgid "guix build bootstrap-tarballs\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54863
msgid "The generated tarballs are those that should be referred to in the @code{(gnu packages bootstrap)} module mentioned at the beginning of this section."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54869
msgid "Still here? Then perhaps by now you've started to wonder: when do we reach a fixed point? That is an interesting question! The answer is unknown, but if you would like to investigate further (and have significant computational and storage resources to do so), then let us know."
msgstr ""

#. type: unnumberedsec
#: guix-git/doc/guix.texi:54870
#, no-wrap
msgid "Reducing the Set of Bootstrap Binaries"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54878
msgid "Our traditional bootstrap includes GCC, GNU Libc, Guile, etc.  That's a lot of binary code! Why is that a problem? It's a problem because these big chunks of binary code are practically non-auditable, which makes it hard to establish what source code produced them.  Every unauditable binary also leaves us vulnerable to compiler backdoors as described by Ken Thompson in the 1984 paper @emph{Reflections on Trusting Trust}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54884
msgid "This is mitigated by the fact that our bootstrap binaries were generated from an earlier Guix revision.  Nevertheless it lacks the level of transparency that we get in the rest of the package dependency graph, where Guix always gives us a source-to-binary mapping.  Thus, our goal is to reduce the set of bootstrap binaries to the bare minimum."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54890
msgid "The @uref{https://bootstrappable.org, Bootstrappable.org web site} lists on-going projects to do that.  One of these is about replacing the bootstrap GCC with a sequence of assemblers, interpreters, and compilers of increasing complexity, which could be built from source starting from a simple and auditable assembler."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54899
msgid "Our first major achievement is the replacement of GCC, the GNU C Library and Binutils by MesCC-Tools (a simple hex linker and macro assembler) and Mes (@pxref{Top, GNU Mes Reference Manual,, mes, GNU Mes}, a Scheme interpreter and C compiler in Scheme).  Neither MesCC-Tools nor Mes can be fully bootstrapped yet and thus we inject them as binary seeds.  We call this the Reduced Binary Seed bootstrap, as it has halved the size of our bootstrap binaries! Also, it has eliminated the C compiler binary; i686-linux and x86_64-linux Guix packages are now bootstrapped without any binary C compiler."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54902
msgid "Work is ongoing to make MesCC-Tools and Mes fully bootstrappable and we are also looking at any other bootstrap binaries.  Your help is welcome!"
msgstr ""

#. type: chapter
#: guix-git/doc/guix.texi:54904
#, no-wrap
msgid "Porting to a New Platform"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54913
msgid "As discussed above, the GNU distribution is self-contained, and self-containment is achieved by relying on pre-built ``bootstrap binaries'' (@pxref{Bootstrapping}).  These binaries are specific to an operating system kernel, CPU architecture, and application binary interface (ABI).  Thus, to port the distribution to a platform that is not yet supported, one must build those bootstrap binaries, and update the @code{(gnu packages bootstrap)} module to use them on that platform."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54918
msgid "Fortunately, Guix can @emph{cross compile} those bootstrap binaries.  When everything goes well, and assuming the GNU tool chain supports the target platform, this can be as simple as running a command like this one:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54921
#, no-wrap
msgid "guix build --target=armv5tel-linux-gnueabi bootstrap-tarballs\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54930
msgid "For this to work, it is first required to register a new platform as defined in the @code{(guix platform)} module.  A platform is making the connection between a GNU triplet (@pxref{Specifying Target Triplets, GNU configuration triplets,, autoconf, Autoconf}), the equivalent @var{system} in Nix notation, the name of the @var{glibc-dynamic-linker}, and the corresponding Linux architecture name if applicable (@pxref{Platforms})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54939
msgid "Once the bootstrap tarball are built, the @code{(gnu packages bootstrap)} module needs to be updated to refer to these binaries on the target platform.  That is, the hashes and URLs of the bootstrap tarballs for the new platform must be added alongside those of the currently supported platforms.  The bootstrap Guile tarball is treated specially: it is expected to be available locally, and @file{gnu/local.mk} has rules to download it for the supported architectures; a rule for the new platform must be added as well."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54948
msgid "In practice, there may be some complications.  First, it may be that the extended GNU triplet that specifies an ABI (like the @code{eabi} suffix above) is not recognized by all the GNU tools.  Typically, glibc recognizes some of these, whereas GCC uses an extra @option{--with-abi} configure flag (see @code{gcc.scm} for examples of how to handle this).  Second, some of the required packages could fail to build for that platform.  Lastly, the generated binaries could be broken for some reason."
msgstr ""

#. type: include
#: guix-git/doc/guix.texi:54950
#, no-wrap
msgid "contributing.texi"
msgstr "contributing.it.texi"

#. type: Plain text
#: guix-git/doc/guix.texi:54963
msgid "Guix is based on the @uref{https://nixos.org/nix/, Nix package manager}, which was designed and implemented by Eelco Dolstra, with contributions from other people (see the @file{nix/AUTHORS} file in Guix).  Nix pioneered functional package management, and promoted unprecedented features, such as transactional package upgrades and rollbacks, per-user profiles, and referentially transparent build processes.  Without this work, Guix would not exist."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54966
msgid "The Nix-based software distributions, Nixpkgs and NixOS, have also been an inspiration for Guix."
msgstr "Le distribuzioni software basate su Nix, Nixpkgs e NixOS, sono state anche un'ispirazione per Guix."

#. type: Plain text
#: guix-git/doc/guix.texi:54972
msgid "GNU@tie{}Guix itself is a collective work with contributions from a number of people.  See the @file{AUTHORS} file in Guix for more information on these fine people.  The @file{THANKS} file lists people who have helped by reporting bugs, taking care of the infrastructure, providing artwork and themes, making suggestions, and more---thank you!"
msgstr "GNU@tie{}Guix stesso è un lavoro collettivo con contributi di diverse persone. Consulta il file @file{AUTHORS} in Guix per maggiori informazioni su queste persone. Il file @file{THANKS} elenca le persone che hanno contribuito segnalando bug, curando l'infrastruttura, fornendo grafica e temi, dando suggerimenti e altro ancora --- grazie!"

#. type: cindex
#: guix-git/doc/guix.texi:54977
#, no-wrap
msgid "license, GNU Free Documentation License"
msgstr "licenza, GNU Free Documentation License"

#. type: include
#: guix-git/doc/guix.texi:54978
#, no-wrap
msgid "fdl-1.3.texi"
msgstr "fdl-1.3.texi"

#, fuzzy, no-wrap
#~| msgid "Services"
#~ msgid "oci-container-service-type"
#~ msgstr "Servizi"

#~ msgid "Rust programs standing for themselves are named as any other package, using the lowercase upstream name."
#~ msgstr "I programmi Rust autonomi sono nominati come qualsiasi altro pacchetto, usando il nome upstream in minuscolo."

#~ msgid "To prevent namespace collisions we prefix all other Rust packages with the @code{rust-} prefix.  The name should be changed to lowercase as appropriate and dashes should remain in place."
#~ msgstr "Per prevenire collisioni di namespace, prefissiamo tutti gli altri pacchetti Rust con il prefisso @code{rust-}. Il nome dovrebbe essere cambiato in minuscolo come appropriato e i trattini dovrebbero rimanere al loro posto."

#~ msgid "Because of the difficulty in reusing rust packages as pre-compiled inputs for other packages the Cargo build system (@pxref{Build Systems, @code{cargo-build-system}}) presents the @code{#:cargo-inputs} and @code{cargo-development-inputs} keywords as build system arguments.  It would be helpful to think of these as similar to @code{propagated-inputs} and @code{native-inputs}.  Rust @code{dependencies} and @code{build-dependencies} should go in @code{#:cargo-inputs}, and @code{dev-dependencies} should go in @code{#:cargo-development-inputs}.  If a Rust package links to other libraries then the standard placement in @code{inputs} and the like should be used."
#~ msgstr "A causa della difficoltà nel riutilizzare i pacchetti Rust come input pre-compilati per altri pacchetti, il sistema di compilazione Cargo (@pxref{Build Systems, @code{cargo-build-system}}) presenta le parole chiave @code{#:cargo-inputs} e @code{cargo-development-inputs} come argomenti del sistema di compilazione. Sarebbe utile pensarli come simili a @code{propagated-inputs} e @code{native-inputs}. Le dipendenze Rust @code{dependencies} e @code{build-dependencies} dovrebbero andare in @code{#:cargo-inputs}, e le @code{dev-dependencies} dovrebbero andare in @code{#:cargo-development-inputs}. Se un pacchetto Rust si collega ad altre librerie, allora dovrebbe essere usato il posizionamento standard in @code{inputs} e simili."

#~ msgid "Care should be taken to ensure the correct version of dependencies are used; to this end we try to refrain from skipping the tests or using @code{#:skip-build?} when possible.  Of course this is not always possible, as the package may be developed for a different Operating System, depend on features from the Nightly Rust compiler, or the test suite may have atrophied since it was released."
#~ msgstr "Bisogna fare attenzione a garantire che venga usata la versione corretta delle dipendenze; a tal fine, cerchiamo di astenerci dal saltare i test o dall'usare @code{#:skip-build?} quando possibile. Naturalmente questo non è sempre possibile, poiché il pacchetto potrebbe essere sviluppato per un sistema operativo diverso, dipendere da funzionalità del compilatore Rust Nightly, o la suite di test potrebbe essersi atrofizzata dal suo rilascio."

#, fuzzy
#~| msgid "Coding Style"
#~ msgid "Coding::"
#~ msgstr "Stile del Codice"

#, fuzzy
#~| msgid "Documentation"
#~ msgid "System Administration::"
#~ msgstr "Documentazione"

#, fuzzy
#~| msgid "Documentation"
#~ msgid "Day-to-Day System Administration::"
#~ msgstr "Documentazione"

#, fuzzy
#~| msgid "name"
#~ msgid "Hosting::"
#~ msgstr "nome"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{shepherd-requirement} (default: @code{'(wpa-supplicant)})"
#~ msgstr "Documentazione"

#, fuzzy
#~| msgid "package"
#~ msgid "Qemu package."
#~ msgstr "package"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{kill-only-users} (default: @code{'()}) (type: list)"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{idle-action-seconds} (default: @code{(* 30 60)}) (type: integer)"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{suspend-mode} (default: @code{'()}) (type: list)"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{hibernate-state} (default: @code{'(\"disk\")}) (type: list)"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{hybrid-sleep-state} (default: @code{'(\"disk\")}) (type: list)"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{hybrid-sleep-mode} (default: @code{'(\"suspend\" \"platform\" \"shutdown\")}) (type: list)"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{hibernate-delay-seconds} (default: @code{*unspecified*}) (type: integer)"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{suspend-estimation-seconds} (default: @code{*unspecified*}) (type: integer)"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{pid-file} (type: maybe-string)"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{monitor-ips-interval} (default: @code{'(next-minute (range 0 60 5))})"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{gui-enabled} (default: @var{\"true\"})"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{gui-tls} (default: @var{\"false\"})"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{gui-debugging} (default: @var{\"false\"})"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{relays-enabled} (default: @var{\"true\"})"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{start-browser} (default: @var{\"true\"})"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{nat-enabled} (default: @var{\"true\"})"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{ur-seen} (default: @var{\"0\"})"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{ur-post-insecurely} (default: @var{\"false\"})"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{id} (default: @var{#f})"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{ignore-perms} (default: @var{\"false\"})"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{auto-normalize} (default: @var{\"true\"})"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{ignore-delete} (default: @var{\"false\"})"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{paused} (default: @var{\"false\"})"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{case-sensitive-fs} (default: @var{\"false\"})"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{sync-xattrs} (default: @var{\"false\"})"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{send-xattrs} (default: @var{\"false\"})"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{introducer} (default: @var{\"false\"})"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{untrusted} (default: @var{\"false\"})"
#~ msgstr "Documentazione"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{postgresql} (default: @code{postgresql})"
#~ msgstr "Documentazione"

#, fuzzy
#~| msgid "Submitting Patches"
#~ msgid "and send patches"
#~ msgstr "Invia delle Patches"

#, fuzzy, no-wrap
#~| msgid "Documentation"
#~ msgid "@code{allow-empty-password?} (type: boolean)"
#~ msgstr "Documentazione"

#, fuzzy
#~| msgid "Documentation"
#~ msgid "%nscd-default-configuration"
#~ msgstr "Documentazione"
